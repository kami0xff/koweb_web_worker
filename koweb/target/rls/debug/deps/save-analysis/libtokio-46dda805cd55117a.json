{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"bytes\"","--cfg","feature=\"default\"","--cfg","feature=\"io-util\"","--cfg","feature=\"libc\"","--cfg","feature=\"memchr\"","--cfg","feature=\"mio\"","--cfg","feature=\"net\"","--cfg","feature=\"num_cpus\"","--cfg","feature=\"rt\"","--cfg","feature=\"rt-multi-thread\"","--cfg","feature=\"sync\"","--cfg","feature=\"time\"","-C","metadata=46dda805cd55117a","-C","extra-filename=-46dda805cd55117a","--out-dir","/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps","--extern","bytes=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libbytes-dd52596db22c8f26.rmeta","--extern","libc=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/liblibc-338b4c299ceccc7e.rmeta","--extern","memchr=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libmemchr-e3ca6f54d152e276.rmeta","--extern","mio=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libmio-9f4d82b3d80c1ff3.rmeta","--extern","num_cpus=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libnum_cpus-c70c79ecaa1e4435.rmeta","--extern","pin_project_lite=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libpin_project_lite-42d82ba4e3590262.rmeta","--cap-lints","allow","--cfg","tokio_track_caller","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libtokio-46dda805cd55117a.rmeta"},"prelude":{"crate_id":{"name":"tokio","disambiguator":[3721237899876036197,607595675229307118]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","num":18,"id":{"name":"mio","disambiguator":[910854200205516501,7753637629945052070]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","num":19,"id":{"name":"log","disambiguator":[16637856329360640333,18342046342193457292]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","num":20,"id":{"name":"cfg_if","disambiguator":[1155024563974712189,5296233732488635092]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","num":21,"id":{"name":"libc","disambiguator":[10838411454354704470,9796936838107296501]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/seek.rs","num":22,"id":{"name":"pin_project_lite","disambiguator":[6242653208481502721,5903162098939332941]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","num":23,"id":{"name":"bytes","disambiguator":[17308212729600630810,29069590626767026]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_until.rs","num":24,"id":{"name":"memchr","disambiguator":[13808587907274931623,1320653678005444489]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/mod.rs","num":25,"id":{"name":"num_cpus","disambiguator":[11623831850522552374,3978732364635803789]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":0,"byte_end":17518,"line_start":1,"line_end":480,"column_start":1,"column_end":27}},"imports":[{"kind":"Use","ref_id":{"krate":2,"index":9578},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/support.rs","byte_start":32039,"byte_end":32045,"line_start":7,"line_end":7,"column_start":22,"column_end":28},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":2,"index":34796},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/support.rs","byte_start":32065,"byte_end":32068,"line_start":8,"line_end":8,"column_start":19,"column_end":22},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":2,"index":37301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/support.rs","byte_start":32089,"byte_end":32093,"line_start":9,"line_end":9,"column_start":20,"column_end":24},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":76}},{"kind":"Use","ref_id":{"krate":0,"index":114},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40948,"byte_end":40960,"line_start":188,"line_end":188,"column_start":31,"column_end":43},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41005,"byte_end":41014,"line_start":191,"line_end":191,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41059,"byte_end":41068,"line_start":194,"line_end":194,"column_start":27,"column_end":36},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41115,"byte_end":41125,"line_start":197,"line_end":197,"column_start":28,"column_end":38},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41166,"byte_end":41173,"line_start":200,"line_end":200,"column_start":25,"column_end":32},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":2782},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41343,"byte_end":41348,"line_start":205,"line_end":205,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":7187},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41350,"byte_end":41359,"line_start":205,"line_end":205,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":2780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41361,"byte_end":41367,"line_start":205,"line_end":205,"column_start":37,"column_end":43},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":1,"index":7260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41369,"byte_end":41377,"line_start":205,"line_end":205,"column_start":45,"column_end":53},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1000},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41471,"byte_end":41479,"line_start":211,"line_end":211,"column_start":26,"column_end":34},"alias_span":null,"name":"Interest","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41481,"byte_end":41486,"line_start":211,"line_end":211,"column_start":36,"column_end":41},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1174},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41758,"byte_end":41765,"line_start":225,"line_end":225,"column_start":35,"column_end":42},"alias_span":null,"name":"AsyncFd","value":"","parent":{"krate":0,"index":1261}},{"kind":"Use","ref_id":{"krate":0,"index":1178},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41767,"byte_end":41784,"line_start":225,"line_end":225,"column_start":44,"column_end":61},"alias_span":null,"name":"AsyncFdReadyGuard","value":"","parent":{"krate":0,"index":1261}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41786,"byte_end":41806,"line_start":225,"line_end":225,"column_start":63,"column_end":83},"alias_span":null,"name":"AsyncFdReadyMutGuard","value":"","parent":{"krate":0,"index":1261}},{"kind":"Use","ref_id":{"krate":0,"index":1267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41808,"byte_end":41818,"line_start":225,"line_end":225,"column_start":85,"column_end":95},"alias_span":null,"name":"TryIoError","value":"","parent":{"krate":0,"index":1261}},{"kind":"Use","ref_id":{"krate":0,"index":1386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42080,"byte_end":42085,"line_start":244,"line_end":244,"column_start":21,"column_end":26},"alias_span":null,"name":"split","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42087,"byte_end":42095,"line_start":244,"line_end":244,"column_start":28,"column_end":36},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42097,"byte_end":42106,"line_start":244,"line_end":244,"column_start":38,"column_end":47},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2443},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42188,"byte_end":42192,"line_start":249,"line_end":249,"column_start":9,"column_end":13},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1744},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42194,"byte_end":42212,"line_start":249,"line_end":249,"column_start":15,"column_end":33},"alias_span":null,"name":"copy_bidirectional","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2449},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42214,"byte_end":42222,"line_start":249,"line_end":249,"column_start":35,"column_end":43},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":1845},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42224,"byte_end":42230,"line_start":249,"line_end":249,"column_start":45,"column_end":51},"alias_span":null,"name":"duplex","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2469},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42232,"byte_end":42237,"line_start":249,"line_end":249,"column_start":53,"column_end":58},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2634},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42239,"byte_end":42245,"line_start":249,"line_end":249,"column_start":60,"column_end":66},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2641},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42247,"byte_end":42251,"line_start":249,"line_end":249,"column_start":68,"column_end":72},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2279},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42253,"byte_end":42268,"line_start":249,"line_end":249,"column_start":74,"column_end":89},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42270,"byte_end":42282,"line_start":249,"line_end":249,"column_start":91,"column_end":103},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2338},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42284,"byte_end":42296,"line_start":249,"line_end":249,"column_start":105,"column_end":117},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2342},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42298,"byte_end":42311,"line_start":249,"line_end":249,"column_start":119,"column_end":132},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":11299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42321,"byte_end":42330,"line_start":250,"line_end":250,"column_start":9,"column_end":18},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":11268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42332,"byte_end":42341,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"alias_span":null,"name":"BufStream","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":11218},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42343,"byte_end":42352,"line_start":250,"line_end":250,"column_start":31,"column_end":40},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2470},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42354,"byte_end":42366,"line_start":250,"line_end":250,"column_start":42,"column_end":54},"alias_span":null,"name":"DuplexStream","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2467},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42368,"byte_end":42373,"line_start":250,"line_end":250,"column_start":56,"column_end":61},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":11077},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42375,"byte_end":42380,"line_start":250,"line_end":250,"column_start":63,"column_end":68},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2635},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42382,"byte_end":42388,"line_start":250,"line_end":250,"column_start":70,"column_end":76},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":2639},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42390,"byte_end":42394,"line_start":250,"line_end":250,"column_start":78,"column_end":82},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":9714},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42396,"byte_end":42401,"line_start":250,"line_end":250,"column_start":84,"column_end":89},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":9674},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":42403,"byte_end":42407,"line_start":250,"line_end":250,"column_start":91,"column_end":95},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":105}},{"kind":"Use","ref_id":{"krate":0,"index":293},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80259,"byte_end":80272,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"ToSocketAddrs","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80332,"byte_end":80343,"line_start":32,"line_end":32,"column_start":26,"column_end":37},"alias_span":null,"name":"lookup_host","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3276},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396350,"byte_end":10396358,"line_start":8,"line_end":8,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":2851}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396360,"byte_end":10396369,"line_start":8,"line_end":8,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":2851}},{"kind":"Use","ref_id":{"krate":0,"index":3290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396412,"byte_end":10396425,"line_start":11,"line_end":11,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":2851}},{"kind":"Use","ref_id":{"krate":0,"index":3294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396427,"byte_end":10396441,"line_start":11,"line_end":11,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":2851}},{"kind":"Use","ref_id":{"krate":0,"index":3299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396443,"byte_end":10396455,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":2851}},{"kind":"Use","ref_id":{"krate":0,"index":3300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396443,"byte_end":10396455,"line_start":11,"line_end":11,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3023}},{"kind":"Use","ref_id":{"krate":0,"index":3272},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80390,"byte_end":80401,"line_start":35,"line_end":35,"column_start":28,"column_end":39},"alias_span":null,"name":"TcpListener","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80428,"byte_end":80437,"line_start":36,"line_end":36,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpSocket","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80464,"byte_end":80473,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80506,"byte_end":80515,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"alias_span":null,"name":"UdpSocket","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3679},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533729,"byte_end":10533737,"line_start":12,"line_end":12,"column_start":17,"column_end":25},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3686},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533739,"byte_end":10533748,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3693},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533791,"byte_end":10533804,"line_start":15,"line_end":15,"column_start":23,"column_end":36},"alias_span":null,"name":"OwnedReadHalf","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3697},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533806,"byte_end":10533820,"line_start":15,"line_end":15,"column_start":38,"column_end":52},"alias_span":null,"name":"OwnedWriteHalf","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3702},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533822,"byte_end":10533834,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3703},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533822,"byte_end":10533834,"line_start":15,"line_end":15,"column_start":54,"column_end":66},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":3524}},{"kind":"Use","ref_id":{"krate":0,"index":3528},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533874,"byte_end":10533884,"line_start":18,"line_end":18,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3529},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533874,"byte_end":10533884,"line_start":18,"line_end":18,"column_start":21,"column_end":31},"alias_span":null,"name":"SocketAddr","value":"","parent":{"krate":0,"index":3536}},{"kind":"Use","ref_id":{"krate":0,"index":3715},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533972,"byte_end":10533977,"line_start":24,"line_end":24,"column_start":16,"column_end":21},"alias_span":null,"name":"UCred","value":"","parent":{"krate":0,"index":3324}},{"kind":"Use","ref_id":{"krate":0,"index":3666},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80590,"byte_end":80602,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"alias_span":null,"name":"UnixDatagram","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3676},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80632,"byte_end":80644,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"alias_span":null,"name":"UnixListener","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":3709},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80672,"byte_end":80682,"line_start":47,"line_end":47,"column_start":27,"column_end":37},"alias_span":null,"name":"UnixStream","value":"","parent":{"krate":0,"index":282}},{"kind":"Use","ref_id":{"krate":0,"index":4690},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10638323,"byte_end":10638330,"line_start":193,"line_end":193,"column_start":28,"column_end":35},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":3806}},{"kind":"Use","ref_id":{"krate":0,"index":4897},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10638455,"byte_end":10638465,"line_start":201,"line_end":201,"column_start":22,"column_end":32},"alias_span":null,"name":"EnterGuard","value":"","parent":{"krate":0,"index":3806}},{"kind":"Use","ref_id":{"krate":0,"index":4886},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10638467,"byte_end":10638473,"line_start":201,"line_end":201,"column_start":34,"column_end":40},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":3806}},{"kind":"Use","ref_id":{"krate":0,"index":6973},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869494,"byte_end":10869501,"line_start":432,"line_end":432,"column_start":23,"column_end":30},"alias_span":null,"name":"Barrier","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6985},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869503,"byte_end":10869520,"line_start":432,"line_end":432,"column_start":32,"column_end":49},"alias_span":null,"name":"BarrierWaitResult","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":5656},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913809,"byte_end":10913816,"line_start":76,"line_end":76,"column_start":25,"column_end":32},"alias_span":null,"name":"channel","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5650},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913818,"byte_end":10913829,"line_start":76,"line_end":76,"column_start":34,"column_end":45},"alias_span":null,"name":"OwnedPermit","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5646},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913831,"byte_end":10913837,"line_start":76,"line_end":76,"column_start":47,"column_end":53},"alias_span":null,"name":"Permit","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5653},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913839,"byte_end":10913847,"line_start":76,"line_end":76,"column_start":55,"column_end":63},"alias_span":null,"name":"Receiver","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913849,"byte_end":10913855,"line_start":76,"line_end":76,"column_start":65,"column_end":71},"alias_span":null,"name":"Sender","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5939},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913933,"byte_end":10913950,"line_start":83,"line_end":83,"column_start":27,"column_end":44},"alias_span":null,"name":"unbounded_channel","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5933},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913952,"byte_end":10913969,"line_start":83,"line_end":83,"column_start":46,"column_end":63},"alias_span":null,"name":"UnboundedReceiver","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":5924},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913971,"byte_end":10913986,"line_start":83,"line_end":83,"column_start":65,"column_end":80},"alias_span":null,"name":"UnboundedSender","value":"","parent":{"krate":0,"index":5556}},{"kind":"Use","ref_id":{"krate":0,"index":6003},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869602,"byte_end":10869607,"line_start":439,"line_end":439,"column_start":21,"column_end":26},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6007},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869609,"byte_end":10869619,"line_start":439,"line_end":439,"column_start":28,"column_end":38},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7068},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869621,"byte_end":10869633,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7069},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869621,"byte_end":10869633,"line_start":439,"line_end":439,"column_start":40,"column_end":52},"alias_span":null,"name":"TryLockError","value":"","parent":{"krate":0,"index":6137}},{"kind":"Use","ref_id":{"krate":0,"index":6011},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869635,"byte_end":10869650,"line_start":439,"line_end":439,"column_start":54,"column_end":69},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869652,"byte_end":10869668,"line_start":439,"line_end":439,"column_start":71,"column_end":87},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7073},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869719,"byte_end":10869725,"line_start":442,"line_end":442,"column_start":21,"column_end":27},"alias_span":null,"name":"Notify","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7166},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869816,"byte_end":10869828,"line_start":447,"line_end":447,"column_start":31,"column_end":43},"alias_span":null,"name":"AcquireError","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7156},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869830,"byte_end":10869845,"line_start":447,"line_end":447,"column_start":45,"column_end":60},"alias_span":null,"name":"TryAcquireError","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869892,"byte_end":10869901,"line_start":450,"line_end":450,"column_start":25,"column_end":34},"alias_span":null,"name":"Semaphore","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7175},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869903,"byte_end":10869918,"line_start":450,"line_end":450,"column_start":36,"column_end":51},"alias_span":null,"name":"SemaphorePermit","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7182},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869920,"byte_end":10869940,"line_start":450,"line_end":450,"column_start":53,"column_end":73},"alias_span":null,"name":"OwnedSemaphorePermit","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7187},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869980,"byte_end":10869986,"line_start":453,"line_end":453,"column_start":21,"column_end":27},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6470},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870026,"byte_end":10870046,"line_start":454,"line_end":454,"column_start":39,"column_end":59},"alias_span":null,"name":"OwnedRwLockReadGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6513},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870087,"byte_end":10870108,"line_start":455,"line_end":455,"column_start":40,"column_end":61},"alias_span":null,"name":"OwnedRwLockWriteGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6555},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870156,"byte_end":10870183,"line_start":456,"line_end":456,"column_start":47,"column_end":74},"alias_span":null,"name":"OwnedRwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870217,"byte_end":10870232,"line_start":457,"line_end":457,"column_start":33,"column_end":48},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6637},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870267,"byte_end":10870283,"line_start":458,"line_end":458,"column_start":34,"column_end":50},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6681},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870325,"byte_end":10870347,"line_start":459,"line_end":459,"column_start":41,"column_end":63},"alias_span":null,"name":"RwLockMappedWriteGuard","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":6852},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870452,"byte_end":10870460,"line_start":465,"line_end":465,"column_start":31,"column_end":39},"alias_span":null,"name":"OnceCell","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":7195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870462,"byte_end":10870470,"line_start":465,"line_end":465,"column_start":41,"column_end":49},"alias_span":null,"name":"SetError","value":"","parent":{"krate":0,"index":5379}},{"kind":"Use","ref_id":{"krate":0,"index":4360},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136189,"byte_end":136198,"line_start":279,"line_end":279,"column_start":36,"column_end":45},"alias_span":null,"name":"JoinError","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":4362},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136200,"byte_end":136210,"line_start":279,"line_end":279,"column_start":47,"column_end":57},"alias_span":null,"name":"JoinHandle","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7447},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136254,"byte_end":136268,"line_start":282,"line_end":282,"column_start":23,"column_end":37},"alias_span":null,"name":"spawn_blocking","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7450},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136305,"byte_end":136310,"line_start":285,"line_end":285,"column_start":20,"column_end":25},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7444},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136366,"byte_end":136380,"line_start":288,"line_end":288,"column_start":27,"column_end":41},"alias_span":null,"name":"block_in_place","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7453},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136431,"byte_end":136440,"line_start":292,"line_end":292,"column_start":24,"column_end":33},"alias_span":null,"name":"yield_now","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7470},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136478,"byte_end":136489,"line_start":295,"line_end":295,"column_start":21,"column_end":32},"alias_span":null,"name":"spawn_local","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7461},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136491,"byte_end":136499,"line_start":295,"line_end":295,"column_start":34,"column_end":42},"alias_span":null,"name":"LocalSet","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7370},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136547,"byte_end":136555,"line_start":298,"line_end":298,"column_start":25,"column_end":33},"alias_span":null,"name":"LocalKey","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7439},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136609,"byte_end":136622,"line_start":301,"line_end":301,"column_start":29,"column_end":42},"alias_span":null,"name":"unconstrained","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":8380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136624,"byte_end":136637,"line_start":301,"line_end":301,"column_start":44,"column_end":57},"alias_span":null,"name":"Unconstrained","value":"","parent":{"krate":0,"index":620}},{"kind":"Use","ref_id":{"krate":0,"index":7450},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14845,"byte_end":14850,"line_start":397,"line_end":397,"column_start":19,"column_end":24},"alias_span":null,"name":"spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":7669},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249473,"byte_end":11249478,"line_start":95,"line_end":95,"column_start":25,"column_end":30},"alias_span":null,"name":"sleep","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":7668},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249480,"byte_end":11249491,"line_start":95,"line_end":95,"column_start":32,"column_end":43},"alias_span":null,"name":"sleep_until","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":8352},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249493,"byte_end":11249498,"line_start":95,"line_end":95,"column_start":45,"column_end":50},"alias_span":null,"name":"Sleep","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":7992},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249554,"byte_end":11249561,"line_start":100,"line_end":100,"column_start":24,"column_end":31},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":7828},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249597,"byte_end":11249605,"line_start":103,"line_end":103,"column_start":20,"column_end":28},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":7829},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249607,"byte_end":11249618,"line_start":103,"line_end":103,"column_start":30,"column_end":41},"alias_span":null,"name":"interval_at","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":8015},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249620,"byte_end":11249628,"line_start":103,"line_end":103,"column_start":43,"column_end":51},"alias_span":null,"name":"Interval","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":7854},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249678,"byte_end":11249685,"line_start":107,"line_end":107,"column_start":19,"column_end":26},"alias_span":null,"name":"timeout","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":7856},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249687,"byte_end":11249697,"line_start":107,"line_end":107,"column_start":28,"column_end":38},"alias_span":null,"name":"timeout_at","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":0,"index":8314},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249699,"byte_end":11249706,"line_start":107,"line_end":107,"column_start":40,"column_end":47},"alias_span":null,"name":"Timeout","value":"","parent":{"krate":0,"index":7488}},{"kind":"Use","ref_id":{"krate":2,"index":37171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249819,"byte_end":11249827,"line_start":115,"line_end":115,"column_start":20,"column_end":28},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":7488}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":0,"byte_end":17518,"line_start":1,"line_end":480,"column_start":1,"column_end":27},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":80},{"krate":0,"index":105},{"krate":0,"index":282},{"krate":0,"index":350},{"krate":0,"index":505},{"krate":0,"index":597},{"krate":0,"index":3806},{"krate":0,"index":598},{"krate":0,"index":5379},{"krate":0,"index":620},{"krate":0,"index":7487},{"krate":0,"index":7488},{"krate":0,"index":621},{"krate":0,"index":699}],"decl_id":null,"docs":" A runtime for writing reliable network applications without compromising speed.","sig":null,"attributes":[{"value":"allow(clippy :: cognitive_complexity, clippy :: large_enum_variant, clippy\n        :: needless_doctest_main)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":0,"byte_end":112,"line_start":1,"line_end":5,"column_start":1,"column_end":3}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":113,"byte_end":219,"line_start":6,"line_end":11,"column_start":1,"column_end":3}},{"value":"/ A runtime for writing reliable network applications without compromising speed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":428,"byte_end":511,"line_start":19,"line_end":19,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":512,"byte_end":515,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Tokio is an event-driven, non-blocking I/O platform for writing asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":516,"byte_end":596,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ applications with the Rust programming language. At a high level, it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":597,"byte_end":669,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ provides a few major components:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":670,"byte_end":706,"line_start":23,"line_end":23,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":707,"byte_end":710,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * Tools for [working with asynchronous tasks][tasks], including","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":711,"byte_end":778,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/   [synchronization primitives and channels][sync] and [timeouts, sleeps, and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":779,"byte_end":859,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/   intervals][time].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":860,"byte_end":883,"line_start":27,"line_end":27,"column_start":1,"column_end":24}},{"value":"/ * APIs for [performing asynchronous I/O][io], including [TCP and UDP][net] sockets,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":884,"byte_end":971,"line_start":28,"line_end":28,"column_start":1,"column_end":88}},{"value":"/   [filesystem][fs] operations, and [process] and [signal] management.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":972,"byte_end":1045,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ * A [runtime] for executing asynchronous code, including a task scheduler,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1046,"byte_end":1124,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   an I/O driver backed by the operating system's event queue (epoll, kqueue,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1125,"byte_end":1205,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/   IOCP, etc...), and a high performance timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1206,"byte_end":1256,"line_start":32,"line_end":32,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1257,"byte_end":1260,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Guide level documentation is found on the [website].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1261,"byte_end":1317,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ [tasks]: #working-with-tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1322,"byte_end":1354,"line_start":36,"line_end":36,"column_start":1,"column_end":33}},{"value":"/ [sync]: crate::sync","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1355,"byte_end":1378,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ [time]: crate::time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1379,"byte_end":1402,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/ [io]: #asynchronous-io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1403,"byte_end":1429,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/ [net]: crate::net","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1430,"byte_end":1451,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1452,"byte_end":1471,"line_start":41,"line_end":41,"column_start":1,"column_end":20}},{"value":"/ [process]: crate::process","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1472,"byte_end":1501,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ [signal]: crate::signal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1502,"byte_end":1529,"line_start":43,"line_end":43,"column_start":1,"column_end":28}},{"value":"/ [fs]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1530,"byte_end":1549,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ [runtime]: crate::runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1550,"byte_end":1579,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ [website]: https://tokio.rs/tokio/tutorial","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1580,"byte_end":1626,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1627,"byte_end":1630,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # A Tour of Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1631,"byte_end":1652,"line_start":48,"line_end":48,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ Tokio consists of a number of modules that provide a range of functionality","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1657,"byte_end":1736,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/ essential for implementing asynchronous applications in Rust. In this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1737,"byte_end":1810,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/ section, we will take a brief tour of Tokio, summarizing the major APIs and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1811,"byte_end":1890,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ their uses.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1891,"byte_end":1906,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1907,"byte_end":1910,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The easiest way to get started is to enable all features. Do this by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1911,"byte_end":1983,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/ enabling the `full` feature flag:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":1984,"byte_end":2021,"line_start":56,"line_end":56,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2022,"byte_end":2025,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2026,"byte_end":2037,"line_start":58,"line_end":58,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2038,"byte_end":2088,"line_start":59,"line_end":59,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2089,"byte_end":2096,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2097,"byte_end":2100,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ### Authoring applications","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2101,"byte_end":2131,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2132,"byte_end":2135,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Tokio is great for writing applications and most users in this case shouldn't","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2136,"byte_end":2217,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ worry too much about what features they should pick. If you're unsure, we suggest","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2218,"byte_end":2303,"line_start":65,"line_end":65,"column_start":1,"column_end":86}},{"value":"/ going with `full` to ensure that you don't run into any road blocks while you're","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2304,"byte_end":2388,"line_start":66,"line_end":66,"column_start":1,"column_end":85}},{"value":"/ building your application.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2389,"byte_end":2419,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2420,"byte_end":2423,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2424,"byte_end":2440,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2441,"byte_end":2444,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This example shows the quickest way to get started with Tokio.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2445,"byte_end":2511,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2512,"byte_end":2515,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2516,"byte_end":2527,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"full\"] }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2528,"byte_end":2578,"line_start":74,"line_end":74,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2579,"byte_end":2586,"line_start":75,"line_end":75,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2587,"byte_end":2590,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ### Authoring libraries","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2591,"byte_end":2618,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2619,"byte_end":2622,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As a library author your goal should be to provide the lightest weight crate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2623,"byte_end":2703,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ that is based on Tokio. To achieve this you should ensure that you only enable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2704,"byte_end":2786,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ the features you need. This allows users to pick up your crate without having","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2787,"byte_end":2868,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/ to enable unnecessary features.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2869,"byte_end":2904,"line_start":82,"line_end":82,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2905,"byte_end":2908,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ #### Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2909,"byte_end":2925,"line_start":84,"line_end":84,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2926,"byte_end":2929,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ This example shows how you may want to import features for a library that just","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":2930,"byte_end":3012,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/ needs to `tokio::spawn` and use a `TcpStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3013,"byte_end":3063,"line_start":87,"line_end":87,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3064,"byte_end":3067,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3068,"byte_end":3079,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ tokio = { version = \"1\", features = [\"rt\", \"net\"] }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3080,"byte_end":3135,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3136,"byte_end":3143,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3144,"byte_end":3147,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ## Working With Tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3148,"byte_end":3173,"line_start":93,"line_end":93,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3174,"byte_end":3177,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Asynchronous programs in Rust are based around lightweight, non-blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3178,"byte_end":3254,"line_start":95,"line_end":95,"column_start":1,"column_end":77}},{"value":"/ units of execution called [_tasks_][tasks]. The [`tokio::task`] module provides","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3255,"byte_end":3338,"line_start":96,"line_end":96,"column_start":1,"column_end":84}},{"value":"/ important tools for working with tasks:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3339,"byte_end":3382,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3383,"byte_end":3386,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ * The [`spawn`] function and [`JoinHandle`] type, for scheduling a new task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3387,"byte_end":3466,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/   on the Tokio runtime and awaiting the output of a spawned task, respectively,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3467,"byte_end":3550,"line_start":100,"line_end":100,"column_start":1,"column_end":84}},{"value":"/ * Functions for [running blocking operations][blocking] in an asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3551,"byte_end":3629,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/   task context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3630,"byte_end":3649,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3650,"byte_end":3653,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::task`] module is present only when the \"rt\" feature flag","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3654,"byte_end":3727,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ is enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3728,"byte_end":3743,"line_start":105,"line_end":105,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3744,"byte_end":3747,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ [tasks]: task/index.html#what-are-tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3748,"byte_end":3791,"line_start":107,"line_end":107,"column_start":1,"column_end":44}},{"value":"/ [`tokio::task`]: crate::task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3792,"byte_end":3824,"line_start":108,"line_end":108,"column_start":1,"column_end":33}},{"value":"/ [`spawn`]: crate::task::spawn()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3825,"byte_end":3860,"line_start":109,"line_end":109,"column_start":1,"column_end":36}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3861,"byte_end":3904,"line_start":110,"line_end":110,"column_start":1,"column_end":44}},{"value":"/ [blocking]: task/index.html#blocking-and-yielding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3905,"byte_end":3958,"line_start":111,"line_end":111,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3959,"byte_end":3962,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::sync`] module contains synchronization primitives to use when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":3963,"byte_end":4041,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ needing to communicate or share data. These include:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4042,"byte_end":4098,"line_start":114,"line_end":114,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4099,"byte_end":4102,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * channels ([`oneshot`], [`mpsc`], and [`watch`]), for sending values","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4103,"byte_end":4176,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/   between tasks,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4177,"byte_end":4197,"line_start":117,"line_end":117,"column_start":1,"column_end":21}},{"value":"/ * a non-blocking [`Mutex`], for controlling access to a shared, mutable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4198,"byte_end":4273,"line_start":118,"line_end":118,"column_start":1,"column_end":76}},{"value":"/   value,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4274,"byte_end":4286,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/ * an asynchronous [`Barrier`] type, for multiple tasks to synchronize before","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4287,"byte_end":4367,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/   beginning a computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4368,"byte_end":4398,"line_start":121,"line_end":121,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4399,"byte_end":4402,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ The `tokio::sync` module is present only when the \"sync\" feature flag is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4403,"byte_end":4479,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4480,"byte_end":4492,"line_start":124,"line_end":124,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4493,"byte_end":4496,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`tokio::sync`]: crate::sync","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4497,"byte_end":4529,"line_start":126,"line_end":126,"column_start":1,"column_end":33}},{"value":"/ [`Mutex`]: crate::sync::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4530,"byte_end":4563,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/ [`Barrier`]: crate::sync::Barrier","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4564,"byte_end":4601,"line_start":128,"line_end":128,"column_start":1,"column_end":38}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4602,"byte_end":4639,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ [`mpsc`]: crate::sync::mpsc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4640,"byte_end":4671,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/ [`watch`]: crate::sync::watch","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4672,"byte_end":4705,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4706,"byte_end":4709,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::time`] module provides utilities for tracking time and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4710,"byte_end":4781,"line_start":133,"line_end":133,"column_start":1,"column_end":72}},{"value":"/ scheduling work. This includes functions for setting [timeouts][timeout] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4782,"byte_end":4862,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ tasks, [sleeping][sleep] work to run in the future, or [repeating an operation at an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4863,"byte_end":4951,"line_start":135,"line_end":135,"column_start":1,"column_end":89}},{"value":"/ interval][interval].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4952,"byte_end":4976,"line_start":136,"line_end":136,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4977,"byte_end":4980,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ In order to use `tokio::time`, the \"time\" feature flag must be enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":4981,"byte_end":5056,"line_start":138,"line_end":138,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5057,"byte_end":5060,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5061,"byte_end":5093,"line_start":140,"line_end":140,"column_start":1,"column_end":33}},{"value":"/ [sleep]: crate::time::sleep()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5094,"byte_end":5127,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/ [interval]: crate::time::interval()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5128,"byte_end":5167,"line_start":142,"line_end":142,"column_start":1,"column_end":40}},{"value":"/ [timeout]: crate::time::timeout()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5168,"byte_end":5205,"line_start":143,"line_end":143,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5206,"byte_end":5209,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ Finally, Tokio provides a _runtime_ for executing asynchronous tasks. Most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5210,"byte_end":5288,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"/ applications can use the [`#[tokio::main]`][main] macro to run their code on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5289,"byte_end":5373,"line_start":146,"line_end":146,"column_start":1,"column_end":85}},{"value":"/ Tokio runtime. However, this macro provides only basic configuration options. As","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5374,"byte_end":5458,"line_start":147,"line_end":147,"column_start":1,"column_end":85}},{"value":"/ an alternative, the [`tokio::runtime`] module provides more powerful APIs for configuring","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5459,"byte_end":5552,"line_start":148,"line_end":148,"column_start":1,"column_end":94}},{"value":"/ and managing runtimes. You should use that module if the `#[tokio::main]` macro doesn't","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5553,"byte_end":5644,"line_start":149,"line_end":149,"column_start":1,"column_end":92}},{"value":"/ provide the functionality you need.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5645,"byte_end":5684,"line_start":150,"line_end":150,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5685,"byte_end":5688,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ Using the runtime requires the \"rt\" or \"rt-multi-thread\" feature flags, to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5689,"byte_end":5767,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ enable the basic [single-threaded scheduler][rt] and the [thread-pool","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5768,"byte_end":5841,"line_start":153,"line_end":153,"column_start":1,"column_end":74}},{"value":"/ scheduler][rt-multi-thread], respectively. See the [`runtime` module","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5842,"byte_end":5914,"line_start":154,"line_end":154,"column_start":1,"column_end":73}},{"value":"/ documentation][rt-features] for details. In addition, the \"macros\" feature","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5915,"byte_end":5993,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ flag enables the `#[tokio::main]` and `#[tokio::test]` attributes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":5994,"byte_end":6064,"line_start":156,"line_end":156,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6065,"byte_end":6068,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [main]: attr.main.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6069,"byte_end":6095,"line_start":158,"line_end":158,"column_start":1,"column_end":27}},{"value":"/ [`tokio::runtime`]: crate::runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6096,"byte_end":6134,"line_start":159,"line_end":159,"column_start":1,"column_end":39}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6135,"byte_end":6175,"line_start":160,"line_end":160,"column_start":1,"column_end":41}},{"value":"/ [`Runtime`]: crate::runtime::Runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6176,"byte_end":6216,"line_start":161,"line_end":161,"column_start":1,"column_end":41}},{"value":"/ [rt]: runtime/index.html#basic-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6217,"byte_end":6261,"line_start":162,"line_end":162,"column_start":1,"column_end":45}},{"value":"/ [rt-multi-thread]: runtime/index.html#threaded-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6262,"byte_end":6322,"line_start":163,"line_end":163,"column_start":1,"column_end":61}},{"value":"/ [rt-features]: runtime/index.html#runtime-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6323,"byte_end":6378,"line_start":164,"line_end":164,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6379,"byte_end":6382,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ## CPU-bound tasks and blocking code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6383,"byte_end":6423,"line_start":166,"line_end":166,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6424,"byte_end":6427,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Tokio is able to concurrently run many tasks on a few threads by repeatedly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6428,"byte_end":6507,"line_start":168,"line_end":168,"column_start":1,"column_end":80}},{"value":"/ swapping the currently running task on each thread. However, this kind of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6508,"byte_end":6585,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ swapping can only happen at `.await` points, so code that spends a long time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6586,"byte_end":6666,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ without reaching an `.await` will prevent other tasks from running. To","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6667,"byte_end":6741,"line_start":171,"line_end":171,"column_start":1,"column_end":75}},{"value":"/ combat this, Tokio provides two kinds of threads: Core threads and blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6742,"byte_end":6821,"line_start":172,"line_end":172,"column_start":1,"column_end":80}},{"value":"/ threads. The core threads are where all asynchronous code runs, and Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6822,"byte_end":6899,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ will by default spawn one for each CPU core. The blocking threads are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6900,"byte_end":6973,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ spawned on demand, can be used to run blocking code that would otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":6974,"byte_end":7050,"line_start":175,"line_end":175,"column_start":1,"column_end":77}},{"value":"/ block other tasks from running and are kept alive when not used for a certain","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7051,"byte_end":7132,"line_start":176,"line_end":176,"column_start":1,"column_end":82}},{"value":"/ amount of time which can be configured with [`thread_keep_alive`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7133,"byte_end":7203,"line_start":177,"line_end":177,"column_start":1,"column_end":71}},{"value":"/ Since it is not possible for Tokio to swap out blocking tasks, like it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7204,"byte_end":7278,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ can do with asynchronous code, the upper limit on the number of blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7279,"byte_end":7355,"line_start":179,"line_end":179,"column_start":1,"column_end":77}},{"value":"/ threads is very large. These limits can be configured on the [`Builder`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7356,"byte_end":7433,"line_start":180,"line_end":180,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7434,"byte_end":7437,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ To spawn a blocking task, you should use the [`spawn_blocking`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7438,"byte_end":7515,"line_start":182,"line_end":182,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7516,"byte_end":7519,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ [`Builder`]: crate::runtime::Builder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7520,"byte_end":7560,"line_start":184,"line_end":184,"column_start":1,"column_end":41}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7561,"byte_end":7614,"line_start":185,"line_end":185,"column_start":1,"column_end":54}},{"value":"/ [`thread_keep_alive`]: crate::runtime::Builder::thread_keep_alive()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7615,"byte_end":7686,"line_start":186,"line_end":186,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7687,"byte_end":7690,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7691,"byte_end":7698,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7699,"byte_end":7717,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7718,"byte_end":7739,"line_start":190,"line_end":190,"column_start":1,"column_end":22}},{"value":"/     // This is running on a core thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7740,"byte_end":7784,"line_start":191,"line_end":191,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7785,"byte_end":7788,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     let blocking_task = tokio::task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7789,"byte_end":7849,"line_start":193,"line_end":193,"column_start":1,"column_end":61}},{"value":"/         // This is running on a blocking thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7850,"byte_end":7902,"line_start":194,"line_end":194,"column_start":1,"column_end":53}},{"value":"/         // Blocking here is ok.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7903,"byte_end":7938,"line_start":195,"line_end":195,"column_start":1,"column_end":36}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7939,"byte_end":7950,"line_start":196,"line_end":196,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7951,"byte_end":7954,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/     // We can wait for the blocking task like this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":7955,"byte_end":8010,"line_start":198,"line_end":198,"column_start":1,"column_end":56}},{"value":"/     // If the blocking task panics, the unwrap below will propagate the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8011,"byte_end":8086,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/     // panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8087,"byte_end":8104,"line_start":200,"line_end":200,"column_start":1,"column_end":18}},{"value":"/     blocking_task.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8105,"byte_end":8142,"line_start":201,"line_end":201,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8143,"byte_end":8148,"line_start":202,"line_end":202,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8149,"byte_end":8156,"line_start":203,"line_end":203,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8157,"byte_end":8160,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ If your code is CPU-bound and you wish to limit the number of threads used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8161,"byte_end":8239,"line_start":205,"line_end":205,"column_start":1,"column_end":79}},{"value":"/ to run it, you should run it on another thread pool such as [rayon]. You","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8240,"byte_end":8316,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ can use an [`oneshot`] channel to send the result back to Tokio when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8317,"byte_end":8393,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ rayon task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8394,"byte_end":8418,"line_start":208,"line_end":208,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8419,"byte_end":8422,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ [rayon]: https://docs.rs/rayon","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8423,"byte_end":8457,"line_start":210,"line_end":210,"column_start":1,"column_end":35}},{"value":"/ [`oneshot`]: crate::sync::oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8458,"byte_end":8495,"line_start":211,"line_end":211,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8496,"byte_end":8499,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ ## Asynchronous IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8500,"byte_end":8522,"line_start":213,"line_end":213,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8523,"byte_end":8526,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ As well as scheduling and running tasks, Tokio provides everything you need","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8527,"byte_end":8606,"line_start":215,"line_end":215,"column_start":1,"column_end":80}},{"value":"/ to perform input and output asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8607,"byte_end":8654,"line_start":216,"line_end":216,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8655,"byte_end":8658,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ The [`tokio::io`] module provides Tokio's asynchronous core I/O primitives,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8659,"byte_end":8738,"line_start":218,"line_end":218,"column_start":1,"column_end":80}},{"value":"/ the [`AsyncRead`], [`AsyncWrite`], and [`AsyncBufRead`] traits. In addition,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8739,"byte_end":8819,"line_start":219,"line_end":219,"column_start":1,"column_end":81}},{"value":"/ when the \"io-util\" feature flag is enabled, it also provides combinators and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8820,"byte_end":8900,"line_start":220,"line_end":220,"column_start":1,"column_end":81}},{"value":"/ functions for working with these traits, forming as an asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8901,"byte_end":8972,"line_start":221,"line_end":221,"column_start":1,"column_end":72}},{"value":"/ counterpart to [`std::io`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":8973,"byte_end":9004,"line_start":222,"line_end":222,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9005,"byte_end":9008,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Tokio also includes APIs for performing various kinds of I/O and interacting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9009,"byte_end":9089,"line_start":224,"line_end":224,"column_start":1,"column_end":81}},{"value":"/ with the operating system asynchronously. These include:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9090,"byte_end":9150,"line_start":225,"line_end":225,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9151,"byte_end":9154,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ * [`tokio::net`], which contains non-blocking versions of [TCP], [UDP], and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9155,"byte_end":9234,"line_start":227,"line_end":227,"column_start":1,"column_end":80}},{"value":"/   [Unix Domain Sockets][UDS] (enabled by the \"net\" feature flag),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9235,"byte_end":9304,"line_start":228,"line_end":228,"column_start":1,"column_end":70}},{"value":"/ * [`tokio::fs`], similar to [`std::fs`] but for performing filesystem I/O","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9305,"byte_end":9382,"line_start":229,"line_end":229,"column_start":1,"column_end":78}},{"value":"/   asynchronously (enabled by the \"fs\" feature flag),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9383,"byte_end":9439,"line_start":230,"line_end":230,"column_start":1,"column_end":57}},{"value":"/ * [`tokio::signal`], for asynchronously handling Unix and Windows OS signals","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9440,"byte_end":9520,"line_start":231,"line_end":231,"column_start":1,"column_end":81}},{"value":"/   (enabled by the \"signal\" feature flag),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9521,"byte_end":9566,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ * [`tokio::process`], for spawning and managing child processes (enabled by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9567,"byte_end":9646,"line_start":233,"line_end":233,"column_start":1,"column_end":80}},{"value":"/   the \"process\" feature flag).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9647,"byte_end":9681,"line_start":234,"line_end":234,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9682,"byte_end":9685,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ [`tokio::io`]: crate::io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9686,"byte_end":9714,"line_start":236,"line_end":236,"column_start":1,"column_end":29}},{"value":"/ [`AsyncRead`]: crate::io::AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9715,"byte_end":9754,"line_start":237,"line_end":237,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9755,"byte_end":9796,"line_start":238,"line_end":238,"column_start":1,"column_end":42}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9797,"byte_end":9842,"line_start":239,"line_end":239,"column_start":1,"column_end":46}},{"value":"/ [`std::io`]: std::io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9843,"byte_end":9867,"line_start":240,"line_end":240,"column_start":1,"column_end":25}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9868,"byte_end":9898,"line_start":241,"line_end":241,"column_start":1,"column_end":31}},{"value":"/ [TCP]: crate::net::tcp","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9899,"byte_end":9925,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ [UDP]: crate::net::UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9926,"byte_end":9958,"line_start":243,"line_end":243,"column_start":1,"column_end":33}},{"value":"/ [UDS]: crate::net::unix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9959,"byte_end":9986,"line_start":244,"line_end":244,"column_start":1,"column_end":28}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":9987,"byte_end":10015,"line_start":245,"line_end":245,"column_start":1,"column_end":29}},{"value":"/ [`std::fs`]: std::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10016,"byte_end":10040,"line_start":246,"line_end":246,"column_start":1,"column_end":25}},{"value":"/ [`tokio::signal`]: crate::signal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10041,"byte_end":10077,"line_start":247,"line_end":247,"column_start":1,"column_end":37}},{"value":"/ [`tokio::process`]: crate::process","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10078,"byte_end":10116,"line_start":248,"line_end":248,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10117,"byte_end":10120,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10121,"byte_end":10135,"line_start":250,"line_end":250,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10136,"byte_end":10139,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ A simple TCP echo server:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10140,"byte_end":10169,"line_start":252,"line_end":252,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10170,"byte_end":10173,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10174,"byte_end":10187,"line_start":254,"line_end":254,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10188,"byte_end":10220,"line_start":255,"line_end":255,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10221,"byte_end":10270,"line_start":256,"line_end":256,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10271,"byte_end":10274,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10275,"byte_end":10293,"line_start":258,"line_end":258,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10294,"byte_end":10357,"line_start":259,"line_end":259,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10358,"byte_end":10424,"line_start":260,"line_end":260,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10425,"byte_end":10428,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10429,"byte_end":10443,"line_start":262,"line_end":262,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10444,"byte_end":10503,"line_start":263,"line_end":263,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10504,"byte_end":10507,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10508,"byte_end":10545,"line_start":265,"line_end":265,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10546,"byte_end":10586,"line_start":266,"line_end":266,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10587,"byte_end":10590,"line_start":267,"line_end":267,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10591,"byte_end":10671,"line_start":268,"line_end":268,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10672,"byte_end":10694,"line_start":269,"line_end":269,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10695,"byte_end":10758,"line_start":270,"line_end":270,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10759,"byte_end":10799,"line_start":271,"line_end":271,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10800,"byte_end":10850,"line_start":272,"line_end":272,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10851,"byte_end":10886,"line_start":273,"line_end":273,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10887,"byte_end":10922,"line_start":274,"line_end":274,"column_start":1,"column_end":36}},{"value":"/                         eprintln!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":10923,"byte_end":11006,"line_start":275,"line_end":275,"column_start":1,"column_end":84}},{"value":"/                         return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11007,"byte_end":11042,"line_start":276,"line_end":276,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11043,"byte_end":11068,"line_start":277,"line_end":277,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11069,"byte_end":11091,"line_start":278,"line_end":278,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11092,"byte_end":11095,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11096,"byte_end":11138,"line_start":280,"line_end":280,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11139,"byte_end":11211,"line_start":281,"line_end":281,"column_start":1,"column_end":73}},{"value":"/                     eprintln!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11212,"byte_end":11290,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/                     return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11291,"byte_end":11322,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11323,"byte_end":11344,"line_start":284,"line_end":284,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11345,"byte_end":11362,"line_start":285,"line_end":285,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11363,"byte_end":11378,"line_start":286,"line_end":286,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11379,"byte_end":11388,"line_start":287,"line_end":287,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11389,"byte_end":11394,"line_start":288,"line_end":288,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11395,"byte_end":11402,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11403,"byte_end":11406,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11407,"byte_end":11427,"line_start":291,"line_end":291,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11428,"byte_end":11431,"line_start":292,"line_end":292,"column_start":1,"column_end":4}},{"value":"/ Tokio uses a set of [feature flags] to reduce the amount of compiled code. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11432,"byte_end":11513,"line_start":293,"line_end":293,"column_start":1,"column_end":82}},{"value":"/ is possible to just enable certain features over others. By default, Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11514,"byte_end":11592,"line_start":294,"line_end":294,"column_start":1,"column_end":79}},{"value":"/ does not enable any features but allows one to enable a subset for their use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11593,"byte_end":11673,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ case. Below is a list of the available feature flags. You may also notice","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11674,"byte_end":11751,"line_start":296,"line_end":296,"column_start":1,"column_end":78}},{"value":"/ above each function, struct and trait there is listed one or more feature flags","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11752,"byte_end":11835,"line_start":297,"line_end":297,"column_start":1,"column_end":84}},{"value":"/ that are required for that item to be used. If you are new to Tokio it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11836,"byte_end":11913,"line_start":298,"line_end":298,"column_start":1,"column_end":78}},{"value":"/ recommended that you use the `full` feature flag which will enable all public APIs.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":11914,"byte_end":12001,"line_start":299,"line_end":299,"column_start":1,"column_end":88}},{"value":"/ Beware though that this will pull in many extra dependencies that you may not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12002,"byte_end":12083,"line_start":300,"line_end":300,"column_start":1,"column_end":82}},{"value":"/ need.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12084,"byte_end":12093,"line_start":301,"line_end":301,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12094,"byte_end":12097,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ - `full`: Enables all Tokio public API features listed below except `test-util`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12098,"byte_end":12182,"line_start":303,"line_end":303,"column_start":1,"column_end":85}},{"value":"/ - `rt`: Enables `tokio::spawn`, the basic (current thread) scheduler,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12183,"byte_end":12256,"line_start":304,"line_end":304,"column_start":1,"column_end":74}},{"value":"/         and non-scheduler utilities.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12257,"byte_end":12297,"line_start":305,"line_end":305,"column_start":1,"column_end":41}},{"value":"/ - `rt-multi-thread`: Enables the heavier, multi-threaded, work-stealing scheduler.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12298,"byte_end":12384,"line_start":306,"line_end":306,"column_start":1,"column_end":87}},{"value":"/ - `io-util`: Enables the IO based `Ext` traits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12385,"byte_end":12436,"line_start":307,"line_end":307,"column_start":1,"column_end":52}},{"value":"/ - `io-std`: Enable `Stdout`, `Stdin` and `Stderr` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12437,"byte_end":12497,"line_start":308,"line_end":308,"column_start":1,"column_end":61}},{"value":"/ - `net`: Enables `tokio::net` types such as `TcpStream`, `UnixStream` and `UdpSocket`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12498,"byte_end":12588,"line_start":309,"line_end":309,"column_start":1,"column_end":91}},{"value":"/          as well as (on Unix-like systems) `AsyncFd`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12589,"byte_end":12645,"line_start":310,"line_end":310,"column_start":1,"column_end":57}},{"value":"/ - `time`: Enables `tokio::time` types and allows the schedulers to enable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12646,"byte_end":12723,"line_start":311,"line_end":311,"column_start":1,"column_end":78}},{"value":"/           the built in timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12724,"byte_end":12757,"line_start":312,"line_end":312,"column_start":1,"column_end":34}},{"value":"/ - `process`: Enables `tokio::process` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12758,"byte_end":12806,"line_start":313,"line_end":313,"column_start":1,"column_end":49}},{"value":"/ - `macros`: Enables `#[tokio::main]` and `#[tokio::test]` macros.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12807,"byte_end":12876,"line_start":314,"line_end":314,"column_start":1,"column_end":70}},{"value":"/ - `sync`: Enables all `tokio::sync` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12877,"byte_end":12923,"line_start":315,"line_end":315,"column_start":1,"column_end":47}},{"value":"/ - `signal`: Enables all `tokio::signal` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12924,"byte_end":12974,"line_start":316,"line_end":316,"column_start":1,"column_end":51}},{"value":"/ - `fs`: Enables `tokio::fs` types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":12975,"byte_end":13013,"line_start":317,"line_end":317,"column_start":1,"column_end":39}},{"value":"/ - `test-util`: Enables testing based infrastructure for the Tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13014,"byte_end":13092,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13093,"byte_end":13096,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ _Note: `AsyncRead` and `AsyncWrite` traits do not require any features and are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13097,"byte_end":13179,"line_start":320,"line_end":320,"column_start":1,"column_end":83}},{"value":"/ always available._","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13180,"byte_end":13202,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13203,"byte_end":13206,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ ### Internal features","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13207,"byte_end":13232,"line_start":323,"line_end":323,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13233,"byte_end":13236,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ These features do not expose any new API, but influence internal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13237,"byte_end":13305,"line_start":325,"line_end":325,"column_start":1,"column_end":69}},{"value":"/ implementation aspects of Tokio, and can pull in additional","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13306,"byte_end":13369,"line_start":326,"line_end":326,"column_start":1,"column_end":64}},{"value":"/ dependencies.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13370,"byte_end":13387,"line_start":327,"line_end":327,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13388,"byte_end":13391,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ - `parking_lot`: As a potential optimization, use the _parking_lot_ crate's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13392,"byte_end":13471,"line_start":329,"line_end":329,"column_start":1,"column_end":80}},{"value":"/ synchronization primitives internally. MSRV may increase according to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13472,"byte_end":13549,"line_start":330,"line_end":330,"column_start":1,"column_end":78}},{"value":"/ _parking_lot_ release in use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13550,"byte_end":13583,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13584,"byte_end":13587,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ ### Unstable features","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13588,"byte_end":13613,"line_start":333,"line_end":333,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13614,"byte_end":13617,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ These feature flags enable **unstable** features. The public API may break in 1.x","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13618,"byte_end":13703,"line_start":335,"line_end":335,"column_start":1,"column_end":86}},{"value":"/ releases. To enable these features, the `--cfg tokio_unstable` must be passed to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13704,"byte_end":13788,"line_start":336,"line_end":336,"column_start":1,"column_end":85}},{"value":"/ `rustc` when compiling. This is easiest done using the `RUSTFLAGS` env variable:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13789,"byte_end":13873,"line_start":337,"line_end":337,"column_start":1,"column_end":85}},{"value":"/ `RUSTFLAGS=\"--cfg tokio_unstable\"`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13874,"byte_end":13913,"line_start":338,"line_end":338,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13914,"byte_end":13917,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ - `tracing`: Enables tracing events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13918,"byte_end":13958,"line_start":340,"line_end":340,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13959,"byte_end":13962,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":13963,"byte_end":14060,"line_start":342,"line_end":342,"column_start":1,"column_end":98}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/mod.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":76}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14249,"byte_end":14261,"line_start":348,"line_end":348,"column_start":1,"column_end":13}},{"value":"allow(unused_macros)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/mod.rs","byte_start":17555,"byte_end":17575,"line_start":1,"line_end":1,"column_start":36,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":76},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/support.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"support","qualname":"::macros::support","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/support.rs","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112379,"byte_end":10112384,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ok`](ok()) function.","sig":null,"attributes":[{"value":"/ Future for the [`ok`](ok()) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112150,"byte_end":10112191,"line_start":5,"line_end":5,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112192,"byte_end":10112195,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `pub` in order to use the future as an associated type in a sealed trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112196,"byte_end":10112273,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"allow(unreachable_pub)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112342,"byte_end":10112367,"line_start":10,"line_end":10,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":105},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":750},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":973},{"krate":0,"index":999},{"krate":0,"index":1160},{"krate":0,"index":1261},{"krate":0,"index":1272},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379}],"decl_id":null,"docs":" Traits, helpers, and type definitions for asynchronous I/O functionality.","sig":null,"attributes":[{"value":"/ Traits, helpers, and type definitions for asynchronous I/O functionality.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33400,"byte_end":33477,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33478,"byte_end":33481,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. Primarily, it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33482,"byte_end":33553,"line_start":5,"line_end":5,"column_start":1,"column_end":72}},{"value":"/ defines two traits, [`AsyncRead`] and [`AsyncWrite`], which are asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33554,"byte_end":33634,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ versions of the [`Read`] and [`Write`] traits in the standard library.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33635,"byte_end":33709,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33710,"byte_end":33713,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # AsyncRead and AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33714,"byte_end":33744,"line_start":9,"line_end":9,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33745,"byte_end":33748,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Like the standard library's [`Read`] and [`Write`] traits, [`AsyncRead`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33749,"byte_end":33829,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`] provide the most general interface for reading and writing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33830,"byte_end":33907,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ input and output. Unlike the standard library's traits, however, they are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33908,"byte_end":33985,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ _asynchronous_ &mdash; meaning that reading from or writing to a `tokio::io`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":33986,"byte_end":34066,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ type will _yield_ to the Tokio scheduler when IO is not ready, rather than","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34067,"byte_end":34145,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ blocking. This allows other tasks to run while waiting on IO.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34146,"byte_end":34211,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34212,"byte_end":34215,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Another difference is that `AsyncRead` and `AsyncWrite` only contain","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34216,"byte_end":34288,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ core methods needed to provide asynchronous reading and writing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34289,"byte_end":34356,"line_start":19,"line_end":19,"column_start":1,"column_end":68}},{"value":"/ functionality. Instead, utility methods are defined in the [`AsyncReadExt`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34357,"byte_end":34436,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ and [`AsyncWriteExt`] extension traits. These traits are automatically","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34437,"byte_end":34511,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ implemented for all values that implement `AsyncRead` and `AsyncWrite`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34512,"byte_end":34586,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ respectively.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34587,"byte_end":34604,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34605,"byte_end":34608,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ End users will rarely interact directly with `AsyncRead` and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34609,"byte_end":34673,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `AsyncWrite`. Instead, they will use the async functions defined in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34674,"byte_end":34749,"line_start":26,"line_end":26,"column_start":1,"column_end":76}},{"value":"/ extension traits. Library authors are expected to implement `AsyncRead`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34750,"byte_end":34825,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ and `AsyncWrite` in order to provide types that behave like byte streams.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34826,"byte_end":34903,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34904,"byte_end":34907,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Even with these differences, Tokio's `AsyncRead` and `AsyncWrite` traits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34908,"byte_end":34984,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ can be used in almost exactly the same manner as the standard library's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":34985,"byte_end":35060,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ `Read` and `Write`. Most types in the standard library that implement `Read`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35061,"byte_end":35141,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ and `Write` have asynchronous equivalents in `tokio` that implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35142,"byte_end":35213,"line_start":33,"line_end":33,"column_start":1,"column_end":72}},{"value":"/ `AsyncRead` and `AsyncWrite`, such as [`File`] and [`TcpStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35214,"byte_end":35283,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35284,"byte_end":35287,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For example, the standard library documentation introduces `Read` by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35288,"byte_end":35360,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ [demonstrating][std_example] reading some bytes from a [`std::fs::File`]. We","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35361,"byte_end":35441,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ can do the same with [`tokio::fs::File`][`File`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35442,"byte_end":35495,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35496,"byte_end":35499,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35500,"byte_end":35513,"line_start":40,"line_end":40,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncReadExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35514,"byte_end":35554,"line_start":41,"line_end":41,"column_start":1,"column_end":41}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35555,"byte_end":35579,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35580,"byte_end":35583,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35584,"byte_end":35602,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35603,"byte_end":35642,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/     let mut f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35643,"byte_end":35692,"line_start":46,"line_end":46,"column_start":1,"column_end":50}},{"value":"/     let mut buffer = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35693,"byte_end":35726,"line_start":47,"line_end":47,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35727,"byte_end":35730,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     // read up to 10 bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35731,"byte_end":35761,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"/     let n = f.read(&mut buffer).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35762,"byte_end":35805,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35806,"byte_end":35809,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/     println!(\"The bytes: {:?}\", &buffer[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35810,"byte_end":35860,"line_start":52,"line_end":52,"column_start":1,"column_end":51}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35861,"byte_end":35875,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35876,"byte_end":35881,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35882,"byte_end":35889,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35890,"byte_end":35893,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`File`]: crate::fs::File","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35894,"byte_end":35923,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ [`TcpStream`]: crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35924,"byte_end":35964,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/ [`std::fs::File`]: std::fs::File","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":35965,"byte_end":36001,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ [std_example]: std::io#read-and-write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36002,"byte_end":36043,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36044,"byte_end":36047,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Buffered Readers and Writers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36048,"byte_end":36083,"line_start":62,"line_end":62,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36084,"byte_end":36087,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Byte-based interfaces are unwieldy and can be inefficient, as we'd need to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36088,"byte_end":36169,"line_start":64,"line_end":64,"column_start":1,"column_end":82}},{"value":"/ making near-constant calls to the operating system. To help with this,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36170,"byte_end":36244,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/ `std::io` comes with [support for _buffered_ readers and writers][stdbuf],","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36245,"byte_end":36323,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ and therefore, `tokio::io` does as well.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36324,"byte_end":36368,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36369,"byte_end":36372,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Tokio provides an async version of the [`std::io::BufRead`] trait,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36373,"byte_end":36443,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`AsyncBufRead`]; and async [`BufReader`] and [`BufWriter`] structs, which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36444,"byte_end":36522,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/ wrap readers and writers. These wrappers use a buffer, reducing the number","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36523,"byte_end":36601,"line_start":71,"line_end":71,"column_start":1,"column_end":79}},{"value":"/ of calls and providing nicer methods for accessing exactly what you want.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36602,"byte_end":36679,"line_start":72,"line_end":72,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36680,"byte_end":36683,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ For example, [`BufReader`] works with the [`AsyncBufRead`] trait to add","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36684,"byte_end":36759,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ extra methods to any async reader:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36760,"byte_end":36798,"line_start":75,"line_end":75,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36799,"byte_end":36802,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36803,"byte_end":36816,"line_start":77,"line_end":77,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufReader, AsyncBufReadExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36817,"byte_end":36871,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36872,"byte_end":36896,"line_start":79,"line_end":79,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36897,"byte_end":36900,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36901,"byte_end":36919,"line_start":81,"line_end":81,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36920,"byte_end":36959,"line_start":82,"line_end":82,"column_start":1,"column_end":40}},{"value":"/     let f = File::open(\"foo.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":36960,"byte_end":37005,"line_start":83,"line_end":83,"column_start":1,"column_end":46}},{"value":"/     let mut reader = BufReader::new(f);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37006,"byte_end":37049,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/     let mut buffer = String::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37050,"byte_end":37089,"line_start":85,"line_end":85,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37090,"byte_end":37093,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     // read a line into buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37094,"byte_end":37128,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     reader.read_line(&mut buffer).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37129,"byte_end":37174,"line_start":88,"line_end":88,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37175,"byte_end":37178,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     println!(\"{}\", buffer);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37179,"byte_end":37210,"line_start":90,"line_end":90,"column_start":1,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37211,"byte_end":37225,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37226,"byte_end":37231,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37232,"byte_end":37239,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37240,"byte_end":37243,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [`BufWriter`] doesn't add any new ways of writing; it just buffers every call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37244,"byte_end":37325,"line_start":95,"line_end":95,"column_start":1,"column_end":82}},{"value":"/ to [`write`](crate::io::AsyncWriteExt::write). However, you **must** flush","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37326,"byte_end":37404,"line_start":96,"line_end":96,"column_start":1,"column_end":79}},{"value":"/ [`BufWriter`] to ensure that any buffered data is written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37405,"byte_end":37467,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37468,"byte_end":37471,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37472,"byte_end":37485,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, BufWriter, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37486,"byte_end":37538,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37539,"byte_end":37563,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37564,"byte_end":37567,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37568,"byte_end":37586,"line_start":103,"line_end":103,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37587,"byte_end":37626,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/     let f = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37627,"byte_end":37674,"line_start":105,"line_end":105,"column_start":1,"column_end":48}},{"value":"/     {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37675,"byte_end":37684,"line_start":106,"line_end":106,"column_start":1,"column_end":10}},{"value":"/         let mut writer = BufWriter::new(f);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37685,"byte_end":37732,"line_start":107,"line_end":107,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37733,"byte_end":37736,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/         // Write a byte to the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37737,"byte_end":37779,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/         writer.write(&[42u8]).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37780,"byte_end":37821,"line_start":110,"line_end":110,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37822,"byte_end":37825,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Flush the buffer before it goes out of scope.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37826,"byte_end":37886,"line_start":112,"line_end":112,"column_start":1,"column_end":61}},{"value":"/         writer.flush().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37887,"byte_end":37921,"line_start":113,"line_end":113,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37922,"byte_end":37925,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/     } // Unless flushed or shut down, the contents of the buffer is discarded on drop.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":37926,"byte_end":38016,"line_start":115,"line_end":115,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38017,"byte_end":38020,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38021,"byte_end":38035,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38036,"byte_end":38041,"line_start":118,"line_end":118,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38042,"byte_end":38049,"line_start":119,"line_end":119,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38050,"byte_end":38053,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ [stdbuf]: std::io#bufreader-and-bufwriter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38054,"byte_end":38099,"line_start":121,"line_end":121,"column_start":1,"column_end":46}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38100,"byte_end":38142,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/ [`AsyncBufRead`]: crate::io::AsyncBufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38143,"byte_end":38188,"line_start":123,"line_end":123,"column_start":1,"column_end":46}},{"value":"/ [`BufReader`]: crate::io::BufReader","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38189,"byte_end":38228,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ [`BufWriter`]: crate::io::BufWriter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38229,"byte_end":38268,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38269,"byte_end":38272,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/ ## Implementing AsyncRead and AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38273,"byte_end":38317,"line_start":127,"line_end":127,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38318,"byte_end":38321,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Because they are traits, we can implement [`AsyncRead`] and [`AsyncWrite`] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38322,"byte_end":38404,"line_start":129,"line_end":129,"column_start":1,"column_end":83}},{"value":"/ our own types, as well. Note that these traits must only be implemented for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38405,"byte_end":38484,"line_start":130,"line_end":130,"column_start":1,"column_end":80}},{"value":"/ non-blocking I/O types that integrate with the futures type system. In","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38485,"byte_end":38559,"line_start":131,"line_end":131,"column_start":1,"column_end":75}},{"value":"/ other words, these types must never block the thread, and instead the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38560,"byte_end":38633,"line_start":132,"line_end":132,"column_start":1,"column_end":74}},{"value":"/ current task is notified when the I/O resource is ready.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38634,"byte_end":38694,"line_start":133,"line_end":133,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38695,"byte_end":38698,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ ## Conversion to and from Sink/Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38699,"byte_end":38740,"line_start":135,"line_end":135,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38741,"byte_end":38744,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ It is often convenient to encapsulate the reading and writing of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38745,"byte_end":38813,"line_start":137,"line_end":137,"column_start":1,"column_end":69}},{"value":"/ bytes and instead work with a [`Sink`] or [`Stream`] of some data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38814,"byte_end":38883,"line_start":138,"line_end":138,"column_start":1,"column_end":70}},{"value":"/ type that is encoded as bytes and/or decoded from bytes. Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38884,"byte_end":38950,"line_start":139,"line_end":139,"column_start":1,"column_end":67}},{"value":"/ provides some utility traits in the [tokio-util] crate that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":38951,"byte_end":39014,"line_start":140,"line_end":140,"column_start":1,"column_end":64}},{"value":"/ abstract the asynchronous buffering that is required and allows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39015,"byte_end":39082,"line_start":141,"line_end":141,"column_start":1,"column_end":68}},{"value":"/ you to write [`Encoder`] and [`Decoder`] functions working with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39083,"byte_end":39152,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/ buffer of bytes, and then use that [\"codec\"] to transform anything","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39153,"byte_end":39223,"line_start":143,"line_end":143,"column_start":1,"column_end":71}},{"value":"/ that implements [`AsyncRead`] and [`AsyncWrite`] into a `Sink`/`Stream` of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39224,"byte_end":39302,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ your structured data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39303,"byte_end":39328,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39329,"byte_end":39332,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [tokio-util]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39333,"byte_end":39409,"line_start":147,"line_end":147,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39410,"byte_end":39413,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ # Standard input and output","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39414,"byte_end":39445,"line_start":149,"line_end":149,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39446,"byte_end":39449,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ Tokio provides asynchronous APIs to standard [input], [output], and [error].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39450,"byte_end":39530,"line_start":151,"line_end":151,"column_start":1,"column_end":81}},{"value":"/ These APIs are very similar to the ones provided by `std`, but they also","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39531,"byte_end":39607,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/ implement [`AsyncRead`] and [`AsyncWrite`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39608,"byte_end":39655,"line_start":153,"line_end":153,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39656,"byte_end":39659,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ Note that the standard input / output APIs  **must** be used from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39660,"byte_end":39733,"line_start":155,"line_end":155,"column_start":1,"column_end":74}},{"value":"/ context of the Tokio runtime, as they require Tokio-specific features to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39734,"byte_end":39810,"line_start":156,"line_end":156,"column_start":1,"column_end":77}},{"value":"/ function. Calling these functions outside of a Tokio runtime will panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39811,"byte_end":39887,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39888,"byte_end":39891,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [input]: fn@stdin","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39892,"byte_end":39913,"line_start":159,"line_end":159,"column_start":1,"column_end":22}},{"value":"/ [output]: fn@stdout","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39914,"byte_end":39937,"line_start":160,"line_end":160,"column_start":1,"column_end":24}},{"value":"/ [error]: fn@stderr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39938,"byte_end":39960,"line_start":161,"line_end":161,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39961,"byte_end":39964,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # `std` re-exports","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39965,"byte_end":39987,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39988,"byte_end":39991,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Additionally, [`Error`], [`ErrorKind`], [`Result`], and [`SeekFrom`] are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":39992,"byte_end":40068,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/ re-exported from `std::io` for ease of use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40069,"byte_end":40116,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40117,"byte_end":40120,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: trait@AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40121,"byte_end":40155,"line_start":168,"line_end":168,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40156,"byte_end":40192,"line_start":169,"line_end":169,"column_start":1,"column_end":37}},{"value":"/ [`AsyncReadExt`]: trait@AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40193,"byte_end":40233,"line_start":170,"line_end":170,"column_start":1,"column_end":41}},{"value":"/ [`AsyncWriteExt`]: trait@AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40234,"byte_end":40276,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ [\"codec\"]: https://docs.rs/tokio-util/0.6/tokio_util/codec/index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40277,"byte_end":40350,"line_start":172,"line_end":172,"column_start":1,"column_end":74}},{"value":"/ [`Encoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Encoder.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40351,"byte_end":40434,"line_start":173,"line_end":173,"column_start":1,"column_end":84}},{"value":"/ [`Decoder`]: https://docs.rs/tokio-util/0.6/tokio_util/codec/trait.Decoder.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40435,"byte_end":40518,"line_start":174,"line_end":174,"column_start":1,"column_end":84}},{"value":"/ [`Error`]: struct@Error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40519,"byte_end":40546,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ [`ErrorKind`]: enum@ErrorKind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40547,"byte_end":40580,"line_start":176,"line_end":176,"column_start":1,"column_end":34}},{"value":"/ [`Result`]: type@Result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40581,"byte_end":40608,"line_start":177,"line_end":177,"column_start":1,"column_end":28}},{"value":"/ [`Read`]: std::io::Read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40609,"byte_end":40636,"line_start":178,"line_end":178,"column_start":1,"column_end":28}},{"value":"/ [`SeekFrom`]: enum@SeekFrom","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40637,"byte_end":40668,"line_start":179,"line_end":179,"column_start":1,"column_end":32}},{"value":"/ [`Sink`]: https://docs.rs/futures/0.3/futures/sink/trait.Sink.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40669,"byte_end":40739,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.3/futures/stream/trait.Stream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40740,"byte_end":40816,"line_start":181,"line_end":181,"column_start":1,"column_end":77}},{"value":"/ [`Write`]: std::io::Write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":40817,"byte_end":40846,"line_start":182,"line_end":182,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":114},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43544,"byte_end":43556,"line_start":23,"line_end":23,"column_start":11,"column_end":23},"name":"AsyncBufRead","qualname":"::io::async_buf_read::AsyncBufRead","value":"AsyncBufRead: AsyncRead","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Reads bytes asynchronously.","sig":null,"attributes":[{"value":"/ Reads bytes asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":42867,"byte_end":42898,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":42899,"byte_end":42902,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to [`std::io::BufRead`], but integrates with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":42903,"byte_end":42975,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ the asynchronous task system. In particular, the [`poll_fill_buf`] method,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":42976,"byte_end":43054,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ unlike [`BufRead::fill_buf`], will automatically queue the current task for wakeup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43055,"byte_end":43141,"line_start":12,"line_end":12,"column_start":1,"column_end":87}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43142,"byte_end":43219,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43220,"byte_end":43231,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43232,"byte_end":43235,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncBufRead` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43236,"byte_end":43304,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/ [`AsyncBufReadExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43305,"byte_end":43329,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43330,"byte_end":43333,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`std::io::BufRead`]: std::io::BufRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43334,"byte_end":43376,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43377,"byte_end":43427,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/ [`BufRead::fill_buf`]: std::io::BufRead::fill_buf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43428,"byte_end":43481,"line_start":21,"line_end":21,"column_start":1,"column_end":54}},{"value":"/ [`AsyncBufReadExt`]: crate::io::AsyncBufReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43482,"byte_end":43533,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44654,"byte_end":44667,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"::io::async_buf_read::AsyncBufRead::poll_fill_buf","value":"pub fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Attempts to return the contents of the internal buffer, filling it with more data\n from the inner reader if it is empty.","sig":null,"attributes":[{"value":"/ Attempts to return the contents of the internal buffer, filling it with more data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43574,"byte_end":43659,"line_start":24,"line_end":24,"column_start":5,"column_end":90}},{"value":"/ from the inner reader if it is empty.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43664,"byte_end":43705,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43710,"byte_end":43713,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(buf))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43718,"byte_end":43765,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43770,"byte_end":43773,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43778,"byte_end":43837,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43842,"byte_end":43900,"line_start":30,"line_end":30,"column_start":5,"column_end":63}},{"value":"/ `cx.waker().wake_by_ref()`) to receive a notification when the object becomes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43905,"byte_end":43986,"line_start":31,"line_end":31,"column_start":5,"column_end":86}},{"value":"/ readable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43991,"byte_end":44017,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44022,"byte_end":44025,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44030,"byte_end":44101,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ [`consume`] method to function properly. When calling this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44106,"byte_end":44168,"line_start":35,"line_end":35,"column_start":5,"column_end":67}},{"value":"/ method, none of the contents will be \"read\" in the sense that later","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44173,"byte_end":44244,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ calling [`poll_read`] may return the same contents. As such, [`consume`] must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44249,"byte_end":44330,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ be called with the number of bytes that are consumed from this buffer to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44335,"byte_end":44411,"line_start":38,"line_end":38,"column_start":5,"column_end":81}},{"value":"/ ensure that the bytes are never returned twice.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44416,"byte_end":44467,"line_start":39,"line_end":39,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44472,"byte_end":44475,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ An empty buffer returned indicates that the stream has reached EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44480,"byte_end":44551,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44556,"byte_end":44559,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44564,"byte_end":44603,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ [`consume`]: AsyncBufRead::consume","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44608,"byte_end":44646,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45570,"byte_end":45577,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"consume","qualname":"::io::async_buf_read::AsyncBufRead::consume","value":"pub fn consume(Pin<&mut Self>, usize)","parent":{"krate":0,"index":114},"children":[],"decl_id":null,"docs":" Tells this buffer that `amt` bytes have been consumed from the buffer,\n so they should no longer be returned in calls to [`poll_read`].","sig":null,"attributes":[{"value":"/ Tells this buffer that `amt` bytes have been consumed from the buffer,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44745,"byte_end":44819,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/ so they should no longer be returned in calls to [`poll_read`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44824,"byte_end":44891,"line_start":48,"line_end":48,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44896,"byte_end":44899,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This function is a lower-level call. It needs to be paired with the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44904,"byte_end":44975,"line_start":50,"line_end":50,"column_start":5,"column_end":76}},{"value":"/ [`poll_fill_buf`] method to function properly. This function does","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":44980,"byte_end":45049,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ not perform any I/O, it simply informs this object that some amount of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45054,"byte_end":45128,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ its buffer, returned from [`poll_fill_buf`], has been consumed and should","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45133,"byte_end":45210,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/ no longer be returned. As such, this function may do odd things if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45215,"byte_end":45285,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ [`poll_fill_buf`] isn't called before calling it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45290,"byte_end":45343,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45348,"byte_end":45351,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ The `amt` must be `<=` the number of bytes in the buffer returned by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45356,"byte_end":45428,"line_start":57,"line_end":57,"column_start":5,"column_end":77}},{"value":"/ [`poll_fill_buf`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45433,"byte_end":45455,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45460,"byte_end":45463,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45468,"byte_end":45507,"line_start":60,"line_end":60,"column_start":5,"column_end":44}},{"value":"/ [`poll_fill_buf`]: AsyncBufRead::poll_fill_buf","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":45512,"byte_end":45562,"line_start":61,"line_end":61,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":142},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48891,"byte_end":48900,"line_start":43,"line_end":43,"column_start":11,"column_end":20},"name":"AsyncRead","qualname":"::io::async_read::AsyncRead","value":"AsyncRead","parent":null,"children":[{"krate":0,"index":143}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"/ Reads bytes from a source.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47204,"byte_end":47234,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47235,"byte_end":47238,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Read`] trait, but integrates with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47239,"byte_end":47318,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ the asynchronous task system. In particular, the [`poll_read`] method,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47319,"byte_end":47393,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ unlike [`Read::read`], will automatically queue the current task for wakeup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47394,"byte_end":47473,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ and return if data is not yet available, rather than blocking the calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47474,"byte_end":47551,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47552,"byte_end":47563,"line_start":13,"line_end":13,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47564,"byte_end":47567,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the `poll_read` function will return one of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47568,"byte_end":47645,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ the following:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47646,"byte_end":47664,"line_start":16,"line_end":16,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47665,"byte_end":47668,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(()))` means that data was immediately read and placed into","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47669,"byte_end":47749,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/   the output buffer. The amount of data read can be determined by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47750,"byte_end":47823,"line_start":19,"line_end":19,"column_start":1,"column_end":74}},{"value":"/   increase in the length of the slice returned by `ReadBuf::filled`. If the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47824,"byte_end":47903,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   difference is 0, EOF has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47904,"byte_end":47948,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47949,"byte_end":47952,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was read into the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":47953,"byte_end":48018,"line_start":23,"line_end":23,"column_start":1,"column_end":66}},{"value":"/   provided. The I/O object is not currently readable but may become readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48019,"byte_end":48099,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48100,"byte_end":48179,"line_start":25,"line_end":25,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is readable**. This means that like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48180,"byte_end":48253,"line_start":26,"line_end":26,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48254,"byte_end":48327,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/   readable again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48328,"byte_end":48349,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48350,"byte_end":48353,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48354,"byte_end":48438,"line_start":30,"line_end":30,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48439,"byte_end":48463,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48464,"byte_end":48467,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the `read` method only works in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48468,"byte_end":48541,"line_start":33,"line_end":33,"column_start":1,"column_end":74}},{"value":"/ context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48542,"byte_end":48621,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48622,"byte_end":48625,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncRead` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48626,"byte_end":48691,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/ [`AsyncReadExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48692,"byte_end":48713,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48714,"byte_end":48717,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`poll_read`]: AsyncRead::poll_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48718,"byte_end":48757,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ [`std::io::Read`]: std::io::Read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48758,"byte_end":48794,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/ [`Read::read`]: std::io::Read::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48795,"byte_end":48834,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/ [`AsyncReadExt`]: crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48835,"byte_end":48880,"line_start":42,"line_end":42,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49417,"byte_end":49426,"line_start":53,"line_end":53,"column_start":8,"column_end":17},"name":"poll_read","qualname":"::io::async_read::AsyncRead::poll_read","value":"pub fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":0,"index":142},"children":[],"decl_id":null,"docs":" Attempts to read from the `AsyncRead` into `buf`.","sig":null,"attributes":[{"value":"/ Attempts to read from the `AsyncRead` into `buf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48907,"byte_end":48960,"line_start":44,"line_end":44,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48965,"byte_end":48968,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))` and places data in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":48973,"byte_end":49041,"line_start":46,"line_end":46,"column_start":5,"column_end":73}},{"value":"/ unfilled portion of `buf`. If no data was read (`buf.filled().len()` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49046,"byte_end":49121,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ unchanged), it implies that EOF has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49126,"byte_end":49179,"line_start":48,"line_end":48,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49184,"byte_end":49187,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If no data is available for reading, the method returns `Poll::Pending`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49192,"byte_end":49267,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ and arranges for the current task (via `cx.waker()`) to receive a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49272,"byte_end":49341,"line_start":51,"line_end":51,"column_start":5,"column_end":74}},{"value":"/ notification when the object becomes readable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49346,"byte_end":49409,"line_start":52,"line_end":52,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52022,"byte_end":52031,"line_start":18,"line_end":18,"column_start":11,"column_end":20},"name":"AsyncSeek","qualname":"::io::async_seek::AsyncSeek","value":"AsyncSeek","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"decl_id":null,"docs":" Seek bytes asynchronously.","sig":null,"attributes":[{"value":"/ Seek bytes asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51540,"byte_end":51570,"line_start":6,"line_end":6,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51571,"byte_end":51574,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This trait is analogous to the [`std::io::Seek`] trait, but integrates","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51575,"byte_end":51649,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ with the asynchronous task system. In particular, the `start_seek`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51650,"byte_end":51720,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/ method, unlike [`Seek::seek`], will not block the calling thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51721,"byte_end":51790,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51791,"byte_end":51794,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncSeek` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51795,"byte_end":51860,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ [`AsyncSeekExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51861,"byte_end":51882,"line_start":13,"line_end":13,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51883,"byte_end":51886,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Seek`]: std::io::Seek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51887,"byte_end":51923,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ [`Seek::seek`]: std::io::Seek::seek()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51924,"byte_end":51965,"line_start":16,"line_end":16,"column_start":1,"column_end":42}},{"value":"/ [`AsyncSeekExt`]: crate::io::AsyncSeekExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":51966,"byte_end":52011,"line_start":17,"line_end":17,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52673,"byte_end":52683,"line_start":33,"line_end":33,"column_start":8,"column_end":18},"name":"start_seek","qualname":"::io::async_seek::AsyncSeek::start_seek","value":"pub fn start_seek(Pin<&mut Self>, SeekFrom) -> io::Result<()>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Attempts to seek to an offset, in bytes, in a stream.","sig":null,"attributes":[{"value":"/ Attempts to seek to an offset, in bytes, in a stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52038,"byte_end":52095,"line_start":19,"line_end":19,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52100,"byte_end":52103,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ A seek beyond the end of a stream is allowed, but behavior is defined","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52108,"byte_end":52181,"line_start":21,"line_end":21,"column_start":5,"column_end":78}},{"value":"/ by the implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52186,"byte_end":52212,"line_start":22,"line_end":22,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52217,"byte_end":52220,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If this function returns successfully, then the job has been submitted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52225,"byte_end":52300,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/ To find out when it completes, call `poll_complete`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52305,"byte_end":52361,"line_start":25,"line_end":25,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52366,"byte_end":52369,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52374,"byte_end":52386,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52391,"byte_end":52394,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This function can return [`io::ErrorKind::Other`] in case there is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52399,"byte_end":52469,"line_start":29,"line_end":29,"column_start":5,"column_end":75}},{"value":"/ another seek in progress. To avoid this, it is advisable that any call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52474,"byte_end":52548,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ to `start_seek` is preceded by a call to `poll_complete` to ensure all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52553,"byte_end":52627,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pending seeks have completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52632,"byte_end":52665,"line_start":32,"line_end":32,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53206,"byte_end":53219,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"::io::async_seek::AsyncSeek::poll_complete","value":"pub fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<io::Result<u64>>","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" Waits for a seek operation to complete.","sig":null,"attributes":[{"value":"/ Waits for a seek operation to complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52750,"byte_end":52793,"line_start":35,"line_end":35,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52798,"byte_end":52801,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ If the seek operation completed successfully,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52806,"byte_end":52855,"line_start":37,"line_end":37,"column_start":5,"column_end":54}},{"value":"/ this method returns the new position from the start of the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52860,"byte_end":52930,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"/ That position can be used later with [`SeekFrom::Start`]. Repeatedly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":52935,"byte_end":53007,"line_start":39,"line_end":39,"column_start":5,"column_end":77}},{"value":"/ calling this function without calling `start_seek` might return the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53012,"byte_end":53083,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ same result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53088,"byte_end":53104,"line_start":41,"line_end":41,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53109,"byte_end":53112,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53117,"byte_end":53129,"line_start":43,"line_end":43,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53134,"byte_end":53137,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Seeking to a negative offset is considered an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53142,"byte_end":53198,"line_start":45,"line_end":45,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56510,"byte_end":56520,"line_start":45,"line_end":45,"column_start":11,"column_end":21},"name":"AsyncWrite","qualname":"::io::async_write::AsyncWrite","value":"AsyncWrite","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":200}],"decl_id":null,"docs":" Writes bytes asynchronously.","sig":null,"attributes":[{"value":"/ Writes bytes asynchronously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54647,"byte_end":54679,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54680,"byte_end":54683,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The trait inherits from [`std::io::Write`] and indicates that an I/O object is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54684,"byte_end":54766,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ **nonblocking**. All non-blocking I/O objects must return an error when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54767,"byte_end":54842,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ bytes cannot be written instead of blocking the current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54843,"byte_end":54910,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54911,"byte_end":54914,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Specifically, this means that the [`poll_write`] function will return one of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54915,"byte_end":54995,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ the following:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":54996,"byte_end":55014,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55015,"byte_end":55018,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Ok(n))` means that `n` bytes of data was immediately","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55019,"byte_end":55090,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/   written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55091,"byte_end":55105,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55106,"byte_end":55109,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Pending` means that no data was written from the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55110,"byte_end":55178,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/   provided. The I/O object is not currently writable but may become writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55179,"byte_end":55259,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/   in the future. Most importantly, **the current future's task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55260,"byte_end":55339,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/   to get unparked when the object is writable**. This means that like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55340,"byte_end":55413,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   `Future::poll` you'll receive a notification when the I/O object is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55414,"byte_end":55487,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/   writable again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55488,"byte_end":55509,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55510,"byte_end":55513,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ * `Poll::Ready(Err(e))` for other errors are standard I/O errors coming from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55514,"byte_end":55598,"line_start":25,"line_end":25,"column_start":1,"column_end":85}},{"value":"/   underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55599,"byte_end":55623,"line_start":26,"line_end":26,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55624,"byte_end":55627,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This trait importantly means that the [`write`][stdwrite] method only works in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55628,"byte_end":55710,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/ the context of a future's task. The object may panic if used outside of a task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55711,"byte_end":55794,"line_start":29,"line_end":29,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55795,"byte_end":55798,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that this trait also represents that the  [`Write::flush`][stdflush] method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55799,"byte_end":55883,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ works very similarly to the `write` method, notably that `Ok(())` means that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55884,"byte_end":55968,"line_start":32,"line_end":32,"column_start":1,"column_end":85}},{"value":"/ writer has successfully been flushed, a \"would block\" error means that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":55969,"byte_end":56047,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ current task is ready to receive a notification when flushing can make more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56048,"byte_end":56127,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ progress, and otherwise normal errors can happen as well.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56128,"byte_end":56189,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56190,"byte_end":56193,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Utilities for working with `AsyncWrite` values are provided by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56194,"byte_end":56260,"line_start":37,"line_end":37,"column_start":1,"column_end":67}},{"value":"/ [`AsyncWriteExt`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56261,"byte_end":56283,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56284,"byte_end":56287,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`std::io::Write`]: std::io::Write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56288,"byte_end":56326,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56327,"byte_end":56371,"line_start":41,"line_end":41,"column_start":1,"column_end":45}},{"value":"/ [stdwrite]: std::io::Write::write()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56372,"byte_end":56411,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ [stdflush]: std::io::Write::flush()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56412,"byte_end":56451,"line_start":43,"line_end":43,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWriteExt`]: crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56452,"byte_end":56499,"line_start":44,"line_end":44,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56904,"byte_end":56914,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_write","qualname":"::io::async_write::AsyncWrite::poll_write","value":"pub fn poll_write(Pin<&mut Self>, &mut Context, &[u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempt to write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Attempt to write bytes from `buf` into the object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56527,"byte_end":56581,"line_start":46,"line_end":46,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56586,"byte_end":56589,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56594,"byte_end":56655,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56660,"byte_end":56663,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56668,"byte_end":56730,"line_start":50,"line_end":50,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56735,"byte_end":56793,"line_start":51,"line_end":51,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56798,"byte_end":56865,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":56870,"byte_end":56896,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57455,"byte_end":57465,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"::io::async_write::AsyncWrite::poll_flush","value":"pub fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Attempts to flush the object, ensuring that any buffered data reach\n their destination.","sig":null,"attributes":[{"value":"/ Attempts to flush the object, ensuring that any buffered data reach","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57042,"byte_end":57113,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ their destination.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57118,"byte_end":57140,"line_start":61,"line_end":61,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57145,"byte_end":57148,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57153,"byte_end":57199,"line_start":63,"line_end":63,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57204,"byte_end":57207,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ If flushing cannot immediately complete, this method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57212,"byte_end":57276,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57281,"byte_end":57339,"line_start":66,"line_end":66,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object can make","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57344,"byte_end":57412,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ progress towards flushing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57417,"byte_end":57447,"line_start":68,"line_end":68,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60751,"byte_end":60764,"line_start":129,"line_end":129,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"::io::async_write::AsyncWrite::poll_shutdown","value":"pub fn poll_shutdown(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Initiates or attempts to shut down this writer, returning success when\n the I/O connection has completely shut down.","sig":null,"attributes":[{"value":"/ Initiates or attempts to shut down this writer, returning success when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57547,"byte_end":57621,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ the I/O connection has completely shut down.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57626,"byte_end":57674,"line_start":72,"line_end":72,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57679,"byte_end":57682,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method is intended to be used for asynchronous shutdown of I/O","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57687,"byte_end":57758,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ connections. For example this is suitable for implementing shutdown of a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57763,"byte_end":57839,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/ TLS connection or calling `TcpStream::shutdown` on a proxied connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57844,"byte_end":57920,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ Protocols sometimes need to flush out final pieces of data or otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":57925,"byte_end":58000,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ perform a graceful shutdown handshake, reading/writing more data as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58005,"byte_end":58076,"line_start":78,"line_end":78,"column_start":5,"column_end":76}},{"value":"/ appropriate. This method is the hook for such protocols to implement the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58081,"byte_end":58157,"line_start":79,"line_end":79,"column_start":5,"column_end":81}},{"value":"/ graceful shutdown logic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58162,"byte_end":58190,"line_start":80,"line_end":80,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58195,"byte_end":58198,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This `shutdown` method is required by implementers of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58203,"byte_end":58264,"line_start":82,"line_end":82,"column_start":5,"column_end":66}},{"value":"/ `AsyncWrite` trait. Wrappers typically just want to proxy this call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58269,"byte_end":58340,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ through to the wrapped type, and base types will typically implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58345,"byte_end":58417,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"/ shutdown logic here or just return `Ok(().into())`. Note that if you're","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58422,"byte_end":58497,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ wrapping an underlying `AsyncWrite` a call to `shutdown` implies that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58502,"byte_end":58575,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ transitively the entire stream has been shut down. After your wrapper's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58580,"byte_end":58655,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ shutdown logic has been executed you should shut down the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58660,"byte_end":58732,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58737,"byte_end":58748,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58753,"byte_end":58756,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Invocation of a `shutdown` implies an invocation of `flush`. Once this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58761,"byte_end":58835,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ method returns `Ready` it implies that a flush successfully happened","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58840,"byte_end":58912,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ before the shutdown happened. That is, callers don't need to call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58917,"byte_end":58986,"line_start":93,"line_end":93,"column_start":5,"column_end":74}},{"value":"/ `flush` before calling `shutdown`. They can rely that by calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":58991,"byte_end":59059,"line_start":94,"line_end":94,"column_start":5,"column_end":73}},{"value":"/ `shutdown` any pending buffered data will be written out.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59064,"byte_end":59125,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59130,"byte_end":59133,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59138,"byte_end":59156,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59161,"byte_end":59164,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ This function returns a `Poll<io::Result<()>>` classified as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59169,"byte_end":59239,"line_start":99,"line_end":99,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59244,"byte_end":59247,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Ok(()))` - indicates that the connection was","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59252,"byte_end":59315,"line_start":101,"line_end":101,"column_start":5,"column_end":68}},{"value":"/   successfully shut down and is now safe to deallocate/drop/close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59320,"byte_end":59389,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/   resources associated with it. This method means that the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59394,"byte_end":59469,"line_start":103,"line_end":103,"column_start":5,"column_end":80}},{"value":"/   will no longer receive any notifications due to this method and the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59474,"byte_end":59547,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/   I/O object itself is likely no longer usable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59552,"byte_end":59603,"line_start":105,"line_end":105,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59608,"byte_end":59611,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` - indicates that shutdown is initiated but could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59616,"byte_end":59686,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/   not complete just yet. This may mean that more I/O needs to happen to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59691,"byte_end":59766,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/   continue this shutdown operation. The current task is scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59771,"byte_end":59843,"line_start":109,"line_end":109,"column_start":5,"column_end":77}},{"value":"/   receive a notification when it's otherwise ready to continue the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59848,"byte_end":59918,"line_start":110,"line_end":110,"column_start":5,"column_end":75}},{"value":"/   shutdown operation. When woken up this method should be called again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":59923,"byte_end":59998,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60003,"byte_end":60006,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Ready(Err(e))` - indicates a fatal error has happened with shutdown,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60011,"byte_end":60092,"line_start":113,"line_end":113,"column_start":5,"column_end":86}},{"value":"/   indicating that the shutdown operation did not complete successfully.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60097,"byte_end":60172,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"/   This typically means that the I/O object is no longer usable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60177,"byte_end":60244,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60249,"byte_end":60252,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60257,"byte_end":60269,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60274,"byte_end":60277,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ This function can return normal I/O errors through `Err`, described","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60282,"byte_end":60353,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/ above. Additionally this method may also render the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60358,"byte_end":60424,"line_start":120,"line_end":120,"column_start":5,"column_end":71}},{"value":"/ `Write::write` method no longer usable (e.g. will return errors in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60429,"byte_end":60503,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ future). It's recommended that once `shutdown` is called the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60508,"byte_end":60572,"line_start":122,"line_end":122,"column_start":5,"column_end":69}},{"value":"/ `write` method is no longer called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60577,"byte_end":60616,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60621,"byte_end":60624,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60629,"byte_end":60641,"line_start":125,"line_end":125,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60646,"byte_end":60649,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context of a future's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60654,"byte_end":60729,"line_start":127,"line_end":127,"column_start":5,"column_end":80}},{"value":"/ task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60734,"byte_end":60743,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61877,"byte_end":61896,"line_start":154,"line_end":154,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"::io::async_write::AsyncWrite::poll_write_vectored","value":"pub fn poll_write_vectored(Pin<&mut Self>, &mut Context, &[IoSlice])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Like [`poll_write`], except that it writes from a slice of buffers.","sig":null,"attributes":[{"value":"/ Like [`poll_write`], except that it writes from a slice of buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60846,"byte_end":60917,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60922,"byte_end":60925,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Data is copied from each buffer in order, with the final buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":60930,"byte_end":60997,"line_start":133,"line_end":133,"column_start":5,"column_end":72}},{"value":"/ read from possibly being only partially consumed. This method must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61002,"byte_end":61072,"line_start":134,"line_end":134,"column_start":5,"column_end":75}},{"value":"/ behave as a call to [`write`] with the buffers concatenated would.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61077,"byte_end":61147,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61152,"byte_end":61155,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ The default implementation calls [`poll_write`] with either the first nonempty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61160,"byte_end":61242,"line_start":137,"line_end":137,"column_start":5,"column_end":87}},{"value":"/ buffer provided, or an empty one if none exists.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61247,"byte_end":61299,"line_start":138,"line_end":138,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61304,"byte_end":61307,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ On success, returns `Poll::Ready(Ok(num_bytes_written))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61312,"byte_end":61373,"line_start":140,"line_end":140,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61378,"byte_end":61381,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ If the object is not ready for writing, the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61386,"byte_end":61448,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ `Poll::Pending` and arranges for the current task (via","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61453,"byte_end":61511,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/ `cx.waker()`) to receive a notification when the object becomes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61516,"byte_end":61583,"line_start":144,"line_end":144,"column_start":5,"column_end":72}},{"value":"/ writable or is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61588,"byte_end":61614,"line_start":145,"line_end":145,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61619,"byte_end":61622,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61627,"byte_end":61637,"line_start":147,"line_end":147,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61642,"byte_end":61645,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This should be implemented as a single \"atomic\" write action. If any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61650,"byte_end":61722,"line_start":149,"line_end":149,"column_start":5,"column_end":77}},{"value":"/ data has been partially written, it is wrong to return an error or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61727,"byte_end":61797,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"/ pending.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61802,"byte_end":61814,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61819,"byte_end":61822,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ [`poll_write`]: AsyncWrite::poll_write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":61827,"byte_end":61869,"line_start":153,"line_end":153,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62664,"byte_end":62681,"line_start":176,"line_end":176,"column_start":8,"column_end":25},"name":"is_write_vectored","qualname":"::io::async_write::AsyncWrite::is_write_vectored","value":"pub fn is_write_vectored(&Self) -> bool","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Determines if this writer has an efficient [`poll_write_vectored`]\n implementation.","sig":null,"attributes":[{"value":"/ Determines if this writer has an efficient [`poll_write_vectored`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62194,"byte_end":62264,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62269,"byte_end":62288,"line_start":167,"line_end":167,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62293,"byte_end":62296,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If a writer does not override the default [`poll_write_vectored`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62301,"byte_end":62370,"line_start":169,"line_end":169,"column_start":5,"column_end":74}},{"value":"/ implementation, code using it may want to avoid the method all together","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62375,"byte_end":62450,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ and coalesce writes into a single buffer for higher performance.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62455,"byte_end":62523,"line_start":171,"line_end":171,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62528,"byte_end":62531,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The default implementation returns `false`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62536,"byte_end":62583,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62588,"byte_end":62591,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`poll_write_vectored`]: AsyncWrite::poll_write_vectored","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":62596,"byte_end":62656,"line_start":175,"line_end":175,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69921,"byte_end":69928,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"ReadBuf","qualname":"::io::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253}],"decl_id":null,"docs":" A wrapper around a byte buffer that is incrementally filled and initialized.","sig":null,"attributes":[{"value":"/ A wrapper around a byte buffer that is incrementally filled and initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":68973,"byte_end":69053,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69054,"byte_end":69057,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a sort of \"double cursor\". It tracks three regions in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69058,"byte_end":69132,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ buffer: a region at the beginning of the buffer that has been logically","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69133,"byte_end":69208,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ filled with data, a region that has been initialized at some point but not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69209,"byte_end":69287,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ yet logically filled, and a region at the end that may be uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69288,"byte_end":69364,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ The filled region is guaranteed to be a subset of the initialized region.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69365,"byte_end":69442,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69443,"byte_end":69446,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In summary, the contents of the buffer can be visualized as:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69447,"byte_end":69511,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69512,"byte_end":69515,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```not_rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69516,"byte_end":69531,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/ [             capacity              ]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69532,"byte_end":69573,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ [ filled |         unfilled         ]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69574,"byte_end":69615,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ [    initialized    | uninitialized ]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69616,"byte_end":69657,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69658,"byte_end":69665,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69666,"byte_end":69669,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ It is undefined behavior to de-initialize any bytes from the uninitialized","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69670,"byte_end":69748,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ region, since it is merely unknown whether this region is uninitialized or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69749,"byte_end":69827,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ not, and if part of it turns out to be initialized, it must stay initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":69828,"byte_end":69909,"line_start":26,"line_end":26,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70130,"byte_end":70133,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuf>::new","value":"pub fn new(&'a mut [u8]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully initialized buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully initialized buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70044,"byte_end":70104,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70109,"byte_end":70118,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70579,"byte_end":70585,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"uninit","qualname":"<ReadBuf>::uninit","value":"pub fn uninit(&'a mut [MaybeUninit<u8>]) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ReadBuf` from a fully uninitialized buffer.","sig":null,"attributes":[{"value":"/ Creates a new `ReadBuf` from a fully uninitialized buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70398,"byte_end":70460,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70465,"byte_end":70468,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Use `assume_init` if part of the buffer is known to be already inintialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70473,"byte_end":70553,"line_start":48,"line_end":48,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70558,"byte_end":70567,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70813,"byte_end":70821,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"capacity","qualname":"<ReadBuf>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total capacity of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns the total capacity of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70742,"byte_end":70787,"line_start":58,"line_end":58,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70792,"byte_end":70801,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70967,"byte_end":70973,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"filled","qualname":"<ReadBuf>::filled","value":"pub fn filled(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the filled portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70874,"byte_end":70941,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70946,"byte_end":70955,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":71427,"byte_end":71437,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"filled_mut","qualname":"<ReadBuf>::filled_mut","value":"pub fn filled_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the filled portion of the buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the filled portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":71333,"byte_end":71401,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":71406,"byte_end":71415,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":71915,"byte_end":71919,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"take","qualname":"<ReadBuf>::take","value":"pub fn take(&mut Self, usize) -> ReadBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `ReadBuf` comprised of the unfilled section up to `n`.\n","sig":null,"attributes":[{"value":"/ Returns a new `ReadBuf` comprised of the unfilled section up to `n`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":71817,"byte_end":71889,"line_start":84,"line_end":84,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":71894,"byte_end":71903,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72325,"byte_end":72336,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"initialized","qualname":"<ReadBuf>::initialized","value":"pub fn initialized(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the initialized portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72177,"byte_end":72249,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72254,"byte_end":72257,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72262,"byte_end":72299,"line_start":94,"line_end":94,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72304,"byte_end":72313,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72848,"byte_end":72863,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"initialized_mut","qualname":"<ReadBuf>::initialized_mut","value":"pub fn initialized_mut(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the initialized portion of the buffer.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the initialized portion of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72699,"byte_end":72772,"line_start":104,"line_end":104,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72777,"byte_end":72780,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This includes the filled portion.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72785,"byte_end":72822,"line_start":106,"line_end":106,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":72827,"byte_end":72836,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74086,"byte_end":74095,"line_start":131,"line_end":131,"column_start":19,"column_end":28},"name":"inner_mut","qualname":"<ReadBuf>::inner_mut","value":"pub unsafe fn inner_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the entire buffer, without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the entire buffer, without ensuring that it has been fully","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73246,"byte_end":73339,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73344,"byte_end":73360,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73365,"byte_end":73368,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The elements between 0 and `self.filled().len()` are filled, and those between 0 and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73373,"byte_end":73461,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ `self.initialized().len()` are initialized (and so can be transmuted to a `&mut [u8]`).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73466,"byte_end":73557,"line_start":120,"line_end":120,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73562,"byte_end":73565,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ The caller of this method must ensure that these invariants are upheld. For example, if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73570,"byte_end":73665,"line_start":122,"line_end":122,"column_start":5,"column_end":100}},{"value":"/ caller initializes some of the uninitialized section of the buffer, it must call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73670,"byte_end":73754,"line_start":123,"line_end":123,"column_start":5,"column_end":89}},{"value":"/ [`assume_init`](Self::assume_init) with the number of bytes initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73759,"byte_end":73835,"line_start":124,"line_end":124,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73840,"byte_end":73843,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73848,"byte_end":73860,"line_start":126,"line_end":126,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73865,"byte_end":73868,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73873,"byte_end":73969,"line_start":128,"line_end":128,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":73974,"byte_end":74053,"line_start":129,"line_end":129,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74058,"byte_end":74067,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74541,"byte_end":74553,"line_start":143,"line_end":143,"column_start":19,"column_end":31},"name":"unfilled_mut","qualname":"<ReadBuf>::unfilled_mut","value":"pub unsafe fn unfilled_mut(&mut Self) -> &mut [MaybeUninit<u8>]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully\n initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer without ensuring that it has been fully","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74163,"byte_end":74269,"line_start":135,"line_end":135,"column_start":5,"column_end":111}},{"value":"/ initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74274,"byte_end":74290,"line_start":136,"line_end":136,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74295,"byte_end":74298,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74303,"byte_end":74315,"line_start":138,"line_end":138,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74320,"byte_end":74323,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ The caller must not de-initialize portions of the buffer that have already been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74328,"byte_end":74424,"line_start":140,"line_end":140,"column_start":5,"column_end":101}},{"value":"/ This includes any bytes in the region marked as uninitialized by `ReadBuf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74429,"byte_end":74508,"line_start":141,"line_end":141,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74513,"byte_end":74522,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74915,"byte_end":74934,"line_start":152,"line_end":152,"column_start":12,"column_end":31},"name":"initialize_unfilled","qualname":"<ReadBuf>::initialize_unfilled","value":"pub fn initialize_unfilled(&mut Self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the unfilled part of the buffer, ensuring it is fully initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74641,"byte_end":74742,"line_start":147,"line_end":147,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74747,"byte_end":74750,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Since `ReadBuf` tracks the region of the buffer that has been initialized, this is effectively \"free\" after","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74755,"byte_end":74866,"line_start":149,"line_end":149,"column_start":5,"column_end":116}},{"value":"/ the first use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74871,"byte_end":74889,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":74894,"byte_end":74903,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75272,"byte_end":75294,"line_start":163,"line_end":163,"column_start":12,"column_end":34},"name":"initialize_unfilled_to","qualname":"<ReadBuf>::initialize_unfilled_to","value":"pub fn initialize_unfilled_to(&mut Self, usize) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is\n fully initialized.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the first `n` bytes of the unfilled part of the buffer, ensuring it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75026,"byte_end":75131,"line_start":156,"line_end":156,"column_start":5,"column_end":110}},{"value":"/ fully initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75136,"byte_end":75158,"line_start":157,"line_end":157,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75163,"byte_end":75166,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75171,"byte_end":75183,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75188,"byte_end":75191,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `n`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75196,"byte_end":75246,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":75251,"byte_end":75260,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76139,"byte_end":76148,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"remaining","qualname":"<ReadBuf>::remaining","value":"pub fn remaining(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes at the end of the slice that have not yet been filled.\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes at the end of the slice that have not yet been filled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76027,"byte_end":76113,"line_start":184,"line_end":184,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76118,"byte_end":76127,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76415,"byte_end":76420,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"clear","qualname":"<ReadBuf>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, resetting the filled region to empty.","sig":null,"attributes":[{"value":"/ Clears the buffer, resetting the filled region to empty.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76216,"byte_end":76276,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76281,"byte_end":76284,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed, and the contents of the buffer are not modified.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76289,"byte_end":76389,"line_start":192,"line_end":192,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76394,"byte_end":76403,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76749,"byte_end":76756,"line_start":206,"line_end":206,"column_start":12,"column_end":19},"name":"advance","qualname":"<ReadBuf>::advance","value":"pub fn advance(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Advances the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Advances the size of the filled region of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76470,"byte_end":76527,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76532,"byte_end":76535,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76540,"byte_end":76591,"line_start":200,"line_end":200,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76596,"byte_end":76599,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76604,"byte_end":76616,"line_start":202,"line_end":202,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76621,"byte_end":76624,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the initialized region.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76629,"byte_end":76723,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76728,"byte_end":76737,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77366,"byte_end":77376,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"set_filled","qualname":"<ReadBuf>::set_filled","value":"pub fn set_filled(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the filled region of the buffer.","sig":null,"attributes":[{"value":"/ Sets the size of the filled region of the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76893,"byte_end":76946,"line_start":211,"line_end":211,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76951,"byte_end":76954,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The number of initialized bytes is not changed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":76959,"byte_end":77010,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77015,"byte_end":77018,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Note that this can be used to *shrink* the filled region of the buffer in addition to growing it (for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77023,"byte_end":77128,"line_start":215,"line_end":215,"column_start":5,"column_end":110}},{"value":"/ example, by a `AsyncRead` implementation that compresses data in-place).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77133,"byte_end":77209,"line_start":216,"line_end":216,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77214,"byte_end":77217,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77222,"byte_end":77234,"line_start":218,"line_end":218,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77239,"byte_end":77242,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ Panics if the filled region of the buffer would become larger than the intialized region.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77247,"byte_end":77340,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77345,"byte_end":77354,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77980,"byte_end":77991,"line_start":239,"line_end":239,"column_start":19,"column_end":30},"name":"assume_init","qualname":"<ReadBuf>::assume_init","value":"pub unsafe fn assume_init(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Asserts that the first `n` unfilled bytes of the buffer are initialized.","sig":null,"attributes":[{"value":"/ Asserts that the first `n` unfilled bytes of the buffer are initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77560,"byte_end":77636,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77641,"byte_end":77644,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ `ReadBuf` assumes that bytes are never de-initialized, so this method does nothing when called with fewer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77649,"byte_end":77758,"line_start":232,"line_end":232,"column_start":5,"column_end":114}},{"value":"/ bytes than are already known to be initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77763,"byte_end":77814,"line_start":233,"line_end":233,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77819,"byte_end":77822,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77827,"byte_end":77839,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77844,"byte_end":77847,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure that `n` unfilled bytes of the buffer have already been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77852,"byte_end":77947,"line_start":237,"line_end":237,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":77952,"byte_end":77961,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78371,"byte_end":78380,"line_start":252,"line_end":252,"column_start":12,"column_end":21},"name":"put_slice","qualname":"<ReadBuf>::put_slice","value":"pub fn put_slice(&mut Self, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Appends data to the buffer, advancing the written position and possibly also the initialized position.","sig":null,"attributes":[{"value":"/ Appends data to the buffer, advancing the written position and possibly also the initialized position.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78143,"byte_end":78249,"line_start":246,"line_end":246,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78254,"byte_end":78257,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78262,"byte_end":78274,"line_start":248,"line_end":248,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78279,"byte_end":78282,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Panics if `self.remaining()` is less than `buf.len()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78287,"byte_end":78345,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":78350,"byte_end":78359,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1000},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123491,"byte_end":10123499,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"Interest","qualname":"::io::driver::interest::Interest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Readiness event interest","sig":null,"attributes":[{"value":"/ Readiness event interest","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123247,"byte_end":10123275,"line_start":8,"line_end":8,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123276,"byte_end":10123279,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Specifies the readiness events the caller is interested in when awaiting on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123280,"byte_end":10123359,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ I/O resource readiness states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123360,"byte_end":10123394,"line_start":11,"line_end":11,"column_start":1,"column_end":35}}]},{"kind":"Const","id":{"krate":0,"index":756},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123651,"byte_end":10123659,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::interest::Interest::READABLE","value":"Interest","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Interest in all readable events.","sig":null,"attributes":[{"value":"/ Interest in all readable events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123537,"byte_end":10123573,"line_start":17,"line_end":17,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123578,"byte_end":10123581,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Readable interest includes read-closed events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123586,"byte_end":10123636,"line_start":19,"line_end":19,"column_start":5,"column_end":55}}]},{"kind":"Const","id":{"krate":0,"index":757},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123826,"byte_end":10123834,"line_start":25,"line_end":25,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::interest::Interest::WRITABLE","value":"Interest","parent":{"krate":0,"index":755},"children":[],"decl_id":null,"docs":" Interest in all writable events","sig":null,"attributes":[{"value":"/ Interest in all writable events","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123712,"byte_end":10123747,"line_start":22,"line_end":22,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123752,"byte_end":10123755,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Writable interest includes write-closed events.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123760,"byte_end":10123811,"line_start":24,"line_end":24,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124270,"byte_end":10124281,"line_start":40,"line_end":40,"column_start":18,"column_end":29},"name":"is_readable","qualname":"<Interest>::is_readable","value":"pub const fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes readable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes readable interest.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123887,"byte_end":10123944,"line_start":27,"line_end":27,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123949,"byte_end":10123952,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123957,"byte_end":10123971,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123976,"byte_end":10123979,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123984,"byte_end":10123991,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123996,"byte_end":10124024,"line_start":32,"line_end":32,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124029,"byte_end":10124032,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert!(Interest::READABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124037,"byte_end":10124083,"line_start":34,"line_end":34,"column_start":5,"column_end":51}},{"value":"/ assert!(!Interest::WRITABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124088,"byte_end":10124135,"line_start":35,"line_end":35,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124140,"byte_end":10124143,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124148,"byte_end":10124203,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124208,"byte_end":10124240,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124245,"byte_end":10124252,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124721,"byte_end":10124732,"line_start":57,"line_end":57,"column_start":18,"column_end":29},"name":"is_writable","qualname":"<Interest>::is_writable","value":"pub const fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the value includes writable interest.","sig":null,"attributes":[{"value":"/ Returns true if the value includes writable interest.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124338,"byte_end":10124395,"line_start":44,"line_end":44,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124400,"byte_end":10124403,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124408,"byte_end":10124422,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124427,"byte_end":10124430,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124435,"byte_end":10124442,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124447,"byte_end":10124475,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124480,"byte_end":10124483,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ assert!(!Interest::READABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124488,"byte_end":10124535,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/ assert!(Interest::WRITABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124540,"byte_end":10124586,"line_start":52,"line_end":52,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124591,"byte_end":10124594,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let both = Interest::READABLE | Interest::WRITABLE;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124599,"byte_end":10124654,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/ assert!(both.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124659,"byte_end":10124691,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124696,"byte_end":10124703,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125150,"byte_end":10125153,"line_start":74,"line_end":74,"column_start":18,"column_end":21},"name":"add","qualname":"<Interest>::add","value":"pub const fn add(Self, Interest) -> Interest","parent":null,"children":[],"decl_id":null,"docs":" Add together two `Interst` values.","sig":null,"attributes":[{"value":"/ Add together two `Interst` values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124789,"byte_end":10124827,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124832,"byte_end":10124835,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This function works from a `const` context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124840,"byte_end":10124887,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124892,"byte_end":10124895,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124900,"byte_end":10124914,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124919,"byte_end":10124922,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124927,"byte_end":10124934,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124939,"byte_end":10124967,"line_start":68,"line_end":68,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124972,"byte_end":10124975,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ const BOTH: Interest = Interest::READABLE.add(Interest::WRITABLE);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10124980,"byte_end":10125050,"line_start":70,"line_end":70,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125055,"byte_end":10125058,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ assert!(BOTH.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125063,"byte_end":10125095,"line_start":72,"line_end":72,"column_start":5,"column_end":37}},{"value":"/ assert!(BOTH.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125100,"byte_end":10125132,"line_start":73,"line_end":73,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1013},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126531,"byte_end":10126536,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Ready","qualname":"::io::driver::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Describes the readiness state of an I/O resources.","sig":null,"attributes":[{"value":"/ Describes the readiness state of an I/O resources.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126296,"byte_end":10126350,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126351,"byte_end":10126354,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ `Ready` tracks which operation an I/O resource is ready to perform.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126355,"byte_end":10126426,"line_start":13,"line_end":13,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":779},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126612,"byte_end":10126617,"line_start":20,"line_end":20,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::io::driver::ready::Ready::EMPTY","value":"Ready","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns the empty `Ready` set.\n","sig":null,"attributes":[{"value":"/ Returns the empty `Ready` set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126563,"byte_end":10126597,"line_start":19,"line_end":19,"column_start":5,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126711,"byte_end":10126719,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"name":"READABLE","qualname":"::io::driver::ready::Ready::READABLE","value":"Ready","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readable readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126642,"byte_end":10126696,"line_start":22,"line_end":22,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":781},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126820,"byte_end":10126828,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"WRITABLE","qualname":"::io::driver::ready::Ready::WRITABLE","value":"Ready","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing writable readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing writable readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126751,"byte_end":10126805,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"Const","id":{"krate":0,"index":782},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126932,"byte_end":10126943,"line_start":29,"line_end":29,"column_start":15,"column_end":26},"name":"READ_CLOSED","qualname":"::io::driver::ready::Ready::READ_CLOSED","value":"Ready","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing read closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing read closed readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126860,"byte_end":10126917,"line_start":28,"line_end":28,"column_start":5,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":783},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127051,"byte_end":10127063,"line_start":32,"line_end":32,"column_start":15,"column_end":27},"name":"WRITE_CLOSED","qualname":"::io::driver::ready::Ready::WRITE_CLOSED","value":"Ready","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing write closed readiness.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing write closed readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126978,"byte_end":10127036,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":784},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127178,"byte_end":10127181,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"ALL","qualname":"::io::driver::ready::Ready::ALL","value":"Ready","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Returns a `Ready` representing readiness for all operations.\n","sig":null,"attributes":[{"value":"/ Returns a `Ready` representing readiness for all operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127099,"byte_end":10127163,"line_start":34,"line_end":34,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128038,"byte_end":10128046,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ready>::is_empty","value":"pub fn is_empty(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if `Ready` is the empty set","sig":null,"attributes":[{"value":"/ Returns true if `Ready` is the empty set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127797,"byte_end":10127841,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127846,"byte_end":10127849,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127854,"byte_end":10127868,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127873,"byte_end":10127876,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127881,"byte_end":10127888,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127893,"byte_end":10127918,"line_start":65,"line_end":65,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127923,"byte_end":10127926,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ assert!(Ready::EMPTY.is_empty());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127931,"byte_end":10127968,"line_start":67,"line_end":67,"column_start":5,"column_end":42}},{"value":"/ assert!(!Ready::READABLE.is_empty());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10127973,"byte_end":10128014,"line_start":68,"line_end":68,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128019,"byte_end":10128026,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128457,"byte_end":10128468,"line_start":86,"line_end":86,"column_start":12,"column_end":23},"name":"is_readable","qualname":"<Ready>::is_readable","value":"pub fn is_readable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes `readable`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes `readable`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128103,"byte_end":10128154,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128159,"byte_end":10128162,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128167,"byte_end":10128181,"line_start":76,"line_end":76,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128186,"byte_end":10128189,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128194,"byte_end":10128201,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128206,"byte_end":10128231,"line_start":79,"line_end":79,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128236,"byte_end":10128239,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128244,"byte_end":10128285,"line_start":81,"line_end":81,"column_start":5,"column_end":46}},{"value":"/ assert!(Ready::READABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128290,"byte_end":10128333,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::READ_CLOSED.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128338,"byte_end":10128384,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/ assert!(!Ready::WRITABLE.is_readable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128389,"byte_end":10128433,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128438,"byte_end":10128445,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128925,"byte_end":10128936,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"is_writable","qualname":"<Ready>::is_writable","value":"pub fn is_writable(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes writable `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes writable `readiness`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128560,"byte_end":10128621,"line_start":90,"line_end":90,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128626,"byte_end":10128629,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128634,"byte_end":10128648,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128653,"byte_end":10128656,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128661,"byte_end":10128668,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128673,"byte_end":10128698,"line_start":95,"line_end":95,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128703,"byte_end":10128706,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128711,"byte_end":10128752,"line_start":97,"line_end":97,"column_start":5,"column_end":46}},{"value":"/ assert!(!Ready::READABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128757,"byte_end":10128801,"line_start":98,"line_end":98,"column_start":5,"column_end":49}},{"value":"/ assert!(Ready::WRITABLE.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128806,"byte_end":10128849,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_writable());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128854,"byte_end":10128901,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10128906,"byte_end":10128913,"line_start":101,"line_end":101,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129357,"byte_end":10129371,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"is_read_closed","qualname":"<Ready>::is_read_closed","value":"pub fn is_read_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes read-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes read-closed `readiness`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129029,"byte_end":10129093,"line_start":106,"line_end":106,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129098,"byte_end":10129101,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129106,"byte_end":10129120,"line_start":108,"line_end":108,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129125,"byte_end":10129128,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129133,"byte_end":10129140,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129145,"byte_end":10129170,"line_start":111,"line_end":111,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129175,"byte_end":10129178,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_read_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129183,"byte_end":10129227,"line_start":113,"line_end":113,"column_start":5,"column_end":49}},{"value":"/ assert!(!Ready::READABLE.is_read_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129232,"byte_end":10129279,"line_start":114,"line_end":114,"column_start":5,"column_end":52}},{"value":"/ assert!(Ready::READ_CLOSED.is_read_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129284,"byte_end":10129333,"line_start":115,"line_end":115,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129338,"byte_end":10129345,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129774,"byte_end":10129789,"line_start":132,"line_end":132,"column_start":12,"column_end":27},"name":"is_write_closed","qualname":"<Ready>::is_write_closed","value":"pub fn is_write_closed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the value includes write-closed `readiness`","sig":null,"attributes":[{"value":"/ Returns `true` if the value includes write-closed `readiness`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129441,"byte_end":10129506,"line_start":121,"line_end":121,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129511,"byte_end":10129514,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129519,"byte_end":10129533,"line_start":123,"line_end":123,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129538,"byte_end":10129541,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129546,"byte_end":10129553,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use tokio::io::Ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129558,"byte_end":10129583,"line_start":126,"line_end":126,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129588,"byte_end":10129591,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ assert!(!Ready::EMPTY.is_write_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129596,"byte_end":10129641,"line_start":128,"line_end":128,"column_start":5,"column_end":50}},{"value":"/ assert!(!Ready::WRITABLE.is_write_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129646,"byte_end":10129694,"line_start":129,"line_end":129,"column_start":5,"column_end":53}},{"value":"/ assert!(Ready::WRITE_CLOSED.is_write_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129699,"byte_end":10129750,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10129755,"byte_end":10129762,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173827,"byte_end":10173834,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"AsyncFd","qualname":"::io::async_fd::AsyncFd","value":"AsyncFd {  }","parent":null,"children":[{"krate":0,"index":1176},{"krate":0,"index":1177}],"decl_id":null,"docs":" Associates an IO object backed by a Unix file descriptor with the tokio\n reactor, allowing for readiness to be polled. The file descriptor must be of\n a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,\n `kqueue`, etc), such as a network socket or pipe, and the file descriptor\n must have the nonblocking mode set to true.","sig":null,"attributes":[{"value":"/ Associates an IO object backed by a Unix file descriptor with the tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168235,"byte_end":10168310,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ reactor, allowing for readiness to be polled. The file descriptor must be of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168311,"byte_end":10168391,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ a type that can be used with the OS polling facilities (ie, `poll`, `epoll`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168392,"byte_end":10168472,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ `kqueue`, etc), such as a network socket or pipe, and the file descriptor","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168473,"byte_end":10168550,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ must have the nonblocking mode set to true.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168551,"byte_end":10168598,"line_start":12,"line_end":12,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168599,"byte_end":10168602,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Creating an AsyncFd registers the file descriptor with the current tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168603,"byte_end":10168679,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ Reactor, allowing you to directly await the file descriptor being readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168680,"byte_end":10168758,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ or writable. Once registered, the file descriptor remains registered until","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168759,"byte_end":10168837,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ the AsyncFd is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168838,"byte_end":10168865,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168866,"byte_end":10168869,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The AsyncFd takes ownership of an arbitrary object to represent the IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168870,"byte_end":10168944,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ object. It is intended that this object will handle closing the file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10168945,"byte_end":10169017,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ descriptor when it is dropped, avoiding resource leaks and ensuring that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169018,"byte_end":10169098,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ AsyncFd can clean up the registration before closing the file descriptor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169099,"byte_end":10169176,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ The [`AsyncFd::into_inner`] function can be used to extract the inner object","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169177,"byte_end":10169257,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ to retake control from the tokio IO reactor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169258,"byte_end":10169306,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169307,"byte_end":10169310,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The inner object is required to implement [`AsRawFd`]. This file descriptor","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169311,"byte_end":10169390,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ must not change while [`AsyncFd`] owns the inner object, i.e. the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169391,"byte_end":10169460,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/ [`AsRawFd::as_raw_fd`] method on the inner type must always return the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169461,"byte_end":10169540,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ file descriptor when called multiple times. Failure to uphold this results","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169541,"byte_end":10169619,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ in unspecified behavior in the IO driver, which may include breaking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169620,"byte_end":10169692,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ notifications for other sockets/etc.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169693,"byte_end":10169733,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169734,"byte_end":10169737,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Polling for readiness is done by calling the async functions [`readable`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169738,"byte_end":10169815,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ and [`writable`]. These functions complete when the associated readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169816,"byte_end":10169892,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ condition is observed. Any number of tasks can query the same `AsyncFd` in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169893,"byte_end":10169971,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ parallel, on the same or different conditions.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10169972,"byte_end":10170022,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170023,"byte_end":10170026,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ On some platforms, the readiness detecting mechanism relies on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170027,"byte_end":10170093,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/ edge-triggered notifications. This means that the OS will only notify Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170094,"byte_end":10170173,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ when the file descriptor transitions from not-ready to ready. For this to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170174,"byte_end":10170251,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ work you should first try to read or write and only poll for readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170252,"byte_end":10170326,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ if that fails with an error of [`std::io::ErrorKind::WouldBlock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170327,"byte_end":10170397,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170398,"byte_end":10170401,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Tokio internally tracks when it has received a ready notification, and when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170402,"byte_end":10170481,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ readiness checking functions like [`readable`] and [`writable`] are called,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170482,"byte_end":10170561,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ if the readiness flag is set, these async functions will complete","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170562,"byte_end":10170631,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/ immediately. This however does mean that it is critical to ensure that this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170632,"byte_end":10170711,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ ready flag is cleared when (and only when) the file descriptor ceases to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170712,"byte_end":10170791,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ ready. The [`AsyncFdReadyGuard`] returned from readiness checking functions","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170792,"byte_end":10170871,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ serves this function; after calling a readiness-checking async function,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170872,"byte_end":10170948,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ you must use this [`AsyncFdReadyGuard`] to signal to tokio whether the file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10170949,"byte_end":10171028,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ descriptor is no longer in a ready state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171029,"byte_end":10171074,"line_start":52,"line_end":52,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171075,"byte_end":10171078,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Use with to a poll-based API","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171079,"byte_end":10171114,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171115,"byte_end":10171118,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ In some cases it may be desirable to use `AsyncFd` from APIs similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171119,"byte_end":10171194,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ [`TcpStream::poll_read_ready`]. The [`AsyncFd::poll_read_ready`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171195,"byte_end":10171267,"line_start":57,"line_end":57,"column_start":1,"column_end":73}},{"value":"/ [`AsyncFd::poll_write_ready`] functions are provided for this purpose.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171268,"byte_end":10171342,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ Because these functions don't create a future to hold their state, they have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171343,"byte_end":10171423,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ the limitation that only one task can wait on each direction (read or write)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171424,"byte_end":10171504,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ at a time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171505,"byte_end":10171519,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171520,"byte_end":10171523,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171524,"byte_end":10171538,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171539,"byte_end":10171542,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This example shows how to turn [`std::net::TcpStream`] asynchronous using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171543,"byte_end":10171620,"line_start":65,"line_end":65,"column_start":1,"column_end":78}},{"value":"/ `AsyncFd`.  It implements `read` as an async fn, and `AsyncWrite` as a trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171621,"byte_end":10171701,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ to show how to implement both approaches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171702,"byte_end":10171747,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171748,"byte_end":10171751,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171752,"byte_end":10171765,"line_start":69,"line_end":69,"column_start":1,"column_end":14}},{"value":"/ use futures::ready;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171766,"byte_end":10171789,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/ use std::io::{self, Read, Write};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171790,"byte_end":10171827,"line_start":71,"line_end":71,"column_start":1,"column_end":38}},{"value":"/ use std::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171828,"byte_end":10171856,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171857,"byte_end":10171879,"line_start":73,"line_end":73,"column_start":1,"column_end":23}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171880,"byte_end":10171915,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use tokio::io::AsyncWrite;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171916,"byte_end":10171946,"line_start":75,"line_end":75,"column_start":1,"column_end":31}},{"value":"/ use tokio::io::unix::AsyncFd;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171947,"byte_end":10171980,"line_start":76,"line_end":76,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171981,"byte_end":10171984,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ pub struct AsyncTcpStream {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10171985,"byte_end":10172016,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"/     inner: AsyncFd<TcpStream>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172017,"byte_end":10172051,"line_start":79,"line_end":79,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172052,"byte_end":10172057,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172058,"byte_end":10172061,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl AsyncTcpStream {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172062,"byte_end":10172087,"line_start":82,"line_end":82,"column_start":1,"column_end":26}},{"value":"/     pub fn new(tcp: TcpStream) -> io::Result<Self> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172088,"byte_end":10172144,"line_start":83,"line_end":83,"column_start":1,"column_end":57}},{"value":"/         Ok(Self {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172145,"byte_end":10172166,"line_start":84,"line_end":84,"column_start":1,"column_end":22}},{"value":"/             inner: AsyncFd::new(tcp)?,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172167,"byte_end":10172209,"line_start":85,"line_end":85,"column_start":1,"column_end":43}},{"value":"/         })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172210,"byte_end":10172224,"line_start":86,"line_end":86,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172225,"byte_end":10172234,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172235,"byte_end":10172238,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/     pub async fn read(&self, out: &mut [u8]) -> io::Result<usize> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172239,"byte_end":10172310,"line_start":89,"line_end":89,"column_start":1,"column_end":72}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172311,"byte_end":10172329,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/             let mut guard = self.inner.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172330,"byte_end":10172391,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172392,"byte_end":10172395,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().read(out)) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172396,"byte_end":10172467,"line_start":93,"line_end":93,"column_start":1,"column_end":72}},{"value":"/                 Ok(result) => return result,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172468,"byte_end":10172516,"line_start":94,"line_end":94,"column_start":1,"column_end":49}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172517,"byte_end":10172567,"line_start":95,"line_end":95,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172568,"byte_end":10172585,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172586,"byte_end":10172599,"line_start":97,"line_end":97,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172600,"byte_end":10172609,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172610,"byte_end":10172615,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172616,"byte_end":10172619,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ impl AsyncWrite for AsyncTcpStream {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172620,"byte_end":10172660,"line_start":101,"line_end":101,"column_start":1,"column_end":41}},{"value":"/     fn poll_write(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172661,"byte_end":10172683,"line_start":102,"line_end":102,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172684,"byte_end":10172717,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172718,"byte_end":10172751,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/         buf: &[u8]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172752,"byte_end":10172774,"line_start":105,"line_end":105,"column_start":1,"column_end":23}},{"value":"/     ) -> Poll<io::Result<usize>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172775,"byte_end":10172813,"line_start":106,"line_end":106,"column_start":1,"column_end":39}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172814,"byte_end":10172832,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/             let mut guard = ready!(self.inner.poll_write_ready(cx))?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172833,"byte_end":10172906,"line_start":108,"line_end":108,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172907,"byte_end":10172910,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/             match guard.try_io(|inner| inner.get_ref().write(buf)) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172911,"byte_end":10172983,"line_start":110,"line_end":110,"column_start":1,"column_end":73}},{"value":"/                 Ok(result) => return Poll::Ready(result),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10172984,"byte_end":10173045,"line_start":111,"line_end":111,"column_start":1,"column_end":62}},{"value":"/                 Err(_would_block) => continue,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173046,"byte_end":10173096,"line_start":112,"line_end":112,"column_start":1,"column_end":51}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173097,"byte_end":10173114,"line_start":113,"line_end":113,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173115,"byte_end":10173128,"line_start":114,"line_end":114,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173129,"byte_end":10173138,"line_start":115,"line_end":115,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173139,"byte_end":10173142,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     fn poll_flush(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173143,"byte_end":10173165,"line_start":117,"line_end":117,"column_start":1,"column_end":23}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173166,"byte_end":10173199,"line_start":118,"line_end":118,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173200,"byte_end":10173233,"line_start":119,"line_end":119,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173234,"byte_end":10173269,"line_start":120,"line_end":120,"column_start":1,"column_end":36}},{"value":"/         // tcp flush is a no-op","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173270,"byte_end":10173305,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173306,"byte_end":10173337,"line_start":122,"line_end":122,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173338,"byte_end":10173347,"line_start":123,"line_end":123,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173348,"byte_end":10173351,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/     fn poll_shutdown(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173352,"byte_end":10173377,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/         self: Pin<&mut Self>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173378,"byte_end":10173411,"line_start":126,"line_end":126,"column_start":1,"column_end":34}},{"value":"/         cx: &mut Context<'_>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173412,"byte_end":10173445,"line_start":127,"line_end":127,"column_start":1,"column_end":34}},{"value":"/     ) -> Poll<io::Result<()>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173446,"byte_end":10173481,"line_start":128,"line_end":128,"column_start":1,"column_end":36}},{"value":"/         self.inner.get_ref().shutdown(std::net::Shutdown::Write)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173482,"byte_end":10173552,"line_start":129,"line_end":129,"column_start":1,"column_end":71}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173553,"byte_end":10173584,"line_start":130,"line_end":130,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173585,"byte_end":10173594,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173595,"byte_end":10173600,"line_start":132,"line_end":132,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173601,"byte_end":10173608,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173609,"byte_end":10173612,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173613,"byte_end":10173652,"line_start":135,"line_end":135,"column_start":1,"column_end":40}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173653,"byte_end":10173692,"line_start":136,"line_end":136,"column_start":1,"column_end":40}},{"value":"/ [`AsyncFdReadyGuard`]: struct@self::AsyncFdReadyGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173693,"byte_end":10173750,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/ [`TcpStream::poll_read_ready`]: struct@crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173751,"byte_end":10173815,"line_start":138,"line_end":138,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174342,"byte_end":10174359,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"AsyncFdReadyGuard","qualname":"::io::async_fd::AsyncFdReadyGuard","value":"AsyncFdReadyGuard {  }","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173906,"byte_end":10173984,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10173985,"byte_end":10174065,"line_start":145,"line_end":145,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174066,"byte_end":10174138,"line_start":146,"line_end":146,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174139,"byte_end":10174142,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This type exposes an immutable reference to the underlying IO object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174143,"byte_end":10174216,"line_start":148,"line_end":148,"column_start":1,"column_end":74}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174217,"byte_end":10174330,"line_start":149,"line_end":149,"column_start":1,"column_end":114}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174875,"byte_end":10174895,"line_start":161,"line_end":161,"column_start":12,"column_end":32},"name":"AsyncFdReadyMutGuard","qualname":"::io::async_fd::AsyncFdReadyMutGuard","value":"AsyncFdReadyMutGuard {  }","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187}],"decl_id":null,"docs":" Represents an IO-ready event detected on a particular file descriptor that\n has not yet been acknowledged. This is a `must_use` structure to help ensure\n that you do not forget to explicitly clear (or not clear) the event.","sig":null,"attributes":[{"value":"/ Represents an IO-ready event detected on a particular file descriptor that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174442,"byte_end":10174520,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ has not yet been acknowledged. This is a `must_use` structure to help ensure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174521,"byte_end":10174601,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ that you do not forget to explicitly clear (or not clear) the event.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174602,"byte_end":10174674,"line_start":157,"line_end":157,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174675,"byte_end":10174678,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ This type exposes a mutable reference to the underlying IO object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174679,"byte_end":10174749,"line_start":159,"line_end":159,"column_start":1,"column_end":71}},{"value":"must_use =\n  \"You must explicitly choose whether to clear the readiness state by calling a method on ReadyGuard\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10174750,"byte_end":10174863,"line_start":160,"line_end":160,"column_start":1,"column_end":114}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175369,"byte_end":10175372,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<AsyncFd<T>>::new","value":"pub fn new(T) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates an AsyncFd backed by (and taking ownership of) an object\n implementing [`AsRawFd`]. The backing file descriptor is cached at the\n time of creation.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175092,"byte_end":10175101,"line_start":169,"line_end":169,"column_start":5,"column_end":14}},{"value":"/ Creates an AsyncFd backed by (and taking ownership of) an object","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175106,"byte_end":10175174,"line_start":170,"line_end":170,"column_start":5,"column_end":73}},{"value":"/ implementing [`AsRawFd`]. The backing file descriptor is cached at the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175179,"byte_end":10175253,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ time of creation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175258,"byte_end":10175279,"line_start":172,"line_end":172,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175284,"byte_end":10175287,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method must be called in the context of a tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175292,"byte_end":10175357,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175697,"byte_end":10175710,"line_start":185,"line_end":185,"column_start":12,"column_end":25},"name":"with_interest","qualname":"<AsyncFd<T>>::with_interest","value":"pub fn with_interest(T, Interest) -> io::Result<Self> where T: AsRawFd","parent":null,"children":[],"decl_id":null,"docs":" Creates new instance as `new` with additional ability to customize interest,\n allowing to specify whether file descriptor will be polled for read, write or both.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175499,"byte_end":10175508,"line_start":182,"line_end":182,"column_start":5,"column_end":14}},{"value":"/ Creates new instance as `new` with additional ability to customize interest,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175513,"byte_end":10175593,"line_start":183,"line_end":183,"column_start":5,"column_end":85}},{"value":"/ allowing to specify whether file descriptor will be polled for read, write or both.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175598,"byte_end":10175685,"line_start":184,"line_end":184,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176388,"byte_end":10176395,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AsyncFd<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176290,"byte_end":10176362,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176367,"byte_end":10176376,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176558,"byte_end":10176565,"line_start":216,"line_end":216,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AsyncFd<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the backing object of this [`AsyncFd`]\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the backing object of this [`AsyncFd`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176459,"byte_end":10176532,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176537,"byte_end":10176546,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176990,"byte_end":10177000,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AsyncFd<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Deregisters this file descriptor and returns ownership of the backing\n object.\n","sig":null,"attributes":[{"value":"/ Deregisters this file descriptor and returns ownership of the backing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176889,"byte_end":10176962,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10176967,"byte_end":10176978,"line_start":231,"line_end":231,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178527,"byte_end":10178542,"line_start":263,"line_end":263,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<AsyncFd<T>>::poll_read_ready","value":"pub fn poll_read_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177064,"byte_end":10177093,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177098,"byte_end":10177101,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177106,"byte_end":10177180,"line_start":238,"line_end":238,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177185,"byte_end":10177264,"line_start":239,"line_end":239,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177269,"byte_end":10177347,"line_start":240,"line_end":240,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177352,"byte_end":10177355,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177360,"byte_end":10177417,"line_start":242,"line_end":242,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177422,"byte_end":10177500,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177505,"byte_end":10177569,"line_start":244,"line_end":244,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177574,"byte_end":10177636,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177641,"byte_end":10177644,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177649,"byte_end":10177722,"line_start":247,"line_end":247,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177727,"byte_end":10177802,"line_start":248,"line_end":248,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177807,"byte_end":10177875,"line_start":249,"line_end":249,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177880,"byte_end":10177883,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177888,"byte_end":10177956,"line_start":251,"line_end":251,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10177961,"byte_end":10178029,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178034,"byte_end":10178103,"line_start":253,"line_end":253,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178108,"byte_end":10178134,"line_start":254,"line_end":254,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178139,"byte_end":10178142,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178147,"byte_end":10178200,"line_start":256,"line_end":256,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178205,"byte_end":10178266,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178271,"byte_end":10178326,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178331,"byte_end":10178370,"line_start":259,"line_end":259,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178375,"byte_end":10178417,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178422,"byte_end":10178460,"line_start":261,"line_end":261,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178465,"byte_end":10178515,"line_start":262,"line_end":262,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180209,"byte_end":10180228,"line_start":301,"line_end":301,"column_start":12,"column_end":31},"name":"poll_read_ready_mut","qualname":"<AsyncFd<T>>::poll_read_ready_mut","value":"pub fn poll_read_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178848,"byte_end":10178877,"line_start":276,"line_end":276,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178882,"byte_end":10178885,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for reading, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178890,"byte_end":10178964,"line_start":278,"line_end":278,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10178969,"byte_end":10179048,"line_start":279,"line_end":279,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for reading, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179053,"byte_end":10179131,"line_start":280,"line_end":280,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179136,"byte_end":10179139,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_read_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179144,"byte_end":10179201,"line_start":282,"line_end":282,"column_start":5,"column_end":62}},{"value":"/ [`poll_read_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179206,"byte_end":10179284,"line_start":283,"line_end":283,"column_start":5,"column_end":83}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179289,"byte_end":10179353,"line_start":284,"line_end":284,"column_start":5,"column_end":69}},{"value":"/ [`poll_write_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179358,"byte_end":10179420,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179425,"byte_end":10179428,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179433,"byte_end":10179506,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179511,"byte_end":10179586,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179591,"byte_end":10179659,"line_start":289,"line_end":289,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179664,"byte_end":10179667,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179672,"byte_end":10179747,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179752,"byte_end":10179816,"line_start":292,"line_end":292,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179821,"byte_end":10179824,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179829,"byte_end":10179882,"line_start":294,"line_end":294,"column_start":5,"column_end":58}},{"value":"/ [`poll_read_ready_mut`]: method@Self::poll_read_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179887,"byte_end":10179948,"line_start":295,"line_end":295,"column_start":5,"column_end":66}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10179953,"byte_end":10180008,"line_start":296,"line_end":296,"column_start":5,"column_end":60}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180013,"byte_end":10180052,"line_start":297,"line_end":297,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180057,"byte_end":10180099,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180104,"byte_end":10180142,"line_start":299,"line_end":299,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180147,"byte_end":10180197,"line_start":300,"line_end":300,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182011,"byte_end":10182027,"line_start":341,"line_end":341,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<AsyncFd<T>>::poll_write_ready","value":"pub fn poll_write_ready<'a>(&'a Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180544,"byte_end":10180574,"line_start":314,"line_end":314,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180579,"byte_end":10180582,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180587,"byte_end":10180661,"line_start":316,"line_end":316,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180666,"byte_end":10180745,"line_start":317,"line_end":317,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180750,"byte_end":10180828,"line_start":318,"line_end":318,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180833,"byte_end":10180836,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180841,"byte_end":10180899,"line_start":320,"line_end":320,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180904,"byte_end":10180983,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10180988,"byte_end":10181052,"line_start":322,"line_end":322,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181057,"byte_end":10181118,"line_start":323,"line_end":323,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181123,"byte_end":10181126,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181131,"byte_end":10181204,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181209,"byte_end":10181284,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181289,"byte_end":10181357,"line_start":327,"line_end":327,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181362,"byte_end":10181365,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181370,"byte_end":10181438,"line_start":329,"line_end":329,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181443,"byte_end":10181511,"line_start":330,"line_end":330,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181516,"byte_end":10181585,"line_start":331,"line_end":331,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181590,"byte_end":10181616,"line_start":332,"line_end":332,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181621,"byte_end":10181624,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181629,"byte_end":10181682,"line_start":334,"line_end":334,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181687,"byte_end":10181742,"line_start":335,"line_end":335,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181747,"byte_end":10181810,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181815,"byte_end":10181854,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181859,"byte_end":10181901,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181906,"byte_end":10181944,"line_start":339,"line_end":339,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10181949,"byte_end":10181999,"line_start":340,"line_end":340,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183699,"byte_end":10183719,"line_start":379,"line_end":379,"column_start":12,"column_end":32},"name":"poll_write_ready_mut","qualname":"<AsyncFd<T>>::poll_write_ready_mut","value":"pub fn poll_write_ready_mut<'a>(&'a mut Self, &mut Context)\n-> Poll<io::Result<AsyncFdReadyMutGuard>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182334,"byte_end":10182364,"line_start":354,"line_end":354,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182369,"byte_end":10182372,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ If the file descriptor is not currently ready for writing, this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182377,"byte_end":10182451,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ will store a clone of the [`Waker`] from the provided [`Context`]. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182456,"byte_end":10182535,"line_start":357,"line_end":357,"column_start":5,"column_end":84}},{"value":"/ file descriptor becomes ready for writing, [`Waker::wake`] will be called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182540,"byte_end":10182618,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182623,"byte_end":10182626,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to [`poll_write_ready`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182631,"byte_end":10182689,"line_start":360,"line_end":360,"column_start":5,"column_end":63}},{"value":"/ [`poll_write_ready_mut`], only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182694,"byte_end":10182773,"line_start":361,"line_end":361,"column_start":5,"column_end":84}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182778,"byte_end":10182842,"line_start":362,"line_end":362,"column_start":5,"column_end":69}},{"value":"/ [`poll_read_ready`] retains a second, independent waker).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182847,"byte_end":10182908,"line_start":363,"line_end":363,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182913,"byte_end":10182916,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This method is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182921,"byte_end":10182994,"line_start":365,"line_end":365,"column_start":5,"column_end":78}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10182999,"byte_end":10183074,"line_start":366,"line_end":366,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183079,"byte_end":10183147,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183152,"byte_end":10183155,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183160,"byte_end":10183235,"line_start":369,"line_end":369,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183240,"byte_end":10183304,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183309,"byte_end":10183312,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ [`poll_read_ready`]: method@Self::poll_read_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183317,"byte_end":10183370,"line_start":372,"line_end":372,"column_start":5,"column_end":58}},{"value":"/ [`poll_write_ready`]: method@Self::poll_write_ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183375,"byte_end":10183430,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ [`poll_write_ready_mut`]: method@Self::poll_write_ready_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183435,"byte_end":10183498,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/ [`writable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183503,"byte_end":10183542,"line_start":375,"line_end":375,"column_start":5,"column_end":44}},{"value":"/ [`Context`]: struct@std::task::Context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183547,"byte_end":10183589,"line_start":376,"line_end":376,"column_start":5,"column_end":47}},{"value":"/ [`Waker`]: struct@std::task::Waker","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183594,"byte_end":10183632,"line_start":377,"line_end":377,"column_start":5,"column_end":43}},{"value":"/ [`Waker::wake`]: method@std::task::Waker::wake","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10183637,"byte_end":10183687,"line_start":378,"line_end":378,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185129,"byte_end":10185137,"line_start":422,"line_end":422,"column_start":18,"column_end":26},"name":"readable","qualname":"<AsyncFd<T>>::readable","value":"pub async fn readable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184609,"byte_end":10184674,"line_start":413,"line_end":413,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184679,"byte_end":10184750,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184755,"byte_end":10184767,"line_start":415,"line_end":415,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184772,"byte_end":10184775,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184780,"byte_end":10184848,"line_start":417,"line_end":417,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184853,"byte_end":10184921,"line_start":418,"line_end":418,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10184926,"byte_end":10184995,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185000,"byte_end":10185026,"line_start":420,"line_end":420,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185031,"byte_end":10185067,"line_start":421,"line_end":421,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185675,"byte_end":10185687,"line_start":433,"line_end":433,"column_start":18,"column_end":30},"name":"readable_mut","qualname":"<AsyncFd<T>>::readable_mut","value":"pub async fn readable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become readable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become readable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185254,"byte_end":10185319,"line_start":426,"line_end":426,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume read-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185324,"byte_end":10185398,"line_start":427,"line_end":427,"column_start":5,"column_end":79}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185403,"byte_end":10185415,"line_start":428,"line_end":428,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185420,"byte_end":10185423,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185428,"byte_end":10185503,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185508,"byte_end":10185572,"line_start":431,"line_end":431,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185577,"byte_end":10185613,"line_start":432,"line_end":432,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186336,"byte_end":10186344,"line_start":446,"line_end":446,"column_start":18,"column_end":26},"name":"writable","qualname":"<AsyncFd<T>>::writable","value":"pub async fn writable<'a>(&'a Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185815,"byte_end":10185880,"line_start":437,"line_end":437,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185885,"byte_end":10185957,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185962,"byte_end":10185974,"line_start":439,"line_end":439,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185979,"byte_end":10185982,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This method takes `&self`, so it is possible to call this method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10185987,"byte_end":10186055,"line_start":441,"line_end":441,"column_start":5,"column_end":73}},{"value":"/ concurrently with other methods on this struct. This method only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186060,"byte_end":10186128,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ provides shared access to the inner IO resource when handling the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186133,"byte_end":10186202,"line_start":443,"line_end":443,"column_start":5,"column_end":74}},{"value":"/ [`AsyncFdReadyGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186207,"byte_end":10186233,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186238,"byte_end":10186274,"line_start":445,"line_end":445,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186883,"byte_end":10186895,"line_start":457,"line_end":457,"column_start":18,"column_end":30},"name":"writable_mut","qualname":"<AsyncFd<T>>::writable_mut","value":"pub async fn writable_mut<'a>(&'a mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the file descriptor to become writable, returning a\n [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness\n polling.","sig":null,"attributes":[{"value":"/ Waits for the file descriptor to become writable, returning a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186461,"byte_end":10186526,"line_start":450,"line_end":450,"column_start":5,"column_end":70}},{"value":"/ [`AsyncFdReadyMutGuard`] that must be dropped to resume write-readiness","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186531,"byte_end":10186606,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ polling.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186611,"byte_end":10186623,"line_start":452,"line_end":452,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186628,"byte_end":10186631,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes `&mut self`, so it is possible to access the inner IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186636,"byte_end":10186711,"line_start":454,"line_end":454,"column_start":5,"column_end":80}},{"value":"/ resource mutably when handling the [`AsyncFdReadyMutGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186716,"byte_end":10186780,"line_start":455,"line_end":455,"column_start":5,"column_end":69}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10186785,"byte_end":10186821,"line_start":456,"line_end":456,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188125,"byte_end":10188136,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187571,"byte_end":10187642,"line_start":483,"line_end":483,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187647,"byte_end":10187719,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187724,"byte_end":10187783,"line_start":485,"line_end":485,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187788,"byte_end":10187791,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187796,"byte_end":10187864,"line_start":487,"line_end":487,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187869,"byte_end":10187945,"line_start":488,"line_end":488,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187950,"byte_end":10188023,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188028,"byte_end":10188065,"line_start":490,"line_end":490,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188070,"byte_end":10188073,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188078,"byte_end":10188113,"line_start":492,"line_end":492,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188537,"byte_end":10188549,"line_start":504,"line_end":504,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188283,"byte_end":10188356,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188361,"byte_end":10188385,"line_start":500,"line_end":500,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188390,"byte_end":10188393,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188398,"byte_end":10188471,"line_start":502,"line_end":502,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188476,"byte_end":10188525,"line_start":503,"line_end":503,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189581,"byte_end":10189587,"line_start":526,"line_end":526,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>: FnOnce(&AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188591,"byte_end":10188630,"line_start":508,"line_end":508,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188635,"byte_end":10188638,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188643,"byte_end":10188716,"line_start":510,"line_end":510,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188721,"byte_end":10188785,"line_start":511,"line_end":511,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188790,"byte_end":10188860,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188865,"byte_end":10188903,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188908,"byte_end":10188911,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188916,"byte_end":10188992,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10188997,"byte_end":10189067,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189072,"byte_end":10189142,"line_start":517,"line_end":517,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189147,"byte_end":10189216,"line_start":518,"line_end":518,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189221,"byte_end":10189296,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189301,"byte_end":10189384,"line_start":520,"line_end":520,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189389,"byte_end":10189425,"line_start":521,"line_end":521,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189430,"byte_end":10189433,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10189438,"byte_end":10189488,"line_start":523,"line_end":523,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190693,"byte_end":10190704,"line_start":556,"line_end":556,"column_start":12,"column_end":23},"name":"clear_ready","qualname":"<AsyncFdReadyMutGuard>::clear_ready","value":"pub fn clear_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Indicates to tokio that the file descriptor is no longer ready. The\n internal readiness flag will be cleared, and tokio will wait for the\n next edge-triggered readiness notification from the OS.","sig":null,"attributes":[{"value":"/ Indicates to tokio that the file descriptor is no longer ready. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190139,"byte_end":10190210,"line_start":546,"line_end":546,"column_start":5,"column_end":76}},{"value":"/ internal readiness flag will be cleared, and tokio will wait for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190215,"byte_end":10190287,"line_start":547,"line_end":547,"column_start":5,"column_end":77}},{"value":"/ next edge-triggered readiness notification from the OS.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190292,"byte_end":10190351,"line_start":548,"line_end":548,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190356,"byte_end":10190359,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ It is critical that this function not be called unless your code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190364,"byte_end":10190432,"line_start":550,"line_end":550,"column_start":5,"column_end":73}},{"value":"/ _actually observes_ that the file descriptor is _not_ ready. Do not call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190437,"byte_end":10190513,"line_start":551,"line_end":551,"column_start":5,"column_end":81}},{"value":"/ it simply because, for example, a read succeeded; it should be called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190518,"byte_end":10190591,"line_start":552,"line_end":552,"column_start":5,"column_end":78}},{"value":"/ when a read is observed to block.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190596,"byte_end":10190633,"line_start":553,"line_end":553,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190638,"byte_end":10190641,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ [`drop`]: method@std::mem::drop","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190646,"byte_end":10190681,"line_start":555,"line_end":555,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191105,"byte_end":10191117,"line_start":567,"line_end":567,"column_start":12,"column_end":24},"name":"retain_ready","qualname":"<AsyncFdReadyMutGuard>::retain_ready","value":"pub fn retain_ready(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" This method should be invoked when you intentionally want to keep the\n ready flag asserted.","sig":null,"attributes":[{"value":"/ This method should be invoked when you intentionally want to keep the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190851,"byte_end":10190924,"line_start":562,"line_end":562,"column_start":5,"column_end":78}},{"value":"/ ready flag asserted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190929,"byte_end":10190953,"line_start":563,"line_end":563,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190958,"byte_end":10190961,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ While this function is itself a no-op, it satisfies the `#[must_use]`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190966,"byte_end":10191039,"line_start":565,"line_end":565,"column_start":5,"column_end":78}},{"value":"/ constraint on the [`AsyncFdReadyGuard`] type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191044,"byte_end":10191093,"line_start":566,"line_end":566,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10192068,"byte_end":10192074,"line_start":587,"line_end":587,"column_start":12,"column_end":18},"name":"try_io","qualname":"<AsyncFdReadyMutGuard>::try_io","value":"pub fn try_io<R,\n              impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>: FnOnce(&mut AsyncFd<Inner>)\n              ->\n              io::Result<R>>(&mut Self,\n                             impl FnOnce(&mut AsyncFd<Inner>) -> io::Result<R>)\n-> Result<io::Result<R>, TryIoError>","parent":null,"children":[],"decl_id":null,"docs":" Performs the provided IO operation.","sig":null,"attributes":[{"value":"/ Performs the provided IO operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191159,"byte_end":10191198,"line_start":571,"line_end":571,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191203,"byte_end":10191206,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ If `f` returns a [`WouldBlock`] error, the readiness state associated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191211,"byte_end":10191284,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ with this file descriptor is cleared, and the method returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191289,"byte_end":10191353,"line_start":574,"line_end":574,"column_start":5,"column_end":69}},{"value":"/ `Err(TryIoError::WouldBlock)`. You will typically need to poll the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191358,"byte_end":10191428,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ `AsyncFd` again when this happens.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191433,"byte_end":10191471,"line_start":576,"line_end":576,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191476,"byte_end":10191479,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ This method helps ensure that the readiness state of the underlying file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191484,"byte_end":10191560,"line_start":578,"line_end":578,"column_start":5,"column_end":81}},{"value":"/ descriptor remains in sync with the tokio-side readiness state, by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191565,"byte_end":10191635,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"/ clearing the tokio-side state only when a [`WouldBlock`] condition","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191640,"byte_end":10191710,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ occurs. It is the responsibility of the caller to ensure that `f`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191715,"byte_end":10191784,"line_start":581,"line_end":581,"column_start":5,"column_end":74}},{"value":"/ returns [`WouldBlock`] only if the file descriptor that originated this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191789,"byte_end":10191864,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ `AsyncFdReadyGuard` no longer expresses the readiness state that was queried to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191869,"byte_end":10191952,"line_start":583,"line_end":583,"column_start":5,"column_end":88}},{"value":"/ create this `AsyncFdReadyGuard`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191957,"byte_end":10191993,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10191998,"byte_end":10192001,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10192006,"byte_end":10192056,"line_start":586,"line_end":586,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":1267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193384,"byte_end":10193394,"line_start":629,"line_end":629,"column_start":12,"column_end":22},"name":"TryIoError","qualname":"::io::async_fd::TryIoError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The error type returned by [`try_io`].","sig":null,"attributes":[{"value":"/ The error type returned by [`try_io`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193126,"byte_end":10193168,"line_start":622,"line_end":622,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193169,"byte_end":10193172,"line_start":623,"line_end":623,"column_start":1,"column_end":4}},{"value":"/ This error indicates that the IO resource returned a [`WouldBlock`] error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193173,"byte_end":10193251,"line_start":624,"line_end":624,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193252,"byte_end":10193255,"line_start":625,"line_end":625,"column_start":1,"column_end":4}},{"value":"/ [`WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193256,"byte_end":10193306,"line_start":626,"line_end":626,"column_start":1,"column_end":51}},{"value":"/ [`try_io`]: method@AsyncFdReadyGuard::try_io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10193307,"byte_end":10193355,"line_start":627,"line_end":627,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":1261},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","byte_start":41637,"byte_end":41641,"line_start":223,"line_end":223,"column_start":13,"column_end":17},"name":"unix","qualname":"::io::unix","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266}],"decl_id":null,"docs":" Asynchronous IO structures specific to Unix-like operating systems.\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10193997,"byte_end":10194005,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":1382}],"decl_id":null,"docs":" The readable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10194134,"byte_end":10194143,"line_start":25,"line_end":25,"column_start":16,"column_end":25},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":" The writable half of a value returned from [`split`](split()).\n","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10194457,"byte_end":10194462,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"split","qualname":"::io::split::split","value":"pub fn split<T>(T) -> (ReadHalf<T>, WriteHalf<T>) where T: AsyncRead +\nAsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Splits a single value implementing `AsyncRead + AsyncWrite` into separate\n `AsyncRead` and `AsyncWrite` handles.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195088,"byte_end":10195098,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<ReadHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &WriteHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this `ReadHalf` and some `WriteHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Checks if this `ReadHalf` and some `WriteHalf` were split from the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10194985,"byte_end":10195060,"line_start":63,"line_end":63,"column_start":5,"column_end":80}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195065,"byte_end":10195076,"line_start":64,"line_end":64,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195505,"byte_end":10195512,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<ReadHalf<T>>::unsplit","value":"pub fn unsplit(Self, WriteHalf<T>) -> T","parent":null,"children":[],"decl_id":null,"docs":" Reunites with a previously split `WriteHalf`.","sig":null,"attributes":[{"value":"/ Reunites with a previously split `WriteHalf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195181,"byte_end":10195230,"line_start":69,"line_end":69,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195235,"byte_end":10195238,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195243,"byte_end":10195255,"line_start":71,"line_end":71,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195260,"byte_end":10195263,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If this `ReadHalf` and the given `WriteHalf` do not originate from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195268,"byte_end":10195342,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ same `split` operation this method will panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195347,"byte_end":10195397,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ This can be checked ahead of time by comparing the stream ID","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195402,"byte_end":10195466,"line_start":75,"line_end":75,"column_start":5,"column_end":69}},{"value":"/ of the two halves.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195471,"byte_end":10195493,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10196013,"byte_end":10196023,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"is_pair_of","qualname":"<WriteHalf<T>>::is_pair_of","value":"pub fn is_pair_of(&Self, &ReadHalf<T>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this `WriteHalf` and some `ReadHalf` were split from the same\n stream.\n","sig":null,"attributes":[{"value":"/ Check if this `WriteHalf` and some `ReadHalf` were split from the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195911,"byte_end":10195985,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195990,"byte_end":10196001,"line_start":94,"line_end":94,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":11355},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/seek.rs","byte_start":10198892,"byte_end":10198896,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":11358},{"krate":0,"index":11359},{"krate":0,"index":11360}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":2279},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10202317,"byte_end":10202332,"line_start":11,"line_end":11,"column_start":15,"column_end":30},"name":"AsyncBufReadExt","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2285}],"decl_id":null,"docs":" An extension trait which adds utility methods to [`AsyncBufRead`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10205128,"byte_end":10205138,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"read_until","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_until","value":"pub fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Reads all bytes into `buf` until the delimiter `byte` or EOF is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10208029,"byte_end":10208038,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"read_line","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::read_line","value":"pub fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where\nSelf: Unpin","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Reads all bytes until a newline (the 0xA byte) is reached, and append\n them to the provided buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10209438,"byte_end":10209443,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"split","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::split","value":"pub fn split(Self, u8) -> Split<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Returns a stream of the contents of this reader split on the byte\n `byte`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10211283,"byte_end":10211288,"line_start":250,"line_end":250,"column_start":12,"column_end":17},"name":"lines","qualname":"::io::util::async_buf_read_ext::AsyncBufReadExt::lines","value":"pub fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":2279},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2287},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10213361,"byte_end":10213373,"line_start":61,"line_end":61,"column_start":15,"column_end":27},"name":"AsyncReadExt","qualname":"::io::util::async_read_ext::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2295},{"krate":0,"index":2302},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2301}],"decl_id":null,"docs":" Reads bytes from a source.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10214493,"byte_end":10214498,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"chain","qualname":"::io::util::async_read_ext::AsyncReadExt::chain","value":"pub fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Creates a new `AsyncRead` instance that chains this stream with\n `next`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10217327,"byte_end":10217331,"line_start":159,"line_end":159,"column_start":12,"column_end":16},"name":"read","qualname":"::io::util::async_read_ext::AsyncReadExt::read","value":"pub fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n returning how many bytes were read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10219634,"byte_end":10219642,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"read_buf","qualname":"::io::util::async_read_ext::AsyncReadExt::read_buf","value":"pub fn read_buf<'a, B>(&'a mut Self, &'a mut B) -> ReadBuf where Self: Sized +\nUnpin, B: BufMut","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Pulls some bytes from this source into the specified buffer,\n advancing the buffer's internal cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10221539,"byte_end":10221549,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"read_exact","qualname":"::io::util::async_read_ext::AsyncReadExt::read_exact","value":"pub fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads the exact number of bytes required to fill `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10222986,"byte_end":10222993,"line_start":321,"line_end":321,"column_start":16,"column_end":23},"name":"read_u8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u8","value":"pub fn read_u8<'a>(&'a mut Self) -> ReadU8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10224282,"byte_end":10224289,"line_start":359,"line_end":359,"column_start":16,"column_end":23},"name":"read_i8","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i8","value":"pub fn read_i8<'a>(&'a mut Self) -> ReadI8<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads a signed 8 bit integer from the underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10225620,"byte_end":10225628,"line_start":397,"line_end":397,"column_start":16,"column_end":24},"name":"read_u16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16","value":"pub fn read_u16<'a>(&'a mut Self) -> ReadU16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10226968,"byte_end":10226976,"line_start":435,"line_end":435,"column_start":16,"column_end":24},"name":"read_i16","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16","value":"pub fn read_i16<'a>(&'a mut Self) -> ReadI16<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10228257,"byte_end":10228265,"line_start":472,"line_end":472,"column_start":16,"column_end":24},"name":"read_u32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32","value":"pub fn read_u32<'a>(&'a mut Self) -> ReadU32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2312},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10229560,"byte_end":10229568,"line_start":510,"line_end":510,"column_start":16,"column_end":24},"name":"read_i32","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32","value":"pub fn read_i32<'a>(&'a mut Self) -> ReadI32<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2314},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10230931,"byte_end":10230939,"line_start":549,"line_end":549,"column_start":16,"column_end":24},"name":"read_u64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64","value":"pub fn read_u64<'a>(&'a mut Self) -> ReadU64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10232232,"byte_end":10232240,"line_start":586,"line_end":586,"column_start":16,"column_end":24},"name":"read_i64","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64","value":"pub fn read_i64<'a>(&'a mut Self) -> ReadI64<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10233700,"byte_end":10233709,"line_start":626,"line_end":626,"column_start":16,"column_end":25},"name":"read_u128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128","value":"pub fn read_u128<'a>(&'a mut Self) -> ReadU128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10235103,"byte_end":10235112,"line_start":666,"line_end":666,"column_start":16,"column_end":25},"name":"read_i128","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128","value":"pub fn read_i128<'a>(&'a mut Self) -> ReadI128<&'a mut Self> where Self: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in big-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10236459,"byte_end":10236470,"line_start":704,"line_end":704,"column_start":16,"column_end":27},"name":"read_u16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u16_le","value":"pub fn read_u16_le<'a>(&'a mut Self) -> ReadU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2324},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10237831,"byte_end":10237842,"line_start":742,"line_end":742,"column_start":16,"column_end":27},"name":"read_i16_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i16_le","value":"pub fn read_i16_le<'a>(&'a mut Self) -> ReadI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads a signed 16-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10239143,"byte_end":10239154,"line_start":779,"line_end":779,"column_start":16,"column_end":27},"name":"read_u32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u32_le","value":"pub fn read_u32_le<'a>(&'a mut Self) -> ReadU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10240466,"byte_end":10240477,"line_start":817,"line_end":817,"column_start":16,"column_end":27},"name":"read_i32_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i32_le","value":"pub fn read_i32_le<'a>(&'a mut Self) -> ReadI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads a signed 32-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2330},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10241858,"byte_end":10241869,"line_start":856,"line_end":856,"column_start":16,"column_end":27},"name":"read_u64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u64_le","value":"pub fn read_u64_le<'a>(&'a mut Self) -> ReadU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10243163,"byte_end":10243174,"line_start":893,"line_end":893,"column_start":16,"column_end":27},"name":"read_i64_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i64_le","value":"pub fn read_i64_le<'a>(&'a mut Self) -> ReadI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an signed 64-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10244652,"byte_end":10244664,"line_start":933,"line_end":933,"column_start":16,"column_end":28},"name":"read_u128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_u128_le","value":"pub fn read_u128_le<'a>(&'a mut Self) -> ReadU128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an unsigned 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2336},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10246058,"byte_end":10246070,"line_start":973,"line_end":973,"column_start":16,"column_end":28},"name":"read_i128_le","qualname":"::io::util::async_read_ext::AsyncReadExt::read_i128_le","value":"pub fn read_i128_le<'a>(&'a mut Self) -> ReadI128Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads an signed 128-bit integer in little-endian order from the\n underlying reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2297},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10247729,"byte_end":10247740,"line_start":1021,"line_end":1021,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_end","value":"pub fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, placing them into `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10249295,"byte_end":10249309,"line_start":1068,"line_end":1068,"column_start":12,"column_end":26},"name":"read_to_string","qualname":"::io::util::async_read_ext::AsyncReadExt::read_to_string","value":"pub fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Reads all bytes until EOF in this source, appending them to `buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10250601,"byte_end":10250605,"line_start":1106,"line_end":1106,"column_start":12,"column_end":16},"name":"take","qualname":"::io::util::async_read_ext::AsyncReadExt::take","value":"pub fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":2287},"children":[],"decl_id":null,"docs":" Creates an adaptor which reads at most `limit` bytes from it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2338},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_seek_ext.rs","byte_start":10251693,"byte_end":10251705,"line_start":33,"line_end":33,"column_start":15,"column_end":27},"name":"AsyncSeekExt","qualname":"::io::util::async_seek_ext::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2340}],"decl_id":null,"docs":" An extension trait that adds utility methods to [`AsyncSeek`] types.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2339},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_seek_ext.rs","byte_start":10252701,"byte_end":10252705,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"seek","qualname":"::io::util::async_seek_ext::AsyncSeekExt::seek","value":"pub fn seek(&mut Self, SeekFrom) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2338},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_seek_ext.rs","byte_start":10253045,"byte_end":10253060,"line_start":74,"line_end":74,"column_start":12,"column_end":27},"name":"stream_position","qualname":"::io::util::async_seek_ext::AsyncSeekExt::stream_position","value":"pub fn stream_position(&mut Self) -> Seek<, Self> where Self: Unpin","parent":{"krate":0,"index":2338},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2342},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10255343,"byte_end":10255356,"line_start":68,"line_end":68,"column_start":15,"column_end":28},"name":"AsyncWriteExt","qualname":"::io::util::async_write_ext::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2348},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2358},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2364},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2372},{"krate":0,"index":2374},{"krate":0,"index":2376},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2356},{"krate":0,"index":2357}],"decl_id":null,"docs":" Writes bytes to a sink.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2343},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10257198,"byte_end":10257203,"line_start":115,"line_end":115,"column_start":12,"column_end":17},"name":"write","qualname":"::io::util::async_write_ext::AsyncWriteExt::write","value":"pub fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, returning how many bytes were\n written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10258408,"byte_end":10258422,"line_start":156,"line_end":156,"column_start":12,"column_end":26},"name":"write_vectored","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_vectored","value":"pub fn write_vectored<'a, 'b>(&'a mut Self, &'a [IoSlice]) -> WriteVectored\nwhere Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Like [`write`], except that it writes from a slice of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10261314,"byte_end":10261323,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"write_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_buf","value":"pub fn write_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes a buffer into this writer, advancing the buffer's internal\n cursor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10263198,"byte_end":10263211,"line_start":282,"line_end":282,"column_start":12,"column_end":25},"name":"write_all_buf","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all_buf","value":"pub fn write_all_buf<'a, B>(&'a mut Self, &'a mut B) -> WriteAllBuf where\nSelf: Sized + Unpin, B: Buf","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10264560,"byte_end":10264569,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"write_all","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_all","value":"pub fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Attempts to write an entire buffer into this writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2358},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10265969,"byte_end":10265977,"line_start":366,"line_end":366,"column_start":16,"column_end":24},"name":"write_u8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u8","value":"pub fn write_u8<'a>(&'a mut Self, u8) -> WriteU8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10267238,"byte_end":10267246,"line_start":403,"line_end":403,"column_start":16,"column_end":24},"name":"write_i8","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i8","value":"pub fn write_i8<'a>(&'a mut Self, i8) -> WriteI8<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 8-bit integer to the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10268561,"byte_end":10268570,"line_start":441,"line_end":441,"column_start":16,"column_end":25},"name":"write_u16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16","value":"pub fn write_u16<'a>(&'a mut Self, u16) -> WriteU16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10269883,"byte_end":10269892,"line_start":479,"line_end":479,"column_start":16,"column_end":25},"name":"write_i16","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16","value":"pub fn write_i16<'a>(&'a mut Self, i16) -> WriteI16<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2366},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10271232,"byte_end":10271241,"line_start":517,"line_end":517,"column_start":16,"column_end":25},"name":"write_u32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32","value":"pub fn write_u32<'a>(&'a mut Self, u32) -> WriteU32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2368},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10272576,"byte_end":10272585,"line_start":555,"line_end":555,"column_start":16,"column_end":25},"name":"write_i32","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32","value":"pub fn write_i32<'a>(&'a mut Self, i32) -> WriteI32<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2370},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10273962,"byte_end":10273971,"line_start":593,"line_end":593,"column_start":16,"column_end":25},"name":"write_u64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64","value":"pub fn write_u64<'a>(&'a mut Self, u64) -> WriteU64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10275358,"byte_end":10275367,"line_start":631,"line_end":631,"column_start":16,"column_end":25},"name":"write_i64","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64","value":"pub fn write_i64<'a>(&'a mut Self, i64) -> WriteI64<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10276822,"byte_end":10276832,"line_start":671,"line_end":671,"column_start":16,"column_end":26},"name":"write_u128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128","value":"pub fn write_u128<'a>(&'a mut Self, u128) -> WriteU128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2376},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10278222,"byte_end":10278232,"line_start":711,"line_end":711,"column_start":16,"column_end":26},"name":"write_i128","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128","value":"pub fn write_i128<'a>(&'a mut Self, i128) -> WriteI128<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in big-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2378},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10279564,"byte_end":10279576,"line_start":750,"line_end":750,"column_start":16,"column_end":28},"name":"write_u16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u16_le","value":"pub fn write_u16_le<'a>(&'a mut Self, u16) -> WriteU16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10280903,"byte_end":10280915,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"write_i16_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i16_le","value":"pub fn write_i16_le<'a>(&'a mut Self, i16) -> WriteI16Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes a signed 16-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2382},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10282269,"byte_end":10282281,"line_start":826,"line_end":826,"column_start":16,"column_end":28},"name":"write_u32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u32_le","value":"pub fn write_u32_le<'a>(&'a mut Self, u32) -> WriteU32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10283630,"byte_end":10283642,"line_start":864,"line_end":864,"column_start":16,"column_end":28},"name":"write_i32_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i32_le","value":"pub fn write_i32_le<'a>(&'a mut Self, i32) -> WriteI32Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes a signed 32-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10285033,"byte_end":10285045,"line_start":902,"line_end":902,"column_start":16,"column_end":28},"name":"write_u64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u64_le","value":"pub fn write_u64_le<'a>(&'a mut Self, u64) -> WriteU64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10286446,"byte_end":10286458,"line_start":940,"line_end":940,"column_start":16,"column_end":28},"name":"write_i64_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i64_le","value":"pub fn write_i64_le<'a>(&'a mut Self, i64) -> WriteI64Le<&'a mut Self> where\nSelf: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an signed 64-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2390},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10287925,"byte_end":10287938,"line_start":980,"line_end":980,"column_start":16,"column_end":29},"name":"write_u128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_u128_le","value":"pub fn write_u128_le<'a>(&'a mut Self, u128) -> WriteU128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an unsigned 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10289340,"byte_end":10289353,"line_start":1020,"line_end":1020,"column_start":16,"column_end":29},"name":"write_i128_le","qualname":"::io::util::async_write_ext::AsyncWriteExt::write_i128_le","value":"pub fn write_i128_le<'a>(&'a mut Self, i128) -> WriteI128Le<&'a mut Self>\nwhere Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Writes an signed 128-bit integer in little-endian order to the\n underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2356},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10290373,"byte_end":10290378,"line_start":1053,"line_end":1053,"column_start":12,"column_end":17},"name":"flush","qualname":"::io::util::async_write_ext::AsyncWriteExt::flush","value":"pub fn flush(&mut Self) -> Flush<, Self> where Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Flushes this output stream, ensuring that all intermediately buffered\n contents reach their destination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10291668,"byte_end":10291676,"line_start":1092,"line_end":1092,"column_start":12,"column_end":20},"name":"shutdown","qualname":"::io::util::async_write_ext::AsyncWriteExt::shutdown","value":"pub fn shutdown(&mut Self) -> Shutdown<, Self> where Self: Unpin","parent":{"krate":0,"index":2342},"children":[],"decl_id":null,"docs":" Shuts down the output stream, ensuring that the value can be dropped\n cleanly.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293071,"byte_end":10293080,"line_start":27,"line_end":27,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::util::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":11301},{"krate":0,"index":11302},{"krate":0,"index":11303},{"krate":0,"index":11304},{"krate":0,"index":11305}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293458,"byte_end":10293461,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293316,"byte_end":10293408,"line_start":38,"line_end":38,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293413,"byte_end":10293446,"line_start":39,"line_end":39,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293623,"byte_end":10293636,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"pub fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293546,"byte_end":10293611,"line_start":44,"line_end":44,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294031,"byte_end":10294038,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufReader<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293894,"byte_end":10293940,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293945,"byte_end":10293948,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293953,"byte_end":10294019,"line_start":58,"line_end":58,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294230,"byte_end":10294237,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufReader<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294085,"byte_end":10294139,"line_start":63,"line_end":63,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294144,"byte_end":10294147,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294152,"byte_end":10294218,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294448,"byte_end":10294459,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufReader<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294296,"byte_end":10294357,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294362,"byte_end":10294365,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294370,"byte_end":10294436,"line_start":72,"line_end":72,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294690,"byte_end":10294700,"line_start":80,"line_end":80,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufReader`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Consumes this `BufReader`, returning the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294539,"byte_end":10294602,"line_start":77,"line_end":77,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294607,"byte_end":10294610,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294615,"byte_end":10294678,"line_start":79,"line_end":79,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294904,"byte_end":10294910,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294744,"byte_end":10294800,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294805,"byte_end":10294808,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10294813,"byte_end":10294892,"line_start":86,"line_end":86,"column_start":5,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":11268},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304178,"byte_end":10304187,"line_start":19,"line_end":19,"column_start":16,"column_end":25},"name":"BufStream","qualname":"::io::util::buf_stream::BufStream","value":"BufStream {  }","parent":null,"children":[{"krate":0,"index":11270}],"decl_id":null,"docs":" Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and buffers its input and output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304466,"byte_end":10304469,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStream<RW>>::new","value":"pub fn new(RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a type in both [`BufWriter`] and [`BufReader`].","sig":null,"attributes":[{"value":"/ Wraps a type in both [`BufWriter`] and [`BufReader`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304312,"byte_end":10304369,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304374,"byte_end":10304377,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304382,"byte_end":10304454,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304801,"byte_end":10304814,"line_start":39,"line_end":39,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufStream<RW>>::with_capacity","value":"pub fn with_capacity(usize, usize, RW) -> BufStream<RW>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]\n capacity.","sig":null,"attributes":[{"value":"/ Creates a `BufStream` with the specified [`BufReader`] capacity and [`BufWriter`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304601,"byte_end":10304686,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304691,"byte_end":10304704,"line_start":36,"line_end":36,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304709,"byte_end":10304712,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ See the documentation for those types and [`BufStream`] for details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304717,"byte_end":10304789,"line_start":38,"line_end":38,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305271,"byte_end":10305278,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufStream<RW>>::get_ref","value":"pub fn get_ref(&Self) -> &RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305126,"byte_end":10305176,"line_start":52,"line_end":52,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305181,"byte_end":10305184,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305189,"byte_end":10305259,"line_start":54,"line_end":54,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305498,"byte_end":10305505,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufStream<RW>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut RW","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305345,"byte_end":10305403,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305408,"byte_end":10305411,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305416,"byte_end":10305486,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305740,"byte_end":10305751,"line_start":69,"line_end":69,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufStream<RW>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut RW>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying I/O object.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305580,"byte_end":10305645,"line_start":66,"line_end":66,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305650,"byte_end":10305653,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305658,"byte_end":10305728,"line_start":68,"line_end":68,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10306015,"byte_end":10306025,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufStream<RW>>::into_inner","value":"pub fn into_inner(Self) -> RW","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufStream`, returning the underlying I/O object.","sig":null,"attributes":[{"value":"/ Consumes this `BufStream`, returning the underlying I/O object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305860,"byte_end":10305927,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305932,"byte_end":10305935,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10305940,"byte_end":10306003,"line_start":75,"line_end":75,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":11218},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10309791,"byte_end":10309800,"line_start":32,"line_end":32,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::util::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":11220},{"krate":0,"index":11221},{"krate":0,"index":11222},{"krate":0,"index":11223}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10310150,"byte_end":10310153,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"pub fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10310008,"byte_end":10310100,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10310105,"byte_end":10310138,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10310315,"byte_end":10310328,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"pub fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10310238,"byte_end":10310303,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1624},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311451,"byte_end":10311458,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BufWriter<W>>::get_ref","value":"pub fn get_ref(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311393,"byte_end":10311439,"line_start":86,"line_end":86,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311649,"byte_end":10311656,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<BufWriter<W>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311505,"byte_end":10311559,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311564,"byte_end":10311567,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311572,"byte_end":10311637,"line_start":93,"line_end":93,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311866,"byte_end":10311877,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<BufWriter<W>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut W>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying writer.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311715,"byte_end":10311776,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311781,"byte_end":10311784,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly write to the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311789,"byte_end":10311854,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312108,"byte_end":10312118,"line_start":108,"line_end":108,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufWriter<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying writer.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10311957,"byte_end":10312020,"line_start":105,"line_end":105,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312025,"byte_end":10312028,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312033,"byte_end":10312096,"line_start":107,"line_end":107,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312230,"byte_end":10312236,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"pub fn buffer(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312162,"byte_end":10312218,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":11169},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10316603,"byte_end":10316608,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::util::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11172},{"krate":0,"index":11173},{"krate":0,"index":11174}],"decl_id":null,"docs":" Stream for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317049,"byte_end":10317056,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> (&T, &U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10316975,"byte_end":10317037,"line_start":39,"line_end":39,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317388,"byte_end":10317395,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut T, &mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317125,"byte_end":10317195,"line_start":44,"line_end":44,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317200,"byte_end":10317203,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317208,"byte_end":10317281,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317286,"byte_end":10317359,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317364,"byte_end":10317376,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1669},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317754,"byte_end":10317765,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut T>, Pin<&mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317484,"byte_end":10317561,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317566,"byte_end":10317569,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317574,"byte_end":10317647,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317652,"byte_end":10317725,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317730,"byte_end":10317742,"line_start":57,"line_end":57,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317962,"byte_end":10317972,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"pub fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10317894,"byte_end":10317950,"line_start":63,"line_end":63,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":2443},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy.rs","byte_start":10323370,"byte_end":10323374,"line_start":123,"line_end":123,"column_start":18,"column_end":22},"name":"copy","qualname":"::io::util::copy::copy","value":"pub async fn copy<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1744},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327448,"byte_end":10327466,"line_start":108,"line_end":108,"column_start":14,"column_end":32},"name":"copy_bidirectional","qualname":"::io::util::copy_bidirectional::copy_bidirectional","value":"pub async fn copy_bidirectional<A: ?Sized, B: ?Sized, '_,\n                                '_>(&'_ mut A, &'_ mut B) -> /*impl Trait*/\nwhere A: AsyncRead + AsyncWrite + Unpin, B: AsyncRead + AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Copies data in both directions between `a` and `b`.","sig":null,"attributes":[{"value":"/ Copies data in both directions between `a` and `b`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326196,"byte_end":10326251,"line_start":80,"line_end":80,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326252,"byte_end":10326255,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ This function returns a future that will read from both streams,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326256,"byte_end":10326324,"line_start":82,"line_end":82,"column_start":1,"column_end":69}},{"value":"/ writing any data read to the opposing stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326325,"byte_end":10326374,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"/ This happens in both directions concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326375,"byte_end":10326424,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326425,"byte_end":10326428,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ If an EOF is observed on one stream, [`shutdown()`] will be invoked on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326429,"byte_end":10326503,"line_start":86,"line_end":86,"column_start":1,"column_end":75}},{"value":"/ the other, and reading from that stream will stop. Copying of data in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326504,"byte_end":10326577,"line_start":87,"line_end":87,"column_start":1,"column_end":74}},{"value":"/ the other direction will continue.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326578,"byte_end":10326616,"line_start":88,"line_end":88,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326617,"byte_end":10326620,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ The future will complete successfully once both directions of communication has been shut down.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326621,"byte_end":10326720,"line_start":90,"line_end":90,"column_start":1,"column_end":100}},{"value":"/ A direction is shut down when the reader reports EOF,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326721,"byte_end":10326778,"line_start":91,"line_end":91,"column_start":1,"column_end":58}},{"value":"/ at which point [`shutdown()`] is called on the corresponding writer. When finished,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326779,"byte_end":10326866,"line_start":92,"line_end":92,"column_start":1,"column_end":88}},{"value":"/ it will return a tuple of the number of bytes copied from a to b","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326867,"byte_end":10326935,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/ and the number of bytes copied from b to a, in that order.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326936,"byte_end":10326998,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10326999,"byte_end":10327002,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`shutdown()`]: crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327003,"byte_end":10327057,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327058,"byte_end":10327061,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327062,"byte_end":10327074,"line_start":98,"line_end":98,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327075,"byte_end":10327078,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ The future will immediately return an error if any IO operation on `a`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327079,"byte_end":10327153,"line_start":100,"line_end":100,"column_start":1,"column_end":75}},{"value":"/ or `b` returns an error. Some data read from either stream may be lost (not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327154,"byte_end":10327233,"line_start":101,"line_end":101,"column_start":1,"column_end":80}},{"value":"/ written to the other stream) in this case.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327234,"byte_end":10327280,"line_start":102,"line_end":102,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327281,"byte_end":10327284,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327285,"byte_end":10327303,"line_start":104,"line_end":104,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327304,"byte_end":10327307,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Returns a tuple of bytes copied `a` to `b` and bytes copied `b` to `a`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10327308,"byte_end":10327383,"line_start":106,"line_end":106,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2449},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_buf.rs","byte_start":10329462,"byte_end":10329470,"line_start":54,"line_end":54,"column_start":18,"column_end":26},"name":"copy_buf","qualname":"::io::util::copy_buf::copy_buf","value":"pub async fn copy_buf<'a, R: ?Sized, W: ?Sized>(&'a mut R, &'a mut W)\n-> /*impl Trait*/ where R: AsyncBufRead + Unpin, W: AsyncWrite + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously copies the entire contents of a reader into a writer.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2467},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10331279,"byte_end":10331284,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"name":"Empty","qualname":"::io::util::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":2468}],"decl_id":null,"docs":" An async reader which is always at EOF.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2469},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10331963,"byte_end":10331968,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"empty","qualname":"::io::util::empty::empty","value":"pub fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty async reader.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":11127},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/flush.rs","byte_start":10333209,"byte_end":10333214,"line_start":17,"line_end":17,"column_start":16,"column_end":21},"name":"Flush","qualname":"::io::util::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":11130},{"krate":0,"index":11131}],"decl_id":null,"docs":" A future used to fully flush an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11077},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10334648,"byte_end":10334653,"line_start":23,"line_end":23,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::util::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":11079},{"krate":0,"index":11080},{"krate":0,"index":11081},{"krate":0,"index":11082}],"decl_id":null,"docs":" Read lines from an [`AsyncBufRead`].","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335500,"byte_end":10335509,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"name":"next_line","qualname":"<Lines<R>>::next_line","value":"pub async fn next_line<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next line in the stream.","sig":null,"attributes":[{"value":"/ Returns the next line in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335010,"byte_end":10335050,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335055,"byte_end":10335058,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335063,"byte_end":10335077,"line_start":50,"line_end":50,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335082,"byte_end":10335085,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335090,"byte_end":10335097,"line_start":52,"line_end":52,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335102,"byte_end":10335136,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335141,"byte_end":10335176,"line_start":54,"line_end":54,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335181,"byte_end":10335184,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335189,"byte_end":10335272,"line_start":56,"line_end":56,"column_start":5,"column_end":88}},{"value":"/ let mut lines = my_buf_read.lines();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335277,"byte_end":10335317,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335322,"byte_end":10335325,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ while let Some(line) = lines.next_line().await? {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335330,"byte_end":10335383,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/     println!(\"length = {}\", line.len())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335388,"byte_end":10335431,"line_start":60,"line_end":60,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335436,"byte_end":10335441,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335446,"byte_end":10335458,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335463,"byte_end":10335470,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335475,"byte_end":10335482,"line_start":64,"line_end":64,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335736,"byte_end":10335743,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Lines<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a mutable reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a mutable reference to the underlying reader","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335669,"byte_end":10335724,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335862,"byte_end":10335869,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Lines<R>>::get_ref","value":"pub fn get_ref(&mut Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Obtain a reference to the underlying reader\n","sig":null,"attributes":[{"value":"/ Obtain a reference to the underlying reader","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335803,"byte_end":10335850,"line_start":76,"line_end":76,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336156,"byte_end":10336166,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Lines<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwraps this `Lines<R>`, returning the underlying reader.","sig":null,"attributes":[{"value":"/ Unwraps this `Lines<R>`, returning the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335921,"byte_end":10335982,"line_start":81,"line_end":81,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335987,"byte_end":10335990,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10335995,"byte_end":10336058,"line_start":83,"line_end":83,"column_start":5,"column_end":68}},{"value":"/ Therefore, a following read from the underlying reader may lead to data loss.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336063,"byte_end":10336144,"line_start":84,"line_end":84,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10337052,"byte_end":10337066,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"poll_next_line","qualname":"<Lines<R>>::poll_next_line","value":"pub fn poll_next_line(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<String>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next line in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next line in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336259,"byte_end":10336301,"line_start":94,"line_end":94,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336306,"byte_end":10336309,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336314,"byte_end":10336338,"line_start":96,"line_end":96,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336343,"byte_end":10336346,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next line is not yet available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336351,"byte_end":10336412,"line_start":98,"line_end":98,"column_start":5,"column_end":66}},{"value":"/  * `Poll::Ready(Ok(Some(line)))` if the next line is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336417,"byte_end":10336484,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more lines in this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336489,"byte_end":10336562,"line_start":100,"line_end":100,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the next line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336567,"byte_end":10336650,"line_start":101,"line_end":101,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336655,"byte_end":10336658,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336663,"byte_end":10336735,"line_start":103,"line_end":103,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336740,"byte_end":10336809,"line_start":104,"line_end":104,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336814,"byte_end":10336858,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336863,"byte_end":10336866,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_line`, only the `Waker` from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336871,"byte_end":10336945,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the `Context` passed to the most recent call is scheduled to receive a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336950,"byte_end":10337024,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10337029,"byte_end":10337040,"line_start":109,"line_end":109,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":2470},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339223,"byte_end":10339235,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"DuplexStream","qualname":"::io::util::mem::DuplexStream","value":"DuplexStream {  }","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472}],"decl_id":null,"docs":" A bidirectional pipe to read and write bytes in memory.","sig":null,"attributes":[{"value":"/ A bidirectional pipe to read and write bytes in memory.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10337988,"byte_end":10338047,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338048,"byte_end":10338051,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ A pair of `DuplexStream`s are created together, and they act as a \"channel\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338052,"byte_end":10338131,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ that can be used as in-memory IO types. Writing to one of the pairs will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338132,"byte_end":10338208,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ allow that data to be read from the other, and vice versa.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338209,"byte_end":10338271,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338272,"byte_end":10338275,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Closing a `DuplexStream`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338276,"byte_end":10338306,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338307,"byte_end":10338310,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If one end of the `DuplexStream` channel is dropped, any pending reads on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338311,"byte_end":10338388,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ the other side will continue to read data until the buffer is drained, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338389,"byte_end":10338468,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/ they will signal EOF by returning 0 bytes. Any writes to the other side,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338469,"byte_end":10338545,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ including pending ones (that are waiting for free space in the buffer) will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338546,"byte_end":10338625,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ return `Err(BrokenPipe)` immediately.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338626,"byte_end":10338667,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338668,"byte_end":10338671,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338672,"byte_end":10338685,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338686,"byte_end":10338689,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338690,"byte_end":10338697,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # async fn ex() -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338698,"byte_end":10338742,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"/ # use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338743,"byte_end":10338794,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"/ let (mut client, mut server) = tokio::io::duplex(64);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338795,"byte_end":10338852,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338853,"byte_end":10338856,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ client.write_all(b\"ping\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338857,"byte_end":10338894,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338895,"byte_end":10338898,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut buf = [0u8; 4];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338899,"byte_end":10338926,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ server.read_exact(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338927,"byte_end":10338966,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"ping\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338967,"byte_end":10338997,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10338998,"byte_end":10339001,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ server.write_all(b\"pong\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339002,"byte_end":10339039,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339040,"byte_end":10339043,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ client.read_exact(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339044,"byte_end":10339083,"line_start":42,"line_end":42,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(&buf, b\"pong\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339084,"byte_end":10339114,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339115,"byte_end":10339127,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339128,"byte_end":10339135,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10339136,"byte_end":10339143,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1845},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340583,"byte_end":10340589,"line_start":85,"line_end":85,"column_start":8,"column_end":14},"name":"duplex","qualname":"::io::util::mem::duplex","value":"pub fn duplex(usize) -> (DuplexStream, DuplexStream)","parent":null,"children":[],"decl_id":null,"docs":" Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","sig":null,"attributes":[{"value":"/ Create a new pair of `DuplexStream`s that act like a pair of connected sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340298,"byte_end":10340381,"line_start":80,"line_end":80,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340382,"byte_end":10340385,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ The `max_buf_size` argument is the maximum amount of bytes that can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340386,"byte_end":10340460,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ written to a side before the write returns `Poll::Pending`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340461,"byte_end":10340524,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":11026},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read.rs","byte_start":10345992,"byte_end":10345996,"line_start":34,"line_end":34,"column_start":16,"column_end":20},"name":"Read","qualname":"::io::util::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":11029},{"krate":0,"index":11030},{"krate":0,"index":11031}],"decl_id":null,"docs":" A future which can be used to easily read available number of bytes to fill\n a buffer.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10966},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_buf.rs","byte_start":10347213,"byte_end":10347220,"line_start":27,"line_end":27,"column_start":16,"column_end":23},"name":"ReadBuf","qualname":"::io::util::read_buf::ReadBuf","value":"ReadBuf {  }","parent":null,"children":[{"krate":0,"index":10970},{"krate":0,"index":10971},{"krate":0,"index":10972}],"decl_id":null,"docs":" Future returned by [`read_buf`](crate::io::AsyncReadExt::read_buf).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10911},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_exact.rs","byte_start":10349425,"byte_end":10349434,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"name":"ReadExact","qualname":"::io::util::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":10914},{"krate":0,"index":10915},{"krate":0,"index":10916}],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if EOF is hit sooner.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10867},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354458,"byte_end":10354464,"line_start":132,"line_end":132,"column_start":10,"column_end":16},"name":"ReadU8","qualname":"::io::util::read_int::ReadU8","value":"ReadU8 {  }","parent":null,"children":[{"krate":0,"index":10869},{"krate":0,"index":10870}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10830},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354480,"byte_end":10354486,"line_start":133,"line_end":133,"column_start":10,"column_end":16},"name":"ReadI8","qualname":"::io::util::read_int::ReadI8","value":"ReadI8 {  }","parent":null,"children":[{"krate":0,"index":10832},{"krate":0,"index":10833}],"decl_id":null,"docs":" Future returned from `read_u8`\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10781},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354502,"byte_end":10354509,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"ReadU16","qualname":"::io::util::read_int::ReadU16","value":"ReadU16 {  }","parent":null,"children":[{"krate":0,"index":10783},{"krate":0,"index":10784},{"krate":0,"index":10786},{"krate":0,"index":10787}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10732},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354534,"byte_end":10354541,"line_start":136,"line_end":136,"column_start":9,"column_end":16},"name":"ReadU32","qualname":"::io::util::read_int::ReadU32","value":"ReadU32 {  }","parent":null,"children":[{"krate":0,"index":10734},{"krate":0,"index":10735},{"krate":0,"index":10737},{"krate":0,"index":10738}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10683},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354566,"byte_end":10354573,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"ReadU64","qualname":"::io::util::read_int::ReadU64","value":"ReadU64 {  }","parent":null,"children":[{"krate":0,"index":10685},{"krate":0,"index":10686},{"krate":0,"index":10688},{"krate":0,"index":10689}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10634},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354598,"byte_end":10354606,"line_start":138,"line_end":138,"column_start":9,"column_end":17},"name":"ReadU128","qualname":"::io::util::read_int::ReadU128","value":"ReadU128 {  }","parent":null,"children":[{"krate":0,"index":10636},{"krate":0,"index":10637},{"krate":0,"index":10639},{"krate":0,"index":10640}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10585},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354634,"byte_end":10354641,"line_start":140,"line_end":140,"column_start":9,"column_end":16},"name":"ReadI16","qualname":"::io::util::read_int::ReadI16","value":"ReadI16 {  }","parent":null,"children":[{"krate":0,"index":10587},{"krate":0,"index":10588},{"krate":0,"index":10590},{"krate":0,"index":10591}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10536},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354666,"byte_end":10354673,"line_start":141,"line_end":141,"column_start":9,"column_end":16},"name":"ReadI32","qualname":"::io::util::read_int::ReadI32","value":"ReadI32 {  }","parent":null,"children":[{"krate":0,"index":10538},{"krate":0,"index":10539},{"krate":0,"index":10541},{"krate":0,"index":10542}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10487},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354698,"byte_end":10354705,"line_start":142,"line_end":142,"column_start":9,"column_end":16},"name":"ReadI64","qualname":"::io::util::read_int::ReadI64","value":"ReadI64 {  }","parent":null,"children":[{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10492},{"krate":0,"index":10493}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10438},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354730,"byte_end":10354738,"line_start":143,"line_end":143,"column_start":9,"column_end":17},"name":"ReadI128","qualname":"::io::util::read_int::ReadI128","value":"ReadI128 {  }","parent":null,"children":[{"krate":0,"index":10440},{"krate":0,"index":10441},{"krate":0,"index":10443},{"krate":0,"index":10444}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10389},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354766,"byte_end":10354775,"line_start":145,"line_end":145,"column_start":9,"column_end":18},"name":"ReadU16Le","qualname":"::io::util::read_int::ReadU16Le","value":"ReadU16Le {  }","parent":null,"children":[{"krate":0,"index":10391},{"krate":0,"index":10392},{"krate":0,"index":10394},{"krate":0,"index":10395}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10340},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354803,"byte_end":10354812,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"ReadU32Le","qualname":"::io::util::read_int::ReadU32Le","value":"ReadU32Le {  }","parent":null,"children":[{"krate":0,"index":10342},{"krate":0,"index":10343},{"krate":0,"index":10345},{"krate":0,"index":10346}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10291},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354840,"byte_end":10354849,"line_start":147,"line_end":147,"column_start":9,"column_end":18},"name":"ReadU64Le","qualname":"::io::util::read_int::ReadU64Le","value":"ReadU64Le {  }","parent":null,"children":[{"krate":0,"index":10293},{"krate":0,"index":10294},{"krate":0,"index":10296},{"krate":0,"index":10297}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354877,"byte_end":10354887,"line_start":148,"line_end":148,"column_start":9,"column_end":19},"name":"ReadU128Le","qualname":"::io::util::read_int::ReadU128Le","value":"ReadU128Le {  }","parent":null,"children":[{"krate":0,"index":10244},{"krate":0,"index":10245},{"krate":0,"index":10247},{"krate":0,"index":10248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10193},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354918,"byte_end":10354927,"line_start":150,"line_end":150,"column_start":9,"column_end":18},"name":"ReadI16Le","qualname":"::io::util::read_int::ReadI16Le","value":"ReadI16Le {  }","parent":null,"children":[{"krate":0,"index":10195},{"krate":0,"index":10196},{"krate":0,"index":10198},{"krate":0,"index":10199}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10144},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354955,"byte_end":10354964,"line_start":151,"line_end":151,"column_start":9,"column_end":18},"name":"ReadI32Le","qualname":"::io::util::read_int::ReadI32Le","value":"ReadI32Le {  }","parent":null,"children":[{"krate":0,"index":10146},{"krate":0,"index":10147},{"krate":0,"index":10149},{"krate":0,"index":10150}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10095},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10354992,"byte_end":10355001,"line_start":152,"line_end":152,"column_start":9,"column_end":18},"name":"ReadI64Le","qualname":"::io::util::read_int::ReadI64Le","value":"ReadI64Le {  }","parent":null,"children":[{"krate":0,"index":10097},{"krate":0,"index":10098},{"krate":0,"index":10100},{"krate":0,"index":10101}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10046},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_int.rs","byte_start":10355029,"byte_end":10355039,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"name":"ReadI128Le","qualname":"::io::util::read_int::ReadI128Le","value":"ReadI128Le {  }","parent":null,"children":[{"krate":0,"index":10048},{"krate":0,"index":10049},{"krate":0,"index":10051},{"krate":0,"index":10052}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9992},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_line.rs","byte_start":10355556,"byte_end":10355564,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"ReadLine","qualname":"::io::util::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":9995},{"krate":0,"index":9996},{"krate":0,"index":9997},{"krate":0,"index":9998},{"krate":0,"index":9999}],"decl_id":null,"docs":" Future for the [`read_line`](crate::io::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9935},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_to_end.rs","byte_start":10359487,"byte_end":10359496,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"ReadToEnd","qualname":"::io::util::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":9938},{"krate":0,"index":9939},{"krate":0,"index":9940},{"krate":0,"index":9941}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9874},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_to_string.rs","byte_start":10367816,"byte_end":10367828,"line_start":17,"line_end":17,"column_start":16,"column_end":28},"name":"ReadToString","qualname":"::io::util::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":9877},{"krate":0,"index":9878},{"krate":0,"index":9879},{"krate":0,"index":9880},{"krate":0,"index":9881}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9813},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_until.rs","byte_start":10370220,"byte_end":10370229,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"ReadUntil","qualname":"::io::util::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817},{"krate":0,"index":9818},{"krate":0,"index":9819},{"krate":0,"index":9820}],"decl_id":null,"docs":" Future for the [`read_until`](crate::io::AsyncBufReadExt::read_until) method.\n The delimeter is included in the resulting vector.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2635},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/repeat.rs","byte_start":10372571,"byte_end":10372577,"line_start":19,"line_end":19,"column_start":16,"column_end":22},"name":"Repeat","qualname":"::io::util::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":2636}],"decl_id":null,"docs":" An async reader which yields one byte over and over and over and over and\n over and...","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2634},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/repeat.rs","byte_start":10373263,"byte_end":10373269,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"repeat","qualname":"::io::util::repeat::repeat","value":"pub fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9764},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/shutdown.rs","byte_start":10374308,"byte_end":10374316,"line_start":17,"line_end":17,"column_start":16,"column_end":24},"name":"Shutdown","qualname":"::io::util::shutdown::Shutdown","value":"Shutdown {  }","parent":null,"children":[{"krate":0,"index":9767},{"krate":0,"index":9768}],"decl_id":null,"docs":" A future used to shutdown an I/O object.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":2639},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/sink.rs","byte_start":10375462,"byte_end":10375466,"line_start":18,"line_end":18,"column_start":16,"column_end":20},"name":"Sink","qualname":"::io::util::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":2640}],"decl_id":null,"docs":" An async writer which will move data into the void.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":2641},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/sink.rs","byte_start":10376307,"byte_end":10376311,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"sink","qualname":"::io::util::sink::sink","value":"pub fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of an async writer which will successfully consume all\n data.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":9714},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10377748,"byte_end":10377753,"line_start":19,"line_end":19,"column_start":16,"column_end":21},"name":"Split","qualname":"::io::util::split::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":9716},{"krate":0,"index":9717},{"krate":0,"index":9718},{"krate":0,"index":9719}],"decl_id":null,"docs":" Splitter for the [`split`](crate::io::AsyncBufReadExt::split) method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2129},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378614,"byte_end":10378626,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"name":"next_segment","qualname":"<Split<R>>::next_segment","value":"pub async fn next_segment<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the next segment in the stream.","sig":null,"attributes":[{"value":"/ Returns the next segment in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378102,"byte_end":10378145,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378150,"byte_end":10378153,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378158,"byte_end":10378172,"line_start":46,"line_end":46,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378177,"byte_end":10378180,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378185,"byte_end":10378192,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncBufRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378197,"byte_end":10378231,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ use tokio::io::AsyncBufReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378236,"byte_end":10378271,"line_start":50,"line_end":50,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378276,"byte_end":10378279,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ # async fn dox(my_buf_read: impl AsyncBufRead + Unpin) -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378284,"byte_end":10378367,"line_start":52,"line_end":52,"column_start":5,"column_end":88}},{"value":"/ let mut segments = my_buf_read.split(b'f');","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378372,"byte_end":10378419,"line_start":53,"line_end":53,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378424,"byte_end":10378427,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ while let Some(segment) = segments.next_segment().await? {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378432,"byte_end":10378494,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/     println!(\"length = {}\", segment.len())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378499,"byte_end":10378545,"line_start":56,"line_end":56,"column_start":5,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378550,"byte_end":10378555,"line_start":57,"line_end":57,"column_start":5,"column_end":10}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378560,"byte_end":10378572,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378577,"byte_end":10378584,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378589,"byte_end":10378596,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379663,"byte_end":10379680,"line_start":89,"line_end":89,"column_start":12,"column_end":29},"name":"poll_next_segment","qualname":"<Split<R>>::poll_next_segment","value":"pub fn poll_next_segment(Pin<&mut Self>, &mut Context)\n-> Poll<io::Result<Option<Vec<u8>>>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for the next segment in the stream.","sig":null,"attributes":[{"value":"/ Polls for the next segment in the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378838,"byte_end":10378883,"line_start":72,"line_end":72,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378888,"byte_end":10378891,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378896,"byte_end":10378920,"line_start":74,"line_end":74,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378925,"byte_end":10378928,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next segment is not yet available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378933,"byte_end":10378997,"line_start":76,"line_end":76,"column_start":5,"column_end":69}},{"value":"/  * `Poll::Ready(Ok(Some(segment)))` if the next segment is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379002,"byte_end":10379075,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/  * `Poll::Ready(Ok(None))` if there are no more segments in this stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379080,"byte_end":10379156,"line_start":78,"line_end":78,"column_start":5,"column_end":81}},{"value":"/  * `Poll::Ready(Err(err))` if an IO error occurred while reading the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379161,"byte_end":10379233,"line_start":79,"line_end":79,"column_start":5,"column_end":77}},{"value":"/    next segment.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379238,"byte_end":10379258,"line_start":80,"line_end":80,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379263,"byte_end":10379266,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379271,"byte_end":10379343,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when more bytes become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379348,"byte_end":10379417,"line_start":83,"line_end":83,"column_start":5,"column_end":74}},{"value":"/ available on the underlying IO resource.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379422,"byte_end":10379466,"line_start":84,"line_end":84,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379471,"byte_end":10379474,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_next_segment`, only the `Waker`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379479,"byte_end":10379551,"line_start":86,"line_end":86,"column_start":5,"column_end":77}},{"value":"/ from the `Context` passed to the most recent call is scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379556,"byte_end":10379625,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10379630,"byte_end":10379651,"line_start":88,"line_end":88,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":9674},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10380822,"byte_end":10380826,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::util::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":9676},{"krate":0,"index":9677}],"decl_id":null,"docs":" Stream for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381416,"byte_end":10381421,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"pub fn limit(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381113,"byte_end":10381166,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381171,"byte_end":10381217,"line_start":30,"line_end":30,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381222,"byte_end":10381225,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381230,"byte_end":10381240,"line_start":32,"line_end":32,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381245,"byte_end":10381248,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381253,"byte_end":10381330,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381335,"byte_end":10381404,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381740,"byte_end":10381749,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"pub fn set_limit(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.\n","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381469,"byte_end":10381540,"line_start":40,"line_end":40,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381545,"byte_end":10381619,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381624,"byte_end":10381699,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381704,"byte_end":10381728,"line_start":43,"line_end":43,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381872,"byte_end":10381879,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<R>>::get_ref","value":"pub fn get_ref(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying reader.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381814,"byte_end":10381860,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382171,"byte_end":10382178,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut R","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381926,"byte_end":10381980,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381985,"byte_end":10381988,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381993,"byte_end":10382066,"line_start":55,"line_end":55,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382071,"byte_end":10382143,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382148,"byte_end":10382159,"line_start":57,"line_end":57,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382489,"byte_end":10382500,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Take<R>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut R>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying reader.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382237,"byte_end":10382298,"line_start":62,"line_end":62,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382303,"byte_end":10382306,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382311,"byte_end":10382384,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ underlying reader as doing so may corrupt the internal limit of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382389,"byte_end":10382461,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ `Take`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382466,"byte_end":10382477,"line_start":66,"line_end":66,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382646,"byte_end":10382656,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Take`, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Consumes the `Take`, returning the wrapped reader.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382580,"byte_end":10382634,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":9623},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write.rs","byte_start":10384640,"byte_end":10384645,"line_start":14,"line_end":14,"column_start":16,"column_end":21},"name":"Write","qualname":"::io::util::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":9626},{"krate":0,"index":9627},{"krate":0,"index":9628}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9563},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_vectored.rs","byte_start":10385849,"byte_end":10385862,"line_start":14,"line_end":14,"column_start":16,"column_end":29},"name":"WriteVectored","qualname":"::io::util::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":9567},{"krate":0,"index":9568},{"krate":0,"index":9569}],"decl_id":null,"docs":" A future to write a slice of buffers to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9508},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_all.rs","byte_start":10386975,"byte_end":10386983,"line_start":14,"line_end":14,"column_start":16,"column_end":24},"name":"WriteAll","qualname":"::io::util::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":9511},{"krate":0,"index":9512},{"krate":0,"index":9513}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9448},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_buf.rs","byte_start":10388424,"byte_end":10388432,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"WriteBuf","qualname":"::io::util::write_buf::WriteBuf","value":"WriteBuf {  }","parent":null,"children":[{"krate":0,"index":9452},{"krate":0,"index":9453},{"krate":0,"index":9454}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_all_buf.rs","byte_start":10389746,"byte_end":10389757,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"WriteAllBuf","qualname":"::io::util::write_all_buf::WriteAllBuf","value":"WriteAllBuf {  }","parent":null,"children":[{"krate":0,"index":9390},{"krate":0,"index":9391},{"krate":0,"index":9392}],"decl_id":null,"docs":" A future to write some of the buffer to an `AsyncWrite`.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9336},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394614,"byte_end":10394621,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"WriteU8","qualname":"::io::util::write_int::WriteU8","value":"WriteU8 {  }","parent":null,"children":[{"krate":0,"index":9338},{"krate":0,"index":9339},{"krate":0,"index":9340}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9295},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394637,"byte_end":10394644,"line_start":126,"line_end":126,"column_start":10,"column_end":17},"name":"WriteI8","qualname":"::io::util::write_int::WriteI8","value":"WriteI8 {  }","parent":null,"children":[{"krate":0,"index":9297},{"krate":0,"index":9298},{"krate":0,"index":9299}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9246},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394660,"byte_end":10394668,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"name":"WriteU16","qualname":"::io::util::write_int::WriteU16","value":"WriteU16 {  }","parent":null,"children":[{"krate":0,"index":9248},{"krate":0,"index":9249},{"krate":0,"index":9251},{"krate":0,"index":9252}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394693,"byte_end":10394701,"line_start":129,"line_end":129,"column_start":9,"column_end":17},"name":"WriteU32","qualname":"::io::util::write_int::WriteU32","value":"WriteU32 {  }","parent":null,"children":[{"krate":0,"index":9199},{"krate":0,"index":9200},{"krate":0,"index":9202},{"krate":0,"index":9203}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9148},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394726,"byte_end":10394734,"line_start":130,"line_end":130,"column_start":9,"column_end":17},"name":"WriteU64","qualname":"::io::util::write_int::WriteU64","value":"WriteU64 {  }","parent":null,"children":[{"krate":0,"index":9150},{"krate":0,"index":9151},{"krate":0,"index":9153},{"krate":0,"index":9154}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9099},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394759,"byte_end":10394768,"line_start":131,"line_end":131,"column_start":9,"column_end":18},"name":"WriteU128","qualname":"::io::util::write_int::WriteU128","value":"WriteU128 {  }","parent":null,"children":[{"krate":0,"index":9101},{"krate":0,"index":9102},{"krate":0,"index":9104},{"krate":0,"index":9105}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9050},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394796,"byte_end":10394804,"line_start":133,"line_end":133,"column_start":9,"column_end":17},"name":"WriteI16","qualname":"::io::util::write_int::WriteI16","value":"WriteI16 {  }","parent":null,"children":[{"krate":0,"index":9052},{"krate":0,"index":9053},{"krate":0,"index":9055},{"krate":0,"index":9056}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9001},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394829,"byte_end":10394837,"line_start":134,"line_end":134,"column_start":9,"column_end":17},"name":"WriteI32","qualname":"::io::util::write_int::WriteI32","value":"WriteI32 {  }","parent":null,"children":[{"krate":0,"index":9003},{"krate":0,"index":9004},{"krate":0,"index":9006},{"krate":0,"index":9007}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8952},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394862,"byte_end":10394870,"line_start":135,"line_end":135,"column_start":9,"column_end":17},"name":"WriteI64","qualname":"::io::util::write_int::WriteI64","value":"WriteI64 {  }","parent":null,"children":[{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8957},{"krate":0,"index":8958}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8903},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394895,"byte_end":10394904,"line_start":136,"line_end":136,"column_start":9,"column_end":18},"name":"WriteI128","qualname":"::io::util::write_int::WriteI128","value":"WriteI128 {  }","parent":null,"children":[{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8908},{"krate":0,"index":8909}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8854},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394932,"byte_end":10394942,"line_start":138,"line_end":138,"column_start":9,"column_end":19},"name":"WriteU16Le","qualname":"::io::util::write_int::WriteU16Le","value":"WriteU16Le {  }","parent":null,"children":[{"krate":0,"index":8856},{"krate":0,"index":8857},{"krate":0,"index":8859},{"krate":0,"index":8860}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8805},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10394970,"byte_end":10394980,"line_start":139,"line_end":139,"column_start":9,"column_end":19},"name":"WriteU32Le","qualname":"::io::util::write_int::WriteU32Le","value":"WriteU32Le {  }","parent":null,"children":[{"krate":0,"index":8807},{"krate":0,"index":8808},{"krate":0,"index":8810},{"krate":0,"index":8811}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8756},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10395008,"byte_end":10395018,"line_start":140,"line_end":140,"column_start":9,"column_end":19},"name":"WriteU64Le","qualname":"::io::util::write_int::WriteU64Le","value":"WriteU64Le {  }","parent":null,"children":[{"krate":0,"index":8758},{"krate":0,"index":8759},{"krate":0,"index":8761},{"krate":0,"index":8762}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8707},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10395046,"byte_end":10395057,"line_start":141,"line_end":141,"column_start":9,"column_end":20},"name":"WriteU128Le","qualname":"::io::util::write_int::WriteU128Le","value":"WriteU128Le {  }","parent":null,"children":[{"krate":0,"index":8709},{"krate":0,"index":8710},{"krate":0,"index":8712},{"krate":0,"index":8713}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8658},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10395088,"byte_end":10395098,"line_start":143,"line_end":143,"column_start":9,"column_end":19},"name":"WriteI16Le","qualname":"::io::util::write_int::WriteI16Le","value":"WriteI16Le {  }","parent":null,"children":[{"krate":0,"index":8660},{"krate":0,"index":8661},{"krate":0,"index":8663},{"krate":0,"index":8664}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8609},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10395126,"byte_end":10395136,"line_start":144,"line_end":144,"column_start":9,"column_end":19},"name":"WriteI32Le","qualname":"::io::util::write_int::WriteI32Le","value":"WriteI32Le {  }","parent":null,"children":[{"krate":0,"index":8611},{"krate":0,"index":8612},{"krate":0,"index":8614},{"krate":0,"index":8615}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8560},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10395164,"byte_end":10395174,"line_start":145,"line_end":145,"column_start":9,"column_end":19},"name":"WriteI64Le","qualname":"::io::util::write_int::WriteI64Le","value":"WriteI64Le {  }","parent":null,"children":[{"krate":0,"index":8562},{"krate":0,"index":8563},{"krate":0,"index":8565},{"krate":0,"index":8566}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8511},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_int.rs","byte_start":10395202,"byte_end":10395213,"line_start":146,"line_end":146,"column_start":9,"column_end":20},"name":"WriteI128Le","qualname":"::io::util::write_int::WriteI128Le","value":"WriteI128Le {  }","parent":null,"children":[{"krate":0,"index":8513},{"krate":0,"index":8514},{"krate":0,"index":8516},{"krate":0,"index":8517}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"net","qualname":"::net","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3261},{"krate":0,"index":3324},{"krate":0,"index":3662},{"krate":0,"index":3663},{"krate":0,"index":3664}],"decl_id":null,"docs":" TCP/UDP/Unix bindings for `tokio`.","sig":null,"attributes":[{"value":"cfg(not(loom))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79298,"byte_end":79316,"line_start":1,"line_end":1,"column_start":1,"column_end":19}},{"value":"/ TCP/UDP/Unix bindings for `tokio`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79318,"byte_end":79356,"line_start":3,"line_end":3,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79357,"byte_end":79360,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This module contains the TCP/UDP/Unix networking types, similar to the standard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79361,"byte_end":79444,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ library, which can be used to implement networking protocols.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79445,"byte_end":79510,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79511,"byte_end":79514,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Organization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79515,"byte_end":79533,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79534,"byte_end":79537,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`TcpListener`] and [`TcpStream`] provide functionality for communication over TCP","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79538,"byte_end":79626,"line_start":10,"line_end":10,"column_start":1,"column_end":89}},{"value":"/ * [`UdpSocket`] provides functionality for communication over UDP","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79627,"byte_end":79696,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ * [`UnixListener`] and [`UnixStream`] provide functionality for communication over a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79697,"byte_end":79785,"line_start":12,"line_end":12,"column_start":1,"column_end":89}},{"value":"/ Unix Domain Stream Socket **(available on Unix only)**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79786,"byte_end":79844,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/ * [`UnixDatagram`] provides functionality for communication","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79845,"byte_end":79908,"line_start":14,"line_end":14,"column_start":1,"column_end":64}},{"value":"/ over Unix Domain Datagram Socket **(available on Unix only)**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79909,"byte_end":79974,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79976,"byte_end":79979,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`TcpListener`]: TcpListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":79980,"byte_end":80012,"line_start":18,"line_end":18,"column_start":1,"column_end":33}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80013,"byte_end":80041,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/ [`UdpSocket`]: UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80042,"byte_end":80070,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ [`UnixListener`]: UnixListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80071,"byte_end":80105,"line_start":21,"line_end":21,"column_start":1,"column_end":35}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80106,"byte_end":80136,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ [`UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80137,"byte_end":80171,"line_start":23,"line_end":23,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":293},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81393,"byte_end":81406,"line_start":20,"line_end":20,"column_start":11,"column_end":24},"name":"ToSocketAddrs","qualname":"::net::addr::ToSocketAddrs","value":"ToSocketAddrs: sealed::ToSocketAddrsPriv","parent":null,"children":[],"decl_id":null,"docs":" Converts or resolves without blocking to one or more `SocketAddr` values.","sig":null,"attributes":[{"value":"/ Converts or resolves without blocking to one or more `SocketAddr` values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80805,"byte_end":80882,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80883,"byte_end":80886,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # DNS","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80887,"byte_end":80896,"line_start":8,"line_end":8,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80897,"byte_end":80900,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Implementations of `ToSocketAddrs` for string types require a DNS lookup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80901,"byte_end":80978,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80979,"byte_end":80982,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80983,"byte_end":80996,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":80997,"byte_end":81000,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Currently, this trait is only used as an argument to Tokio functions that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81001,"byte_end":81078,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ need to reference a target socket address. To perform a `SocketAddr`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81079,"byte_end":81151,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ conversion directly, use [`lookup_host()`](super::lookup_host()).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81152,"byte_end":81221,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81222,"byte_end":81225,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and is intended to be opaque. The details of the trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81226,"byte_end":81305,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ will change. Stabilization is pending enhancements to the Rust language.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81306,"byte_end":81382,"line_start":19,"line_end":19,"column_start":1,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":342},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87846,"byte_end":87863,"line_start":248,"line_end":248,"column_start":15,"column_end":32},"name":"ToSocketAddrsPriv","qualname":"::net::addr::sealed::ToSocketAddrsPriv","value":"ToSocketAddrsPriv","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":343},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87879,"byte_end":87883,"line_start":249,"line_end":249,"column_start":14,"column_end":18},"name":"Iter","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Iter","value":"type Iter: Iterator<Item = SocketAddr> + Send + 'static;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":344},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87944,"byte_end":87950,"line_start":250,"line_end":250,"column_start":14,"column_end":20},"name":"Future","qualname":"::net::addr::sealed::ToSocketAddrsPriv::Future","value":"type Future: Future<Output = io::Result<Self::Iter>> + Send + 'static;","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88022,"byte_end":88037,"line_start":252,"line_end":252,"column_start":12,"column_end":27},"name":"to_socket_addrs","qualname":"::net::addr::sealed::ToSocketAddrsPriv::to_socket_addrs","value":"pub fn to_socket_addrs(&Self, Internal) -> Self::Future","parent":{"krate":0,"index":342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":346},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88148,"byte_end":88156,"line_start":256,"line_end":256,"column_start":16,"column_end":24},"name":"Internal","qualname":"::net::addr::sealed::Internal","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88093,"byte_end":88132,"line_start":255,"line_end":255,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":2826},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88398,"byte_end":88408,"line_start":268,"line_end":268,"column_start":20,"column_end":30},"name":"MaybeReady","qualname":"::net::addr::sealed::MaybeReady","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2841},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88698,"byte_end":88701,"line_start":279,"line_end":279,"column_start":13,"column_end":16},"name":"One","qualname":"::net::addr::sealed::OneOrMore::One","value":"OneOrMore::One(option::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2844},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88745,"byte_end":88749,"line_start":280,"line_end":280,"column_start":13,"column_end":17},"name":"More","qualname":"::net::addr::sealed::OneOrMore::More","value":"OneOrMore::More(vec::IntoIter<SocketAddr>)","parent":{"krate":0,"index":2840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2840},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88674,"byte_end":88683,"line_start":278,"line_end":278,"column_start":18,"column_end":27},"name":"OneOrMore","qualname":"::net::addr::sealed::OneOrMore","value":"pub enum OneOrMore {\n    One(option::IntoIter<SocketAddr>),\n    More(vec::IntoIter<SocketAddr>),\n}","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2844}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":3267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/lookup_host.rs","byte_start":10396086,"byte_end":10396097,"line_start":32,"line_end":32,"column_start":18,"column_end":29},"name":"lookup_host","qualname":"::net::lookup_host::lookup_host","value":"pub async fn lookup_host<T>(T) -> /*impl Trait*/ where T: ToSocketAddrs","parent":null,"children":[],"decl_id":null,"docs":" Performs a DNS resolution.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":2851},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::net::tcp","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":2852},{"krate":0,"index":2902},{"krate":0,"index":2939},{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2974},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023},{"krate":0,"index":12719},{"krate":0,"index":3024},{"krate":0,"index":3143}],"decl_id":null,"docs":" TCP utility types\n","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}},{"value":"/ TCP utility types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/mod.rs","byte_start":10396250,"byte_end":10396271,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3272},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398125,"byte_end":10398136,"line_start":52,"line_end":52,"column_start":16,"column_end":27},"name":"TcpListener","qualname":"::net::tcp::listener::TcpListener","value":"TcpListener {  }","parent":null,"children":[{"krate":0,"index":3273}],"decl_id":null,"docs":" A TCP socket server, listening for connections.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2870},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399635,"byte_end":10399639,"line_start":97,"line_end":97,"column_start":18,"column_end":22},"name":"bind","qualname":"<TcpListener>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TcpListener, which will be bound to the specified address.","sig":null,"attributes":[{"value":"/ Creates a new TcpListener, which will be bound to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398219,"byte_end":10398295,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398300,"byte_end":10398303,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The returned listener is ready for accepting connections.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398308,"byte_end":10398369,"line_start":60,"line_end":60,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398374,"byte_end":10398377,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Binding with a port number of 0 will request that the OS assigns a port","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398382,"byte_end":10398457,"line_start":62,"line_end":62,"column_start":5,"column_end":80}},{"value":"/ to this listener. The port allocated can be queried via the `local_addr`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398462,"byte_end":10398538,"line_start":63,"line_end":63,"column_start":5,"column_end":81}},{"value":"/ method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398543,"byte_end":10398554,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398559,"byte_end":10398562,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ The address type can be any implementor of the [`ToSocketAddrs`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398567,"byte_end":10398642,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ If `addr` yields multiple addresses, bind will be attempted with each of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398647,"byte_end":10398723,"line_start":67,"line_end":67,"column_start":5,"column_end":81}},{"value":"/ the addresses until one succeeds and returns the listener. If none of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398728,"byte_end":10398801,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ the addresses succeed in creating a listener, the error returned from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398806,"byte_end":10398879,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ the last attempt (the last address) is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398884,"byte_end":10398936,"line_start":70,"line_end":70,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398941,"byte_end":10398944,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This function sets the `SO_REUSEADDR` option on the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398949,"byte_end":10399012,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399017,"byte_end":10399020,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before binding, you can use the [`TcpSocket`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399025,"byte_end":10399098,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399103,"byte_end":10399112,"line_start":75,"line_end":75,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399117,"byte_end":10399120,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399125,"byte_end":10399179,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399184,"byte_end":10399231,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399236,"byte_end":10399239,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399244,"byte_end":10399258,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399263,"byte_end":10399266,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399271,"byte_end":10399284,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399289,"byte_end":10399321,"line_start":83,"line_end":83,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399326,"byte_end":10399329,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399334,"byte_end":10399350,"line_start":85,"line_end":85,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399355,"byte_end":10399358,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399363,"byte_end":10399381,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399386,"byte_end":10399425,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:2345\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399430,"byte_end":10399496,"line_start":89,"line_end":89,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399501,"byte_end":10399504,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/     // use the listener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399509,"byte_end":10399536,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399541,"byte_end":10399544,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/     # let _ = listener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399549,"byte_end":10399576,"line_start":93,"line_end":93,"column_start":5,"column_end":32}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399581,"byte_end":10399595,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399600,"byte_end":10399605,"line_start":95,"line_end":95,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10399610,"byte_end":10399617,"line_start":96,"line_end":96,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401205,"byte_end":10401211,"line_start":149,"line_end":149,"column_start":18,"column_end":24},"name":"accept","qualname":"<TcpListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection from this listener.","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection from this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400350,"byte_end":10400407,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400412,"byte_end":10400415,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ This function will yield once a new TCP connection is established. When","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400420,"byte_end":10400495,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ established, the corresponding [`TcpStream`] and the remote peer's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400500,"byte_end":10400570,"line_start":125,"line_end":125,"column_start":5,"column_end":75}},{"value":"/ address will be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400575,"byte_end":10400604,"line_start":126,"line_end":126,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400609,"byte_end":10400612,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400617,"byte_end":10400664,"line_start":128,"line_end":128,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400669,"byte_end":10400672,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400677,"byte_end":10400691,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400696,"byte_end":10400699,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400704,"byte_end":10400717,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400722,"byte_end":10400754,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400759,"byte_end":10400762,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400767,"byte_end":10400783,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400788,"byte_end":10400791,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400796,"byte_end":10400814,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400819,"byte_end":10400858,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400863,"byte_end":10400929,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400934,"byte_end":10400937,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/     match listener.accept().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400942,"byte_end":10400981,"line_start":141,"line_end":141,"column_start":5,"column_end":44}},{"value":"/         Ok((_socket, addr)) => println!(\"new client: {:?}\", addr),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10400986,"byte_end":10401056,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/         Err(e) => println!(\"couldn't get client: {:?}\", e),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401061,"byte_end":10401124,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401129,"byte_end":10401138,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401143,"byte_end":10401146,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401151,"byte_end":10401165,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401170,"byte_end":10401175,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401180,"byte_end":10401187,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401879,"byte_end":10401890,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<TcpListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(TcpStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401501,"byte_end":10401564,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401569,"byte_end":10401572,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401577,"byte_end":10401653,"line_start":162,"line_end":162,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401658,"byte_end":10401732,"line_start":163,"line_end":163,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401737,"byte_end":10401813,"line_start":164,"line_end":164,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10401818,"byte_end":10401867,"line_start":165,"line_end":165,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403928,"byte_end":10403936,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpListener>::from_std","value":"pub fn from_std(net::TcpListener) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpListener` from a `std::net::TcpListener`.","sig":null,"attributes":[{"value":"/ Creates new `TcpListener` from a `std::net::TcpListener`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402498,"byte_end":10402559,"line_start":183,"line_end":183,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402564,"byte_end":10402567,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP listener from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402572,"byte_end":10402644,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402649,"byte_end":10402725,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ about the underlying listener; it is left up to the user to set it in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402730,"byte_end":10402803,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402808,"byte_end":10402830,"line_start":188,"line_end":188,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402835,"byte_end":10402838,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This API is typically paired with the `socket2` crate and the `Socket`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402843,"byte_end":10402917,"line_start":190,"line_end":190,"column_start":5,"column_end":79}},{"value":"/ type to build up and customize a listener before it's shipped off to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10402922,"byte_end":10402998,"line_start":191,"line_end":191,"column_start":5,"column_end":81}},{"value":"/ backing event loop. This allows configuration of options like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403003,"byte_end":10403068,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ `SO_REUSEPORT`, binding to multiple addresses, etc.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403073,"byte_end":10403128,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403133,"byte_end":10403136,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403141,"byte_end":10403155,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403160,"byte_end":10403163,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403168,"byte_end":10403186,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403191,"byte_end":10403217,"line_start":198,"line_end":198,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403222,"byte_end":10403254,"line_start":199,"line_end":199,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403259,"byte_end":10403262,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403267,"byte_end":10403285,"line_start":201,"line_end":201,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403290,"byte_end":10403341,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"/     let std_listener = std::net::TcpListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403346,"byte_end":10403417,"line_start":203,"line_end":203,"column_start":5,"column_end":76}},{"value":"/     std_listener.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403422,"byte_end":10403466,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"/     let listener = TcpListener::from_std(std_listener)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403471,"byte_end":10403531,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403536,"byte_end":10403550,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403555,"byte_end":10403560,"line_start":207,"line_end":207,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403565,"byte_end":10403572,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403577,"byte_end":10403580,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403585,"byte_end":10403597,"line_start":210,"line_end":210,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403602,"byte_end":10403605,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403610,"byte_end":10403670,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403675,"byte_end":10403678,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403683,"byte_end":10403753,"line_start":214,"line_end":214,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403758,"byte_end":10403831,"line_start":215,"line_end":215,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10403836,"byte_end":10403916,"line_start":216,"line_end":216,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404986,"byte_end":10404994,"line_start":245,"line_end":245,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpListener`] into a [`std::net::TcpListener`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404136,"byte_end":10404208,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404213,"byte_end":10404216,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpListener`] will have nonblocking mode set as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404221,"byte_end":10404297,"line_start":225,"line_end":225,"column_start":5,"column_end":81}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404302,"byte_end":10404377,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404382,"byte_end":10404385,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404390,"byte_end":10404404,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404409,"byte_end":10404412,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404417,"byte_end":10404435,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404440,"byte_end":10404466,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404471,"byte_end":10404474,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404479,"byte_end":10404497,"line_start":233,"line_end":233,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404502,"byte_end":10404553,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404558,"byte_end":10404639,"line_start":235,"line_end":235,"column_start":5,"column_end":86}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404644,"byte_end":10404698,"line_start":236,"line_end":236,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404703,"byte_end":10404748,"line_start":237,"line_end":237,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404753,"byte_end":10404767,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404772,"byte_end":10404777,"line_start":239,"line_end":239,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404782,"byte_end":10404789,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404794,"byte_end":10404797,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::TcpListener`]: TcpListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404802,"byte_end":10404846,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`std::net::TcpListener`]: std::net::TcpListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404851,"byte_end":10404903,"line_start":243,"line_end":243,"column_start":5,"column_end":57}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpListener::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10404908,"byte_end":10404974,"line_start":244,"line_end":244,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406534,"byte_end":10406544,"line_start":293,"line_end":293,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this listener is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this listener is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10405808,"byte_end":10405869,"line_start":270,"line_end":270,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10405874,"byte_end":10405877,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This can be useful, for example, when binding to port 0 to figure out","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10405882,"byte_end":10405955,"line_start":272,"line_end":272,"column_start":5,"column_end":78}},{"value":"/ which port was actually bound.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10405960,"byte_end":10405994,"line_start":273,"line_end":273,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10405999,"byte_end":10406002,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406007,"byte_end":10406021,"line_start":275,"line_end":275,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406026,"byte_end":10406029,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406034,"byte_end":10406052,"line_start":277,"line_end":277,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406057,"byte_end":10406089,"line_start":278,"line_end":278,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406094,"byte_end":10406097,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406102,"byte_end":10406118,"line_start":280,"line_end":280,"column_start":5,"column_end":21}},{"value":"/ use std::net::{Ipv4Addr, SocketAddr, SocketAddrV4};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406123,"byte_end":10406178,"line_start":281,"line_end":281,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406183,"byte_end":10406186,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406191,"byte_end":10406209,"line_start":283,"line_end":283,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406214,"byte_end":10406253,"line_start":284,"line_end":284,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406258,"byte_end":10406324,"line_start":285,"line_end":285,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406329,"byte_end":10406332,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(listener.local_addr()?,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406337,"byte_end":10406379,"line_start":287,"line_end":287,"column_start":5,"column_end":47}},{"value":"/                SocketAddr::V4(SocketAddrV4::new(Ipv4Addr::new(127, 0, 0, 1), 8080)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406384,"byte_end":10406473,"line_start":288,"line_end":288,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406478,"byte_end":10406481,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406486,"byte_end":10406500,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406505,"byte_end":10406510,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406515,"byte_end":10406522,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2890},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407237,"byte_end":10407240,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpListener>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406620,"byte_end":10406678,"line_start":297,"line_end":297,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406683,"byte_end":10406686,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406691,"byte_end":10406751,"line_start":299,"line_end":299,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406756,"byte_end":10406759,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406764,"byte_end":10406801,"line_start":301,"line_end":301,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406806,"byte_end":10406809,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406814,"byte_end":10406828,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406833,"byte_end":10406836,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406841,"byte_end":10406854,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406859,"byte_end":10406891,"line_start":306,"line_end":306,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406896,"byte_end":10406899,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406904,"byte_end":10406920,"line_start":308,"line_end":308,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406925,"byte_end":10406928,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406933,"byte_end":10406951,"line_start":310,"line_end":310,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10406956,"byte_end":10406995,"line_start":311,"line_end":311,"column_start":5,"column_end":44}},{"value":"/    let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407000,"byte_end":10407062,"line_start":312,"line_end":312,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407067,"byte_end":10407070,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/    listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407075,"byte_end":10407132,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"/    assert_eq!(listener.ttl()?, 100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407137,"byte_end":10407177,"line_start":315,"line_end":315,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407182,"byte_end":10407185,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/    Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407190,"byte_end":10407203,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407208,"byte_end":10407213,"line_start":318,"line_end":318,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407218,"byte_end":10407225,"line_start":319,"line_end":319,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407869,"byte_end":10407876,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpListener>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407302,"byte_end":10407360,"line_start":324,"line_end":324,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407365,"byte_end":10407368,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407373,"byte_end":10407449,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407454,"byte_end":10407475,"line_start":327,"line_end":327,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407480,"byte_end":10407483,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407488,"byte_end":10407502,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407507,"byte_end":10407510,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407515,"byte_end":10407528,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407533,"byte_end":10407565,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407570,"byte_end":10407573,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407578,"byte_end":10407594,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407599,"byte_end":10407602,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407607,"byte_end":10407625,"line_start":336,"line_end":336,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407630,"byte_end":10407669,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407674,"byte_end":10407737,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407742,"byte_end":10407745,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/     listener.set_ttl(100).expect(\"could not set TTL\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407750,"byte_end":10407808,"line_start":340,"line_end":340,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407813,"byte_end":10407816,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407821,"byte_end":10407835,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407840,"byte_end":10407845,"line_start":343,"line_end":343,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407850,"byte_end":10407857,"line_start":344,"line_end":344,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412013,"byte_end":10412022,"line_start":84,"line_end":84,"column_start":16,"column_end":25},"name":"TcpSocket","qualname":"::net::tcp::socket::TcpSocket","value":"TcpSocket {  }","parent":null,"children":[{"krate":0,"index":3275}],"decl_id":null,"docs":" A TCP socket that has not yet been converted to a `TcpStream` or\n `TcpListener`.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2915},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412886,"byte_end":10412892,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpSocket>::new_v4","value":"pub fn new_v4() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv4.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv4.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412091,"byte_end":10412135,"line_start":90,"line_end":90,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412140,"byte_end":10412143,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET` and `SOCK_STREAM`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412148,"byte_end":10412203,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412208,"byte_end":10412211,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412216,"byte_end":10412229,"line_start":94,"line_end":94,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412234,"byte_end":10412237,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412242,"byte_end":10412315,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412320,"byte_end":10412360,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412365,"byte_end":10412368,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412373,"byte_end":10412387,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412392,"byte_end":10412395,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv4 socket and start listening.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412400,"byte_end":10412449,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412454,"byte_end":10412457,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412462,"byte_end":10412475,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412480,"byte_end":10412510,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412515,"byte_end":10412518,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412523,"byte_end":10412539,"line_start":106,"line_end":106,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412544,"byte_end":10412547,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412552,"byte_end":10412570,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412575,"byte_end":10412614,"line_start":109,"line_end":109,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412619,"byte_end":10412672,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412677,"byte_end":10412719,"line_start":111,"line_end":111,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412724,"byte_end":10412751,"line_start":112,"line_end":112,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412756,"byte_end":10412759,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412764,"byte_end":10412807,"line_start":114,"line_end":114,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412812,"byte_end":10412833,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412838,"byte_end":10412852,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412857,"byte_end":10412862,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412867,"byte_end":10412874,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413809,"byte_end":10413815,"line_start":153,"line_end":153,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpSocket>::new_v6","value":"pub fn new_v6() -> io::Result<TcpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Create a new socket configured for IPv6.","sig":null,"attributes":[{"value":"/ Create a new socket configured for IPv6.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413017,"byte_end":10413061,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413066,"byte_end":10413069,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Calls `socket(2)` with `AF_INET6` and `SOCK_STREAM`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413074,"byte_end":10413130,"line_start":126,"line_end":126,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413135,"byte_end":10413138,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413143,"byte_end":10413156,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413161,"byte_end":10413164,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ On success, the newly created `TcpSocket` is returned. If an error is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413169,"byte_end":10413242,"line_start":130,"line_end":130,"column_start":5,"column_end":78}},{"value":"/ encountered, it is returned instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413247,"byte_end":10413287,"line_start":131,"line_end":131,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413292,"byte_end":10413295,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413300,"byte_end":10413314,"line_start":133,"line_end":133,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413319,"byte_end":10413322,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Create a new IPv6 socket and start listening.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413327,"byte_end":10413376,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413381,"byte_end":10413384,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413389,"byte_end":10413402,"line_start":137,"line_end":137,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413407,"byte_end":10413437,"line_start":138,"line_end":138,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413442,"byte_end":10413445,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413450,"byte_end":10413466,"line_start":140,"line_end":140,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413471,"byte_end":10413474,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413479,"byte_end":10413497,"line_start":142,"line_end":142,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413502,"byte_end":10413541,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/     let addr = \"[::1]:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413546,"byte_end":10413595,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/     let socket = TcpSocket::new_v6()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413600,"byte_end":10413642,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413647,"byte_end":10413674,"line_start":146,"line_end":146,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413679,"byte_end":10413682,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(128)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413687,"byte_end":10413730,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413735,"byte_end":10413756,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413761,"byte_end":10413775,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413780,"byte_end":10413785,"line_start":151,"line_end":151,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413790,"byte_end":10413797,"line_start":152,"line_end":152,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414630,"byte_end":10414643,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"set_reuseaddr","qualname":"<TcpSocket>::set_reuseaddr","value":"pub fn set_reuseaddr(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use address.","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413940,"byte_end":10413990,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10413995,"byte_end":10413998,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414003,"byte_end":10414068,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414073,"byte_end":10414108,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414113,"byte_end":10414116,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414121,"byte_end":10414135,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414140,"byte_end":10414143,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414148,"byte_end":10414161,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414166,"byte_end":10414196,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414201,"byte_end":10414204,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414209,"byte_end":10414225,"line_start":168,"line_end":168,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414230,"byte_end":10414233,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414238,"byte_end":10414256,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414261,"byte_end":10414300,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414305,"byte_end":10414358,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414363,"byte_end":10414366,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414371,"byte_end":10414413,"line_start":174,"line_end":174,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414418,"byte_end":10414454,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414459,"byte_end":10414486,"line_start":176,"line_end":176,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414491,"byte_end":10414494,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414499,"byte_end":10414543,"line_start":178,"line_end":178,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414548,"byte_end":10414569,"line_start":179,"line_end":179,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414574,"byte_end":10414577,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414582,"byte_end":10414596,"line_start":181,"line_end":181,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414601,"byte_end":10414606,"line_start":182,"line_end":182,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414611,"byte_end":10414618,"line_start":183,"line_end":183,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415342,"byte_end":10415351,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"reuseaddr","qualname":"<TcpSocket>::reuseaddr","value":"pub fn reuseaddr(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the value set for `SO_REUSEADDR` on this socket","sig":null,"attributes":[{"value":"/ Retrieves the value set for `SO_REUSEADDR` on this socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414743,"byte_end":10414804,"line_start":188,"line_end":188,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414809,"byte_end":10414812,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414817,"byte_end":10414831,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414836,"byte_end":10414839,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414844,"byte_end":10414857,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414862,"byte_end":10414892,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414897,"byte_end":10414900,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414905,"byte_end":10414921,"line_start":195,"line_end":195,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414926,"byte_end":10414929,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414934,"byte_end":10414952,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10414957,"byte_end":10414996,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415001,"byte_end":10415054,"line_start":199,"line_end":199,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415059,"byte_end":10415062,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415067,"byte_end":10415109,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseaddr(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415114,"byte_end":10415150,"line_start":202,"line_end":202,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseaddr().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415155,"byte_end":10415200,"line_start":203,"line_end":203,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415205,"byte_end":10415232,"line_start":204,"line_end":204,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415237,"byte_end":10415240,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415245,"byte_end":10415289,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415294,"byte_end":10415308,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415313,"byte_end":10415318,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415323,"byte_end":10415330,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2919},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416352,"byte_end":10416365,"line_start":244,"line_end":244,"column_start":12,"column_end":25},"name":"set_reuseport","qualname":"<TcpSocket>::set_reuseport","value":"pub fn set_reuseport(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415427,"byte_end":10415506,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415511,"byte_end":10415545,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415550,"byte_end":10415553,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415558,"byte_end":10415623,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415628,"byte_end":10415663,"line_start":218,"line_end":218,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415668,"byte_end":10415671,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415676,"byte_end":10415690,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415695,"byte_end":10415698,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415703,"byte_end":10415716,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415721,"byte_end":10415751,"line_start":223,"line_end":223,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415756,"byte_end":10415759,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415764,"byte_end":10415780,"line_start":225,"line_end":225,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415785,"byte_end":10415788,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415793,"byte_end":10415811,"line_start":227,"line_end":227,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415816,"byte_end":10415855,"line_start":228,"line_end":228,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415860,"byte_end":10415913,"line_start":229,"line_end":229,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415918,"byte_end":10415921,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415926,"byte_end":10415968,"line_start":231,"line_end":231,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10415973,"byte_end":10416009,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416014,"byte_end":10416041,"line_start":233,"line_end":233,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416046,"byte_end":10416049,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416054,"byte_end":10416098,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416103,"byte_end":10416117,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416122,"byte_end":10416127,"line_start":237,"line_end":237,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416132,"byte_end":10416139,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416144,"byte_end":10416217,"line_start":239,"line_end":239,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2920},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417440,"byte_end":10417449,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"reuseport","qualname":"<TcpSocket>::reuseport","value":"pub fn reuseport(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Allow the socket to bind to an in-use port. Only available for unix systems\n (excluding Solaris & Illumos).","sig":null,"attributes":[{"value":"/ Allow the socket to bind to an in-use port. Only available for unix systems","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416465,"byte_end":10416544,"line_start":248,"line_end":248,"column_start":5,"column_end":84}},{"value":"/ (excluding Solaris & Illumos).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416549,"byte_end":10416583,"line_start":249,"line_end":249,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416588,"byte_end":10416591,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Behavior is platform specific. Refer to the target platform's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416596,"byte_end":10416661,"line_start":251,"line_end":251,"column_start":5,"column_end":70}},{"value":"/ documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416666,"byte_end":10416701,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416706,"byte_end":10416709,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416714,"byte_end":10416728,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416733,"byte_end":10416736,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416741,"byte_end":10416754,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416759,"byte_end":10416789,"line_start":257,"line_end":257,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416794,"byte_end":10416797,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416802,"byte_end":10416818,"line_start":259,"line_end":259,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416823,"byte_end":10416826,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416831,"byte_end":10416849,"line_start":261,"line_end":261,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416854,"byte_end":10416893,"line_start":262,"line_end":262,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416898,"byte_end":10416951,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416956,"byte_end":10416959,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10416964,"byte_end":10417006,"line_start":265,"line_end":265,"column_start":5,"column_end":47}},{"value":"/     socket.set_reuseport(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417011,"byte_end":10417047,"line_start":266,"line_end":266,"column_start":5,"column_end":41}},{"value":"/     assert!(socket.reuseport().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417052,"byte_end":10417097,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417102,"byte_end":10417129,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417134,"byte_end":10417137,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417142,"byte_end":10417186,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417191,"byte_end":10417205,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417210,"byte_end":10417215,"line_start":272,"line_end":272,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417220,"byte_end":10417227,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"cfg(all(unix, not(target_os = \"solaris\"), not(target_os = \"illumos\")))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417232,"byte_end":10417305,"line_start":274,"line_end":274,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2921},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417677,"byte_end":10417697,"line_start":286,"line_end":286,"column_start":12,"column_end":32},"name":"set_send_buffer_size","qualname":"<TcpSocket>::set_send_buffer_size","value":"pub fn set_send_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP send buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP send buffer on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417525,"byte_end":10417581,"line_start":283,"line_end":283,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417586,"byte_end":10417589,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_SNDBUF` socket option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417594,"byte_end":10417665,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2922},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419020,"byte_end":10419036,"line_start":313,"line_end":313,"column_start":12,"column_end":28},"name":"send_buffer_size","qualname":"<TcpSocket>::send_buffer_size","value":"pub fn send_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP send buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP send buffer for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417793,"byte_end":10417853,"line_start":290,"line_end":290,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417858,"byte_end":10417861,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_SNDBUF` socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417866,"byte_end":10417940,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417945,"byte_end":10417956,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417961,"byte_end":10417964,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_send_buffer_size`] has been called on this socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10417969,"byte_end":10418041,"line_start":295,"line_end":295,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418046,"byte_end":10418120,"line_start":296,"line_end":296,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418125,"byte_end":10418193,"line_start":297,"line_end":297,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418198,"byte_end":10418220,"line_start":298,"line_end":298,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418225,"byte_end":10418228,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418233,"byte_end":10418308,"line_start":300,"line_end":300,"column_start":5,"column_end":80}},{"value":"/   send buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418313,"byte_end":10418384,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418389,"byte_end":10418465,"line_start":302,"line_end":302,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418470,"byte_end":10418489,"line_start":303,"line_end":303,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418494,"byte_end":10418569,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418574,"byte_end":10418649,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418654,"byte_end":10418670,"line_start":306,"line_end":306,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418675,"byte_end":10418740,"line_start":307,"line_end":307,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418745,"byte_end":10418810,"line_start":308,"line_end":308,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418815,"byte_end":10418887,"line_start":309,"line_end":309,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418892,"byte_end":10418937,"line_start":310,"line_end":310,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418942,"byte_end":10418945,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ [`set_send_buffer_size`]: #method.set_send_buffer_size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10418950,"byte_end":10419008,"line_start":312,"line_end":312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419273,"byte_end":10419293,"line_start":320,"line_end":320,"column_start":12,"column_end":32},"name":"set_recv_buffer_size","qualname":"<TcpSocket>::set_recv_buffer_size","value":"pub fn set_recv_buffer_size(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the TCP receive buffer on this socket.","sig":null,"attributes":[{"value":"/ Sets the size of the TCP receive buffer on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419118,"byte_end":10419177,"line_start":317,"line_end":317,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419182,"byte_end":10419185,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this sets the `SO_RCVBUF` socket option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419190,"byte_end":10419261,"line_start":319,"line_end":319,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420622,"byte_end":10420638,"line_start":347,"line_end":347,"column_start":12,"column_end":28},"name":"recv_buffer_size","qualname":"<TcpSocket>::recv_buffer_size","value":"pub fn recv_buffer_size(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the TCP receive buffer for this socket.","sig":null,"attributes":[{"value":"/ Returns the size of the TCP receive buffer for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419389,"byte_end":10419452,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419457,"byte_end":10419460,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ On most operating systems, this is the value of the `SO_RCVBUF` socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419465,"byte_end":10419539,"line_start":326,"line_end":326,"column_start":5,"column_end":79}},{"value":"/ option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419544,"byte_end":10419555,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419560,"byte_end":10419563,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Note that if [`set_recv_buffer_size`] has been called on this socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419568,"byte_end":10419640,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ previously, the value returned by this function may not be the same as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419645,"byte_end":10419719,"line_start":330,"line_end":330,"column_start":5,"column_end":79}},{"value":"/ the argument provided to `set_send_buffer_size`. This is for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419724,"byte_end":10419792,"line_start":331,"line_end":331,"column_start":5,"column_end":73}},{"value":"/ following reasons:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419797,"byte_end":10419819,"line_start":332,"line_end":332,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419824,"byte_end":10419827,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ * Most operating systems have minimum and maximum allowed sizes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419832,"byte_end":10419907,"line_start":334,"line_end":334,"column_start":5,"column_end":80}},{"value":"/   receive buffer, and will clamp the provided value if it is below the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419912,"byte_end":10419986,"line_start":335,"line_end":335,"column_start":5,"column_end":79}},{"value":"/   minimum or above the maximum. The minimum and maximum buffer sizes are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10419991,"byte_end":10420067,"line_start":336,"line_end":336,"column_start":5,"column_end":81}},{"value":"/   OS-dependent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420072,"byte_end":10420091,"line_start":337,"line_end":337,"column_start":5,"column_end":24}},{"value":"/ * Linux will double the buffer size to account for internal bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420096,"byte_end":10420171,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/   data, and returns the doubled value from `getsockopt(2)`. As per `man","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420176,"byte_end":10420251,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/   7 socket`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420256,"byte_end":10420272,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/   > Sets or gets the maximum socket send buffer in bytes. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420277,"byte_end":10420342,"line_start":341,"line_end":341,"column_start":5,"column_end":70}},{"value":"/   > kernel doubles this value (to allow space for bookkeeping","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420347,"byte_end":10420412,"line_start":342,"line_end":342,"column_start":5,"column_end":70}},{"value":"/   > overhead) when it is set using `setsockopt(2)`, and this doubled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420417,"byte_end":10420489,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/   > value is returned by `getsockopt(2)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420494,"byte_end":10420539,"line_start":344,"line_end":344,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420544,"byte_end":10420547,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ [`set_recv_buffer_size`]: #method.set_recv_buffer_size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420552,"byte_end":10420610,"line_start":346,"line_end":346,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421346,"byte_end":10421356,"line_start":373,"line_end":373,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local address of this socket.","sig":null,"attributes":[{"value":"/ Get the local address of this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420720,"byte_end":10420761,"line_start":351,"line_end":351,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420766,"byte_end":10420769,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Will fail on windows if called before `bind`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420774,"byte_end":10420823,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420828,"byte_end":10420831,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420836,"byte_end":10420850,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420855,"byte_end":10420858,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420863,"byte_end":10420876,"line_start":357,"line_end":357,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420881,"byte_end":10420911,"line_start":358,"line_end":358,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420916,"byte_end":10420919,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420924,"byte_end":10420940,"line_start":360,"line_end":360,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420945,"byte_end":10420948,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420953,"byte_end":10420971,"line_start":362,"line_end":362,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10420976,"byte_end":10421015,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421020,"byte_end":10421073,"line_start":364,"line_end":364,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421078,"byte_end":10421081,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421086,"byte_end":10421128,"line_start":366,"line_end":366,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421133,"byte_end":10421160,"line_start":367,"line_end":367,"column_start":5,"column_end":32}},{"value":"/     assert_eq!(socket.local_addr().unwrap().to_string(), \"127.0.0.1:8080\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421165,"byte_end":10421244,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421249,"byte_end":10421293,"line_start":369,"line_end":369,"column_start":5,"column_end":49}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421298,"byte_end":10421312,"line_start":370,"line_end":370,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421317,"byte_end":10421322,"line_start":371,"line_end":371,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421327,"byte_end":10421334,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2926},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422186,"byte_end":10422190,"line_start":405,"line_end":405,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpSocket>::bind","value":"pub fn bind(&Self, SocketAddr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Bind the socket to the given address.","sig":null,"attributes":[{"value":"/ Bind the socket to the given address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421438,"byte_end":10421479,"line_start":377,"line_end":377,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421484,"byte_end":10421487,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This calls the `bind(2)` operating-system function. Behavior is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421492,"byte_end":10421559,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421564,"byte_end":10421640,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421645,"byte_end":10421657,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421662,"byte_end":10421665,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421670,"byte_end":10421684,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421689,"byte_end":10421692,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Bind a socket before listening.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421697,"byte_end":10421732,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421737,"byte_end":10421740,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421745,"byte_end":10421758,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421763,"byte_end":10421793,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421798,"byte_end":10421801,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421806,"byte_end":10421822,"line_start":390,"line_end":390,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421827,"byte_end":10421830,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421835,"byte_end":10421853,"line_start":392,"line_end":392,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421858,"byte_end":10421897,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421902,"byte_end":10421955,"line_start":394,"line_end":394,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421960,"byte_end":10421963,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10421968,"byte_end":10422010,"line_start":396,"line_end":396,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422015,"byte_end":10422042,"line_start":397,"line_end":397,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422047,"byte_end":10422050,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422055,"byte_end":10422099,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422104,"byte_end":10422125,"line_start":400,"line_end":400,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422130,"byte_end":10422133,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422138,"byte_end":10422152,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422157,"byte_end":10422162,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422167,"byte_end":10422174,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423258,"byte_end":10423265,"line_start":441,"line_end":441,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpSocket>::connect","value":"pub async fn connect(Self, SocketAddr) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Establish a TCP connection with a peer at the specified socket address.","sig":null,"attributes":[{"value":"/ Establish a TCP connection with a peer at the specified socket address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422277,"byte_end":10422352,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422357,"byte_end":10422360,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ The `TcpSocket` is consumed. Once the connection is established, a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422365,"byte_end":10422435,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ connected [`TcpStream`] is returned. If the connection fails, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422440,"byte_end":10422509,"line_start":412,"line_end":412,"column_start":5,"column_end":74}},{"value":"/ encountered error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422514,"byte_end":10422548,"line_start":413,"line_end":413,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422553,"byte_end":10422556,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422561,"byte_end":10422589,"line_start":415,"line_end":415,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422594,"byte_end":10422597,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ This calls the `connect(2)` operating-system function. Behavior is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422602,"byte_end":10422672,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ platform specific. Refer to the target platform's documentation for more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422677,"byte_end":10422753,"line_start":418,"line_end":418,"column_start":5,"column_end":81}},{"value":"/ details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422758,"byte_end":10422770,"line_start":419,"line_end":419,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422775,"byte_end":10422778,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422783,"byte_end":10422797,"line_start":421,"line_end":421,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422802,"byte_end":10422805,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Connecting to a peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422810,"byte_end":10422835,"line_start":423,"line_end":423,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422840,"byte_end":10422843,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422848,"byte_end":10422861,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422866,"byte_end":10422896,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422901,"byte_end":10422904,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422909,"byte_end":10422925,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422930,"byte_end":10422933,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422938,"byte_end":10422956,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10422961,"byte_end":10423000,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423005,"byte_end":10423058,"line_start":432,"line_end":432,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423063,"byte_end":10423066,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423071,"byte_end":10423113,"line_start":434,"line_end":434,"column_start":5,"column_end":47}},{"value":"/     let stream = socket.connect(addr).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423118,"byte_end":10423167,"line_start":435,"line_end":435,"column_start":5,"column_end":54}},{"value":"/ # drop(stream);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423172,"byte_end":10423191,"line_start":436,"line_end":436,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423196,"byte_end":10423199,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423204,"byte_end":10423218,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423223,"byte_end":10423228,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423233,"byte_end":10423240,"line_start":440,"line_end":440,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424562,"byte_end":10424568,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpSocket>::listen","value":"pub fn listen(Self, u32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Convert the socket into a `TcpListener`.","sig":null,"attributes":[{"value":"/ Convert the socket into a `TcpListener`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423415,"byte_end":10423459,"line_start":446,"line_end":446,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423464,"byte_end":10423467,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ `backlog` defines the maximum number of pending connections are queued","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423472,"byte_end":10423546,"line_start":448,"line_end":448,"column_start":5,"column_end":79}},{"value":"/ by the operating system at any given time. Connection are removed from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423551,"byte_end":10423625,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the queue with [`TcpListener::accept`]. When the queue is full, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423630,"byte_end":10423701,"line_start":450,"line_end":450,"column_start":5,"column_end":76}},{"value":"/ operating-system will start rejecting connections.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423706,"byte_end":10423760,"line_start":451,"line_end":451,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423765,"byte_end":10423768,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`TcpListener::accept`]: TcpListener::accept","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423773,"byte_end":10423821,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423826,"byte_end":10423829,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ This calls the `listen(2)` operating-system function, marking the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423834,"byte_end":10423910,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ as a passive socket. Behavior is platform specific. Refer to the target","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423915,"byte_end":10423990,"line_start":456,"line_end":456,"column_start":5,"column_end":80}},{"value":"/ platform's documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10423995,"byte_end":10424041,"line_start":457,"line_end":457,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424046,"byte_end":10424049,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424054,"byte_end":10424068,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424073,"byte_end":10424076,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ Create a `TcpListener`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424081,"byte_end":10424108,"line_start":461,"line_end":461,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424113,"byte_end":10424116,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424121,"byte_end":10424134,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424139,"byte_end":10424169,"line_start":464,"line_end":464,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424174,"byte_end":10424177,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424182,"byte_end":10424198,"line_start":466,"line_end":466,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424203,"byte_end":10424206,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424211,"byte_end":10424229,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424234,"byte_end":10424273,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/     let addr = \"127.0.0.1:8080\".parse().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424278,"byte_end":10424331,"line_start":470,"line_end":470,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424336,"byte_end":10424339,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/     let socket = TcpSocket::new_v4()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424344,"byte_end":10424386,"line_start":472,"line_end":472,"column_start":5,"column_end":47}},{"value":"/     socket.bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424391,"byte_end":10424418,"line_start":473,"line_end":473,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424423,"byte_end":10424426,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/     let listener = socket.listen(1024)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424431,"byte_end":10424475,"line_start":475,"line_end":475,"column_start":5,"column_end":49}},{"value":"/ # drop(listener);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424480,"byte_end":10424501,"line_start":476,"line_end":476,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424506,"byte_end":10424509,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424514,"byte_end":10424528,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424533,"byte_end":10424538,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424543,"byte_end":10424550,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3276},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427036,"byte_end":10427044,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::tcp::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426703,"byte_end":10426767,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426768,"byte_end":10426771,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426772,"byte_end":10426860,"line_start":22,"line_end":22,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426861,"byte_end":10426888,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426889,"byte_end":10426892,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426893,"byte_end":10426921,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426922,"byte_end":10426955,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10426956,"byte_end":10427007,"line_start":27,"line_end":27,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3283},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427658,"byte_end":10427667,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::tcp::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`TcpStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`TcpStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427066,"byte_end":10427131,"line_start":31,"line_end":31,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427132,"byte_end":10427135,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427136,"byte_end":10427222,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ shut down the TCP stream in the write direction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427223,"byte_end":10427275,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427276,"byte_end":10427279,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427280,"byte_end":10427361,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427362,"byte_end":10427397,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427398,"byte_end":10427401,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427402,"byte_end":10427430,"line_start":39,"line_end":39,"column_start":1,"column_end":29}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427431,"byte_end":10427464,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427465,"byte_end":10427512,"line_start":41,"line_end":41,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427513,"byte_end":10427575,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427576,"byte_end":10427629,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2954},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428983,"byte_end":10428992,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<ReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427841,"byte_end":10427915,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427920,"byte_end":10427993,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427998,"byte_end":10428012,"line_start":54,"line_end":54,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428017,"byte_end":10428020,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428025,"byte_end":10428096,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428101,"byte_end":10428175,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428180,"byte_end":10428204,"line_start":58,"line_end":58,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428209,"byte_end":10428212,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428217,"byte_end":10428290,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428295,"byte_end":10428298,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428303,"byte_end":10428317,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428322,"byte_end":10428325,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428330,"byte_end":10428343,"line_start":64,"line_end":64,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428348,"byte_end":10428383,"line_start":65,"line_end":65,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428388,"byte_end":10428418,"line_start":66,"line_end":66,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428423,"byte_end":10428426,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428431,"byte_end":10428464,"line_start":68,"line_end":68,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428469,"byte_end":10428472,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428477,"byte_end":10428495,"line_start":70,"line_end":70,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428500,"byte_end":10428539,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428544,"byte_end":10428613,"line_start":72,"line_end":72,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428618,"byte_end":10428666,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428671,"byte_end":10428701,"line_start":74,"line_end":74,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428706,"byte_end":10428751,"line_start":75,"line_end":75,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428756,"byte_end":10428759,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428764,"byte_end":10428786,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428791,"byte_end":10428836,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428841,"byte_end":10428859,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428864,"byte_end":10428867,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428872,"byte_end":10428886,"line_start":81,"line_end":81,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428891,"byte_end":10428896,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428901,"byte_end":10428908,"line_start":83,"line_end":83,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428913,"byte_end":10428916,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10428921,"byte_end":10428971,"line_start":85,"line_end":85,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430452,"byte_end":10430456,"line_start":133,"line_end":133,"column_start":18,"column_end":22},"name":"peek","qualname":"<ReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429154,"byte_end":10429224,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429229,"byte_end":10429298,"line_start":95,"line_end":95,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429303,"byte_end":10429342,"line_start":96,"line_end":96,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429347,"byte_end":10429350,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429355,"byte_end":10429423,"line_start":98,"line_end":98,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429428,"byte_end":10429431,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429436,"byte_end":10429476,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429481,"byte_end":10429484,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429489,"byte_end":10429503,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429508,"byte_end":10429511,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429516,"byte_end":10429529,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429534,"byte_end":10429564,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429569,"byte_end":10429601,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429606,"byte_end":10429632,"line_start":107,"line_end":107,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429637,"byte_end":10429640,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429645,"byte_end":10429663,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429668,"byte_end":10429719,"line_start":110,"line_end":110,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429724,"byte_end":10429752,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429757,"byte_end":10429826,"line_start":112,"line_end":112,"column_start":5,"column_end":74}},{"value":"/     let (mut read_half, _) = stream.split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429831,"byte_end":10429879,"line_start":113,"line_end":113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429884,"byte_end":10429887,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429892,"byte_end":10429921,"line_start":115,"line_end":115,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429926,"byte_end":10429955,"line_start":116,"line_end":116,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429960,"byte_end":10429963,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10429968,"byte_end":10429995,"line_start":118,"line_end":118,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430000,"byte_end":10430047,"line_start":119,"line_end":119,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430052,"byte_end":10430055,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430060,"byte_end":10430084,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430089,"byte_end":10430148,"line_start":122,"line_end":122,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430153,"byte_end":10430192,"line_start":123,"line_end":123,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430197,"byte_end":10430200,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430205,"byte_end":10430219,"line_start":125,"line_end":125,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430224,"byte_end":10430229,"line_start":126,"line_end":126,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430234,"byte_end":10430241,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430246,"byte_end":10430249,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430254,"byte_end":10430319,"line_start":129,"line_end":129,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430324,"byte_end":10430327,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430332,"byte_end":10430378,"line_start":131,"line_end":131,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430383,"byte_end":10430434,"line_start":132,"line_end":132,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":3290},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432986,"byte_end":10432999,"line_start":31,"line_end":31,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::tcp::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3291}],"decl_id":null,"docs":" Owned read half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432635,"byte_end":10432701,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432702,"byte_end":10432705,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432706,"byte_end":10432793,"line_start":24,"line_end":24,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432794,"byte_end":10432828,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432829,"byte_end":10432832,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432833,"byte_end":10432861,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432862,"byte_end":10432905,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10432906,"byte_end":10432957,"line_start":29,"line_end":29,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3294},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433725,"byte_end":10433739,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::tcp::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3295},{"krate":0,"index":3296}],"decl_id":null,"docs":" Owned write half of a [`TcpStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`TcpStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433032,"byte_end":10433099,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433100,"byte_end":10433103,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433104,"byte_end":10433191,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ shut down the TCP stream in the write direction.  Dropping the write half","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433192,"byte_end":10433269,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ will also shut down the write half of the TCP stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433270,"byte_end":10433327,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433328,"byte_end":10433331,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433332,"byte_end":10433418,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433419,"byte_end":10433454,"line_start":42,"line_end":42,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433455,"byte_end":10433458,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433459,"byte_end":10433487,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433488,"byte_end":10433531,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433532,"byte_end":10433579,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433580,"byte_end":10433642,"line_start":47,"line_end":47,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10433643,"byte_end":10433696,"line_start":48,"line_end":48,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3299},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434704,"byte_end":10434716,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::tcp::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434572,"byte_end":10434654,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434655,"byte_end":10434675,"line_start":82,"line_end":82,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3301},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434717,"byte_end":10434734,"line_start":84,"line_end":84,"column_start":25,"column_end":42},"name":"0","qualname":"::net::tcp::split_owned::ReuniteError::0","value":"net::tcp::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3302},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434736,"byte_end":10434754,"line_start":84,"line_end":84,"column_start":44,"column_end":62},"name":"1","qualname":"::net::tcp::split_owned::ReuniteError::1","value":"net::tcp::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435300,"byte_end":10435307,"line_start":103,"line_end":103,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435037,"byte_end":10435106,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435111,"byte_end":10435175,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435180,"byte_end":10435232,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435237,"byte_end":10435240,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435245,"byte_end":10435288,"line_start":102,"line_end":102,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436557,"byte_end":10436566,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<OwnedReadHalf>::poll_peek","value":"pub fn poll_peek(&mut Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempt to receive data on the socket, without removing that data from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435414,"byte_end":10435488,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435493,"byte_end":10435566,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435571,"byte_end":10435585,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435590,"byte_end":10435593,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek` or `poll_read`, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435598,"byte_end":10435669,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ `Waker` from the `Context` passed to the most recent call is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435674,"byte_end":10435748,"line_start":112,"line_end":112,"column_start":5,"column_end":79}},{"value":"/ to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435753,"byte_end":10435777,"line_start":113,"line_end":113,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435782,"byte_end":10435785,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::poll_peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435790,"byte_end":10435863,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435868,"byte_end":10435871,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435876,"byte_end":10435890,"line_start":117,"line_end":117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435895,"byte_end":10435898,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435903,"byte_end":10435916,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435921,"byte_end":10435956,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435961,"byte_end":10435991,"line_start":121,"line_end":121,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435996,"byte_end":10435999,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436004,"byte_end":10436037,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436042,"byte_end":10436045,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436050,"byte_end":10436068,"line_start":125,"line_end":125,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436073,"byte_end":10436112,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436117,"byte_end":10436182,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436187,"byte_end":10436240,"line_start":128,"line_end":128,"column_start":5,"column_end":58}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436245,"byte_end":10436275,"line_start":129,"line_end":129,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436280,"byte_end":10436325,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436330,"byte_end":10436333,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436338,"byte_end":10436360,"line_start":132,"line_end":132,"column_start":5,"column_end":27}},{"value":"/         read_half.poll_peek(cx, &mut buf)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436365,"byte_end":10436410,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/     }).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436415,"byte_end":10436433,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436438,"byte_end":10436441,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436446,"byte_end":10436460,"line_start":136,"line_end":136,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436465,"byte_end":10436470,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436475,"byte_end":10436482,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436487,"byte_end":10436490,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::poll_peek`]: TcpStream::poll_peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436495,"byte_end":10436545,"line_start":140,"line_end":140,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438031,"byte_end":10438035,"line_start":188,"line_end":188,"column_start":18,"column_end":22},"name":"peek","qualname":"<OwnedReadHalf>::peek","value":"pub async fn peek<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436732,"byte_end":10436802,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436807,"byte_end":10436876,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436881,"byte_end":10436920,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436925,"byte_end":10436928,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ See the [`TcpStream::peek`] level documenation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10436933,"byte_end":10437001,"line_start":153,"line_end":153,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437006,"byte_end":10437009,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ [`TcpStream::peek`]: TcpStream::peek","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437014,"byte_end":10437054,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437059,"byte_end":10437062,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437067,"byte_end":10437081,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437086,"byte_end":10437089,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437094,"byte_end":10437107,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437112,"byte_end":10437142,"line_start":160,"line_end":160,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437147,"byte_end":10437179,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437184,"byte_end":10437210,"line_start":162,"line_end":162,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437215,"byte_end":10437218,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437223,"byte_end":10437241,"line_start":164,"line_end":164,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437246,"byte_end":10437297,"line_start":165,"line_end":165,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437302,"byte_end":10437330,"line_start":166,"line_end":166,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437335,"byte_end":10437400,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/     let (mut read_half, _) = stream.into_split();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437405,"byte_end":10437458,"line_start":168,"line_end":168,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437463,"byte_end":10437466,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437471,"byte_end":10437500,"line_start":170,"line_end":170,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437505,"byte_end":10437534,"line_start":171,"line_end":171,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437539,"byte_end":10437542,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437547,"byte_end":10437574,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"/     let n = read_half.peek(&mut b1).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437579,"byte_end":10437626,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437631,"byte_end":10437634,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437639,"byte_end":10437663,"line_start":176,"line_end":176,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, read_half.read(&mut b2[..n]).await?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437668,"byte_end":10437727,"line_start":177,"line_end":177,"column_start":5,"column_end":64}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437732,"byte_end":10437771,"line_start":178,"line_end":178,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437776,"byte_end":10437779,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437784,"byte_end":10437798,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437803,"byte_end":10437808,"line_start":181,"line_end":181,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437813,"byte_end":10437820,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437825,"byte_end":10437828,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437833,"byte_end":10437898,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437903,"byte_end":10437906,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437911,"byte_end":10437957,"line_start":186,"line_end":186,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10437962,"byte_end":10438013,"line_start":187,"line_end":187,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438710,"byte_end":10438717,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<TcpStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `TcpStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `TcpStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438447,"byte_end":10438516,"line_start":205,"line_end":205,"column_start":5,"column_end":74}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438521,"byte_end":10438585,"line_start":206,"line_end":206,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438590,"byte_end":10438642,"line_start":207,"line_end":207,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438647,"byte_end":10438650,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438655,"byte_end":10438698,"line_start":209,"line_end":209,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3007},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10439022,"byte_end":10439028,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438823,"byte_end":10438895,"line_start":214,"line_end":214,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438900,"byte_end":10438969,"line_start":215,"line_end":215,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438974,"byte_end":10439010,"line_start":216,"line_end":216,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3306},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10442943,"byte_end":10442952,"line_start":67,"line_end":67,"column_start":16,"column_end":25},"name":"TcpStream","qualname":"::net::tcp::stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":3307}],"decl_id":null,"docs":" A TCP stream between a local and a remote socket.","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444473,"byte_end":10444480,"line_start":111,"line_end":111,"column_start":18,"column_end":25},"name":"connect","qualname":"<TcpStream>::connect","value":"pub async fn connect<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Opens a TCP connection to a remote host.","sig":null,"attributes":[{"value":"/ Opens a TCP connection to a remote host.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443031,"byte_end":10443075,"line_start":73,"line_end":73,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443080,"byte_end":10443083,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ `addr` is an address of the remote host. Anything which implements the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443088,"byte_end":10443162,"line_start":75,"line_end":75,"column_start":5,"column_end":79}},{"value":"/ [`ToSocketAddrs`] trait can be supplied as the address.  If `addr`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443167,"byte_end":10443237,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ yields multiple addresses, connect will be attempted with each of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443242,"byte_end":10443315,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ addresses until a connection is successful. If none of the addresses","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443320,"byte_end":10443392,"line_start":78,"line_end":78,"column_start":5,"column_end":77}},{"value":"/ result in a successful connection, the error returned from the last","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443397,"byte_end":10443468,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ connection attempt (the last address) is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443473,"byte_end":10443527,"line_start":80,"line_end":80,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443532,"byte_end":10443535,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ To configure the socket before connecting, you can use the [`TcpSocket`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443540,"byte_end":10443616,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443621,"byte_end":10443630,"line_start":83,"line_end":83,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443635,"byte_end":10443638,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: trait@crate::net::ToSocketAddrs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443643,"byte_end":10443697,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/ [`TcpSocket`]: struct@crate::net::TcpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443702,"byte_end":10443749,"line_start":86,"line_end":86,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443754,"byte_end":10443757,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443762,"byte_end":10443776,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443781,"byte_end":10443784,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443789,"byte_end":10443802,"line_start":90,"line_end":90,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443807,"byte_end":10443837,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443842,"byte_end":10443875,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443880,"byte_end":10443906,"line_start":93,"line_end":93,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443911,"byte_end":10443914,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443919,"byte_end":10443937,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443942,"byte_end":10443993,"line_start":96,"line_end":96,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443998,"byte_end":10444026,"line_start":97,"line_end":97,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444031,"byte_end":10444100,"line_start":98,"line_end":98,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444105,"byte_end":10444108,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/     // Write some data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444113,"byte_end":10444140,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/     stream.write_all(b\"hello world!\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444145,"byte_end":10444194,"line_start":101,"line_end":101,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444199,"byte_end":10444202,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444207,"byte_end":10444221,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444226,"byte_end":10444231,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444236,"byte_end":10444243,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444248,"byte_end":10444251,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The [`write_all`] method is defined on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444256,"byte_end":10444327,"line_start":107,"line_end":107,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444332,"byte_end":10444335,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [`write_all`]: fn@crate::io::AsyncWriteExt::write_all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444340,"byte_end":10444397,"line_start":109,"line_end":109,"column_start":5,"column_end":62}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10444402,"byte_end":10444455,"line_start":110,"line_end":110,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447204,"byte_end":10447212,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"from_std","qualname":"<TcpStream>::from_std","value":"pub fn from_std(std::net::TcpStream) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `TcpStream` from a `std::net::TcpStream`.","sig":null,"attributes":[{"value":"/ Creates new `TcpStream` from a `std::net::TcpStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446087,"byte_end":10446144,"line_start":160,"line_end":160,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446149,"byte_end":10446152,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a TCP stream from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446157,"byte_end":10446227,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446232,"byte_end":10446308,"line_start":163,"line_end":163,"column_start":5,"column_end":81}},{"value":"/ about the underlying stream; it is left up to the user to set it in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446313,"byte_end":10446384,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446389,"byte_end":10446411,"line_start":165,"line_end":165,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446416,"byte_end":10446419,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446424,"byte_end":10446438,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446443,"byte_end":10446446,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446451,"byte_end":10446469,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446474,"byte_end":10446500,"line_start":170,"line_end":170,"column_start":5,"column_end":31}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446505,"byte_end":10446535,"line_start":171,"line_end":171,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446540,"byte_end":10446543,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446548,"byte_end":10446566,"line_start":173,"line_end":173,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446571,"byte_end":10446622,"line_start":174,"line_end":174,"column_start":5,"column_end":56}},{"value":"/     let std_stream = std::net::TcpStream::connect(\"127.0.0.1:34254\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446627,"byte_end":10446701,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/     std_stream.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446706,"byte_end":10446748,"line_start":176,"line_end":176,"column_start":5,"column_end":47}},{"value":"/     let stream = TcpStream::from_std(std_stream)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446753,"byte_end":10446807,"line_start":177,"line_end":177,"column_start":5,"column_end":59}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446812,"byte_end":10446826,"line_start":178,"line_end":178,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446831,"byte_end":10446836,"line_start":179,"line_end":179,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446841,"byte_end":10446848,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446853,"byte_end":10446856,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446861,"byte_end":10446873,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446878,"byte_end":10446881,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446886,"byte_end":10446946,"line_start":184,"line_end":184,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446951,"byte_end":10446954,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10446959,"byte_end":10447029,"line_start":186,"line_end":186,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447034,"byte_end":10447107,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447112,"byte_end":10447192,"line_start":188,"line_end":188,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448852,"byte_end":10448860,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"into_std","qualname":"<TcpStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::TcpStream`] into a [`std::net::TcpStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447405,"byte_end":10447473,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447478,"byte_end":10447481,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::TcpStream`] will have nonblocking mode set as `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447486,"byte_end":10447568,"line_start":197,"line_end":197,"column_start":5,"column_end":87}},{"value":"/ Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447573,"byte_end":10447639,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447644,"byte_end":10447647,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447652,"byte_end":10447666,"line_start":200,"line_end":200,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447671,"byte_end":10447674,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447679,"byte_end":10447686,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447691,"byte_end":10447717,"line_start":203,"line_end":203,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447722,"byte_end":10447744,"line_start":204,"line_end":204,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447749,"byte_end":10447781,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ # use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447786,"byte_end":10447818,"line_start":206,"line_end":206,"column_start":5,"column_end":37}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447823,"byte_end":10447858,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447863,"byte_end":10447866,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447871,"byte_end":10447889,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447894,"byte_end":10447945,"line_start":210,"line_end":210,"column_start":5,"column_end":56}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447950,"byte_end":10447983,"line_start":211,"line_end":211,"column_start":5,"column_end":38}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:34254\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10447988,"byte_end":10448055,"line_start":212,"line_end":212,"column_start":5,"column_end":72}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448060,"byte_end":10448101,"line_start":213,"line_end":213,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream: TcpStream = TcpStream::connect(\"127.0.0.1:34254\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448106,"byte_end":10448199,"line_start":214,"line_end":214,"column_start":5,"column_end":98}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448204,"byte_end":10448261,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448266,"byte_end":10448277,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/     let (tokio_tcp_stream, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448282,"byte_end":10448343,"line_start":217,"line_end":217,"column_start":5,"column_end":66}},{"value":"/     let mut std_tcp_stream = tokio_tcp_stream.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448348,"byte_end":10448410,"line_start":218,"line_end":218,"column_start":5,"column_end":67}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448415,"byte_end":10448481,"line_start":219,"line_end":219,"column_start":5,"column_end":71}},{"value":"/     std_tcp_stream.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448486,"byte_end":10448533,"line_start":220,"line_end":220,"column_start":5,"column_end":52}},{"value":"/     std_tcp_stream.read_exact(&mut data)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448538,"byte_end":10448584,"line_start":221,"line_end":221,"column_start":5,"column_end":51}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448589,"byte_end":10448632,"line_start":222,"line_end":222,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448637,"byte_end":10448651,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448656,"byte_end":10448661,"line_start":224,"line_end":224,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448666,"byte_end":10448673,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::TcpStream`]: TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448678,"byte_end":10448718,"line_start":226,"line_end":226,"column_start":5,"column_end":45}},{"value":"/ [`std::net::TcpStream`]: std::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448723,"byte_end":10448771,"line_start":227,"line_end":227,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::TcpStream::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10448776,"byte_end":10448840,"line_start":228,"line_end":228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449899,"byte_end":10449909,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this stream is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this stream is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449500,"byte_end":10449559,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449564,"byte_end":10449567,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449572,"byte_end":10449586,"line_start":251,"line_end":251,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449591,"byte_end":10449594,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449599,"byte_end":10449612,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449617,"byte_end":10449647,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449652,"byte_end":10449655,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449660,"byte_end":10449724,"line_start":256,"line_end":256,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449729,"byte_end":10449790,"line_start":257,"line_end":257,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449795,"byte_end":10449798,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.local_addr()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449803,"byte_end":10449846,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449851,"byte_end":10449863,"line_start":260,"line_end":260,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449868,"byte_end":10449875,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449880,"byte_end":10449887,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450388,"byte_end":10450397,"line_start":281,"line_end":281,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remote address that this stream is connected to.","sig":null,"attributes":[{"value":"/ Returns the remote address that this stream is connected to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10449985,"byte_end":10450049,"line_start":267,"line_end":267,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450054,"byte_end":10450057,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450062,"byte_end":10450076,"line_start":269,"line_end":269,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450081,"byte_end":10450084,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450089,"byte_end":10450102,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450107,"byte_end":10450137,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450142,"byte_end":10450145,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450150,"byte_end":10450214,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450219,"byte_end":10450280,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450285,"byte_end":10450288,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.peer_addr()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450293,"byte_end":10450335,"line_start":277,"line_end":277,"column_start":5,"column_end":47}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450340,"byte_end":10450352,"line_start":278,"line_end":278,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450357,"byte_end":10450364,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450369,"byte_end":10450376,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451888,"byte_end":10451897,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<TcpStream>::poll_peek","value":"pub fn poll_peek(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive data on the socket, without removing that data from\n the queue, registering the current task for wakeup if data is not yet\n available.","sig":null,"attributes":[{"value":"/ Attempts to receive data on the socket, without removing that data from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450472,"byte_end":10450547,"line_start":285,"line_end":285,"column_start":5,"column_end":80}},{"value":"/ the queue, registering the current task for wakeup if data is not yet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450552,"byte_end":10450625,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450630,"byte_end":10450644,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450649,"byte_end":10450652,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_peek`, `poll_read` or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450657,"byte_end":10450719,"line_start":289,"line_end":289,"column_start":5,"column_end":67}},{"value":"/ `poll_read_ready`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450724,"byte_end":10450796,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ most recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450801,"byte_end":10450865,"line_start":291,"line_end":291,"column_start":5,"column_end":69}},{"value":"/ `poll_write` retains a second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450870,"byte_end":10450924,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450929,"byte_end":10450932,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450937,"byte_end":10450955,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450960,"byte_end":10450963,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450968,"byte_end":10450993,"line_start":296,"line_end":296,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10450998,"byte_end":10451001,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if data is not yet available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451006,"byte_end":10451057,"line_start":298,"line_end":298,"column_start":5,"column_end":56}},{"value":"/ * `Poll::Ready(Ok(n))` if data is available. `n` is the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451062,"byte_end":10451145,"line_start":299,"line_end":299,"column_start":5,"column_end":88}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451150,"byte_end":10451205,"line_start":300,"line_end":300,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451210,"byte_end":10451213,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451218,"byte_end":10451230,"line_start":302,"line_end":302,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451235,"byte_end":10451238,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451243,"byte_end":10451318,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451323,"byte_end":10451326,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451331,"byte_end":10451345,"line_start":306,"line_end":306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451350,"byte_end":10451353,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451358,"byte_end":10451371,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, ReadBuf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451376,"byte_end":10451411,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451416,"byte_end":10451446,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451451,"byte_end":10451454,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451459,"byte_end":10451492,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451497,"byte_end":10451500,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451505,"byte_end":10451523,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451528,"byte_end":10451567,"line_start":315,"line_end":315,"column_start":5,"column_end":44}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8000\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451572,"byte_end":10451637,"line_start":316,"line_end":316,"column_start":5,"column_end":70}},{"value":"/     let mut buf = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451642,"byte_end":10451672,"line_start":317,"line_end":317,"column_start":5,"column_end":35}},{"value":"/     let mut buf = ReadBuf::new(&mut buf);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451677,"byte_end":10451722,"line_start":318,"line_end":318,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451727,"byte_end":10451730,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451735,"byte_end":10451757,"line_start":320,"line_end":320,"column_start":5,"column_end":27}},{"value":"/         stream.poll_peek(cx, &mut buf)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451762,"byte_end":10451804,"line_start":321,"line_end":321,"column_start":5,"column_end":47}},{"value":"/     }).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451809,"byte_end":10451827,"line_start":322,"line_end":322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451832,"byte_end":10451835,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451840,"byte_end":10451854,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451859,"byte_end":10451864,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10451869,"byte_end":10451876,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454969,"byte_end":10454974,"line_start":413,"line_end":413,"column_start":18,"column_end":23},"name":"ready","qualname":"<TcpStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452704,"byte_end":10452751,"line_start":353,"line_end":353,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452756,"byte_end":10452759,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452764,"byte_end":10452838,"line_start":355,"line_end":355,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452843,"byte_end":10452918,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452923,"byte_end":10452961,"line_start":357,"line_end":357,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452966,"byte_end":10452969,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452974,"byte_end":10452988,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10452993,"byte_end":10452996,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453001,"byte_end":10453071,"line_start":361,"line_end":361,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453076,"byte_end":10453090,"line_start":362,"line_end":362,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453095,"byte_end":10453098,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453103,"byte_end":10453116,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453121,"byte_end":10453149,"line_start":365,"line_end":365,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453154,"byte_end":10453184,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453189,"byte_end":10453215,"line_start":367,"line_end":367,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453220,"byte_end":10453236,"line_start":368,"line_end":368,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453241,"byte_end":10453244,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453249,"byte_end":10453267,"line_start":370,"line_end":370,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453272,"byte_end":10453323,"line_start":371,"line_end":371,"column_start":5,"column_end":56}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453328,"byte_end":10453393,"line_start":372,"line_end":372,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453398,"byte_end":10453401,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453406,"byte_end":10453420,"line_start":374,"line_end":374,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453425,"byte_end":10453510,"line_start":375,"line_end":375,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453515,"byte_end":10453518,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453523,"byte_end":10453559,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453564,"byte_end":10453609,"line_start":378,"line_end":378,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453614,"byte_end":10453688,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453693,"byte_end":10453755,"line_start":380,"line_end":380,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453760,"byte_end":10453810,"line_start":381,"line_end":381,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453815,"byte_end":10453845,"line_start":382,"line_end":382,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453850,"byte_end":10453911,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453916,"byte_end":10453937,"line_start":384,"line_end":384,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10453942,"byte_end":10454018,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454023,"byte_end":10454056,"line_start":386,"line_end":386,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454061,"byte_end":10454082,"line_start":387,"line_end":387,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454087,"byte_end":10454118,"line_start":388,"line_end":388,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454123,"byte_end":10454168,"line_start":389,"line_end":389,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454173,"byte_end":10454194,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454199,"byte_end":10454216,"line_start":391,"line_end":391,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454221,"byte_end":10454224,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454229,"byte_end":10454242,"line_start":393,"line_end":393,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454247,"byte_end":10454250,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454255,"byte_end":10454291,"line_start":395,"line_end":395,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454296,"byte_end":10454371,"line_start":396,"line_end":396,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454376,"byte_end":10454438,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454443,"byte_end":10454499,"line_start":398,"line_end":398,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454504,"byte_end":10454534,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454539,"byte_end":10454593,"line_start":400,"line_end":400,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454598,"byte_end":10454619,"line_start":401,"line_end":401,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454624,"byte_end":10454700,"line_start":402,"line_end":402,"column_start":5,"column_end":81}},{"value":"/                     continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454705,"byte_end":10454737,"line_start":403,"line_end":403,"column_start":5,"column_end":37}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454742,"byte_end":10454763,"line_start":404,"line_end":404,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454768,"byte_end":10454799,"line_start":405,"line_end":405,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454804,"byte_end":10454849,"line_start":406,"line_end":406,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454854,"byte_end":10454875,"line_start":407,"line_end":407,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454880,"byte_end":10454897,"line_start":408,"line_end":408,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454902,"byte_end":10454915,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454920,"byte_end":10454929,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454934,"byte_end":10454939,"line_start":411,"line_end":411,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10454944,"byte_end":10454951,"line_start":412,"line_end":412,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456494,"byte_end":10456502,"line_start":461,"line_end":461,"column_start":18,"column_end":26},"name":"readable","qualname":"<TcpStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455131,"byte_end":10455174,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455179,"byte_end":10455182,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455187,"byte_end":10455264,"line_start":420,"line_end":420,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455269,"byte_end":10455298,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455303,"byte_end":10455306,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455311,"byte_end":10455325,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455330,"byte_end":10455333,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455338,"byte_end":10455351,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455356,"byte_end":10455386,"line_start":426,"line_end":426,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455391,"byte_end":10455417,"line_start":427,"line_end":427,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455422,"byte_end":10455438,"line_start":428,"line_end":428,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455443,"byte_end":10455446,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455451,"byte_end":10455469,"line_start":430,"line_end":430,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455474,"byte_end":10455525,"line_start":431,"line_end":431,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455530,"byte_end":10455558,"line_start":432,"line_end":432,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455563,"byte_end":10455628,"line_start":433,"line_end":433,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455633,"byte_end":10455636,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455641,"byte_end":10455677,"line_start":435,"line_end":435,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455682,"byte_end":10455685,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455690,"byte_end":10455704,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455709,"byte_end":10455758,"line_start":438,"line_end":438,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455763,"byte_end":10455800,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455805,"byte_end":10455808,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455813,"byte_end":10455883,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455888,"byte_end":10455946,"line_start":442,"line_end":442,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10455951,"byte_end":10455996,"line_start":443,"line_end":443,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456001,"byte_end":10456027,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456032,"byte_end":10456068,"line_start":445,"line_end":445,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456073,"byte_end":10456099,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456104,"byte_end":10456121,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456126,"byte_end":10456198,"line_start":448,"line_end":448,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456203,"byte_end":10456232,"line_start":449,"line_end":449,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456237,"byte_end":10456254,"line_start":450,"line_end":450,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456259,"byte_end":10456286,"line_start":451,"line_end":451,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456291,"byte_end":10456332,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456337,"byte_end":10456354,"line_start":453,"line_end":453,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456359,"byte_end":10456372,"line_start":454,"line_end":454,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456377,"byte_end":10456386,"line_start":455,"line_end":455,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456391,"byte_end":10456394,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456399,"byte_end":10456435,"line_start":457,"line_end":457,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456440,"byte_end":10456454,"line_start":458,"line_end":458,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456459,"byte_end":10456464,"line_start":459,"line_end":459,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456469,"byte_end":10456476,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457874,"byte_end":10457889,"line_start":495,"line_end":495,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<TcpStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456603,"byte_end":10456632,"line_start":466,"line_end":466,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456637,"byte_end":10456640,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for reading, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456645,"byte_end":10456719,"line_start":468,"line_end":468,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456724,"byte_end":10456798,"line_start":469,"line_end":469,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456803,"byte_end":10456876,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456881,"byte_end":10456891,"line_start":471,"line_end":471,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456896,"byte_end":10456899,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready`, `poll_read` or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456904,"byte_end":10456972,"line_start":473,"line_end":473,"column_start":5,"column_end":73}},{"value":"/ `poll_peek`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10456977,"byte_end":10457048,"line_start":474,"line_end":474,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup. (However,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457053,"byte_end":10457112,"line_start":475,"line_end":475,"column_start":5,"column_end":64}},{"value":"/ `poll_write_ready` retains a second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457117,"byte_end":10457177,"line_start":476,"line_end":476,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457182,"byte_end":10457185,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457190,"byte_end":10457265,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457270,"byte_end":10457345,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457350,"byte_end":10457418,"line_start":480,"line_end":480,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457423,"byte_end":10457426,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457431,"byte_end":10457449,"line_start":482,"line_end":482,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457454,"byte_end":10457457,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457462,"byte_end":10457487,"line_start":484,"line_end":484,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457492,"byte_end":10457495,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457500,"byte_end":10457565,"line_start":486,"line_end":486,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457570,"byte_end":10457637,"line_start":487,"line_end":487,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457642,"byte_end":10457697,"line_start":488,"line_end":488,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457702,"byte_end":10457705,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457710,"byte_end":10457722,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457727,"byte_end":10457730,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457735,"byte_end":10457810,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457815,"byte_end":10457818,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10457823,"byte_end":10457862,"line_start":494,"line_end":494,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460225,"byte_end":10460233,"line_start":558,"line_end":558,"column_start":12,"column_end":20},"name":"try_read","qualname":"<TcpStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458022,"byte_end":10458098,"line_start":499,"line_end":499,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458103,"byte_end":10458128,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458133,"byte_end":10458136,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458141,"byte_end":10458217,"line_start":502,"line_end":502,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458222,"byte_end":10458290,"line_start":503,"line_end":503,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458295,"byte_end":10458369,"line_start":504,"line_end":504,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458374,"byte_end":10458429,"line_start":505,"line_end":505,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458434,"byte_end":10458437,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458442,"byte_end":10458512,"line_start":507,"line_end":507,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458517,"byte_end":10458520,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458525,"byte_end":10458566,"line_start":509,"line_end":509,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458571,"byte_end":10458606,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458611,"byte_end":10458614,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458619,"byte_end":10458631,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458636,"byte_end":10458639,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458644,"byte_end":10458715,"line_start":514,"line_end":514,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458720,"byte_end":10458796,"line_start":515,"line_end":515,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458801,"byte_end":10458875,"line_start":516,"line_end":516,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458880,"byte_end":10458929,"line_start":517,"line_end":517,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458934,"byte_end":10458937,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458942,"byte_end":10458956,"line_start":519,"line_end":519,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458961,"byte_end":10458964,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458969,"byte_end":10458982,"line_start":521,"line_end":521,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10458987,"byte_end":10459017,"line_start":522,"line_end":522,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459022,"byte_end":10459048,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459053,"byte_end":10459069,"line_start":524,"line_end":524,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459074,"byte_end":10459077,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459082,"byte_end":10459100,"line_start":526,"line_end":526,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459105,"byte_end":10459156,"line_start":527,"line_end":527,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459161,"byte_end":10459189,"line_start":528,"line_end":528,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459194,"byte_end":10459259,"line_start":529,"line_end":529,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459264,"byte_end":10459267,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459272,"byte_end":10459286,"line_start":531,"line_end":531,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459291,"byte_end":10459340,"line_start":532,"line_end":532,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459345,"byte_end":10459382,"line_start":533,"line_end":533,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459387,"byte_end":10459390,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459395,"byte_end":10459468,"line_start":535,"line_end":535,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459473,"byte_end":10459519,"line_start":536,"line_end":536,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459524,"byte_end":10459560,"line_start":537,"line_end":537,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459565,"byte_end":10459568,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459573,"byte_end":10459643,"line_start":539,"line_end":539,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459648,"byte_end":10459706,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459711,"byte_end":10459756,"line_start":541,"line_end":541,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459761,"byte_end":10459792,"line_start":542,"line_end":542,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459797,"byte_end":10459823,"line_start":543,"line_end":543,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459828,"byte_end":10459877,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459882,"byte_end":10459899,"line_start":545,"line_end":545,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459904,"byte_end":10459976,"line_start":546,"line_end":546,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10459981,"byte_end":10460010,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460015,"byte_end":10460032,"line_start":548,"line_end":548,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460037,"byte_end":10460064,"line_start":549,"line_end":549,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460069,"byte_end":10460110,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460115,"byte_end":10460132,"line_start":551,"line_end":551,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460137,"byte_end":10460150,"line_start":552,"line_end":552,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460155,"byte_end":10460164,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460169,"byte_end":10460172,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460177,"byte_end":10460191,"line_start":555,"line_end":555,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460196,"byte_end":10460201,"line_start":556,"line_end":556,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460206,"byte_end":10460213,"line_start":557,"line_end":557,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463163,"byte_end":10463180,"line_start":636,"line_end":636,"column_start":12,"column_end":29},"name":"try_read_vectored","qualname":"<TcpStream>::try_read_vectored","value":"pub fn try_read_vectored(&Self, &mut [io::IoSliceMut]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffers, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffers, returning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460429,"byte_end":10460502,"line_start":566,"line_end":566,"column_start":5,"column_end":78}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460507,"byte_end":10460536,"line_start":567,"line_end":567,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460541,"byte_end":10460544,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Data is copied to fill each buffer in order, with the final buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460549,"byte_end":10460619,"line_start":569,"line_end":569,"column_start":5,"column_end":75}},{"value":"/ written to possibly being only partially filled. This method behaves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460624,"byte_end":10460696,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ equivalently to a single call to [`try_read()`] with concatenated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460701,"byte_end":10460770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460775,"byte_end":10460787,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460792,"byte_end":10460795,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460800,"byte_end":10460876,"line_start":574,"line_end":574,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460881,"byte_end":10460949,"line_start":575,"line_end":575,"column_start":5,"column_end":73}},{"value":"/ `try_read_vectored()` is non-blocking, the buffer does not have to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10460954,"byte_end":10461027,"line_start":576,"line_end":576,"column_start":5,"column_end":78}},{"value":"/ stored by the async task and can exist entirely on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461032,"byte_end":10461097,"line_start":577,"line_end":577,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461102,"byte_end":10461105,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461110,"byte_end":10461180,"line_start":579,"line_end":579,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461185,"byte_end":10461188,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ [`try_read()`]: TcpStream::try_read()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461193,"byte_end":10461234,"line_start":581,"line_end":581,"column_start":5,"column_end":46}},{"value":"/ [`readable()`]: TcpStream::readable()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461239,"byte_end":10461280,"line_start":582,"line_end":582,"column_start":5,"column_end":46}},{"value":"/ [`ready()`]: TcpStream::ready()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461285,"byte_end":10461320,"line_start":583,"line_end":583,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461325,"byte_end":10461328,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461333,"byte_end":10461345,"line_start":585,"line_end":585,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461350,"byte_end":10461353,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461358,"byte_end":10461429,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461434,"byte_end":10461510,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461515,"byte_end":10461589,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461594,"byte_end":10461643,"line_start":590,"line_end":590,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461648,"byte_end":10461651,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461656,"byte_end":10461670,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461675,"byte_end":10461678,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461683,"byte_end":10461696,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461701,"byte_end":10461731,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461736,"byte_end":10461762,"line_start":596,"line_end":596,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, IoSliceMut};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461767,"byte_end":10461803,"line_start":597,"line_end":597,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461808,"byte_end":10461811,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461816,"byte_end":10461834,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461839,"byte_end":10461890,"line_start":600,"line_end":600,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461895,"byte_end":10461923,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461928,"byte_end":10461993,"line_start":602,"line_end":602,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10461998,"byte_end":10462001,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462006,"byte_end":10462020,"line_start":604,"line_end":604,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462025,"byte_end":10462074,"line_start":605,"line_end":605,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462079,"byte_end":10462116,"line_start":606,"line_end":606,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462121,"byte_end":10462124,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462129,"byte_end":10462202,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462207,"byte_end":10462253,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/         let mut buf_a = [0; 512];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462258,"byte_end":10462295,"line_start":610,"line_end":610,"column_start":5,"column_end":42}},{"value":"/         let mut buf_b = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462300,"byte_end":10462338,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"/         let mut bufs = [","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462343,"byte_end":10462371,"line_start":612,"line_end":612,"column_start":5,"column_end":33}},{"value":"/             IoSliceMut::new(&mut buf_a),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462376,"byte_end":10462420,"line_start":613,"line_end":613,"column_start":5,"column_end":49}},{"value":"/             IoSliceMut::new(&mut buf_b),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462425,"byte_end":10462469,"line_start":614,"line_end":614,"column_start":5,"column_end":49}},{"value":"/         ];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462474,"byte_end":10462488,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462493,"byte_end":10462496,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462501,"byte_end":10462571,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462576,"byte_end":10462634,"line_start":618,"line_end":618,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read_vectored(&mut bufs) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462639,"byte_end":10462694,"line_start":619,"line_end":619,"column_start":5,"column_end":60}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462699,"byte_end":10462730,"line_start":620,"line_end":620,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462735,"byte_end":10462761,"line_start":621,"line_end":621,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462766,"byte_end":10462815,"line_start":622,"line_end":622,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462820,"byte_end":10462837,"line_start":623,"line_end":623,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462842,"byte_end":10462914,"line_start":624,"line_end":624,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462919,"byte_end":10462948,"line_start":625,"line_end":625,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462953,"byte_end":10462970,"line_start":626,"line_end":626,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10462975,"byte_end":10463002,"line_start":627,"line_end":627,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463007,"byte_end":10463048,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463053,"byte_end":10463070,"line_start":629,"line_end":629,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463075,"byte_end":10463088,"line_start":630,"line_end":630,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463093,"byte_end":10463102,"line_start":631,"line_end":631,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463107,"byte_end":10463110,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463115,"byte_end":10463129,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463134,"byte_end":10463139,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10463144,"byte_end":10463151,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10465791,"byte_end":10465803,"line_start":702,"line_end":702,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<TcpStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467682,"byte_end":10467690,"line_start":762,"line_end":762,"column_start":18,"column_end":26},"name":"writable","qualname":"<TcpStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466441,"byte_end":10466484,"line_start":723,"line_end":723,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466489,"byte_end":10466492,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466497,"byte_end":10466574,"line_start":725,"line_end":725,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466579,"byte_end":10466609,"line_start":726,"line_end":726,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466614,"byte_end":10466617,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466622,"byte_end":10466636,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466641,"byte_end":10466644,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466649,"byte_end":10466662,"line_start":730,"line_end":730,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466667,"byte_end":10466697,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466702,"byte_end":10466728,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466733,"byte_end":10466749,"line_start":733,"line_end":733,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466754,"byte_end":10466757,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466762,"byte_end":10466780,"line_start":735,"line_end":735,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466785,"byte_end":10466836,"line_start":736,"line_end":736,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466841,"byte_end":10466869,"line_start":737,"line_end":737,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466874,"byte_end":10466939,"line_start":738,"line_end":738,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466944,"byte_end":10466947,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466952,"byte_end":10466966,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10466971,"byte_end":10467020,"line_start":741,"line_end":741,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467025,"byte_end":10467062,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467067,"byte_end":10467070,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467075,"byte_end":10467146,"line_start":744,"line_end":744,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467151,"byte_end":10467209,"line_start":745,"line_end":745,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467214,"byte_end":10467266,"line_start":746,"line_end":746,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467271,"byte_end":10467297,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467302,"byte_end":10467328,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467333,"byte_end":10467350,"line_start":749,"line_end":749,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467355,"byte_end":10467427,"line_start":750,"line_end":750,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467432,"byte_end":10467461,"line_start":751,"line_end":751,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467466,"byte_end":10467483,"line_start":752,"line_end":752,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467488,"byte_end":10467515,"line_start":753,"line_end":753,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467520,"byte_end":10467561,"line_start":754,"line_end":754,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467566,"byte_end":10467583,"line_start":755,"line_end":755,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467588,"byte_end":10467601,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467606,"byte_end":10467615,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467620,"byte_end":10467623,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467628,"byte_end":10467642,"line_start":759,"line_end":759,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467647,"byte_end":10467652,"line_start":760,"line_end":760,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467657,"byte_end":10467664,"line_start":761,"line_end":761,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469051,"byte_end":10469067,"line_start":796,"line_end":796,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<TcpStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467791,"byte_end":10467821,"line_start":767,"line_end":767,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467826,"byte_end":10467829,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ If the tcp stream is not currently ready for writing, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467834,"byte_end":10467908,"line_start":769,"line_end":769,"column_start":5,"column_end":79}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the tcp","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467913,"byte_end":10467987,"line_start":770,"line_end":770,"column_start":5,"column_end":79}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10467992,"byte_end":10468065,"line_start":771,"line_end":771,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468070,"byte_end":10468080,"line_start":772,"line_end":772,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468085,"byte_end":10468088,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468093,"byte_end":10468168,"line_start":774,"line_end":774,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468173,"byte_end":10468241,"line_start":775,"line_end":775,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468246,"byte_end":10468318,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468323,"byte_end":10468354,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468359,"byte_end":10468362,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468367,"byte_end":10468442,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468447,"byte_end":10468522,"line_start":780,"line_end":780,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468527,"byte_end":10468595,"line_start":781,"line_end":781,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468600,"byte_end":10468603,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468608,"byte_end":10468626,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468631,"byte_end":10468634,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468639,"byte_end":10468664,"line_start":785,"line_end":785,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468669,"byte_end":10468672,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the tcp stream is not ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468677,"byte_end":10468742,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/ * `Poll::Ready(Ok(()))` if the tcp stream is ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468747,"byte_end":10468814,"line_start":788,"line_end":788,"column_start":5,"column_end":72}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468819,"byte_end":10468874,"line_start":789,"line_end":789,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468879,"byte_end":10468882,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468887,"byte_end":10468899,"line_start":791,"line_end":791,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468904,"byte_end":10468907,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468912,"byte_end":10468987,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10468992,"byte_end":10468995,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469000,"byte_end":10469039,"line_start":795,"line_end":795,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3098},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470796,"byte_end":10470805,"line_start":848,"line_end":848,"column_start":12,"column_end":21},"name":"try_write","qualname":"<TcpStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469201,"byte_end":10469271,"line_start":800,"line_end":800,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469276,"byte_end":10469288,"line_start":801,"line_end":801,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469293,"byte_end":10469296,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469301,"byte_end":10469373,"line_start":803,"line_end":803,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469378,"byte_end":10469421,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469426,"byte_end":10469429,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469434,"byte_end":10469488,"line_start":806,"line_end":806,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469493,"byte_end":10469496,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469501,"byte_end":10469513,"line_start":808,"line_end":808,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469518,"byte_end":10469521,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469526,"byte_end":10469600,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469605,"byte_end":10469675,"line_start":811,"line_end":811,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469680,"byte_end":10469729,"line_start":812,"line_end":812,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469734,"byte_end":10469737,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469742,"byte_end":10469756,"line_start":814,"line_end":814,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469761,"byte_end":10469764,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469769,"byte_end":10469782,"line_start":816,"line_end":816,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469787,"byte_end":10469817,"line_start":817,"line_end":817,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469822,"byte_end":10469848,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469853,"byte_end":10469869,"line_start":819,"line_end":819,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469874,"byte_end":10469877,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469882,"byte_end":10469900,"line_start":821,"line_end":821,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469905,"byte_end":10469956,"line_start":822,"line_end":822,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469961,"byte_end":10469989,"line_start":823,"line_end":823,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10469994,"byte_end":10470059,"line_start":824,"line_end":824,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470064,"byte_end":10470067,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470072,"byte_end":10470086,"line_start":826,"line_end":826,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470091,"byte_end":10470140,"line_start":827,"line_end":827,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470145,"byte_end":10470182,"line_start":828,"line_end":828,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470187,"byte_end":10470190,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470195,"byte_end":10470266,"line_start":830,"line_end":830,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470271,"byte_end":10470329,"line_start":831,"line_end":831,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470334,"byte_end":10470386,"line_start":832,"line_end":832,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470391,"byte_end":10470417,"line_start":833,"line_end":833,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470422,"byte_end":10470448,"line_start":834,"line_end":834,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470453,"byte_end":10470470,"line_start":835,"line_end":835,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470475,"byte_end":10470547,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470552,"byte_end":10470581,"line_start":837,"line_end":837,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470586,"byte_end":10470603,"line_start":838,"line_end":838,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470608,"byte_end":10470635,"line_start":839,"line_end":839,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470640,"byte_end":10470681,"line_start":840,"line_end":840,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470686,"byte_end":10470703,"line_start":841,"line_end":841,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470708,"byte_end":10470721,"line_start":842,"line_end":842,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470726,"byte_end":10470735,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470740,"byte_end":10470743,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470748,"byte_end":10470762,"line_start":845,"line_end":845,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470767,"byte_end":10470772,"line_start":846,"line_end":846,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470777,"byte_end":10470784,"line_start":847,"line_end":847,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472865,"byte_end":10472883,"line_start":910,"line_end":910,"column_start":12,"column_end":30},"name":"try_write_vectored","qualname":"<TcpStream>::try_write_vectored","value":"pub fn try_write_vectored(&Self, &[io::IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write several buffers to the stream, returning how many bytes\n were written.","sig":null,"attributes":[{"value":"/ Try to write several buffers to the stream, returning how many bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10470999,"byte_end":10471071,"line_start":856,"line_end":856,"column_start":5,"column_end":77}},{"value":"/ were written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471076,"byte_end":10471093,"line_start":857,"line_end":857,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471098,"byte_end":10471101,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ Data is written from each buffer in order, with the final buffer read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471106,"byte_end":10471179,"line_start":859,"line_end":859,"column_start":5,"column_end":78}},{"value":"/ from possible being only partially consumed. This method behaves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471184,"byte_end":10471252,"line_start":860,"line_end":860,"column_start":5,"column_end":73}},{"value":"/ equivalently to a single call to [`try_write()`] with concatenated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471257,"byte_end":10471327,"line_start":861,"line_end":861,"column_start":5,"column_end":75}},{"value":"/ buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471332,"byte_end":10471344,"line_start":862,"line_end":862,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471349,"byte_end":10471352,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471357,"byte_end":10471411,"line_start":864,"line_end":864,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471416,"byte_end":10471419,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ [`try_write()`]: TcpStream::try_write()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471424,"byte_end":10471467,"line_start":866,"line_end":866,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471472,"byte_end":10471475,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471480,"byte_end":10471492,"line_start":868,"line_end":868,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471497,"byte_end":10471500,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471505,"byte_end":10471579,"line_start":870,"line_end":870,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471584,"byte_end":10471654,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471659,"byte_end":10471708,"line_start":872,"line_end":872,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471713,"byte_end":10471716,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471721,"byte_end":10471735,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471740,"byte_end":10471743,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471748,"byte_end":10471761,"line_start":876,"line_end":876,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471766,"byte_end":10471796,"line_start":877,"line_end":877,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471801,"byte_end":10471827,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471832,"byte_end":10471848,"line_start":879,"line_end":879,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471853,"byte_end":10471856,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471861,"byte_end":10471879,"line_start":881,"line_end":881,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471884,"byte_end":10471935,"line_start":882,"line_end":882,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471940,"byte_end":10471968,"line_start":883,"line_end":883,"column_start":5,"column_end":33}},{"value":"/     let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10471973,"byte_end":10472038,"line_start":884,"line_end":884,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472043,"byte_end":10472046,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     let bufs = [io::IoSlice::new(b\"hello \"), io::IoSlice::new(b\"world\")];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472051,"byte_end":10472128,"line_start":886,"line_end":886,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472133,"byte_end":10472136,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472141,"byte_end":10472155,"line_start":888,"line_end":888,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472160,"byte_end":10472209,"line_start":889,"line_end":889,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472214,"byte_end":10472251,"line_start":890,"line_end":890,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472256,"byte_end":10472259,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472264,"byte_end":10472335,"line_start":892,"line_end":892,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472340,"byte_end":10472398,"line_start":893,"line_end":893,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write_vectored(&bufs) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472403,"byte_end":10472455,"line_start":894,"line_end":894,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472460,"byte_end":10472486,"line_start":895,"line_end":895,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472491,"byte_end":10472517,"line_start":896,"line_end":896,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472522,"byte_end":10472539,"line_start":897,"line_end":897,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472544,"byte_end":10472616,"line_start":898,"line_end":898,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472621,"byte_end":10472650,"line_start":899,"line_end":899,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472655,"byte_end":10472672,"line_start":900,"line_end":900,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472677,"byte_end":10472704,"line_start":901,"line_end":901,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472709,"byte_end":10472750,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472755,"byte_end":10472772,"line_start":903,"line_end":903,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472777,"byte_end":10472790,"line_start":904,"line_end":904,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472795,"byte_end":10472804,"line_start":905,"line_end":905,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472809,"byte_end":10472812,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472817,"byte_end":10472831,"line_start":907,"line_end":907,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472836,"byte_end":10472841,"line_start":908,"line_end":908,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10472846,"byte_end":10472853,"line_start":909,"line_end":909,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474358,"byte_end":10474362,"line_start":955,"line_end":955,"column_start":18,"column_end":22},"name":"peek","qualname":"<TcpStream>::peek","value":"pub async fn peek<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected, without removing that data from the queue. On success,\n returns the number of bytes peeked.","sig":null,"attributes":[{"value":"/ Receives data on the socket from the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473101,"byte_end":10473171,"line_start":918,"line_end":918,"column_start":5,"column_end":75}},{"value":"/ connected, without removing that data from the queue. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473176,"byte_end":10473245,"line_start":919,"line_end":919,"column_start":5,"column_end":74}},{"value":"/ returns the number of bytes peeked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473250,"byte_end":10473289,"line_start":920,"line_end":920,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473294,"byte_end":10473297,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Successive calls return the same data. This is accomplished by passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473302,"byte_end":10473376,"line_start":922,"line_end":922,"column_start":5,"column_end":79}},{"value":"/ `MSG_PEEK` as a flag to the underlying recv system call.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473381,"byte_end":10473441,"line_start":923,"line_end":923,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473446,"byte_end":10473449,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473454,"byte_end":10473468,"line_start":925,"line_end":925,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473473,"byte_end":10473476,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473481,"byte_end":10473494,"line_start":927,"line_end":927,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473499,"byte_end":10473529,"line_start":928,"line_end":928,"column_start":5,"column_end":35}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473534,"byte_end":10473566,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473571,"byte_end":10473597,"line_start":930,"line_end":930,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473602,"byte_end":10473605,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473610,"byte_end":10473628,"line_start":932,"line_end":932,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473633,"byte_end":10473684,"line_start":933,"line_end":933,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473689,"byte_end":10473717,"line_start":934,"line_end":934,"column_start":5,"column_end":33}},{"value":"/     let mut stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473722,"byte_end":10473791,"line_start":935,"line_end":935,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473796,"byte_end":10473799,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/     let mut b1 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473804,"byte_end":10473833,"line_start":937,"line_end":937,"column_start":5,"column_end":34}},{"value":"/     let mut b2 = [0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473838,"byte_end":10473867,"line_start":938,"line_end":938,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473872,"byte_end":10473875,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/     // Peek at the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473880,"byte_end":10473907,"line_start":940,"line_end":940,"column_start":5,"column_end":32}},{"value":"/     let n = stream.peek(&mut b1).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473912,"byte_end":10473956,"line_start":941,"line_end":941,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473961,"byte_end":10473964,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/     // Read the data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473969,"byte_end":10473993,"line_start":943,"line_end":943,"column_start":5,"column_end":29}},{"value":"/     assert_eq!(n, stream.read(&mut b2[..n]).await?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10473998,"byte_end":10474054,"line_start":944,"line_end":944,"column_start":5,"column_end":61}},{"value":"/     assert_eq!(&b1[..n], &b2[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474059,"byte_end":10474098,"line_start":945,"line_end":945,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474103,"byte_end":10474106,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474111,"byte_end":10474125,"line_start":947,"line_end":947,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474130,"byte_end":10474135,"line_start":948,"line_end":948,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474140,"byte_end":10474147,"line_start":949,"line_end":949,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474152,"byte_end":10474155,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ The [`read`] method is defined on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474160,"byte_end":10474225,"line_start":951,"line_end":951,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474230,"byte_end":10474233,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ [`read`]: fn@crate::io::AsyncReadExt::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474238,"byte_end":10474284,"line_start":953,"line_end":953,"column_start":5,"column_end":51}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474289,"byte_end":10474340,"line_start":954,"line_end":954,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475457,"byte_end":10475464,"line_start":989,"line_end":989,"column_start":12,"column_end":19},"name":"nodelay","qualname":"<TcpStream>::nodelay","value":"pub fn nodelay(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474925,"byte_end":10474987,"line_start":971,"line_end":971,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10474992,"byte_end":10474995,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_nodelay`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475000,"byte_end":10475064,"line_start":973,"line_end":973,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475069,"byte_end":10475072,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ [`set_nodelay`]: TcpStream::set_nodelay","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475077,"byte_end":10475120,"line_start":975,"line_end":975,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475125,"byte_end":10475128,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475133,"byte_end":10475147,"line_start":977,"line_end":977,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475152,"byte_end":10475155,"line_start":978,"line_end":978,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475160,"byte_end":10475173,"line_start":979,"line_end":979,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475178,"byte_end":10475208,"line_start":980,"line_end":980,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475213,"byte_end":10475216,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475221,"byte_end":10475285,"line_start":982,"line_end":982,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475290,"byte_end":10475351,"line_start":983,"line_end":983,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475356,"byte_end":10475359,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.nodelay()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475364,"byte_end":10475404,"line_start":985,"line_end":985,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475409,"byte_end":10475421,"line_start":986,"line_end":986,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475426,"byte_end":10475433,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475438,"byte_end":10475445,"line_start":988,"line_end":988,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476261,"byte_end":10476272,"line_start":1013,"line_end":1013,"column_start":12,"column_end":23},"name":"set_nodelay","qualname":"<TcpStream>::set_nodelay","value":"pub fn set_nodelay(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `TCP_NODELAY` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475531,"byte_end":10475593,"line_start":993,"line_end":993,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475598,"byte_end":10475601,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ If set, this option disables the Nagle algorithm. This means that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475606,"byte_end":10475675,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/ segments are always sent as soon as possible, even if there is only a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475680,"byte_end":10475753,"line_start":996,"line_end":996,"column_start":5,"column_end":78}},{"value":"/ small amount of data. When not set, data is buffered until there is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475758,"byte_end":10475831,"line_start":997,"line_end":997,"column_start":5,"column_end":78}},{"value":"/ sufficient amount to send out, thereby avoiding the frequent sending of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475836,"byte_end":10475911,"line_start":998,"line_end":998,"column_start":5,"column_end":80}},{"value":"/ small packets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475916,"byte_end":10475934,"line_start":999,"line_end":999,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475939,"byte_end":10475942,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475947,"byte_end":10475961,"line_start":1001,"line_end":1001,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475966,"byte_end":10475969,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475974,"byte_end":10475987,"line_start":1003,"line_end":1003,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10475992,"byte_end":10476022,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476027,"byte_end":10476030,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476035,"byte_end":10476099,"line_start":1006,"line_end":1006,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476104,"byte_end":10476165,"line_start":1007,"line_end":1007,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476170,"byte_end":10476173,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ stream.set_nodelay(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476178,"byte_end":10476208,"line_start":1009,"line_end":1009,"column_start":5,"column_end":35}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476213,"byte_end":10476225,"line_start":1010,"line_end":1010,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476230,"byte_end":10476237,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476242,"byte_end":10476249,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476917,"byte_end":10476923,"line_start":1036,"line_end":1036,"column_start":12,"column_end":18},"name":"linger","qualname":"<TcpStream>::linger","value":"pub fn linger(&Self) -> io::Result<Option<Duration>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the linger duration for this socket by getting the `SO_LINGER`\n option.","sig":null,"attributes":[{"value":"/ Reads the linger duration for this socket by getting the `SO_LINGER`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476363,"byte_end":10476435,"line_start":1017,"line_end":1017,"column_start":5,"column_end":77}},{"value":"/ option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476440,"byte_end":10476451,"line_start":1018,"line_end":1018,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476456,"byte_end":10476459,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_linger`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476464,"byte_end":10476527,"line_start":1020,"line_end":1020,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476532,"byte_end":10476535,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ [`set_linger`]: TcpStream::set_linger","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476540,"byte_end":10476581,"line_start":1022,"line_end":1022,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476586,"byte_end":10476589,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476594,"byte_end":10476608,"line_start":1024,"line_end":1024,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476613,"byte_end":10476616,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476621,"byte_end":10476634,"line_start":1026,"line_end":1026,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476639,"byte_end":10476669,"line_start":1027,"line_end":1027,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476674,"byte_end":10476677,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476682,"byte_end":10476746,"line_start":1029,"line_end":1029,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476751,"byte_end":10476812,"line_start":1030,"line_end":1030,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476817,"byte_end":10476820,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.linger()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476825,"byte_end":10476864,"line_start":1032,"line_end":1032,"column_start":5,"column_end":44}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476869,"byte_end":10476881,"line_start":1033,"line_end":1033,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476886,"byte_end":10476893,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10476898,"byte_end":10476905,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477902,"byte_end":10477912,"line_start":1063,"line_end":1063,"column_start":12,"column_end":22},"name":"set_linger","qualname":"<TcpStream>::set_linger","value":"pub fn set_linger(&Self, Option<Duration>) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option.","sig":null,"attributes":[{"value":"/ Sets the linger duration of this socket by setting the SO_LINGER option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477078,"byte_end":10477154,"line_start":1042,"line_end":1042,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477159,"byte_end":10477162,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ This option controls the action taken when a stream has unsent messages and the stream is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477167,"byte_end":10477260,"line_start":1044,"line_end":1044,"column_start":5,"column_end":98}},{"value":"/ closed. If SO_LINGER is set, the system shall block the process until it can transmit the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477265,"byte_end":10477358,"line_start":1045,"line_end":1045,"column_start":5,"column_end":98}},{"value":"/ data or until the time expires.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477363,"byte_end":10477398,"line_start":1046,"line_end":1046,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477403,"byte_end":10477406,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ If SO_LINGER is not specified, and the stream is closed, the system handles the call in a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477411,"byte_end":10477504,"line_start":1048,"line_end":1048,"column_start":5,"column_end":98}},{"value":"/ way that allows the process to continue as quickly as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477509,"byte_end":10477576,"line_start":1049,"line_end":1049,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477581,"byte_end":10477584,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477589,"byte_end":10477603,"line_start":1051,"line_end":1051,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477608,"byte_end":10477611,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477616,"byte_end":10477629,"line_start":1053,"line_end":1053,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477634,"byte_end":10477664,"line_start":1054,"line_end":1054,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477669,"byte_end":10477672,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477677,"byte_end":10477741,"line_start":1056,"line_end":1056,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477746,"byte_end":10477807,"line_start":1057,"line_end":1057,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477812,"byte_end":10477815,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ stream.set_linger(None)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477820,"byte_end":10477849,"line_start":1059,"line_end":1059,"column_start":5,"column_end":34}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477854,"byte_end":10477866,"line_start":1060,"line_end":1060,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477871,"byte_end":10477878,"line_start":1061,"line_end":1061,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10477883,"byte_end":10477890,"line_start":1062,"line_end":1062,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479011,"byte_end":10479014,"line_start":1101,"line_end":1101,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpStream>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478499,"byte_end":10478557,"line_start":1083,"line_end":1083,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478562,"byte_end":10478565,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478570,"byte_end":10478630,"line_start":1085,"line_end":1085,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478635,"byte_end":10478638,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: TcpStream::set_ttl","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478643,"byte_end":10478678,"line_start":1087,"line_end":1087,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478683,"byte_end":10478686,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478691,"byte_end":10478705,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478710,"byte_end":10478713,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478718,"byte_end":10478731,"line_start":1091,"line_end":1091,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478736,"byte_end":10478766,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478771,"byte_end":10478774,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478779,"byte_end":10478843,"line_start":1094,"line_end":1094,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478848,"byte_end":10478909,"line_start":1095,"line_end":1095,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478914,"byte_end":10478917,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", stream.ttl()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478922,"byte_end":10478958,"line_start":1097,"line_end":1097,"column_start":5,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478963,"byte_end":10478975,"line_start":1098,"line_end":1098,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478980,"byte_end":10478987,"line_start":1099,"line_end":1099,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10478992,"byte_end":10478999,"line_start":1100,"line_end":1100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479571,"byte_end":10479578,"line_start":1122,"line_end":1122,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<TcpStream>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479076,"byte_end":10479134,"line_start":1105,"line_end":1105,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479139,"byte_end":10479142,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479147,"byte_end":10479223,"line_start":1107,"line_end":1107,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479228,"byte_end":10479249,"line_start":1108,"line_end":1108,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479254,"byte_end":10479257,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479262,"byte_end":10479276,"line_start":1110,"line_end":1110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479281,"byte_end":10479284,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479289,"byte_end":10479302,"line_start":1112,"line_end":1112,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479307,"byte_end":10479337,"line_start":1113,"line_end":1113,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479342,"byte_end":10479345,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479350,"byte_end":10479414,"line_start":1115,"line_end":1115,"column_start":5,"column_end":69}},{"value":"/ let stream = TcpStream::connect(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479419,"byte_end":10479480,"line_start":1116,"line_end":1116,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479485,"byte_end":10479488,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ stream.set_ttl(123)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479493,"byte_end":10479518,"line_start":1118,"line_end":1118,"column_start":5,"column_end":30}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479523,"byte_end":10479535,"line_start":1119,"line_end":1119,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479540,"byte_end":10479547,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479552,"byte_end":10479559,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480170,"byte_end":10480175,"line_start":1136,"line_end":1136,"column_start":12,"column_end":17},"name":"split","qualname":"<TcpStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479793,"byte_end":10479829,"line_start":1128,"line_end":1128,"column_start":5,"column_end":41}},{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479834,"byte_end":10479911,"line_start":1129,"line_end":1129,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479916,"byte_end":10479962,"line_start":1130,"line_end":1130,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479967,"byte_end":10479970,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10479975,"byte_end":10480054,"line_start":1132,"line_end":1132,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480059,"byte_end":10480102,"line_start":1133,"line_end":1133,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480107,"byte_end":10480110,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: TcpStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480115,"byte_end":10480158,"line_start":1135,"line_end":1135,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480824,"byte_end":10480834,"line_start":1151,"line_end":1151,"column_start":12,"column_end":22},"name":"into_split","qualname":"<TcpStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `TcpStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `TcpStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480260,"byte_end":10480337,"line_start":1140,"line_end":1140,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480342,"byte_end":10480388,"line_start":1141,"line_end":1141,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480393,"byte_end":10480396,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480401,"byte_end":10480479,"line_start":1143,"line_end":1143,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480484,"byte_end":10480532,"line_start":1144,"line_end":1144,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480537,"byte_end":10480540,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the TCP","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480545,"byte_end":10480623,"line_start":1146,"line_end":1146,"column_start":5,"column_end":83}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `TcpStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480628,"byte_end":10480704,"line_start":1147,"line_end":1147,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480709,"byte_end":10480712,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ [`split`]: TcpStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480717,"byte_end":10480750,"line_start":1149,"line_end":1149,"column_start":5,"column_end":38}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10480755,"byte_end":10480812,"line_start":1150,"line_end":1150,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488352,"byte_end":10488361,"line_start":122,"line_end":122,"column_start":16,"column_end":25},"name":"UdpSocket","qualname":"::net::udp::UdpSocket","value":"UdpSocket {  }","parent":null,"children":[{"krate":0,"index":3314}],"decl_id":null,"docs":" A UDP socket","sig":null,"attributes":[{"value":"cfg(feature = \"net\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21391,"byte_end":21414,"line_start":169,"line_end":169,"column_start":13,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488898,"byte_end":10488902,"line_start":145,"line_end":145,"column_start":18,"column_end":22},"name":"bind","qualname":"<UdpSocket>::bind","value":"pub async fn bind<A: ToSocketAddrs>(A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" This function will create a new UDP socket and attempt to bind it to\n the `addr` provided.","sig":null,"attributes":[{"value":"/ This function will create a new UDP socket and attempt to bind it to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488440,"byte_end":10488512,"line_start":128,"line_end":128,"column_start":5,"column_end":77}},{"value":"/ the `addr` provided.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488517,"byte_end":10488541,"line_start":129,"line_end":129,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488546,"byte_end":10488549,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488554,"byte_end":10488567,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488572,"byte_end":10488575,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488580,"byte_end":10488593,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488598,"byte_end":10488628,"line_start":134,"line_end":134,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488633,"byte_end":10488649,"line_start":135,"line_end":135,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488654,"byte_end":10488657,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488662,"byte_end":10488680,"line_start":137,"line_end":137,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488685,"byte_end":10488724,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/     let sock = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488729,"byte_end":10488787,"line_start":139,"line_end":139,"column_start":5,"column_end":63}},{"value":"/     // use `sock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488792,"byte_end":10488813,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/ #   let _ = sock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488818,"byte_end":10488839,"line_start":141,"line_end":141,"column_start":5,"column_end":26}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488844,"byte_end":10488858,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488863,"byte_end":10488868,"line_start":143,"line_end":143,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488873,"byte_end":10488880,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491141,"byte_end":10491149,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UdpSocket>::from_std","value":"pub fn from_std(net::UdpSocket) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","sig":null,"attributes":[{"value":"/ Creates new `UdpSocket` from a previously bound `std::net::UdpSocket`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10489735,"byte_end":10489809,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10489814,"byte_end":10489817,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UDP socket from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10489822,"byte_end":10489892,"line_start":176,"line_end":176,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes nothing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10489897,"byte_end":10489973,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ about the underlying socket; it is left up to the user to set it in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10489978,"byte_end":10490049,"line_start":178,"line_end":178,"column_start":5,"column_end":76}},{"value":"/ non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490054,"byte_end":10490076,"line_start":179,"line_end":179,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490081,"byte_end":10490084,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This can be used in conjunction with socket2's `Socket` interface to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490089,"byte_end":10490161,"line_start":181,"line_end":181,"column_start":5,"column_end":77}},{"value":"/ configure a socket before it's handed off, such as setting options like","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490166,"byte_end":10490241,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ `reuse_address` or binding to multiple addresses.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490246,"byte_end":10490299,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490304,"byte_end":10490307,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490312,"byte_end":10490324,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490329,"byte_end":10490332,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490337,"byte_end":10490397,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490402,"byte_end":10490405,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490410,"byte_end":10490480,"line_start":189,"line_end":189,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490485,"byte_end":10490558,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490563,"byte_end":10490643,"line_start":191,"line_end":191,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490648,"byte_end":10490651,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490656,"byte_end":10490669,"line_start":193,"line_end":193,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490674,"byte_end":10490677,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490682,"byte_end":10490695,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490700,"byte_end":10490730,"line_start":196,"line_end":196,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490735,"byte_end":10490772,"line_start":197,"line_end":197,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490777,"byte_end":10490780,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490785,"byte_end":10490805,"line_start":199,"line_end":199,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490810,"byte_end":10490851,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490856,"byte_end":10490917,"line_start":201,"line_end":201,"column_start":5,"column_end":66}},{"value":"/ let std_sock = std::net::UdpSocket::bind(addr)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490922,"byte_end":10490974,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/ std_sock.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10490979,"byte_end":10491015,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ let sock = UdpSocket::from_std(std_sock)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491020,"byte_end":10491066,"line_start":204,"line_end":204,"column_start":5,"column_end":51}},{"value":"/ // use `sock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491071,"byte_end":10491088,"line_start":205,"line_end":205,"column_start":5,"column_end":22}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491093,"byte_end":10491105,"line_start":206,"line_end":206,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491110,"byte_end":10491117,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491122,"byte_end":10491129,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492119,"byte_end":10492127,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UdpSocket>::into_std","value":"pub fn into_std(Self) -> io::Result<std::net::UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UdpSocket`] into a [`std::net::UdpSocket`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491295,"byte_end":10491363,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491368,"byte_end":10491371,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::net::UdpSocket`] will have nonblocking mode set as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491376,"byte_end":10491450,"line_start":216,"line_end":216,"column_start":5,"column_end":79}},{"value":"/ `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491455,"byte_end":10491530,"line_start":217,"line_end":217,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491535,"byte_end":10491538,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491543,"byte_end":10491557,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491562,"byte_end":10491565,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491570,"byte_end":10491588,"line_start":221,"line_end":221,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491593,"byte_end":10491619,"line_start":222,"line_end":222,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491624,"byte_end":10491627,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491632,"byte_end":10491650,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491655,"byte_end":10491706,"line_start":225,"line_end":225,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UdpSocket::bind(\"127.0.0.1:0\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491711,"byte_end":10491788,"line_start":226,"line_end":226,"column_start":5,"column_end":82}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491793,"byte_end":10491843,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491848,"byte_end":10491891,"line_start":228,"line_end":228,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491896,"byte_end":10491910,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491915,"byte_end":10491920,"line_start":230,"line_end":230,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491925,"byte_end":10491932,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491937,"byte_end":10491940,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UdpSocket`]: UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491945,"byte_end":10491985,"line_start":233,"line_end":233,"column_start":5,"column_end":45}},{"value":"/ [`std::net::UdpSocket`]: std::net::UdpSocket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10491990,"byte_end":10492038,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/ [`set_nonblocking`]: fn@std::net::UdpSocket::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492043,"byte_end":10492107,"line_start":235,"line_end":235,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493293,"byte_end":10493303,"line_start":273,"line_end":273,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UdpSocket>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492767,"byte_end":10492826,"line_start":256,"line_end":256,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492831,"byte_end":10492834,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492839,"byte_end":10492852,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492857,"byte_end":10492860,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492865,"byte_end":10492878,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492883,"byte_end":10492913,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492918,"byte_end":10492955,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492960,"byte_end":10492963,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492968,"byte_end":10492988,"line_start":264,"line_end":264,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10492993,"byte_end":10493034,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/ let addr = \"0.0.0.0:8080\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493039,"byte_end":10493100,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/ let sock = UdpSocket::bind(addr).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493105,"byte_end":10493149,"line_start":267,"line_end":267,"column_start":5,"column_end":49}},{"value":"/ // the address the socket is bound to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493154,"byte_end":10493195,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ let local_addr = sock.local_addr()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493200,"byte_end":10493240,"line_start":269,"line_end":269,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493245,"byte_end":10493257,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493262,"byte_end":10493269,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493274,"byte_end":10493281,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494223,"byte_end":10494230,"line_start":301,"line_end":301,"column_start":18,"column_end":25},"name":"connect","qualname":"<UdpSocket>::connect","value":"pub async fn connect<A: ToSocketAddrs, '_>(&'_ Self, A) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Connects the UDP socket setting the default destination for send() and\n limiting packets that are read via recv from the address specified in\n `addr`.","sig":null,"attributes":[{"value":"/ Connects the UDP socket setting the default destination for send() and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493379,"byte_end":10493453,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ limiting packets that are read via recv from the address specified in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493458,"byte_end":10493531,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ `addr`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493536,"byte_end":10493547,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493552,"byte_end":10493555,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493560,"byte_end":10493573,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493578,"byte_end":10493581,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493586,"byte_end":10493599,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493604,"byte_end":10493634,"line_start":284,"line_end":284,"column_start":5,"column_end":35}},{"value":"/ # use std::{io, net::SocketAddr};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493639,"byte_end":10493676,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493681,"byte_end":10493684,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493689,"byte_end":10493709,"line_start":287,"line_end":287,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493714,"byte_end":10493755,"line_start":288,"line_end":288,"column_start":5,"column_end":46}},{"value":"/ let sock = UdpSocket::bind(\"0.0.0.0:8080\".parse::<SocketAddr>().unwrap()).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493760,"byte_end":10493845,"line_start":289,"line_end":289,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493850,"byte_end":10493853,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ let remote_addr = \"127.0.0.1:59600\".parse::<SocketAddr>().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493858,"byte_end":10493929,"line_start":291,"line_end":291,"column_start":5,"column_end":76}},{"value":"/ sock.connect(remote_addr).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493934,"byte_end":10493971,"line_start":292,"line_end":292,"column_start":5,"column_end":42}},{"value":"/ let mut buf = [0u8; 32];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10493976,"byte_end":10494004,"line_start":293,"line_end":293,"column_start":5,"column_end":33}},{"value":"/ // recv from remote_addr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494009,"byte_end":10494037,"line_start":294,"line_end":294,"column_start":5,"column_end":33}},{"value":"/ let len = sock.recv(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494042,"byte_end":10494083,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/ // send to remote_addr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494088,"byte_end":10494114,"line_start":296,"line_end":296,"column_start":5,"column_end":31}},{"value":"/ let _len = sock.send(&buf[..len]).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494119,"byte_end":10494164,"line_start":297,"line_end":297,"column_start":5,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494169,"byte_end":10494181,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494186,"byte_end":10494193,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494198,"byte_end":10494205,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497037,"byte_end":10497042,"line_start":379,"line_end":379,"column_start":18,"column_end":23},"name":"ready","qualname":"<UdpSocket>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494753,"byte_end":10494800,"line_start":320,"line_end":320,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494805,"byte_end":10494808,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494813,"byte_end":10494886,"line_start":322,"line_end":322,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494891,"byte_end":10494965,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10494970,"byte_end":10495008,"line_start":324,"line_end":324,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495013,"byte_end":10495016,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495021,"byte_end":10495092,"line_start":326,"line_end":326,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495097,"byte_end":10495160,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495165,"byte_end":10495197,"line_start":328,"line_end":328,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495202,"byte_end":10495205,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495210,"byte_end":10495224,"line_start":330,"line_end":330,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495229,"byte_end":10495232,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495237,"byte_end":10495306,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495311,"byte_end":10495333,"line_start":333,"line_end":333,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495338,"byte_end":10495341,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495346,"byte_end":10495359,"line_start":335,"line_end":335,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::{self, Interest};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495364,"byte_end":10495400,"line_start":336,"line_end":336,"column_start":5,"column_end":41}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495405,"byte_end":10495435,"line_start":337,"line_end":337,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495440,"byte_end":10495443,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495448,"byte_end":10495466,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495471,"byte_end":10495510,"line_start":340,"line_end":340,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495515,"byte_end":10495577,"line_start":341,"line_end":341,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495582,"byte_end":10495630,"line_start":342,"line_end":342,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495635,"byte_end":10495638,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495643,"byte_end":10495657,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495662,"byte_end":10495747,"line_start":345,"line_end":345,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495752,"byte_end":10495755,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495760,"byte_end":10495796,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"/             // The buffer is **not** included in the async task and will only exist","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495801,"byte_end":10495888,"line_start":348,"line_end":348,"column_start":5,"column_end":92}},{"value":"/             // on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495893,"byte_end":10495925,"line_start":349,"line_end":349,"column_start":5,"column_end":37}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495930,"byte_end":10495971,"line_start":350,"line_end":350,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10495976,"byte_end":10496030,"line_start":351,"line_end":351,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496035,"byte_end":10496065,"line_start":352,"line_end":352,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496070,"byte_end":10496132,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496137,"byte_end":10496158,"line_start":354,"line_end":354,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496163,"byte_end":10496210,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496215,"byte_end":10496292,"line_start":356,"line_end":356,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496297,"byte_end":10496328,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496333,"byte_end":10496371,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496376,"byte_end":10496397,"line_start":359,"line_end":359,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496402,"byte_end":10496419,"line_start":360,"line_end":360,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496424,"byte_end":10496437,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496442,"byte_end":10496445,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496450,"byte_end":10496486,"line_start":363,"line_end":363,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496491,"byte_end":10496525,"line_start":364,"line_end":364,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496530,"byte_end":10496585,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496590,"byte_end":10496620,"line_start":366,"line_end":366,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496625,"byte_end":10496678,"line_start":367,"line_end":367,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496683,"byte_end":10496704,"line_start":368,"line_end":368,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496709,"byte_end":10496756,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496761,"byte_end":10496838,"line_start":370,"line_end":370,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496843,"byte_end":10496874,"line_start":371,"line_end":371,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496879,"byte_end":10496917,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496922,"byte_end":10496943,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496948,"byte_end":10496965,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496970,"byte_end":10496983,"line_start":375,"line_end":375,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10496988,"byte_end":10496997,"line_start":376,"line_end":376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497002,"byte_end":10497007,"line_start":377,"line_end":377,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497012,"byte_end":10497019,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498644,"byte_end":10498652,"line_start":427,"line_end":427,"column_start":18,"column_end":26},"name":"writable","qualname":"<UdpSocket>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497199,"byte_end":10497242,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497247,"byte_end":10497250,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497255,"byte_end":10497324,"line_start":386,"line_end":386,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497329,"byte_end":10497385,"line_start":387,"line_end":387,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497390,"byte_end":10497393,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497398,"byte_end":10497472,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497477,"byte_end":10497542,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497547,"byte_end":10497579,"line_start":391,"line_end":391,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497584,"byte_end":10497587,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497592,"byte_end":10497606,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497611,"byte_end":10497614,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497619,"byte_end":10497632,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497637,"byte_end":10497667,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497672,"byte_end":10497688,"line_start":397,"line_end":397,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497693,"byte_end":10497696,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497701,"byte_end":10497719,"line_start":399,"line_end":399,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497724,"byte_end":10497763,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497768,"byte_end":10497790,"line_start":401,"line_end":401,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497795,"byte_end":10497857,"line_start":402,"line_end":402,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497862,"byte_end":10497910,"line_start":403,"line_end":403,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497915,"byte_end":10497918,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497923,"byte_end":10497937,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497942,"byte_end":10497991,"line_start":406,"line_end":406,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10497996,"byte_end":10498033,"line_start":407,"line_end":407,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498038,"byte_end":10498041,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498046,"byte_end":10498116,"line_start":409,"line_end":409,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498121,"byte_end":10498179,"line_start":410,"line_end":410,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498184,"byte_end":10498235,"line_start":411,"line_end":411,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498240,"byte_end":10498266,"line_start":412,"line_end":412,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498271,"byte_end":10498297,"line_start":413,"line_end":413,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498302,"byte_end":10498319,"line_start":414,"line_end":414,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498324,"byte_end":10498396,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498401,"byte_end":10498430,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498435,"byte_end":10498452,"line_start":417,"line_end":417,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498457,"byte_end":10498484,"line_start":418,"line_end":418,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498489,"byte_end":10498523,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498528,"byte_end":10498545,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498550,"byte_end":10498563,"line_start":421,"line_end":421,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498568,"byte_end":10498577,"line_start":422,"line_end":422,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498582,"byte_end":10498585,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498590,"byte_end":10498604,"line_start":424,"line_end":424,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498609,"byte_end":10498614,"line_start":425,"line_end":425,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498619,"byte_end":10498626,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499672,"byte_end":10499676,"line_start":463,"line_end":463,"column_start":18,"column_end":22},"name":"send","qualname":"<UdpSocket>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address that the socket is\n connected to.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the remote address that the socket is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498753,"byte_end":10498822,"line_start":432,"line_end":432,"column_start":5,"column_end":74}},{"value":"/ connected to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498827,"byte_end":10498844,"line_start":433,"line_end":433,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498849,"byte_end":10498852,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498857,"byte_end":10498929,"line_start":435,"line_end":435,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498934,"byte_end":10498991,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10498996,"byte_end":10498999,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499004,"byte_end":10499041,"line_start":438,"line_end":438,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499046,"byte_end":10499049,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499054,"byte_end":10499066,"line_start":440,"line_end":440,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499071,"byte_end":10499074,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ On success, the number of bytes sent is returned, otherwise, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499079,"byte_end":10499147,"line_start":442,"line_end":442,"column_start":5,"column_end":73}},{"value":"/ encountered error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499152,"byte_end":10499186,"line_start":443,"line_end":443,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499191,"byte_end":10499194,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499199,"byte_end":10499213,"line_start":445,"line_end":445,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499218,"byte_end":10499221,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499226,"byte_end":10499239,"line_start":447,"line_end":447,"column_start":5,"column_end":18}},{"value":"/ use tokio::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499244,"byte_end":10499262,"line_start":448,"line_end":448,"column_start":5,"column_end":23}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499267,"byte_end":10499297,"line_start":449,"line_end":449,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499302,"byte_end":10499305,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499310,"byte_end":10499328,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499333,"byte_end":10499372,"line_start":452,"line_end":452,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499377,"byte_end":10499399,"line_start":453,"line_end":453,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499404,"byte_end":10499466,"line_start":454,"line_end":454,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499471,"byte_end":10499519,"line_start":455,"line_end":455,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499524,"byte_end":10499527,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     // Send a message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499532,"byte_end":10499557,"line_start":457,"line_end":457,"column_start":5,"column_end":30}},{"value":"/     socket.send(b\"hello world\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499562,"byte_end":10499605,"line_start":458,"line_end":458,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499610,"byte_end":10499613,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499618,"byte_end":10499632,"line_start":460,"line_end":460,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499637,"byte_end":10499642,"line_start":461,"line_end":461,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499647,"byte_end":10499654,"line_start":462,"line_end":462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500764,"byte_end":10500773,"line_start":493,"line_end":493,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UdpSocket>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499857,"byte_end":10499930,"line_start":470,"line_end":470,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499935,"byte_end":10499966,"line_start":471,"line_end":471,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499971,"byte_end":10499974,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10499979,"byte_end":10500051,"line_start":473,"line_end":473,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500056,"byte_end":10500113,"line_start":474,"line_end":474,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500118,"byte_end":10500121,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500126,"byte_end":10500201,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500206,"byte_end":10500281,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500286,"byte_end":10500323,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500328,"byte_end":10500331,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500336,"byte_end":10500354,"line_start":480,"line_end":480,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500359,"byte_end":10500362,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500367,"byte_end":10500392,"line_start":482,"line_end":482,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500397,"byte_end":10500400,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500405,"byte_end":10500466,"line_start":484,"line_end":484,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500471,"byte_end":10500529,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500534,"byte_end":10500589,"line_start":486,"line_end":486,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500594,"byte_end":10500597,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500602,"byte_end":10500614,"line_start":488,"line_end":488,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500619,"byte_end":10500622,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500627,"byte_end":10500702,"line_start":490,"line_end":490,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500707,"byte_end":10500710,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500715,"byte_end":10500752,"line_start":492,"line_end":492,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502517,"byte_end":10502525,"line_start":547,"line_end":547,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UdpSocket>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the remote address to which it is\n connected.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the remote address to which it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10500952,"byte_end":10501023,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/ connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501028,"byte_end":10501042,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501047,"byte_end":10501050,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ When the socket buffer is full, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501055,"byte_end":10501126,"line_start":502,"line_end":502,"column_start":5,"column_end":76}},{"value":"/ returned. This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501131,"byte_end":10501195,"line_start":503,"line_end":503,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501200,"byte_end":10501203,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501208,"byte_end":10501221,"line_start":505,"line_end":505,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501226,"byte_end":10501229,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ If successful, `Ok(n)` is returned, where `n` is the number of bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501234,"byte_end":10501306,"line_start":507,"line_end":507,"column_start":5,"column_end":77}},{"value":"/ sent. If the socket is not ready to send data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501311,"byte_end":10501361,"line_start":508,"line_end":508,"column_start":5,"column_end":55}},{"value":"/ `Err(ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501366,"byte_end":10501411,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501416,"byte_end":10501419,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501424,"byte_end":10501438,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501443,"byte_end":10501446,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501451,"byte_end":10501464,"line_start":513,"line_end":513,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501469,"byte_end":10501499,"line_start":514,"line_end":514,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501504,"byte_end":10501520,"line_start":515,"line_end":515,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501525,"byte_end":10501528,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501533,"byte_end":10501551,"line_start":517,"line_end":517,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501556,"byte_end":10501595,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/     // Bind a UDP socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501600,"byte_end":10501628,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501633,"byte_end":10501695,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501700,"byte_end":10501703,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501708,"byte_end":10501736,"line_start":522,"line_end":522,"column_start":5,"column_end":33}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501741,"byte_end":10501789,"line_start":523,"line_end":523,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501794,"byte_end":10501797,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501802,"byte_end":10501816,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501821,"byte_end":10501870,"line_start":526,"line_end":526,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501875,"byte_end":10501912,"line_start":527,"line_end":527,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501917,"byte_end":10501920,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10501925,"byte_end":10501995,"line_start":529,"line_end":529,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502000,"byte_end":10502058,"line_start":530,"line_end":530,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502063,"byte_end":10502114,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502119,"byte_end":10502145,"line_start":532,"line_end":532,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502150,"byte_end":10502176,"line_start":533,"line_end":533,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502181,"byte_end":10502198,"line_start":534,"line_end":534,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502203,"byte_end":10502275,"line_start":535,"line_end":535,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502280,"byte_end":10502309,"line_start":536,"line_end":536,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502314,"byte_end":10502331,"line_start":537,"line_end":537,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502336,"byte_end":10502363,"line_start":538,"line_end":538,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502368,"byte_end":10502402,"line_start":539,"line_end":539,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502407,"byte_end":10502424,"line_start":540,"line_end":540,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502429,"byte_end":10502442,"line_start":541,"line_end":541,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502447,"byte_end":10502456,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502461,"byte_end":10502464,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502469,"byte_end":10502483,"line_start":544,"line_end":544,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502488,"byte_end":10502493,"line_start":545,"line_end":545,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502498,"byte_end":10502505,"line_start":546,"line_end":546,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3202},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504338,"byte_end":10504346,"line_start":601,"line_end":601,"column_start":18,"column_end":26},"name":"readable","qualname":"<UdpSocket>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502685,"byte_end":10502728,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502733,"byte_end":10502736,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502741,"byte_end":10502818,"line_start":555,"line_end":555,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502823,"byte_end":10502852,"line_start":556,"line_end":556,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502857,"byte_end":10502860,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502865,"byte_end":10502939,"line_start":558,"line_end":558,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10502944,"byte_end":10503009,"line_start":559,"line_end":559,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503014,"byte_end":10503046,"line_start":560,"line_end":560,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503051,"byte_end":10503054,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503059,"byte_end":10503073,"line_start":562,"line_end":562,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503078,"byte_end":10503081,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503086,"byte_end":10503099,"line_start":564,"line_end":564,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503104,"byte_end":10503134,"line_start":565,"line_end":565,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503139,"byte_end":10503155,"line_start":566,"line_end":566,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503160,"byte_end":10503163,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503168,"byte_end":10503186,"line_start":568,"line_end":568,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503191,"byte_end":10503230,"line_start":569,"line_end":569,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503235,"byte_end":10503263,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503268,"byte_end":10503330,"line_start":571,"line_end":571,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503335,"byte_end":10503383,"line_start":572,"line_end":572,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503388,"byte_end":10503391,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503396,"byte_end":10503410,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503415,"byte_end":10503464,"line_start":575,"line_end":575,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503469,"byte_end":10503506,"line_start":576,"line_end":576,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503511,"byte_end":10503514,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503519,"byte_end":10503591,"line_start":578,"line_end":578,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503596,"byte_end":10503635,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503640,"byte_end":10503676,"line_start":580,"line_end":580,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503681,"byte_end":10503684,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503689,"byte_end":10503759,"line_start":582,"line_end":582,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503764,"byte_end":10503822,"line_start":583,"line_end":583,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503827,"byte_end":10503872,"line_start":584,"line_end":584,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503877,"byte_end":10503903,"line_start":585,"line_end":585,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503908,"byte_end":10503960,"line_start":586,"line_end":586,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503965,"byte_end":10503991,"line_start":587,"line_end":587,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10503996,"byte_end":10504013,"line_start":588,"line_end":588,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504018,"byte_end":10504090,"line_start":589,"line_end":589,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504095,"byte_end":10504124,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504129,"byte_end":10504146,"line_start":591,"line_end":591,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504151,"byte_end":10504178,"line_start":592,"line_end":592,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504183,"byte_end":10504217,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504222,"byte_end":10504239,"line_start":594,"line_end":594,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504244,"byte_end":10504257,"line_start":595,"line_end":595,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504262,"byte_end":10504271,"line_start":596,"line_end":596,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504276,"byte_end":10504279,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504284,"byte_end":10504298,"line_start":598,"line_end":598,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504303,"byte_end":10504308,"line_start":599,"line_end":599,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504313,"byte_end":10504320,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3205},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505559,"byte_end":10505563,"line_start":636,"line_end":636,"column_start":18,"column_end":22},"name":"recv","qualname":"<UdpSocket>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket from the remote address\n to which it is connected. On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket from the remote address","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504447,"byte_end":10504523,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ to which it is connected. On success, returns the number of bytes read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504528,"byte_end":10504603,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504608,"byte_end":10504611,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504616,"byte_end":10504689,"line_start":609,"line_end":609,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504694,"byte_end":10504768,"line_start":610,"line_end":610,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504773,"byte_end":10504824,"line_start":611,"line_end":611,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504829,"byte_end":10504832,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504837,"byte_end":10504909,"line_start":613,"line_end":613,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504914,"byte_end":10504971,"line_start":614,"line_end":614,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504976,"byte_end":10504979,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10504984,"byte_end":10505021,"line_start":616,"line_end":616,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505026,"byte_end":10505029,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505034,"byte_end":10505047,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505052,"byte_end":10505082,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505087,"byte_end":10505103,"line_start":620,"line_end":620,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505108,"byte_end":10505111,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505116,"byte_end":10505134,"line_start":622,"line_end":622,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505139,"byte_end":10505178,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/     // Bind socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505183,"byte_end":10505205,"line_start":624,"line_end":624,"column_start":5,"column_end":27}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505210,"byte_end":10505272,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505277,"byte_end":10505325,"line_start":626,"line_end":626,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505330,"byte_end":10505333,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0; 10];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505338,"byte_end":10505372,"line_start":628,"line_end":628,"column_start":5,"column_end":39}},{"value":"/     let n = socket.recv(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505377,"byte_end":10505422,"line_start":629,"line_end":629,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505427,"byte_end":10505430,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {} bytes {:?}\", n, &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505435,"byte_end":10505492,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505497,"byte_end":10505500,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505505,"byte_end":10505519,"line_start":633,"line_end":633,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505524,"byte_end":10505529,"line_start":634,"line_end":634,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505534,"byte_end":10505541,"line_start":635,"line_end":635,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3209},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506688,"byte_end":10506697,"line_start":666,"line_end":666,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UdpSocket>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505748,"byte_end":10505827,"line_start":643,"line_end":643,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505832,"byte_end":10505871,"line_start":644,"line_end":644,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505876,"byte_end":10505879,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505884,"byte_end":10505968,"line_start":646,"line_end":646,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10505973,"byte_end":10506029,"line_start":647,"line_end":647,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506034,"byte_end":10506037,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506042,"byte_end":10506126,"line_start":649,"line_end":649,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506131,"byte_end":10506213,"line_start":650,"line_end":650,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506218,"byte_end":10506239,"line_start":651,"line_end":651,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506244,"byte_end":10506247,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506252,"byte_end":10506270,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506275,"byte_end":10506278,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506283,"byte_end":10506308,"line_start":655,"line_end":655,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506313,"byte_end":10506316,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506321,"byte_end":10506377,"line_start":657,"line_end":657,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506382,"byte_end":10506453,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506458,"byte_end":10506513,"line_start":659,"line_end":659,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506518,"byte_end":10506521,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506526,"byte_end":10506538,"line_start":661,"line_end":661,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506543,"byte_end":10506546,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506551,"byte_end":10506626,"line_start":663,"line_end":663,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506631,"byte_end":10506634,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10506639,"byte_end":10506676,"line_start":665,"line_end":665,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3210},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509118,"byte_end":10509126,"line_start":734,"line_end":734,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UdpSocket>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket from the remote\n address to which it is connected. On success, returns the number of\n bytes read.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507291,"byte_end":10507365,"line_start":684,"line_end":684,"column_start":5,"column_end":79}},{"value":"/ address to which it is connected. On success, returns the number of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507370,"byte_end":10507441,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/ bytes read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507446,"byte_end":10507461,"line_start":686,"line_end":686,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507466,"byte_end":10507469,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507474,"byte_end":10507550,"line_start":688,"line_end":688,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507555,"byte_end":10507624,"line_start":689,"line_end":689,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507629,"byte_end":10507680,"line_start":690,"line_end":690,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507685,"byte_end":10507688,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507693,"byte_end":10507763,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507768,"byte_end":10507832,"line_start":693,"line_end":693,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507837,"byte_end":10507840,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507845,"byte_end":10507859,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507864,"byte_end":10507867,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507872,"byte_end":10507885,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507890,"byte_end":10507920,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507925,"byte_end":10507941,"line_start":699,"line_end":699,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507946,"byte_end":10507949,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507954,"byte_end":10507972,"line_start":701,"line_end":701,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10507977,"byte_end":10508016,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508021,"byte_end":10508049,"line_start":703,"line_end":703,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508054,"byte_end":10508116,"line_start":704,"line_end":704,"column_start":5,"column_end":67}},{"value":"/     socket.connect(\"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508121,"byte_end":10508169,"line_start":705,"line_end":705,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508174,"byte_end":10508177,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508182,"byte_end":10508196,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508201,"byte_end":10508250,"line_start":708,"line_end":708,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508255,"byte_end":10508292,"line_start":709,"line_end":709,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508297,"byte_end":10508300,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508305,"byte_end":10508377,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508382,"byte_end":10508421,"line_start":712,"line_end":712,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508426,"byte_end":10508462,"line_start":713,"line_end":713,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508467,"byte_end":10508470,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508475,"byte_end":10508545,"line_start":715,"line_end":715,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508550,"byte_end":10508608,"line_start":716,"line_end":716,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508613,"byte_end":10508658,"line_start":717,"line_end":717,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508663,"byte_end":10508689,"line_start":718,"line_end":718,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508694,"byte_end":10508746,"line_start":719,"line_end":719,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508751,"byte_end":10508777,"line_start":720,"line_end":720,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508782,"byte_end":10508799,"line_start":721,"line_end":721,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508804,"byte_end":10508876,"line_start":722,"line_end":722,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508881,"byte_end":10508910,"line_start":723,"line_end":723,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508915,"byte_end":10508932,"line_start":724,"line_end":724,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508937,"byte_end":10508964,"line_start":725,"line_end":725,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10508969,"byte_end":10509003,"line_start":726,"line_end":726,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509008,"byte_end":10509025,"line_start":727,"line_end":727,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509030,"byte_end":10509043,"line_start":728,"line_end":728,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509048,"byte_end":10509057,"line_start":729,"line_end":729,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509062,"byte_end":10509065,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509070,"byte_end":10509084,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509089,"byte_end":10509094,"line_start":732,"line_end":732,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10509099,"byte_end":10509106,"line_start":733,"line_end":733,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10511205,"byte_end":10511217,"line_start":788,"line_end":788,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UdpSocket>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10513645,"byte_end":10513662,"line_start":852,"line_end":852,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UdpSocket>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515349,"byte_end":10515356,"line_start":901,"line_end":901,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UdpSocket>::send_to","value":"pub async fn send_to<A: ToSocketAddrs, '_, '_>(&'_ Self, &'_ [u8], A)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the given address. On success, returns the\n number of bytes written.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the given address. On success, returns the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514304,"byte_end":10514378,"line_start":871,"line_end":871,"column_start":5,"column_end":79}},{"value":"/ number of bytes written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514383,"byte_end":10514411,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514416,"byte_end":10514419,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ Address type can be any implementor of [`ToSocketAddrs`] trait. See its","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514424,"byte_end":10514499,"line_start":874,"line_end":874,"column_start":5,"column_end":80}},{"value":"/ documentation for concrete examples.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514504,"byte_end":10514544,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514549,"byte_end":10514552,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ It is possible for `addr` to yield multiple addresses, but `send_to`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514557,"byte_end":10514629,"line_start":877,"line_end":877,"column_start":5,"column_end":77}},{"value":"/ will only send data to the first address yielded by `addr`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514634,"byte_end":10514697,"line_start":878,"line_end":878,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514702,"byte_end":10514705,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This will return an error when the IP version of the local socket does","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514710,"byte_end":10514784,"line_start":880,"line_end":880,"column_start":5,"column_end":79}},{"value":"/ not match that returned from [`ToSocketAddrs`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514789,"byte_end":10514840,"line_start":881,"line_end":881,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514845,"byte_end":10514848,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ [`ToSocketAddrs`]: crate::net::ToSocketAddrs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514853,"byte_end":10514901,"line_start":883,"line_end":883,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514906,"byte_end":10514909,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514914,"byte_end":10514927,"line_start":885,"line_end":885,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514932,"byte_end":10514935,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514940,"byte_end":10514953,"line_start":887,"line_end":887,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514958,"byte_end":10514988,"line_start":888,"line_end":888,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10514993,"byte_end":10515009,"line_start":889,"line_end":889,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515014,"byte_end":10515017,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515022,"byte_end":10515040,"line_start":891,"line_end":891,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515045,"byte_end":10515084,"line_start":892,"line_end":892,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515089,"byte_end":10515151,"line_start":893,"line_end":893,"column_start":5,"column_end":67}},{"value":"/     let len = socket.send_to(b\"hello world\", \"127.0.0.1:8081\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515156,"byte_end":10515230,"line_start":894,"line_end":894,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515235,"byte_end":10515238,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/     println!(\"Sent {} bytes\", len);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515243,"byte_end":10515282,"line_start":896,"line_end":896,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515287,"byte_end":10515290,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515295,"byte_end":10515309,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515314,"byte_end":10515319,"line_start":899,"line_end":899,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515324,"byte_end":10515331,"line_start":900,"line_end":900,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516407,"byte_end":10516419,"line_start":930,"line_end":930,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UdpSocket>::poll_send_to","value":"pub fn poll_send_to(&Self, &mut Context, &[u8], SocketAddr)\n-> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to a given address.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to a given address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515750,"byte_end":10515809,"line_start":913,"line_end":913,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515814,"byte_end":10515817,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515822,"byte_end":10515906,"line_start":915,"line_end":915,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515911,"byte_end":10515993,"line_start":916,"line_end":916,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10515998,"byte_end":10516019,"line_start":917,"line_end":917,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516024,"byte_end":10516027,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516032,"byte_end":10516050,"line_start":919,"line_end":919,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516055,"byte_end":10516058,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516063,"byte_end":10516088,"line_start":921,"line_end":921,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516093,"byte_end":10516096,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516101,"byte_end":10516158,"line_start":923,"line_end":923,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516163,"byte_end":10516222,"line_start":924,"line_end":924,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516227,"byte_end":10516282,"line_start":925,"line_end":925,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516287,"byte_end":10516290,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516295,"byte_end":10516307,"line_start":927,"line_end":927,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516312,"byte_end":10516315,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516320,"byte_end":10516395,"line_start":929,"line_end":929,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518219,"byte_end":10518230,"line_start":988,"line_end":988,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UdpSocket>::try_send_to","value":"pub fn try_send_to(&Self, &[u8], SocketAddr) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send data on the socket to the given address, but if the send is\n blocked this will return right away.","sig":null,"attributes":[{"value":"/ Try to send data on the socket to the given address, but if the send is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516668,"byte_end":10516743,"line_start":941,"line_end":941,"column_start":5,"column_end":80}},{"value":"/ blocked this will return right away.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516748,"byte_end":10516788,"line_start":942,"line_end":942,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516793,"byte_end":10516796,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516801,"byte_end":10516855,"line_start":944,"line_end":944,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516860,"byte_end":10516863,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516868,"byte_end":10516881,"line_start":946,"line_end":946,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516886,"byte_end":10516889,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ If successfull, returns the number of bytes sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516894,"byte_end":10516946,"line_start":948,"line_end":948,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516951,"byte_end":10516954,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Users should ensure that when the remote cannot receive, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10516959,"byte_end":10517023,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ [`ErrorKind::WouldBlock`] is properly handled. An error can also occur","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517028,"byte_end":10517102,"line_start":951,"line_end":951,"column_start":5,"column_end":79}},{"value":"/ if the IP version of the socket does not match that of `target`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517107,"byte_end":10517175,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517180,"byte_end":10517183,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ [`ErrorKind::WouldBlock`]: std::io::ErrorKind::WouldBlock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517188,"byte_end":10517249,"line_start":954,"line_end":954,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517254,"byte_end":10517257,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517262,"byte_end":10517275,"line_start":956,"line_end":956,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517280,"byte_end":10517283,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517288,"byte_end":10517301,"line_start":958,"line_end":958,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517306,"byte_end":10517336,"line_start":959,"line_end":959,"column_start":5,"column_end":35}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517341,"byte_end":10517367,"line_start":960,"line_end":960,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517372,"byte_end":10517388,"line_start":961,"line_end":961,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517393,"byte_end":10517396,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517401,"byte_end":10517419,"line_start":963,"line_end":963,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517424,"byte_end":10517475,"line_start":964,"line_end":964,"column_start":5,"column_end":56}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517480,"byte_end":10517542,"line_start":965,"line_end":965,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517547,"byte_end":10517550,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/     let dst = \"127.0.0.1:8081\".parse()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517555,"byte_end":10517599,"line_start":967,"line_end":967,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517604,"byte_end":10517607,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517612,"byte_end":10517626,"line_start":969,"line_end":969,"column_start":5,"column_end":19}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517631,"byte_end":10517668,"line_start":970,"line_end":970,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517673,"byte_end":10517676,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/         match socket.try_send_to(&b\"hello world\"[..], dst) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517681,"byte_end":10517745,"line_start":972,"line_end":972,"column_start":5,"column_end":69}},{"value":"/             Ok(sent) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517750,"byte_end":10517779,"line_start":973,"line_end":973,"column_start":5,"column_end":34}},{"value":"/                 println!(\"sent {} bytes\", sent);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517784,"byte_end":10517836,"line_start":974,"line_end":974,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517841,"byte_end":10517867,"line_start":975,"line_end":975,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517872,"byte_end":10517889,"line_start":976,"line_end":976,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517894,"byte_end":10517966,"line_start":977,"line_end":977,"column_start":5,"column_end":77}},{"value":"/                 // Writable false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10517971,"byte_end":10518018,"line_start":978,"line_end":978,"column_start":5,"column_end":52}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518023,"byte_end":10518052,"line_start":979,"line_end":979,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518057,"byte_end":10518074,"line_start":980,"line_end":980,"column_start":5,"column_end":22}},{"value":"/             Err(e) => return Err(e.into()),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518079,"byte_end":10518126,"line_start":981,"line_end":981,"column_start":5,"column_end":52}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518131,"byte_end":10518144,"line_start":982,"line_end":982,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518149,"byte_end":10518158,"line_start":983,"line_end":983,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518163,"byte_end":10518166,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518171,"byte_end":10518185,"line_start":985,"line_end":985,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518190,"byte_end":10518195,"line_start":986,"line_end":986,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518200,"byte_end":10518207,"line_start":987,"line_end":987,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519502,"byte_end":10519511,"line_start":1026,"line_end":1026,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UdpSocket>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives a single datagram message on the socket. On success, returns\n the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Receives a single datagram message on the socket. On success, returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518654,"byte_end":10518727,"line_start":1001,"line_end":1001,"column_start":5,"column_end":78}},{"value":"/ the number of bytes read and the origin.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518732,"byte_end":10518776,"line_start":1002,"line_end":1002,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518781,"byte_end":10518784,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array `buf` of sufficient","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518789,"byte_end":10518862,"line_start":1004,"line_end":1004,"column_start":5,"column_end":78}},{"value":"/ size to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518867,"byte_end":10518941,"line_start":1005,"line_end":1005,"column_start":5,"column_end":79}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10518946,"byte_end":10518997,"line_start":1006,"line_end":1006,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519002,"byte_end":10519005,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519010,"byte_end":10519023,"line_start":1008,"line_end":1008,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519028,"byte_end":10519031,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519036,"byte_end":10519049,"line_start":1010,"line_end":1010,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519054,"byte_end":10519084,"line_start":1011,"line_end":1011,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519089,"byte_end":10519105,"line_start":1012,"line_end":1012,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519110,"byte_end":10519113,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519118,"byte_end":10519136,"line_start":1014,"line_end":1014,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519141,"byte_end":10519180,"line_start":1015,"line_end":1015,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519185,"byte_end":10519247,"line_start":1016,"line_end":1016,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519252,"byte_end":10519255,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519260,"byte_end":10519296,"line_start":1018,"line_end":1018,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519301,"byte_end":10519361,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519366,"byte_end":10519369,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/     println!(\"received {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519374,"byte_end":10519435,"line_start":1021,"line_end":1021,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519440,"byte_end":10519443,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519448,"byte_end":10519462,"line_start":1023,"line_end":1023,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519467,"byte_end":10519472,"line_start":1024,"line_end":1024,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519477,"byte_end":10519484,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520399,"byte_end":10520413,"line_start":1050,"line_end":1050,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UdpSocket>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the socket.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519715,"byte_end":10519771,"line_start":1033,"line_end":1033,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519776,"byte_end":10519779,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519784,"byte_end":10519868,"line_start":1035,"line_end":1035,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519873,"byte_end":10519955,"line_start":1036,"line_end":1036,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519960,"byte_end":10519981,"line_start":1037,"line_end":1037,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519986,"byte_end":10519989,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10519994,"byte_end":10520012,"line_start":1039,"line_end":1039,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520017,"byte_end":10520020,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520025,"byte_end":10520050,"line_start":1041,"line_end":1041,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520055,"byte_end":10520058,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520063,"byte_end":10520119,"line_start":1043,"line_end":1043,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520124,"byte_end":10520214,"line_start":1044,"line_end":1044,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520219,"byte_end":10520274,"line_start":1045,"line_end":1045,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520279,"byte_end":10520282,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520287,"byte_end":10520299,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520304,"byte_end":10520307,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10520312,"byte_end":10520387,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3229},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522807,"byte_end":10522820,"line_start":1120,"line_end":1120,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UdpSocket>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a single datagram message on the socket. On success,\n returns the number of bytes read and the origin.","sig":null,"attributes":[{"value":"/ Try to receive a single datagram message on the socket. On success,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521061,"byte_end":10521132,"line_start":1072,"line_end":1072,"column_start":5,"column_end":76}},{"value":"/ returns the number of bytes read and the origin.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521137,"byte_end":10521189,"line_start":1073,"line_end":1073,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521194,"byte_end":10521197,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ The function must be called with valid byte array buf of sufficient size","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521202,"byte_end":10521278,"line_start":1075,"line_end":1075,"column_start":5,"column_end":81}},{"value":"/ to hold the message bytes. If a message is too long to fit in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521283,"byte_end":10521352,"line_start":1076,"line_end":1076,"column_start":5,"column_end":74}},{"value":"/ supplied buffer, excess bytes may be discarded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521357,"byte_end":10521408,"line_start":1077,"line_end":1077,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521413,"byte_end":10521416,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ When there is no pending data, `Err(io::ErrorKind::WouldBlock)` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521421,"byte_end":10521491,"line_start":1079,"line_end":1079,"column_start":5,"column_end":75}},{"value":"/ returned. This function is usually paired with `readable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521496,"byte_end":10521560,"line_start":1080,"line_end":1080,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521565,"byte_end":10521568,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521573,"byte_end":10521587,"line_start":1082,"line_end":1082,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521592,"byte_end":10521595,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521600,"byte_end":10521613,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521618,"byte_end":10521648,"line_start":1085,"line_end":1085,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521653,"byte_end":10521669,"line_start":1086,"line_end":1086,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521674,"byte_end":10521677,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521682,"byte_end":10521700,"line_start":1088,"line_end":1088,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521705,"byte_end":10521744,"line_start":1089,"line_end":1089,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521749,"byte_end":10521777,"line_start":1090,"line_end":1090,"column_start":5,"column_end":33}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521782,"byte_end":10521844,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521849,"byte_end":10521852,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521857,"byte_end":10521871,"line_start":1093,"line_end":1093,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521876,"byte_end":10521925,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521930,"byte_end":10521967,"line_start":1095,"line_end":1095,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521972,"byte_end":10521975,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10521980,"byte_end":10522052,"line_start":1097,"line_end":1097,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522057,"byte_end":10522096,"line_start":1098,"line_end":1098,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522101,"byte_end":10522137,"line_start":1099,"line_end":1099,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522142,"byte_end":10522145,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522150,"byte_end":10522220,"line_start":1101,"line_end":1101,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522225,"byte_end":10522283,"line_start":1102,"line_end":1102,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522288,"byte_end":10522338,"line_start":1103,"line_end":1103,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522343,"byte_end":10522378,"line_start":1104,"line_end":1104,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522383,"byte_end":10522435,"line_start":1105,"line_end":1105,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522440,"byte_end":10522466,"line_start":1106,"line_end":1106,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522471,"byte_end":10522488,"line_start":1107,"line_end":1107,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522493,"byte_end":10522565,"line_start":1108,"line_end":1108,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522570,"byte_end":10522599,"line_start":1109,"line_end":1109,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522604,"byte_end":10522621,"line_start":1110,"line_end":1110,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522626,"byte_end":10522653,"line_start":1111,"line_end":1111,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522658,"byte_end":10522692,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522697,"byte_end":10522714,"line_start":1113,"line_end":1113,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522719,"byte_end":10522732,"line_start":1114,"line_end":1114,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522737,"byte_end":10522746,"line_start":1115,"line_end":1115,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522751,"byte_end":10522754,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522759,"byte_end":10522773,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522778,"byte_end":10522783,"line_start":1118,"line_end":1118,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10522788,"byte_end":10522795,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524080,"byte_end":10524089,"line_start":1156,"line_end":1156,"column_start":18,"column_end":27},"name":"peek_from","qualname":"<UdpSocket>::peek_from","value":"pub async fn peek_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read and the address from whence\n the data came.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523003,"byte_end":10523079,"line_start":1126,"line_end":1126,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read and the address from whence","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523084,"byte_end":10523160,"line_start":1127,"line_end":1127,"column_start":5,"column_end":81}},{"value":"/ the data came.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523165,"byte_end":10523183,"line_start":1128,"line_end":1128,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523188,"byte_end":10523191,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523196,"byte_end":10523207,"line_start":1130,"line_end":1130,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523212,"byte_end":10523215,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523220,"byte_end":10523295,"line_start":1132,"line_end":1132,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek_from returns the error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523300,"byte_end":10523378,"line_start":1133,"line_end":1133,"column_start":5,"column_end":83}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523383,"byte_end":10523431,"line_start":1134,"line_end":1134,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523436,"byte_end":10523503,"line_start":1135,"line_end":1135,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523508,"byte_end":10523576,"line_start":1136,"line_end":1136,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523581,"byte_end":10523584,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523589,"byte_end":10523603,"line_start":1138,"line_end":1138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523608,"byte_end":10523611,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523616,"byte_end":10523629,"line_start":1140,"line_end":1140,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523634,"byte_end":10523664,"line_start":1141,"line_end":1141,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523669,"byte_end":10523685,"line_start":1142,"line_end":1142,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523690,"byte_end":10523693,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523698,"byte_end":10523716,"line_start":1144,"line_end":1144,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523721,"byte_end":10523760,"line_start":1145,"line_end":1145,"column_start":5,"column_end":44}},{"value":"/     let socket = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523765,"byte_end":10523827,"line_start":1146,"line_end":1146,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523832,"byte_end":10523835,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/     let mut buf = vec![0u8; 32];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523840,"byte_end":10523876,"line_start":1148,"line_end":1148,"column_start":5,"column_end":41}},{"value":"/     let (len, addr) = socket.peek_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523881,"byte_end":10523941,"line_start":1149,"line_end":1149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523946,"byte_end":10523949,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/     println!(\"peeked {:?} bytes from {:?}\", len, addr);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10523954,"byte_end":10524013,"line_start":1151,"line_end":1151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524018,"byte_end":10524021,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524026,"byte_end":10524040,"line_start":1153,"line_end":1153,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524045,"byte_end":10524050,"line_start":1154,"line_end":1154,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524055,"byte_end":10524062,"line_start":1155,"line_end":1155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3235},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525438,"byte_end":10525452,"line_start":1189,"line_end":1189,"column_start":12,"column_end":26},"name":"poll_peek_from","qualname":"<UdpSocket>::poll_peek_from","value":"pub fn poll_peek_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket, without removing it from the input queue.\n On success, returns the number of bytes read.","sig":null,"attributes":[{"value":"/ Receives data from the socket, without removing it from the input queue.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524293,"byte_end":10524369,"line_start":1163,"line_end":1163,"column_start":5,"column_end":81}},{"value":"/ On success, returns the number of bytes read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524374,"byte_end":10524423,"line_start":1164,"line_end":1164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524428,"byte_end":10524431,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524436,"byte_end":10524447,"line_start":1166,"line_end":1166,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524452,"byte_end":10524455,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524460,"byte_end":10524544,"line_start":1168,"line_end":1168,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524549,"byte_end":10524631,"line_start":1169,"line_end":1169,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524636,"byte_end":10524656,"line_start":1170,"line_end":1170,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524661,"byte_end":10524664,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ On Windows, if the data is larger than the buffer specified, the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524669,"byte_end":10524744,"line_start":1172,"line_end":1172,"column_start":5,"column_end":80}},{"value":"/ is filled with the first part of the data, and peek returns the error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524749,"byte_end":10524822,"line_start":1173,"line_end":1173,"column_start":5,"column_end":78}},{"value":"/ WSAEMSGSIZE(10040). The excess data is lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524827,"byte_end":10524875,"line_start":1174,"line_end":1174,"column_start":5,"column_end":53}},{"value":"/ Make sure to always use a sufficiently large buffer to hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524880,"byte_end":10524947,"line_start":1175,"line_end":1175,"column_start":5,"column_end":72}},{"value":"/ maximum UDP packet size, which can be up to 65536 bytes in size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10524952,"byte_end":10525020,"line_start":1176,"line_end":1176,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525025,"byte_end":10525028,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525033,"byte_end":10525051,"line_start":1178,"line_end":1178,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525056,"byte_end":10525059,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525064,"byte_end":10525089,"line_start":1180,"line_end":1180,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525094,"byte_end":10525097,"line_start":1181,"line_end":1181,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525102,"byte_end":10525158,"line_start":1182,"line_end":1182,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525163,"byte_end":10525253,"line_start":1183,"line_end":1183,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525258,"byte_end":10525313,"line_start":1184,"line_end":1184,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525318,"byte_end":10525321,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525326,"byte_end":10525338,"line_start":1186,"line_end":1186,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525343,"byte_end":10525346,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10525351,"byte_end":10525426,"line_start":1188,"line_end":1188,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3236},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526317,"byte_end":10526326,"line_start":1216,"line_end":1216,"column_start":12,"column_end":21},"name":"broadcast","qualname":"<UdpSocket>::broadcast","value":"pub fn broadcast(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526100,"byte_end":10526164,"line_start":1211,"line_end":1211,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526169,"byte_end":10526172,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_broadcast`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526177,"byte_end":10526243,"line_start":1213,"line_end":1213,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526248,"byte_end":10526251,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ [`set_broadcast`]: method@Self::set_broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526256,"byte_end":10526305,"line_start":1215,"line_end":1215,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526572,"byte_end":10526585,"line_start":1224,"line_end":1224,"column_start":12,"column_end":25},"name":"set_broadcast","qualname":"<UdpSocket>::set_broadcast","value":"pub fn set_broadcast(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `SO_BROADCAST` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526395,"byte_end":10526459,"line_start":1220,"line_end":1220,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526464,"byte_end":10526467,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ When enabled, this socket is allowed to send packets to a broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526472,"byte_end":10526543,"line_start":1222,"line_end":1222,"column_start":5,"column_end":76}},{"value":"/ address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526548,"byte_end":10526560,"line_start":1223,"line_end":1223,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526914,"byte_end":10526931,"line_start":1233,"line_end":1233,"column_start":12,"column_end":29},"name":"multicast_loop_v4","qualname":"<UdpSocket>::multicast_loop_v4","value":"pub fn multicast_loop_v4(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526668,"byte_end":10526737,"line_start":1228,"line_end":1228,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526742,"byte_end":10526745,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v4`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526750,"byte_end":10526824,"line_start":1230,"line_end":1230,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526829,"byte_end":10526832,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v4`]: method@Self::set_multicast_loop_v4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10526837,"byte_end":10526902,"line_start":1232,"line_end":1232,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527261,"byte_end":10527282,"line_start":1244,"line_end":1244,"column_start":12,"column_end":33},"name":"set_multicast_loop_v4","qualname":"<UdpSocket>::set_multicast_loop_v4","value":"pub fn set_multicast_loop_v4(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527008,"byte_end":10527077,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527082,"byte_end":10527085,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ If enabled, multicast packets will be looped back to the local socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527090,"byte_end":10527164,"line_start":1239,"line_end":1239,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527169,"byte_end":10527172,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527177,"byte_end":10527187,"line_start":1241,"line_end":1241,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527192,"byte_end":10527195,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527200,"byte_end":10527249,"line_start":1243,"line_end":1243,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527615,"byte_end":10527631,"line_start":1253,"line_end":1253,"column_start":12,"column_end":28},"name":"multicast_ttl_v4","qualname":"<UdpSocket>::multicast_ttl_v4","value":"pub fn multicast_ttl_v4(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527373,"byte_end":10527441,"line_start":1248,"line_end":1248,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527446,"byte_end":10527449,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_ttl_v4`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527454,"byte_end":10527527,"line_start":1250,"line_end":1250,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527532,"byte_end":10527535,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_ttl_v4`]: method@Self::set_multicast_ttl_v4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527540,"byte_end":10527603,"line_start":1252,"line_end":1252,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528100,"byte_end":10528120,"line_start":1266,"line_end":1266,"column_start":12,"column_end":32},"name":"set_multicast_ttl_v4","qualname":"<UdpSocket>::set_multicast_ttl_v4","value":"pub fn set_multicast_ttl_v4(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IP_MULTICAST_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527706,"byte_end":10527774,"line_start":1257,"line_end":1257,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527779,"byte_end":10527782,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ Indicates the time-to-live value of outgoing multicast packets for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527787,"byte_end":10527857,"line_start":1259,"line_end":1259,"column_start":5,"column_end":75}},{"value":"/ this socket. The default value is 1 which means that multicast packets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527862,"byte_end":10527936,"line_start":1260,"line_end":1260,"column_start":5,"column_end":79}},{"value":"/ don't leave the local network unless explicitly requested.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10527941,"byte_end":10528003,"line_start":1261,"line_end":1261,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528008,"byte_end":10528011,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528016,"byte_end":10528026,"line_start":1263,"line_end":1263,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528031,"byte_end":10528034,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv6 sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528039,"byte_end":10528088,"line_start":1265,"line_end":1265,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528459,"byte_end":10528476,"line_start":1275,"line_end":1275,"column_start":12,"column_end":29},"name":"multicast_loop_v6","qualname":"<UdpSocket>::multicast_loop_v6","value":"pub fn multicast_loop_v6(&Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528211,"byte_end":10528282,"line_start":1270,"line_end":1270,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528287,"byte_end":10528290,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_multicast_loop_v6`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528295,"byte_end":10528369,"line_start":1272,"line_end":1272,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528374,"byte_end":10528377,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ [`set_multicast_loop_v6`]: method@Self::set_multicast_loop_v6","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528382,"byte_end":10528447,"line_start":1274,"line_end":1274,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528810,"byte_end":10528831,"line_start":1286,"line_end":1286,"column_start":12,"column_end":33},"name":"set_multicast_loop_v6","qualname":"<UdpSocket>::set_multicast_loop_v6","value":"pub fn set_multicast_loop_v6(&Self, bool) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[{"value":"/ Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528553,"byte_end":10528624,"line_start":1279,"line_end":1279,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528629,"byte_end":10528632,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ Controls whether this socket sees the multicast packets it sends itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528637,"byte_end":10528713,"line_start":1281,"line_end":1281,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528718,"byte_end":10528721,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528726,"byte_end":10528736,"line_start":1283,"line_end":1283,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528741,"byte_end":10528744,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This may not have any affect on IPv4 sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528749,"byte_end":10528798,"line_start":1285,"line_end":1285,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529428,"byte_end":10529431,"line_start":1309,"line_end":1309,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpSocket>::ttl","value":"pub fn ttl(&Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[{"value":"/ Gets the value of the `IP_TTL` option for this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528922,"byte_end":10528980,"line_start":1290,"line_end":1290,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528985,"byte_end":10528988,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`set_ttl`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10528993,"byte_end":10529053,"line_start":1292,"line_end":1292,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529058,"byte_end":10529061,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ [`set_ttl`]: method@Self::set_ttl","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529066,"byte_end":10529103,"line_start":1294,"line_end":1294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529108,"byte_end":10529111,"line_start":1295,"line_end":1295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529116,"byte_end":10529130,"line_start":1296,"line_end":1296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529135,"byte_end":10529138,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529143,"byte_end":10529156,"line_start":1298,"line_end":1298,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529161,"byte_end":10529191,"line_start":1299,"line_end":1299,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529196,"byte_end":10529214,"line_start":1300,"line_end":1300,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529219,"byte_end":10529222,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529227,"byte_end":10529267,"line_start":1302,"line_end":1302,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529272,"byte_end":10529328,"line_start":1303,"line_end":1303,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529333,"byte_end":10529336,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ println!(\"{:?}\", sock.ttl()?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529341,"byte_end":10529375,"line_start":1305,"line_end":1305,"column_start":5,"column_end":39}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529380,"byte_end":10529392,"line_start":1306,"line_end":1306,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529397,"byte_end":10529404,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529409,"byte_end":10529416,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3245},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529979,"byte_end":10529986,"line_start":1331,"line_end":1331,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<UdpSocket>::set_ttl","value":"pub fn set_ttl(&Self, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[{"value":"/ Sets the value for the `IP_TTL` option on this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529493,"byte_end":10529551,"line_start":1313,"line_end":1313,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529556,"byte_end":10529559,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ This value sets the time-to-live field that is used in every packet sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529564,"byte_end":10529640,"line_start":1315,"line_end":1315,"column_start":5,"column_end":81}},{"value":"/ from this socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529645,"byte_end":10529666,"line_start":1316,"line_end":1316,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529671,"byte_end":10529674,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529679,"byte_end":10529693,"line_start":1318,"line_end":1318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529698,"byte_end":10529701,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529706,"byte_end":10529719,"line_start":1320,"line_end":1320,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529724,"byte_end":10529754,"line_start":1321,"line_end":1321,"column_start":5,"column_end":35}},{"value":"/ # use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529759,"byte_end":10529777,"line_start":1322,"line_end":1322,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529782,"byte_end":10529785,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ # async fn dox() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529790,"byte_end":10529830,"line_start":1324,"line_end":1324,"column_start":5,"column_end":45}},{"value":"/ let sock = UdpSocket::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529835,"byte_end":10529891,"line_start":1325,"line_end":1325,"column_start":5,"column_end":61}},{"value":"/ sock.set_ttl(60)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529896,"byte_end":10529918,"line_start":1326,"line_end":1326,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529923,"byte_end":10529926,"line_start":1327,"line_end":1327,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529931,"byte_end":10529943,"line_start":1328,"line_end":1328,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529948,"byte_end":10529955,"line_start":1329,"line_end":1329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10529960,"byte_end":10529967,"line_start":1330,"line_end":1330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530494,"byte_end":10530511,"line_start":1342,"line_end":1342,"column_start":12,"column_end":29},"name":"join_multicast_v4","qualname":"<UdpSocket>::join_multicast_v4","value":"pub fn join_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530064,"byte_end":10530122,"line_start":1335,"line_end":1335,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530127,"byte_end":10530130,"line_start":1336,"line_end":1336,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530135,"byte_end":10530209,"line_start":1337,"line_end":1337,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530214,"byte_end":10530287,"line_start":1338,"line_end":1338,"column_start":5,"column_end":78}},{"value":"/ address of the local interface with which the system should join the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530292,"byte_end":10530364,"line_start":1339,"line_end":1339,"column_start":5,"column_end":77}},{"value":"/ multicast group. If it's equal to `INADDR_ANY` then an appropriate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530369,"byte_end":10530439,"line_start":1340,"line_end":1340,"column_start":5,"column_end":75}},{"value":"/ interface is chosen by the system.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530444,"byte_end":10530482,"line_start":1341,"line_end":1341,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530966,"byte_end":10530983,"line_start":1351,"line_end":1351,"column_start":12,"column_end":29},"name":"join_multicast_v6","qualname":"<UdpSocket>::join_multicast_v6","value":"pub fn join_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530650,"byte_end":10530710,"line_start":1346,"line_end":1346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530715,"byte_end":10530718,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ This function specifies a new multicast group for this socket to join.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530723,"byte_end":10530797,"line_start":1348,"line_end":1348,"column_start":5,"column_end":79}},{"value":"/ The address must be a valid multicast address, and `interface` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530802,"byte_end":10530875,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/ index of the interface to join/leave (or 0 to indicate any interface).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10530880,"byte_end":10530954,"line_start":1350,"line_end":1350,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531340,"byte_end":10531358,"line_start":1360,"line_end":1360,"column_start":12,"column_end":30},"name":"leave_multicast_v4","qualname":"<UdpSocket>::leave_multicast_v4","value":"pub fn leave_multicast_v4(&Self, Ipv4Addr, Ipv4Addr) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IP_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531116,"byte_end":10531175,"line_start":1355,"line_end":1355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531180,"byte_end":10531183,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v4`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531188,"byte_end":10531258,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531263,"byte_end":10531266,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v4`]: method@Self::join_multicast_v4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531271,"byte_end":10531328,"line_start":1359,"line_end":1359,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531724,"byte_end":10531742,"line_start":1369,"line_end":1369,"column_start":12,"column_end":30},"name":"leave_multicast_v6","qualname":"<UdpSocket>::leave_multicast_v6","value":"pub fn leave_multicast_v6(&Self, &Ipv6Addr, u32) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[{"value":"/ Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531498,"byte_end":10531559,"line_start":1364,"line_end":1364,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531564,"byte_end":10531567,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ For more information about this option, see [`join_multicast_v6`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531572,"byte_end":10531642,"line_start":1366,"line_end":1366,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531647,"byte_end":10531650,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ [`join_multicast_v6`]: method@Self::join_multicast_v6","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531655,"byte_end":10531712,"line_start":1368,"line_end":1368,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532379,"byte_end":10532389,"line_start":1392,"line_end":1392,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpSocket>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531876,"byte_end":10531923,"line_start":1373,"line_end":1373,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531928,"byte_end":10531931,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531936,"byte_end":10531950,"line_start":1375,"line_end":1375,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531955,"byte_end":10531962,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use tokio::net::UdpSocket;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10531967,"byte_end":10531997,"line_start":1377,"line_end":1377,"column_start":5,"column_end":35}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532002,"byte_end":10532018,"line_start":1378,"line_end":1378,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532023,"byte_end":10532026,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532031,"byte_end":10532049,"line_start":1380,"line_end":1380,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532054,"byte_end":10532093,"line_start":1381,"line_end":1381,"column_start":5,"column_end":44}},{"value":"/     // Create a socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532098,"byte_end":10532124,"line_start":1382,"line_end":1382,"column_start":5,"column_end":31}},{"value":"/     let socket = UdpSocket::bind(\"0.0.0.0:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532129,"byte_end":10532189,"line_start":1383,"line_end":1383,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532194,"byte_end":10532197,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/     if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532202,"byte_end":10532254,"line_start":1385,"line_end":1385,"column_start":5,"column_end":57}},{"value":"/         println!(\"Got error: {:?}\", err);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532259,"byte_end":10532304,"line_start":1386,"line_end":1386,"column_start":5,"column_end":50}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532309,"byte_end":10532318,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532323,"byte_end":10532326,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532331,"byte_end":10532345,"line_start":1389,"line_end":1389,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532350,"byte_end":10532355,"line_start":1390,"line_end":1390,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532360,"byte_end":10532367,"line_start":1391,"line_end":1391,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":3324},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::net::unix","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3412},{"krate":0,"index":3453},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":12955},{"krate":0,"index":3525},{"krate":0,"index":3536},{"krate":0,"index":12961},{"krate":0,"index":3537},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3661}],"decl_id":null,"docs":" Unix domain socket utility types\n","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}},{"value":"/ Unix domain socket utility types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533392,"byte_end":10533428,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":3325},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"datagram","qualname":"::net::unix::datagram","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/mod.rs","parent":null,"children":[{"krate":0,"index":3326}],"decl_id":null,"docs":" Unix datagram types.\n","sig":null,"attributes":[{"value":"/ Unix datagram types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/mod.rs","byte_start":10533980,"byte_end":10534004,"line_start":1,"line_end":1,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3666},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537058,"byte_end":10537070,"line_start":93,"line_end":93,"column_start":16,"column_end":28},"name":"UnixDatagram","qualname":"::net::unix::datagram::socket::UnixDatagram","value":"UnixDatagram {  }","parent":null,"children":[{"krate":0,"index":3667}],"decl_id":null,"docs":" An I/O object representing a Unix datagram socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539485,"byte_end":10539490,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixDatagram>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537155,"byte_end":10537202,"line_start":99,"line_end":99,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537207,"byte_end":10537210,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_recv()` or `try_send()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537215,"byte_end":10537288,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ can be used to concurrently recv / send to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537293,"byte_end":10537367,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537372,"byte_end":10537410,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537415,"byte_end":10537418,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being ready. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537423,"byte_end":10537494,"line_start":105,"line_end":105,"column_start":5,"column_end":76}},{"value":"/ false-positive and attempting an operation will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537499,"byte_end":10537562,"line_start":106,"line_end":106,"column_start":5,"column_end":68}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537567,"byte_end":10537599,"line_start":107,"line_end":107,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537604,"byte_end":10537607,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537612,"byte_end":10537626,"line_start":109,"line_end":109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537631,"byte_end":10537634,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Concurrently receive from and send to the socket on the same task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537639,"byte_end":10537708,"line_start":111,"line_end":111,"column_start":5,"column_end":74}},{"value":"/ without splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537713,"byte_end":10537735,"line_start":112,"line_end":112,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537740,"byte_end":10537743,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537748,"byte_end":10537761,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537766,"byte_end":10537794,"line_start":115,"line_end":115,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537799,"byte_end":10537832,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537837,"byte_end":10537853,"line_start":117,"line_end":117,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537858,"byte_end":10537861,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537866,"byte_end":10537884,"line_start":119,"line_end":119,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537889,"byte_end":10537928,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537933,"byte_end":10537980,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537985,"byte_end":10538042,"line_start":122,"line_end":122,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538047,"byte_end":10538104,"line_start":123,"line_end":123,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538109,"byte_end":10538164,"line_start":124,"line_end":124,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538169,"byte_end":10538207,"line_start":125,"line_end":125,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538212,"byte_end":10538215,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538220,"byte_end":10538234,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/         let ready = socket.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538239,"byte_end":10538324,"line_start":128,"line_end":128,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538329,"byte_end":10538332,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538337,"byte_end":10538373,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/             let mut data = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538378,"byte_end":10538419,"line_start":131,"line_end":131,"column_start":5,"column_end":46}},{"value":"/             match socket.try_recv(&mut data[..]) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538424,"byte_end":10538478,"line_start":132,"line_end":132,"column_start":5,"column_end":59}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538483,"byte_end":10538513,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/                     println!(\"received {:?}\", &data[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538518,"byte_end":10538580,"line_start":134,"line_end":134,"column_start":5,"column_end":67}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538585,"byte_end":10538606,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538611,"byte_end":10538658,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538663,"byte_end":10538740,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538745,"byte_end":10538776,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538781,"byte_end":10538819,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538824,"byte_end":10538845,"line_start":140,"line_end":140,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538850,"byte_end":10538867,"line_start":141,"line_end":141,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538872,"byte_end":10538885,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538890,"byte_end":10538893,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538898,"byte_end":10538934,"line_start":144,"line_end":144,"column_start":5,"column_end":41}},{"value":"/             // Write some data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538939,"byte_end":10538973,"line_start":145,"line_end":145,"column_start":5,"column_end":39}},{"value":"/             match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10538978,"byte_end":10539033,"line_start":146,"line_end":146,"column_start":5,"column_end":60}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539038,"byte_end":10539068,"line_start":147,"line_end":147,"column_start":5,"column_end":35}},{"value":"/                     println!(\"sent {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539073,"byte_end":10539126,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539131,"byte_end":10539152,"line_start":149,"line_end":149,"column_start":5,"column_end":26}},{"value":"/                 // False-positive, continue","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539157,"byte_end":10539204,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539209,"byte_end":10539286,"line_start":151,"line_end":151,"column_start":5,"column_end":82}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539291,"byte_end":10539322,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/                     return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539327,"byte_end":10539365,"line_start":153,"line_end":153,"column_start":5,"column_end":43}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539370,"byte_end":10539391,"line_start":154,"line_end":154,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539396,"byte_end":10539413,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539418,"byte_end":10539431,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539436,"byte_end":10539445,"line_start":157,"line_end":157,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539450,"byte_end":10539455,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539460,"byte_end":10539467,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541227,"byte_end":10541235,"line_start":210,"line_end":210,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixDatagram>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539647,"byte_end":10539690,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539695,"byte_end":10539698,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539703,"byte_end":10539772,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/ usually paired with `try_send()` or `try_send_to()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539777,"byte_end":10539833,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539838,"byte_end":10539841,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being writable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539846,"byte_end":10539920,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_send()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539925,"byte_end":10539990,"line_start":171,"line_end":171,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10539995,"byte_end":10540027,"line_start":172,"line_end":172,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540032,"byte_end":10540035,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540040,"byte_end":10540054,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540059,"byte_end":10540062,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540067,"byte_end":10540080,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540085,"byte_end":10540118,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540123,"byte_end":10540139,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540144,"byte_end":10540147,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540152,"byte_end":10540170,"line_start":180,"line_end":180,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540175,"byte_end":10540214,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540219,"byte_end":10540266,"line_start":182,"line_end":182,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540271,"byte_end":10540328,"line_start":183,"line_end":183,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540333,"byte_end":10540390,"line_start":184,"line_end":184,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540395,"byte_end":10540450,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540455,"byte_end":10540493,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540498,"byte_end":10540501,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540506,"byte_end":10540520,"line_start":188,"line_end":188,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540525,"byte_end":10540574,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540579,"byte_end":10540616,"line_start":190,"line_end":190,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540621,"byte_end":10540624,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540629,"byte_end":10540699,"line_start":192,"line_end":192,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540704,"byte_end":10540762,"line_start":193,"line_end":193,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540767,"byte_end":10540818,"line_start":194,"line_end":194,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540823,"byte_end":10540849,"line_start":195,"line_end":195,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540854,"byte_end":10540880,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540885,"byte_end":10540902,"line_start":197,"line_end":197,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540907,"byte_end":10540979,"line_start":198,"line_end":198,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10540984,"byte_end":10541013,"line_start":199,"line_end":199,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541018,"byte_end":10541035,"line_start":200,"line_end":200,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541040,"byte_end":10541067,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541072,"byte_end":10541106,"line_start":202,"line_end":202,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541111,"byte_end":10541128,"line_start":203,"line_end":203,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541133,"byte_end":10541146,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541151,"byte_end":10541160,"line_start":205,"line_end":205,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541165,"byte_end":10541168,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541173,"byte_end":10541187,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541192,"byte_end":10541197,"line_start":208,"line_end":208,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541202,"byte_end":10541209,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543151,"byte_end":10543159,"line_start":266,"line_end":266,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixDatagram>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541336,"byte_end":10541379,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541384,"byte_end":10541387,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541392,"byte_end":10541469,"line_start":217,"line_end":217,"column_start":5,"column_end":82}},{"value":"/ paired with `try_recv()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541474,"byte_end":10541503,"line_start":218,"line_end":218,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541508,"byte_end":10541511,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The function may complete without the socket being readable. This is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541516,"byte_end":10541590,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ false-positive and attempting a `try_recv()` will return with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541595,"byte_end":10541660,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/ `io::ErrorKind::WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541665,"byte_end":10541697,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541702,"byte_end":10541705,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541710,"byte_end":10541724,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541729,"byte_end":10541732,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541737,"byte_end":10541750,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541755,"byte_end":10541788,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541793,"byte_end":10541809,"line_start":228,"line_end":228,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541814,"byte_end":10541817,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541822,"byte_end":10541840,"line_start":230,"line_end":230,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541845,"byte_end":10541884,"line_start":231,"line_end":231,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541889,"byte_end":10541917,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541922,"byte_end":10541969,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10541974,"byte_end":10542031,"line_start":234,"line_end":234,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542036,"byte_end":10542093,"line_start":235,"line_end":235,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542098,"byte_end":10542153,"line_start":236,"line_end":236,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542158,"byte_end":10542196,"line_start":237,"line_end":237,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542201,"byte_end":10542204,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542209,"byte_end":10542223,"line_start":239,"line_end":239,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542228,"byte_end":10542277,"line_start":240,"line_end":240,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542282,"byte_end":10542319,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542324,"byte_end":10542327,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542332,"byte_end":10542404,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542409,"byte_end":10542448,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542453,"byte_end":10542489,"line_start":245,"line_end":245,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542494,"byte_end":10542497,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542502,"byte_end":10542572,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542577,"byte_end":10542635,"line_start":248,"line_end":248,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542640,"byte_end":10542685,"line_start":249,"line_end":249,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542690,"byte_end":10542716,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542721,"byte_end":10542773,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542778,"byte_end":10542804,"line_start":252,"line_end":252,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542809,"byte_end":10542826,"line_start":253,"line_end":253,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542831,"byte_end":10542903,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542908,"byte_end":10542937,"line_start":255,"line_end":255,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542942,"byte_end":10542959,"line_start":256,"line_end":256,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542964,"byte_end":10542991,"line_start":257,"line_end":257,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10542996,"byte_end":10543030,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543035,"byte_end":10543052,"line_start":259,"line_end":259,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543057,"byte_end":10543070,"line_start":260,"line_end":260,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543075,"byte_end":10543084,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543089,"byte_end":10543092,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543097,"byte_end":10543111,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543116,"byte_end":10543121,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543126,"byte_end":10543133,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543932,"byte_end":10543936,"line_start":292,"line_end":292,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixDatagram>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixDatagram> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` bound to the specified path.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543260,"byte_end":10543321,"line_start":271,"line_end":271,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543326,"byte_end":10543329,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543334,"byte_end":10543348,"line_start":273,"line_end":273,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543353,"byte_end":10543360,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543365,"byte_end":10543393,"line_start":275,"line_end":275,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543398,"byte_end":10543418,"line_start":276,"line_end":276,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543423,"byte_end":10543476,"line_start":277,"line_end":277,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543481,"byte_end":10543514,"line_start":278,"line_end":278,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543519,"byte_end":10543545,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543550,"byte_end":10543553,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543558,"byte_end":10543612,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543617,"byte_end":10543676,"line_start":282,"line_end":282,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543681,"byte_end":10543706,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543711,"byte_end":10543714,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543719,"byte_end":10543762,"line_start":285,"line_end":285,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543767,"byte_end":10543815,"line_start":286,"line_end":286,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543820,"byte_end":10543871,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543876,"byte_end":10543879,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543884,"byte_end":10543896,"line_start":289,"line_end":289,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543901,"byte_end":10543908,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10543913,"byte_end":10543920,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3359},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545006,"byte_end":10545010,"line_start":329,"line_end":329,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixDatagram>::pair","value":"pub fn pair() -> io::Result<(UnixDatagram, UnixDatagram)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544120,"byte_end":10544169,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544174,"byte_end":10544177,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544182,"byte_end":10544253,"line_start":302,"line_end":302,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544258,"byte_end":10544311,"line_start":303,"line_end":303,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544316,"byte_end":10544319,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544324,"byte_end":10544338,"line_start":305,"line_end":305,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544343,"byte_end":10544350,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544355,"byte_end":10544383,"line_start":307,"line_end":307,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544388,"byte_end":10544408,"line_start":308,"line_end":308,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544413,"byte_end":10544466,"line_start":309,"line_end":309,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544471,"byte_end":10544504,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544509,"byte_end":10544512,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544517,"byte_end":10544550,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544555,"byte_end":10544602,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544607,"byte_end":10544610,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544615,"byte_end":10544672,"line_start":315,"line_end":315,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544677,"byte_end":10544705,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hail eris\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544710,"byte_end":10544739,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544744,"byte_end":10544773,"line_start":318,"line_end":318,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544778,"byte_end":10544781,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544786,"byte_end":10544819,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544824,"byte_end":10544868,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544873,"byte_end":10544876,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544881,"byte_end":10544911,"line_start":323,"line_end":323,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544916,"byte_end":10544945,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544950,"byte_end":10544953,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544958,"byte_end":10544970,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544975,"byte_end":10544982,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10544987,"byte_end":10544994,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546674,"byte_end":10546682,"line_start":373,"line_end":373,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixDatagram>::from_std","value":"pub fn from_std(net::UnixDatagram) -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","sig":null,"attributes":[{"value":"/ Creates new `UnixDatagram` from a `std::os::unix::net::UnixDatagram`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545222,"byte_end":10545295,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545300,"byte_end":10545303,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixDatagram from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545308,"byte_end":10545380,"line_start":339,"line_end":339,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545385,"byte_end":10545453,"line_start":340,"line_end":340,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying datagram; it is left up to the user to set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545458,"byte_end":10545533,"line_start":341,"line_end":341,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545538,"byte_end":10545566,"line_start":342,"line_end":342,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545571,"byte_end":10545574,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545579,"byte_end":10545591,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545596,"byte_end":10545599,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545604,"byte_end":10545664,"line_start":346,"line_end":346,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545669,"byte_end":10545672,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545677,"byte_end":10545747,"line_start":348,"line_end":348,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a Tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545752,"byte_end":10545825,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545830,"byte_end":10545910,"line_start":350,"line_end":350,"column_start":5,"column_end":85}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545915,"byte_end":10545929,"line_start":351,"line_end":351,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545934,"byte_end":10545941,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545946,"byte_end":10545974,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10545979,"byte_end":10545999,"line_start":354,"line_end":354,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546004,"byte_end":10546057,"line_start":355,"line_end":355,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546062,"byte_end":10546095,"line_start":356,"line_end":356,"column_start":5,"column_end":38}},{"value":"/ use std::os::unix::net::UnixDatagram as StdUDS;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546100,"byte_end":10546151,"line_start":357,"line_end":357,"column_start":5,"column_end":56}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546156,"byte_end":10546182,"line_start":358,"line_end":358,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546187,"byte_end":10546190,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546195,"byte_end":10546249,"line_start":360,"line_end":360,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546254,"byte_end":10546313,"line_start":361,"line_end":361,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546318,"byte_end":10546343,"line_start":362,"line_end":362,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546348,"byte_end":10546351,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ // Bind the socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546356,"byte_end":10546399,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546404,"byte_end":10546452,"line_start":365,"line_end":365,"column_start":5,"column_end":53}},{"value":"/ let std_socket = StdUDS::bind(&socket_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546457,"byte_end":10546506,"line_start":366,"line_end":366,"column_start":5,"column_end":54}},{"value":"/ std_socket.set_nonblocking(true)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546511,"byte_end":10546549,"line_start":367,"line_end":367,"column_start":5,"column_end":43}},{"value":"/ let tokio_socket = UnixDatagram::from_std(std_socket)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546554,"byte_end":10546613,"line_start":368,"line_end":368,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546618,"byte_end":10546621,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546626,"byte_end":10546638,"line_start":370,"line_end":370,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546643,"byte_end":10546650,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546655,"byte_end":10546662,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547797,"byte_end":10547805,"line_start":402,"line_end":402,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixDatagram>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixDatagram`] into a [`std::os::unix::net::UnixDatagram`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixDatagram`] into a [`std::os::unix::net::UnixDatagram`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546894,"byte_end":10546978,"line_start":379,"line_end":379,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546983,"byte_end":10546986,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixDatagram`] will have nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10546991,"byte_end":10547066,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ mode set as `true`.  Use [`set_nonblocking`] to change the blocking mode","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547071,"byte_end":10547147,"line_start":382,"line_end":382,"column_start":5,"column_end":81}},{"value":"/ if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547152,"byte_end":10547166,"line_start":383,"line_end":383,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547171,"byte_end":10547174,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547179,"byte_end":10547193,"line_start":385,"line_end":385,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547198,"byte_end":10547201,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547206,"byte_end":10547224,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547229,"byte_end":10547255,"line_start":388,"line_end":388,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547260,"byte_end":10547263,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547268,"byte_end":10547286,"line_start":390,"line_end":390,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547291,"byte_end":10547342,"line_start":391,"line_end":391,"column_start":5,"column_end":56}},{"value":"/     let tokio_socket = tokio::net::UnixDatagram::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547347,"byte_end":10547421,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/     let std_socket = tokio_socket.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547426,"byte_end":10547476,"line_start":393,"line_end":393,"column_start":5,"column_end":55}},{"value":"/     std_socket.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547481,"byte_end":10547524,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547529,"byte_end":10547543,"line_start":395,"line_end":395,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547548,"byte_end":10547553,"line_start":396,"line_end":396,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547558,"byte_end":10547565,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547570,"byte_end":10547573,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UnixDatagram`]: UnixDatagram","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547578,"byte_end":10547624,"line_start":399,"line_end":399,"column_start":5,"column_end":51}},{"value":"/ [`std::os::unix::net::UnixDatagram`]: std::os::unix::net::UnixDatagram","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547629,"byte_end":10547703,"line_start":400,"line_end":400,"column_start":5,"column_end":79}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixDatagram::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10547708,"byte_end":10547785,"line_start":401,"line_end":401,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3365},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549116,"byte_end":10549123,"line_start":445,"line_end":445,"column_start":12,"column_end":19},"name":"unbound","qualname":"<UnixDatagram>::unbound","value":"pub fn unbound() -> io::Result<UnixDatagram>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixDatagram` which is not bound to any address.","sig":null,"attributes":[{"value":"/ Creates a new `UnixDatagram` which is not bound to any address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548203,"byte_end":10548270,"line_start":414,"line_end":414,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548275,"byte_end":10548278,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548283,"byte_end":10548297,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548302,"byte_end":10548309,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548314,"byte_end":10548342,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548347,"byte_end":10548367,"line_start":419,"line_end":419,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548372,"byte_end":10548425,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548430,"byte_end":10548463,"line_start":421,"line_end":421,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548468,"byte_end":10548494,"line_start":422,"line_end":422,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548499,"byte_end":10548502,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548507,"byte_end":10548538,"line_start":424,"line_end":424,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548543,"byte_end":10548581,"line_start":425,"line_end":425,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548586,"byte_end":10548589,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548594,"byte_end":10548629,"line_start":427,"line_end":427,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548634,"byte_end":10548659,"line_start":428,"line_end":428,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548664,"byte_end":10548704,"line_start":429,"line_end":429,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548709,"byte_end":10548752,"line_start":430,"line_end":430,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548757,"byte_end":10548760,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548765,"byte_end":10548796,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548801,"byte_end":10548832,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548837,"byte_end":10548876,"line_start":434,"line_end":434,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548881,"byte_end":10548884,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548889,"byte_end":10548921,"line_start":436,"line_end":436,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548926,"byte_end":10548979,"line_start":437,"line_end":437,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548984,"byte_end":10548987,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10548992,"byte_end":10549021,"line_start":439,"line_end":439,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549026,"byte_end":10549055,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549060,"byte_end":10549063,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549068,"byte_end":10549080,"line_start":442,"line_end":442,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549085,"byte_end":10549092,"line_start":443,"line_end":443,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549097,"byte_end":10549104,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550376,"byte_end":10550383,"line_start":487,"line_end":487,"column_start":12,"column_end":19},"name":"connect","qualname":"<UnixDatagram>::connect","value":"pub fn connect<P: AsRef<Path>>(&Self, P) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Connects the socket to the specified address.","sig":null,"attributes":[{"value":"/ Connects the socket to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549258,"byte_end":10549307,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549312,"byte_end":10549315,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ The `send` method may be used to send data to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549320,"byte_end":10549392,"line_start":452,"line_end":452,"column_start":5,"column_end":77}},{"value":"/ `recv` and `recv_from` will only receive data from that address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549397,"byte_end":10549465,"line_start":453,"line_end":453,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549470,"byte_end":10549473,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549478,"byte_end":10549492,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549497,"byte_end":10549504,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549509,"byte_end":10549537,"line_start":457,"line_end":457,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549542,"byte_end":10549562,"line_start":458,"line_end":458,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549567,"byte_end":10549620,"line_start":459,"line_end":459,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549625,"byte_end":10549658,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549663,"byte_end":10549689,"line_start":461,"line_end":461,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549694,"byte_end":10549697,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549702,"byte_end":10549733,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549738,"byte_end":10549776,"line_start":464,"line_end":464,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549781,"byte_end":10549784,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549789,"byte_end":10549824,"line_start":466,"line_end":466,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549829,"byte_end":10549854,"line_start":467,"line_end":467,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549859,"byte_end":10549899,"line_start":468,"line_end":468,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549904,"byte_end":10549947,"line_start":469,"line_end":469,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549952,"byte_end":10549955,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549960,"byte_end":10549994,"line_start":471,"line_end":471,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10549999,"byte_end":10550025,"line_start":472,"line_end":472,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550030,"byte_end":10550033,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ // Send to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550038,"byte_end":10550069,"line_start":474,"line_end":474,"column_start":5,"column_end":36}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550074,"byte_end":10550105,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"/ tx.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550110,"byte_end":10550136,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550141,"byte_end":10550144,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550149,"byte_end":10550181,"line_start":478,"line_end":478,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550186,"byte_end":10550239,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550244,"byte_end":10550247,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550252,"byte_end":10550281,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550286,"byte_end":10550315,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550320,"byte_end":10550323,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550328,"byte_end":10550340,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550345,"byte_end":10550352,"line_start":485,"line_end":485,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550357,"byte_end":10550364,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551230,"byte_end":10551234,"line_start":517,"line_end":517,"column_start":18,"column_end":22},"name":"send","qualname":"<UnixDatagram>::send","value":"pub async fn send<'_, '_>(&'_ Self, &'_ [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the socket's peer.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the socket's peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550477,"byte_end":10550527,"line_start":491,"line_end":491,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550532,"byte_end":10550535,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550540,"byte_end":10550554,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550559,"byte_end":10550566,"line_start":494,"line_end":494,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550571,"byte_end":10550599,"line_start":495,"line_end":495,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550604,"byte_end":10550624,"line_start":496,"line_end":496,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550629,"byte_end":10550682,"line_start":497,"line_end":497,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550687,"byte_end":10550720,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550725,"byte_end":10550728,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550733,"byte_end":10550766,"line_start":500,"line_end":500,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550771,"byte_end":10550818,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550823,"byte_end":10550826,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550831,"byte_end":10550888,"line_start":503,"line_end":503,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550893,"byte_end":10550921,"line_start":504,"line_end":504,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550926,"byte_end":10550957,"line_start":505,"line_end":505,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550962,"byte_end":10550991,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10550996,"byte_end":10550999,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551004,"byte_end":10551037,"line_start":508,"line_end":508,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551042,"byte_end":10551086,"line_start":509,"line_end":509,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551091,"byte_end":10551094,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551099,"byte_end":10551129,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551134,"byte_end":10551163,"line_start":512,"line_end":512,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551168,"byte_end":10551171,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551176,"byte_end":10551188,"line_start":514,"line_end":514,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551193,"byte_end":10551200,"line_start":515,"line_end":515,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551205,"byte_end":10551212,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552664,"byte_end":10552672,"line_start":562,"line_end":562,"column_start":12,"column_end":20},"name":"try_send","qualname":"<UnixDatagram>::try_send","value":"pub fn try_send(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551415,"byte_end":10551470,"line_start":524,"line_end":524,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551475,"byte_end":10551478,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551483,"byte_end":10551497,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551502,"byte_end":10551505,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551510,"byte_end":10551523,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551528,"byte_end":10551561,"line_start":529,"line_end":529,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551566,"byte_end":10551582,"line_start":530,"line_end":530,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551587,"byte_end":10551590,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551595,"byte_end":10551613,"line_start":532,"line_end":532,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551618,"byte_end":10551657,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551662,"byte_end":10551709,"line_start":534,"line_end":534,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551714,"byte_end":10551771,"line_start":535,"line_end":535,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551776,"byte_end":10551833,"line_start":536,"line_end":536,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551838,"byte_end":10551893,"line_start":537,"line_end":537,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551898,"byte_end":10551936,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551941,"byte_end":10551944,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551949,"byte_end":10551963,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10551968,"byte_end":10552017,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552022,"byte_end":10552059,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552064,"byte_end":10552067,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552072,"byte_end":10552142,"line_start":544,"line_end":544,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552147,"byte_end":10552205,"line_start":545,"line_end":545,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552210,"byte_end":10552261,"line_start":546,"line_end":546,"column_start":5,"column_end":56}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552266,"byte_end":10552292,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552297,"byte_end":10552323,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552328,"byte_end":10552345,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552350,"byte_end":10552422,"line_start":550,"line_end":550,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552427,"byte_end":10552456,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552461,"byte_end":10552478,"line_start":552,"line_end":552,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552483,"byte_end":10552510,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552515,"byte_end":10552549,"line_start":554,"line_end":554,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552554,"byte_end":10552571,"line_start":555,"line_end":555,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552576,"byte_end":10552589,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552594,"byte_end":10552603,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552608,"byte_end":10552611,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552616,"byte_end":10552630,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552635,"byte_end":10552640,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552645,"byte_end":10552652,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554055,"byte_end":10554066,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"try_send_to","qualname":"<UnixDatagram>::try_send_to","value":"pub fn try_send_to<P>(&Self, &[u8], P) -> io::Result<usize> where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Try to send a datagram to the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to send a datagram to the peer without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552832,"byte_end":10552887,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552892,"byte_end":10552895,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552900,"byte_end":10552914,"line_start":570,"line_end":570,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552919,"byte_end":10552922,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552927,"byte_end":10552940,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552945,"byte_end":10552978,"line_start":573,"line_end":573,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10552983,"byte_end":10552999,"line_start":574,"line_end":574,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553004,"byte_end":10553007,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553012,"byte_end":10553030,"line_start":576,"line_end":576,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553035,"byte_end":10553074,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553079,"byte_end":10553126,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553131,"byte_end":10553188,"line_start":579,"line_end":579,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553193,"byte_end":10553250,"line_start":580,"line_end":580,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553255,"byte_end":10553310,"line_start":581,"line_end":581,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553315,"byte_end":10553318,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553323,"byte_end":10553337,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553342,"byte_end":10553391,"line_start":584,"line_end":584,"column_start":5,"column_end":54}},{"value":"/         socket.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553396,"byte_end":10553433,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553438,"byte_end":10553441,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/         // Try to send data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553446,"byte_end":10553516,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553521,"byte_end":10553579,"line_start":588,"line_end":588,"column_start":5,"column_end":63}},{"value":"/         match socket.try_send_to(b\"hello world\", &server_path) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553584,"byte_end":10553652,"line_start":589,"line_end":589,"column_start":5,"column_end":73}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553657,"byte_end":10553683,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553688,"byte_end":10553714,"line_start":591,"line_end":591,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553719,"byte_end":10553736,"line_start":592,"line_end":592,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553741,"byte_end":10553813,"line_start":593,"line_end":593,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553818,"byte_end":10553847,"line_start":594,"line_end":594,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553852,"byte_end":10553869,"line_start":595,"line_end":595,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553874,"byte_end":10553901,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553906,"byte_end":10553940,"line_start":597,"line_end":597,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553945,"byte_end":10553962,"line_start":598,"line_end":598,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553967,"byte_end":10553980,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553985,"byte_end":10553994,"line_start":600,"line_end":600,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10553999,"byte_end":10554002,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554007,"byte_end":10554021,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554026,"byte_end":10554031,"line_start":603,"line_end":603,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554036,"byte_end":10554043,"line_start":604,"line_end":604,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555026,"byte_end":10555030,"line_start":640,"line_end":640,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnixDatagram>::recv","value":"pub async fn recv<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554289,"byte_end":10554323,"line_start":614,"line_end":614,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554328,"byte_end":10554331,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554336,"byte_end":10554350,"line_start":616,"line_end":616,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554355,"byte_end":10554362,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554367,"byte_end":10554395,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554400,"byte_end":10554420,"line_start":619,"line_end":619,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554425,"byte_end":10554478,"line_start":620,"line_end":620,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554483,"byte_end":10554516,"line_start":621,"line_end":621,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554521,"byte_end":10554524,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554529,"byte_end":10554562,"line_start":623,"line_end":623,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554567,"byte_end":10554614,"line_start":624,"line_end":624,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554619,"byte_end":10554622,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ // Since the sockets are paired, the paired send/recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554627,"byte_end":10554684,"line_start":626,"line_end":626,"column_start":5,"column_end":62}},{"value":"/ // functions can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554689,"byte_end":10554717,"line_start":627,"line_end":627,"column_start":5,"column_end":33}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554722,"byte_end":10554753,"line_start":628,"line_end":628,"column_start":5,"column_end":36}},{"value":"/ sock1.send(bytes).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554758,"byte_end":10554787,"line_start":629,"line_end":629,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554792,"byte_end":10554795,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554800,"byte_end":10554833,"line_start":631,"line_end":631,"column_start":5,"column_end":38}},{"value":"/ let size = sock2.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554838,"byte_end":10554882,"line_start":632,"line_end":632,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554887,"byte_end":10554890,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buff[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554895,"byte_end":10554925,"line_start":634,"line_end":634,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554930,"byte_end":10554959,"line_start":635,"line_end":635,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554964,"byte_end":10554967,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554972,"byte_end":10554984,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10554989,"byte_end":10554996,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555001,"byte_end":10555008,"line_start":639,"line_end":639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556723,"byte_end":10556731,"line_start":691,"line_end":691,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<UnixDatagram>::try_recv","value":"pub fn try_recv(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive a datagram from the peer without waiting.","sig":null,"attributes":[{"value":"/ Try to receive a datagram from the peer without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555215,"byte_end":10555275,"line_start":647,"line_end":647,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555280,"byte_end":10555283,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555288,"byte_end":10555302,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555307,"byte_end":10555310,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555315,"byte_end":10555328,"line_start":651,"line_end":651,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555333,"byte_end":10555366,"line_start":652,"line_end":652,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555371,"byte_end":10555387,"line_start":653,"line_end":653,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555392,"byte_end":10555395,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555400,"byte_end":10555418,"line_start":655,"line_end":655,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555423,"byte_end":10555462,"line_start":656,"line_end":656,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555467,"byte_end":10555495,"line_start":657,"line_end":657,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555500,"byte_end":10555547,"line_start":658,"line_end":658,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555552,"byte_end":10555609,"line_start":659,"line_end":659,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555614,"byte_end":10555671,"line_start":660,"line_end":660,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555676,"byte_end":10555731,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/     socket.connect(&server_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555736,"byte_end":10555774,"line_start":662,"line_end":662,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555779,"byte_end":10555782,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555787,"byte_end":10555801,"line_start":664,"line_end":664,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555806,"byte_end":10555855,"line_start":665,"line_end":665,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555860,"byte_end":10555897,"line_start":666,"line_end":666,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555902,"byte_end":10555905,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555910,"byte_end":10555982,"line_start":668,"line_end":668,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10555987,"byte_end":10556026,"line_start":669,"line_end":669,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556031,"byte_end":10556067,"line_start":670,"line_end":670,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556072,"byte_end":10556075,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556080,"byte_end":10556150,"line_start":672,"line_end":672,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556155,"byte_end":10556213,"line_start":673,"line_end":673,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556218,"byte_end":10556263,"line_start":674,"line_end":674,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556268,"byte_end":10556294,"line_start":675,"line_end":675,"column_start":5,"column_end":31}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556299,"byte_end":10556351,"line_start":676,"line_end":676,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556356,"byte_end":10556382,"line_start":677,"line_end":677,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556387,"byte_end":10556404,"line_start":678,"line_end":678,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556409,"byte_end":10556481,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556486,"byte_end":10556515,"line_start":680,"line_end":680,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556520,"byte_end":10556537,"line_start":681,"line_end":681,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556542,"byte_end":10556569,"line_start":682,"line_end":682,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556574,"byte_end":10556608,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556613,"byte_end":10556630,"line_start":684,"line_end":684,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556635,"byte_end":10556648,"line_start":685,"line_end":685,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556653,"byte_end":10556662,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556667,"byte_end":10556670,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556675,"byte_end":10556689,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556694,"byte_end":10556699,"line_start":689,"line_end":689,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10556704,"byte_end":10556711,"line_start":690,"line_end":690,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3668},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10558455,"byte_end":10558472,"line_start":739,"line_end":739,"column_start":16,"column_end":33},"name":"try_recv_buf_from","qualname":"<UnixDatagram>::try_recv_buf_from","value":"pub fn try_recv_buf_from<B: BufMut>(&Self, &mut B)\n-> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10560836,"byte_end":10560848,"line_start":802,"line_end":802,"column_start":16,"column_end":28},"name":"try_recv_buf","qualname":"<UnixDatagram>::try_recv_buf","value":"pub fn try_recv_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562528,"byte_end":10562535,"line_start":854,"line_end":854,"column_start":18,"column_end":25},"name":"send_to","qualname":"<UnixDatagram>::send_to","value":"pub async fn send_to<P, '_, '_>(&'_ Self, &'_ [u8], P) -> /*impl Trait*/ where\nP: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Sends data on the socket to the specified address.","sig":null,"attributes":[{"value":"/ Sends data on the socket to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561453,"byte_end":10561507,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561512,"byte_end":10561515,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561520,"byte_end":10561534,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561539,"byte_end":10561546,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561551,"byte_end":10561579,"line_start":825,"line_end":825,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561584,"byte_end":10561604,"line_start":826,"line_end":826,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561609,"byte_end":10561662,"line_start":827,"line_end":827,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561667,"byte_end":10561700,"line_start":828,"line_end":828,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561705,"byte_end":10561731,"line_start":829,"line_end":829,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561736,"byte_end":10561739,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561744,"byte_end":10561798,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561803,"byte_end":10561862,"line_start":832,"line_end":832,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561867,"byte_end":10561892,"line_start":833,"line_end":833,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561897,"byte_end":10561900,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561905,"byte_end":10561949,"line_start":835,"line_end":835,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561954,"byte_end":10561994,"line_start":836,"line_end":836,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10561999,"byte_end":10562042,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562047,"byte_end":10562087,"line_start":838,"line_end":838,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562092,"byte_end":10562135,"line_start":839,"line_end":839,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562140,"byte_end":10562143,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562148,"byte_end":10562179,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562184,"byte_end":10562223,"line_start":842,"line_end":842,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562228,"byte_end":10562231,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562236,"byte_end":10562268,"line_start":844,"line_end":844,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562273,"byte_end":10562326,"line_start":845,"line_end":845,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562331,"byte_end":10562334,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562339,"byte_end":10562368,"line_start":847,"line_end":847,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562373,"byte_end":10562402,"line_start":848,"line_end":848,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562407,"byte_end":10562461,"line_start":849,"line_end":849,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562466,"byte_end":10562469,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562474,"byte_end":10562486,"line_start":851,"line_end":851,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562491,"byte_end":10562498,"line_start":852,"line_end":852,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562503,"byte_end":10562510,"line_start":853,"line_end":853,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3388},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563843,"byte_end":10563852,"line_start":897,"line_end":897,"column_start":18,"column_end":27},"name":"recv_from","qualname":"<UnixDatagram>::recv_from","value":"pub async fn recv_from<'_, '_>(&'_ Self, &'_ mut [u8]) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives data from the socket.","sig":null,"attributes":[{"value":"/ Receives data from the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562788,"byte_end":10562822,"line_start":864,"line_end":864,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562827,"byte_end":10562830,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562835,"byte_end":10562849,"line_start":866,"line_end":866,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562854,"byte_end":10562861,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562866,"byte_end":10562894,"line_start":868,"line_end":868,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562899,"byte_end":10562919,"line_start":869,"line_end":869,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562924,"byte_end":10562977,"line_start":870,"line_end":870,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10562982,"byte_end":10563015,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563020,"byte_end":10563046,"line_start":872,"line_end":872,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563051,"byte_end":10563054,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563059,"byte_end":10563113,"line_start":874,"line_end":874,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563118,"byte_end":10563177,"line_start":875,"line_end":875,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563182,"byte_end":10563207,"line_start":876,"line_end":876,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563212,"byte_end":10563215,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ // Bind each socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563220,"byte_end":10563264,"line_start":878,"line_end":878,"column_start":5,"column_end":49}},{"value":"/ let tx_path = tmp.path().join(\"tx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563269,"byte_end":10563309,"line_start":879,"line_end":879,"column_start":5,"column_end":45}},{"value":"/ let tx = UnixDatagram::bind(&tx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563314,"byte_end":10563357,"line_start":880,"line_end":880,"column_start":5,"column_end":48}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563362,"byte_end":10563402,"line_start":881,"line_end":881,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563407,"byte_end":10563450,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563455,"byte_end":10563458,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let bytes = b\"hello world\";","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563463,"byte_end":10563494,"line_start":884,"line_end":884,"column_start":5,"column_end":36}},{"value":"/ tx.send_to(bytes, &rx_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563499,"byte_end":10563538,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563543,"byte_end":10563546,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let mut buf = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563551,"byte_end":10563583,"line_start":887,"line_end":887,"column_start":5,"column_end":37}},{"value":"/ let (size, addr) = rx.recv_from(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563588,"byte_end":10563641,"line_start":888,"line_end":888,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563646,"byte_end":10563649,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ let dgram = &buf[..size];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563654,"byte_end":10563683,"line_start":890,"line_end":890,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dgram, bytes);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563688,"byte_end":10563717,"line_start":891,"line_end":891,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(addr.as_pathname().unwrap(), &tx_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563722,"byte_end":10563776,"line_start":892,"line_end":892,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563781,"byte_end":10563784,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563789,"byte_end":10563801,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563806,"byte_end":10563813,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10563818,"byte_end":10563825,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3392},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564817,"byte_end":10564831,"line_start":924,"line_end":924,"column_start":12,"column_end":26},"name":"poll_recv_from","qualname":"<UnixDatagram>::poll_recv_from","value":"pub fn poll_recv_from(&Self, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<SocketAddr>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram on the specified address.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram on the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564122,"byte_end":10564189,"line_start":907,"line_end":907,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564194,"byte_end":10564197,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564202,"byte_end":10564286,"line_start":909,"line_end":909,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564291,"byte_end":10564373,"line_start":910,"line_end":910,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564378,"byte_end":10564399,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564404,"byte_end":10564407,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564412,"byte_end":10564430,"line_start":913,"line_end":913,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564435,"byte_end":10564438,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564443,"byte_end":10564468,"line_start":915,"line_end":915,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564473,"byte_end":10564476,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564481,"byte_end":10564537,"line_start":917,"line_end":917,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(addr))` reads data from `addr` into `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564542,"byte_end":10564632,"line_start":918,"line_end":918,"column_start":5,"column_end":95}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564637,"byte_end":10564692,"line_start":919,"line_end":919,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564697,"byte_end":10564700,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564705,"byte_end":10564717,"line_start":921,"line_end":921,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564722,"byte_end":10564725,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10564730,"byte_end":10564805,"line_start":923,"line_end":923,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3393},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566140,"byte_end":10566152,"line_start":963,"line_end":963,"column_start":12,"column_end":24},"name":"poll_send_to","qualname":"<UnixDatagram>::poll_send_to","value":"pub fn poll_send_to<P>(&Self, &mut Context, &[u8], P)\n-> Poll<io::Result<usize>> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data to the specified address.","sig":null,"attributes":[{"value":"/ Attempts to send data to the specified address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565491,"byte_end":10565542,"line_start":946,"line_end":946,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565547,"byte_end":10565550,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565555,"byte_end":10565639,"line_start":948,"line_end":948,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565644,"byte_end":10565726,"line_start":949,"line_end":949,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565731,"byte_end":10565752,"line_start":950,"line_end":950,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565757,"byte_end":10565760,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565765,"byte_end":10565783,"line_start":952,"line_end":952,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565788,"byte_end":10565791,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565796,"byte_end":10565821,"line_start":954,"line_end":954,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565826,"byte_end":10565829,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565834,"byte_end":10565891,"line_start":956,"line_end":956,"column_start":5,"column_end":62}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565896,"byte_end":10565955,"line_start":957,"line_end":957,"column_start":5,"column_end":64}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10565960,"byte_end":10566015,"line_start":958,"line_end":958,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566020,"byte_end":10566023,"line_start":959,"line_end":959,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566028,"byte_end":10566040,"line_start":960,"line_end":960,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566045,"byte_end":10566048,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566053,"byte_end":10566128,"line_start":962,"line_end":962,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3396},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567349,"byte_end":10567358,"line_start":1000,"line_end":1000,"column_start":12,"column_end":21},"name":"poll_send","qualname":"<UnixDatagram>::poll_send","value":"pub fn poll_send(&Self, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send data on the socket to the remote address to which it\n was previously `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to send data on the socket to the remote address to which it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566442,"byte_end":10566515,"line_start":977,"line_end":977,"column_start":5,"column_end":78}},{"value":"/ was previously `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566520,"byte_end":10566551,"line_start":978,"line_end":978,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566556,"byte_end":10566559,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566564,"byte_end":10566636,"line_start":980,"line_end":980,"column_start":5,"column_end":77}},{"value":"/ This method will fail if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566641,"byte_end":10566698,"line_start":981,"line_end":981,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566703,"byte_end":10566706,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the send direction,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566711,"byte_end":10566786,"line_start":983,"line_end":983,"column_start":5,"column_end":80}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566791,"byte_end":10566866,"line_start":984,"line_end":984,"column_start":5,"column_end":80}},{"value":"/ be scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566871,"byte_end":10566908,"line_start":985,"line_end":985,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566913,"byte_end":10566916,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566921,"byte_end":10566939,"line_start":987,"line_end":987,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566944,"byte_end":10566947,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566952,"byte_end":10566977,"line_start":989,"line_end":989,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566982,"byte_end":10566985,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not available to write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10566990,"byte_end":10567051,"line_start":991,"line_end":991,"column_start":5,"column_end":66}},{"value":"/ * `Poll::Ready(Ok(n))` `n` is the number of bytes sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567056,"byte_end":10567114,"line_start":992,"line_end":992,"column_start":5,"column_end":63}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567119,"byte_end":10567174,"line_start":993,"line_end":993,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567179,"byte_end":10567182,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567187,"byte_end":10567199,"line_start":995,"line_end":995,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567204,"byte_end":10567207,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567212,"byte_end":10567287,"line_start":997,"line_end":997,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567292,"byte_end":10567295,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567300,"byte_end":10567337,"line_start":999,"line_end":999,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3398},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568477,"byte_end":10568486,"line_start":1029,"line_end":1029,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnixDatagram>::poll_recv","value":"pub fn poll_recv(&Self, &mut Context, &mut ReadBuf) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a single datagram message on the socket from the remote\n address to which it is `connect`ed.","sig":null,"attributes":[{"value":"/ Attempts to receive a single datagram message on the socket from the remote","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567537,"byte_end":10567616,"line_start":1006,"line_end":1006,"column_start":5,"column_end":84}},{"value":"/ address to which it is `connect`ed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567621,"byte_end":10567660,"line_start":1007,"line_end":1007,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567665,"byte_end":10567668,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ The [`connect`] method will connect this socket to a remote address. This method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567673,"byte_end":10567757,"line_start":1009,"line_end":1009,"column_start":5,"column_end":89}},{"value":"/ resolves to an error if the socket is not connected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567762,"byte_end":10567818,"line_start":1010,"line_end":1010,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567823,"byte_end":10567826,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to a `poll_*` method in the recv direction, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567831,"byte_end":10567915,"line_start":1012,"line_end":1012,"column_start":5,"column_end":89}},{"value":"/ `Waker` from the `Context` passed to the most recent call will be scheduled to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10567920,"byte_end":10568002,"line_start":1013,"line_end":1013,"column_start":5,"column_end":87}},{"value":"/ receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568007,"byte_end":10568028,"line_start":1014,"line_end":1014,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568033,"byte_end":10568036,"line_start":1015,"line_end":1015,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568041,"byte_end":10568059,"line_start":1016,"line_end":1016,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568064,"byte_end":10568067,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568072,"byte_end":10568097,"line_start":1018,"line_end":1018,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568102,"byte_end":10568105,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the socket is not ready to read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568110,"byte_end":10568166,"line_start":1020,"line_end":1020,"column_start":5,"column_end":61}},{"value":"/ * `Poll::Ready(Ok(()))` reads data `ReadBuf` if the socket is ready","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568171,"byte_end":10568242,"line_start":1021,"line_end":1021,"column_start":5,"column_end":76}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568247,"byte_end":10568302,"line_start":1022,"line_end":1022,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568307,"byte_end":10568310,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568315,"byte_end":10568327,"line_start":1024,"line_end":1024,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568332,"byte_end":10568335,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568340,"byte_end":10568415,"line_start":1026,"line_end":1026,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568420,"byte_end":10568423,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ [`connect`]: method@Self::connect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10568428,"byte_end":10568465,"line_start":1028,"line_end":1028,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570555,"byte_end":10570568,"line_start":1090,"line_end":1090,"column_start":12,"column_end":25},"name":"try_recv_from","qualname":"<UnixDatagram>::try_recv_from","value":"pub fn try_recv_from(&Self, &mut [u8]) -> io::Result<(usize, SocketAddr)>","parent":null,"children":[],"decl_id":null,"docs":" Try to receive data from the socket without waiting.","sig":null,"attributes":[{"value":"/ Try to receive data from the socket without waiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569080,"byte_end":10569136,"line_start":1047,"line_end":1047,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569141,"byte_end":10569144,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569149,"byte_end":10569163,"line_start":1049,"line_end":1049,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569168,"byte_end":10569171,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569176,"byte_end":10569189,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569194,"byte_end":10569227,"line_start":1052,"line_end":1052,"column_start":5,"column_end":38}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569232,"byte_end":10569248,"line_start":1053,"line_end":1053,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569253,"byte_end":10569256,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569261,"byte_end":10569279,"line_start":1055,"line_end":1055,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569284,"byte_end":10569323,"line_start":1056,"line_end":1056,"column_start":5,"column_end":44}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569328,"byte_end":10569356,"line_start":1057,"line_end":1057,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569361,"byte_end":10569408,"line_start":1058,"line_end":1058,"column_start":5,"column_end":52}},{"value":"/     let client_path = dir.path().join(\"client.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569413,"byte_end":10569470,"line_start":1059,"line_end":1059,"column_start":5,"column_end":62}},{"value":"/     let server_path = dir.path().join(\"server.sock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569475,"byte_end":10569532,"line_start":1060,"line_end":1060,"column_start":5,"column_end":62}},{"value":"/     let socket = UnixDatagram::bind(&client_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569537,"byte_end":10569592,"line_start":1061,"line_end":1061,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569597,"byte_end":10569600,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569605,"byte_end":10569619,"line_start":1063,"line_end":1063,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569624,"byte_end":10569673,"line_start":1064,"line_end":1064,"column_start":5,"column_end":54}},{"value":"/         socket.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569678,"byte_end":10569715,"line_start":1065,"line_end":1065,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569720,"byte_end":10569723,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/         // The buffer is **not** included in the async task and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569728,"byte_end":10569800,"line_start":1067,"line_end":1067,"column_start":5,"column_end":77}},{"value":"/         // only exist on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569805,"byte_end":10569844,"line_start":1068,"line_end":1068,"column_start":5,"column_end":44}},{"value":"/         let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569849,"byte_end":10569885,"line_start":1069,"line_end":1069,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569890,"byte_end":10569893,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/         // Try to recv data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569898,"byte_end":10569968,"line_start":1071,"line_end":1071,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10569973,"byte_end":10570031,"line_start":1072,"line_end":1072,"column_start":5,"column_end":63}},{"value":"/         match socket.try_recv_from(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570036,"byte_end":10570086,"line_start":1073,"line_end":1073,"column_start":5,"column_end":55}},{"value":"/             Ok((n, _addr)) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570091,"byte_end":10570126,"line_start":1074,"line_end":1074,"column_start":5,"column_end":40}},{"value":"/                 println!(\"GOT {:?}\", &buf[..n]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570131,"byte_end":10570183,"line_start":1075,"line_end":1075,"column_start":5,"column_end":57}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570188,"byte_end":10570214,"line_start":1076,"line_end":1076,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570219,"byte_end":10570236,"line_start":1077,"line_end":1077,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570241,"byte_end":10570313,"line_start":1078,"line_end":1078,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570318,"byte_end":10570347,"line_start":1079,"line_end":1079,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570352,"byte_end":10570369,"line_start":1080,"line_end":1080,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570374,"byte_end":10570401,"line_start":1081,"line_end":1081,"column_start":5,"column_end":32}},{"value":"/                 return Err(e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570406,"byte_end":10570440,"line_start":1082,"line_end":1082,"column_start":5,"column_end":39}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570445,"byte_end":10570462,"line_start":1083,"line_end":1083,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570467,"byte_end":10570480,"line_start":1084,"line_end":1084,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570485,"byte_end":10570494,"line_start":1085,"line_end":1085,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570499,"byte_end":10570502,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570507,"byte_end":10570521,"line_start":1087,"line_end":1087,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570526,"byte_end":10570531,"line_start":1088,"line_end":1088,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570536,"byte_end":10570543,"line_start":1089,"line_end":1089,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572017,"byte_end":10572027,"line_start":1139,"line_end":1139,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixDatagram>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address that this socket is bound to.","sig":null,"attributes":[{"value":"/ Returns the local address that this socket is bound to.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570817,"byte_end":10570876,"line_start":1099,"line_end":1099,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570881,"byte_end":10570884,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570889,"byte_end":10570903,"line_start":1101,"line_end":1101,"column_start":5,"column_end":19}},{"value":"/ For a socket bound to a local path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570908,"byte_end":10570946,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570951,"byte_end":10570958,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570963,"byte_end":10570991,"line_start":1104,"line_end":1104,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10570996,"byte_end":10571016,"line_start":1105,"line_end":1105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571021,"byte_end":10571074,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571079,"byte_end":10571112,"line_start":1107,"line_end":1107,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571117,"byte_end":10571143,"line_start":1108,"line_end":1108,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571148,"byte_end":10571151,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ // We use a temporary directory so that the socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571156,"byte_end":10571210,"line_start":1110,"line_end":1110,"column_start":5,"column_end":59}},{"value":"/ // files left by the bound sockets will get cleaned up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571215,"byte_end":10571274,"line_start":1111,"line_end":1111,"column_start":5,"column_end":64}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571279,"byte_end":10571304,"line_start":1112,"line_end":1112,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571309,"byte_end":10571312,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ // Bind socket to a filesystem path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571317,"byte_end":10571356,"line_start":1114,"line_end":1114,"column_start":5,"column_end":44}},{"value":"/ let socket_path = tmp.path().join(\"socket\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571361,"byte_end":10571409,"line_start":1115,"line_end":1115,"column_start":5,"column_end":53}},{"value":"/ let socket = UnixDatagram::bind(&socket_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571414,"byte_end":10571465,"line_start":1116,"line_end":1116,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571470,"byte_end":10571473,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(socket.local_addr()?.as_pathname().unwrap(), &socket_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571478,"byte_end":10571552,"line_start":1118,"line_end":1118,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571557,"byte_end":10571560,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571565,"byte_end":10571577,"line_start":1120,"line_end":1120,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571582,"byte_end":10571589,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571594,"byte_end":10571601,"line_start":1122,"line_end":1122,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571606,"byte_end":10571609,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ For an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571614,"byte_end":10571639,"line_start":1124,"line_end":1124,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571644,"byte_end":10571651,"line_start":1125,"line_end":1125,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571656,"byte_end":10571684,"line_start":1126,"line_end":1126,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571689,"byte_end":10571709,"line_start":1127,"line_end":1127,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571714,"byte_end":10571767,"line_start":1128,"line_end":1128,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571772,"byte_end":10571805,"line_start":1129,"line_end":1129,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571810,"byte_end":10571813,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571818,"byte_end":10571849,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571854,"byte_end":10571896,"line_start":1132,"line_end":1132,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571901,"byte_end":10571904,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ assert!(socket.local_addr()?.is_unnamed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571909,"byte_end":10571956,"line_start":1134,"line_end":1134,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571961,"byte_end":10571964,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571969,"byte_end":10571981,"line_start":1136,"line_end":1136,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571986,"byte_end":10571993,"line_start":1137,"line_end":1137,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10571998,"byte_end":10572005,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573380,"byte_end":10573389,"line_start":1188,"line_end":1188,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixDatagram>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of this socket's peer.","sig":null,"attributes":[{"value":"/ Returns the address of this socket's peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572119,"byte_end":10572165,"line_start":1143,"line_end":1143,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572170,"byte_end":10572173,"line_start":1144,"line_end":1144,"column_start":5,"column_end":8}},{"value":"/ The `connect` method will connect the socket to a peer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572178,"byte_end":10572237,"line_start":1145,"line_end":1145,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572242,"byte_end":10572245,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572250,"byte_end":10572264,"line_start":1147,"line_end":1147,"column_start":5,"column_end":19}},{"value":"/ For a peer with a local path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572269,"byte_end":10572301,"line_start":1148,"line_end":1148,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572306,"byte_end":10572313,"line_start":1149,"line_end":1149,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572318,"byte_end":10572346,"line_start":1150,"line_end":1150,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572351,"byte_end":10572371,"line_start":1151,"line_end":1151,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572376,"byte_end":10572429,"line_start":1152,"line_end":1152,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572434,"byte_end":10572467,"line_start":1153,"line_end":1153,"column_start":5,"column_end":38}},{"value":"/ use tempfile::tempdir;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572472,"byte_end":10572498,"line_start":1154,"line_end":1154,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572503,"byte_end":10572506,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572511,"byte_end":10572542,"line_start":1156,"line_end":1156,"column_start":5,"column_end":36}},{"value":"/ let tx = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572547,"byte_end":10572585,"line_start":1157,"line_end":1157,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572590,"byte_end":10572593,"line_start":1158,"line_end":1158,"column_start":5,"column_end":8}},{"value":"/ // Create another, bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572598,"byte_end":10572633,"line_start":1159,"line_end":1159,"column_start":5,"column_end":40}},{"value":"/ let tmp = tempdir()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572638,"byte_end":10572663,"line_start":1160,"line_end":1160,"column_start":5,"column_end":30}},{"value":"/ let rx_path = tmp.path().join(\"rx\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572668,"byte_end":10572708,"line_start":1161,"line_end":1161,"column_start":5,"column_end":45}},{"value":"/ let rx = UnixDatagram::bind(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572713,"byte_end":10572756,"line_start":1162,"line_end":1162,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572761,"byte_end":10572764,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ // Connect to the bound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572769,"byte_end":10572803,"line_start":1164,"line_end":1164,"column_start":5,"column_end":39}},{"value":"/ tx.connect(&rx_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572808,"byte_end":10572834,"line_start":1165,"line_end":1165,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572839,"byte_end":10572842,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(tx.peer_addr()?.as_pathname().unwrap(), &rx_path);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572847,"byte_end":10572912,"line_start":1167,"line_end":1167,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572917,"byte_end":10572920,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572925,"byte_end":10572937,"line_start":1169,"line_end":1169,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572942,"byte_end":10572949,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572954,"byte_end":10572961,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572966,"byte_end":10572969,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ For an unbound peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10572974,"byte_end":10572997,"line_start":1173,"line_end":1173,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573002,"byte_end":10573009,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573014,"byte_end":10573042,"line_start":1175,"line_end":1175,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573047,"byte_end":10573067,"line_start":1176,"line_end":1176,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573072,"byte_end":10573125,"line_start":1177,"line_end":1177,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573130,"byte_end":10573163,"line_start":1178,"line_end":1178,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573168,"byte_end":10573171,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ // Create the pair of sockets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573176,"byte_end":10573209,"line_start":1180,"line_end":1180,"column_start":5,"column_end":38}},{"value":"/ let (sock1, sock2) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573214,"byte_end":10573261,"line_start":1181,"line_end":1181,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573266,"byte_end":10573269,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert!(sock1.peer_addr()?.is_unnamed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573274,"byte_end":10573319,"line_start":1183,"line_end":1183,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573324,"byte_end":10573327,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573332,"byte_end":10573344,"line_start":1185,"line_end":1185,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573349,"byte_end":10573356,"line_start":1186,"line_end":1186,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573361,"byte_end":10573368,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3403},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573989,"byte_end":10573999,"line_start":1211,"line_end":1211,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixDatagram>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573480,"byte_end":10573527,"line_start":1192,"line_end":1192,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573532,"byte_end":10573535,"line_start":1193,"line_end":1193,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573540,"byte_end":10573554,"line_start":1194,"line_end":1194,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573559,"byte_end":10573566,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573571,"byte_end":10573599,"line_start":1196,"line_end":1196,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573604,"byte_end":10573624,"line_start":1197,"line_end":1197,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573629,"byte_end":10573682,"line_start":1198,"line_end":1198,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573687,"byte_end":10573720,"line_start":1199,"line_end":1199,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573725,"byte_end":10573728,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573733,"byte_end":10573764,"line_start":1201,"line_end":1201,"column_start":5,"column_end":36}},{"value":"/ let socket = UnixDatagram::unbound()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573769,"byte_end":10573811,"line_start":1202,"line_end":1202,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573816,"byte_end":10573819,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ if let Ok(Some(err)) = socket.take_error() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573824,"byte_end":10573872,"line_start":1204,"line_end":1204,"column_start":5,"column_end":53}},{"value":"/     println!(\"Got error: {:?}\", err);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573877,"byte_end":10573918,"line_start":1205,"line_end":1205,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573923,"byte_end":10573928,"line_start":1206,"line_end":1206,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573933,"byte_end":10573936,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573941,"byte_end":10573953,"line_start":1208,"line_end":1208,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573958,"byte_end":10573965,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10573970,"byte_end":10573977,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3404},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575240,"byte_end":10575248,"line_start":1247,"line_end":1247,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<UnixDatagram>::shutdown","value":"pub fn shutdown(&Self, Shutdown) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Shuts down the read, write, or both halves of this connection.","sig":null,"attributes":[{"value":"/ Shuts down the read, write, or both halves of this connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574082,"byte_end":10574148,"line_start":1215,"line_end":1215,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574153,"byte_end":10574156,"line_start":1216,"line_end":1216,"column_start":5,"column_end":8}},{"value":"/ This function will cause all pending and future I/O calls on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574161,"byte_end":10574229,"line_start":1217,"line_end":1217,"column_start":5,"column_end":73}},{"value":"/ specified portions to immediately return with an appropriate value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574234,"byte_end":10574304,"line_start":1218,"line_end":1218,"column_start":5,"column_end":75}},{"value":"/ (see the documentation of `Shutdown`).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574309,"byte_end":10574351,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574356,"byte_end":10574359,"line_start":1220,"line_end":1220,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574364,"byte_end":10574378,"line_start":1221,"line_end":1221,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574383,"byte_end":10574390,"line_start":1222,"line_end":1222,"column_start":5,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574395,"byte_end":10574423,"line_start":1223,"line_end":1223,"column_start":5,"column_end":33}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574428,"byte_end":10574448,"line_start":1224,"line_end":1224,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574453,"byte_end":10574506,"line_start":1225,"line_end":1225,"column_start":5,"column_end":58}},{"value":"/ use tokio::net::UnixDatagram;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574511,"byte_end":10574544,"line_start":1226,"line_end":1226,"column_start":5,"column_end":38}},{"value":"/ use std::net::Shutdown;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574549,"byte_end":10574576,"line_start":1227,"line_end":1227,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574581,"byte_end":10574584,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ // Create an unbound socket","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574589,"byte_end":10574620,"line_start":1229,"line_end":1229,"column_start":5,"column_end":36}},{"value":"/ let (socket, other) = UnixDatagram::pair()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574625,"byte_end":10574673,"line_start":1230,"line_end":1230,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574678,"byte_end":10574681,"line_start":1231,"line_end":1231,"column_start":5,"column_end":8}},{"value":"/ socket.shutdown(Shutdown::Both)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574686,"byte_end":10574723,"line_start":1232,"line_end":1232,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574728,"byte_end":10574731,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ // NOTE: the following commented out code does NOT work as expected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574736,"byte_end":10574808,"line_start":1234,"line_end":1234,"column_start":5,"column_end":77}},{"value":"/ // Due to an underlying issue, the recv call will block indefinitely.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574813,"byte_end":10574886,"line_start":1235,"line_end":1235,"column_start":5,"column_end":78}},{"value":"/ // See: https://github.com/tokio-rs/tokio/issues/1679","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574891,"byte_end":10574948,"line_start":1236,"line_end":1236,"column_start":5,"column_end":62}},{"value":"/ //let mut buff = vec![0u8; 24];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574953,"byte_end":10574988,"line_start":1237,"line_end":1237,"column_start":5,"column_end":40}},{"value":"/ //let size = socket.recv(&mut buff).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10574993,"byte_end":10575040,"line_start":1238,"line_end":1238,"column_start":5,"column_end":52}},{"value":"/ //assert_eq!(size, 0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575045,"byte_end":10575071,"line_start":1239,"line_end":1239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575076,"byte_end":10575079,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ let send_result = socket.send(b\"hello world\").await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575084,"byte_end":10575140,"line_start":1241,"line_end":1241,"column_start":5,"column_end":61}},{"value":"/ assert!(send_result.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575145,"byte_end":10575179,"line_start":1242,"line_end":1242,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575184,"byte_end":10575187,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575192,"byte_end":10575204,"line_start":1244,"line_end":1244,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575209,"byte_end":10575216,"line_start":1245,"line_end":1245,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575221,"byte_end":10575228,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3676},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577551,"byte_end":10577563,"line_start":47,"line_end":47,"column_start":16,"column_end":28},"name":"UnixListener","qualname":"::net::unix::listener::UnixListener","value":"UnixListener {  }","parent":null,"children":[{"krate":0,"index":3677}],"decl_id":null,"docs":" A Unix socket which can accept connections from other Unix sockets.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578065,"byte_end":10578069,"line_start":62,"line_end":62,"column_start":12,"column_end":16},"name":"bind","qualname":"<UnixListener>::bind","value":"pub fn bind<P>(P) -> io::Result<UnixListener> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `UnixListener` bound to the specified path.","sig":null,"attributes":[{"value":"/ Creates a new `UnixListener` bound to the specified path.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577648,"byte_end":10577709,"line_start":53,"line_end":53,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577714,"byte_end":10577717,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577722,"byte_end":10577734,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577739,"byte_end":10577742,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577747,"byte_end":10577807,"line_start":57,"line_end":57,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577812,"byte_end":10577815,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577820,"byte_end":10577890,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577895,"byte_end":10577968,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577973,"byte_end":10578053,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579000,"byte_end":10579008,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixListener>::from_std","value":"pub fn from_std(net::UnixListener) -> io::Result<UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","sig":null,"attributes":[{"value":"/ Creates new `UnixListener` from a `std::os::unix::net::UnixListener `.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578299,"byte_end":10578373,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578378,"byte_end":10578381,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixListener from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578386,"byte_end":10578458,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578463,"byte_end":10578531,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying listener; it is left up to the user to set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578536,"byte_end":10578611,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578616,"byte_end":10578644,"line_start":76,"line_end":76,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578649,"byte_end":10578652,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578657,"byte_end":10578669,"line_start":78,"line_end":78,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578674,"byte_end":10578677,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578682,"byte_end":10578742,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578747,"byte_end":10578750,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578755,"byte_end":10578825,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578830,"byte_end":10578903,"line_start":83,"line_end":83,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10578908,"byte_end":10578988,"line_start":84,"line_end":84,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580127,"byte_end":10580135,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixListener>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixListener>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixListener`] into a [`std::os::unix::net::UnixListener`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixListener`] into a [`std::os::unix::net::UnixListener`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579224,"byte_end":10579308,"line_start":91,"line_end":91,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579313,"byte_end":10579316,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixListener`] will have nonblocking mode","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579321,"byte_end":10579401,"line_start":93,"line_end":93,"column_start":5,"column_end":85}},{"value":"/ set as `true`.  Use [`set_nonblocking`] to change the blocking mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579406,"byte_end":10579488,"line_start":94,"line_end":94,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579493,"byte_end":10579496,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579501,"byte_end":10579515,"line_start":96,"line_end":96,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579520,"byte_end":10579523,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579528,"byte_end":10579546,"line_start":98,"line_end":98,"column_start":5,"column_end":23}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579551,"byte_end":10579577,"line_start":99,"line_end":99,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579582,"byte_end":10579585,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579590,"byte_end":10579608,"line_start":101,"line_end":101,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579613,"byte_end":10579664,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/     let tokio_listener = tokio::net::UnixListener::bind(\"127.0.0.1:0\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579669,"byte_end":10579745,"line_start":103,"line_end":103,"column_start":5,"column_end":81}},{"value":"/     let std_listener = tokio_listener.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579750,"byte_end":10579804,"line_start":104,"line_end":104,"column_start":5,"column_end":59}},{"value":"/     std_listener.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579809,"byte_end":10579854,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579859,"byte_end":10579873,"line_start":106,"line_end":106,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579878,"byte_end":10579883,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579888,"byte_end":10579895,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579900,"byte_end":10579903,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ [`tokio::net::UnixListener`]: UnixListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579908,"byte_end":10579954,"line_start":110,"line_end":110,"column_start":5,"column_end":51}},{"value":"/ [`std::os::unix::net::UnixListener`]: std::os::unix::net::UnixListener","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10579959,"byte_end":10580033,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixListener::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580038,"byte_end":10580115,"line_start":112,"line_end":112,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580428,"byte_end":10580438,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixListener>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local socket address of this listener.\n","sig":null,"attributes":[{"value":"/ Returns the local socket address of this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580362,"byte_end":10580416,"line_start":120,"line_end":120,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580589,"byte_end":10580599,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixListener>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580530,"byte_end":10580577,"line_start":125,"line_end":125,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3441},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580755,"byte_end":10580761,"line_start":131,"line_end":131,"column_start":18,"column_end":24},"name":"accept","qualname":"<UnixListener>::accept","value":"pub async fn accept<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accepts a new incoming connection to this listener.\n","sig":null,"attributes":[{"value":"/ Accepts a new incoming connection to this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10580682,"byte_end":10580737,"line_start":130,"line_end":130,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581468,"byte_end":10581479,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<UnixListener>::poll_accept","value":"pub fn poll_accept(&Self, &mut Context)\n-> Poll<io::Result<(UnixStream, SocketAddr)>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to accept a new incoming connection to this listener.","sig":null,"attributes":[{"value":"/ Polls to accept a new incoming connection to this listener.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581090,"byte_end":10581153,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581158,"byte_end":10581161,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ If there is no connection to accept, `Poll::Pending` is returned and the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581166,"byte_end":10581242,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ current task will be notified by a waker.  Note that on multiple calls","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581247,"byte_end":10581321,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ to `poll_accept`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581326,"byte_end":10581402,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581407,"byte_end":10581456,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3679},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583290,"byte_end":10583298,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::net::unix::split::ReadHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed read half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed read half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10582953,"byte_end":10583018,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583019,"byte_end":10583022,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Reading from a `ReadHalf` is usually done using the convenience methods found on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583023,"byte_end":10583111,"line_start":21,"line_end":21,"column_start":1,"column_end":89}},{"value":"/ [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583112,"byte_end":10583139,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583140,"byte_end":10583143,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583144,"byte_end":10583174,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583175,"byte_end":10583209,"line_start":25,"line_end":25,"column_start":1,"column_end":35}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583210,"byte_end":10583261,"line_start":26,"line_end":26,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3686},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583924,"byte_end":10583933,"line_start":44,"line_end":44,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::net::unix::split::WriteHalf","value":"","parent":null,"children":[],"decl_id":null,"docs":" Borrowed write half of a [`UnixStream`], created by [`split`].","sig":null,"attributes":[{"value":"/ Borrowed write half of a [`UnixStream`], created by [`split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583321,"byte_end":10583387,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583388,"byte_end":10583391,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implemenation of this type, [`poll_shutdown`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583392,"byte_end":10583478,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ shut down the UnixStream stream in the write direction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583479,"byte_end":10583538,"line_start":33,"line_end":33,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583539,"byte_end":10583542,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Writing to an `WriteHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583543,"byte_end":10583624,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/ on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583625,"byte_end":10583660,"line_start":36,"line_end":36,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583661,"byte_end":10583664,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583665,"byte_end":10583695,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ [`split`]: UnixStream::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583696,"byte_end":10583730,"line_start":39,"line_end":39,"column_start":1,"column_end":35}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583731,"byte_end":10583778,"line_start":40,"line_end":40,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583779,"byte_end":10583841,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10583842,"byte_end":10583895,"line_start":42,"line_end":42,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586329,"byte_end":10586342,"line_start":30,"line_end":30,"column_start":12,"column_end":25},"name":"OwnedReadHalf","qualname":"::net::unix::split_owned::OwnedReadHalf","value":"OwnedReadHalf {  }","parent":null,"children":[{"krate":0,"index":3694}],"decl_id":null,"docs":" Owned read half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned read half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10585950,"byte_end":10586017,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586018,"byte_end":10586021,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Reading from an `OwnedReadHalf` is usually done using the convenience methods found","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586022,"byte_end":10586109,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"/ on the [`AsyncReadExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586110,"byte_end":10586144,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586145,"byte_end":10586148,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586149,"byte_end":10586191,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586192,"byte_end":10586248,"line_start":27,"line_end":27,"column_start":1,"column_end":57}},{"value":"/ [`AsyncReadExt`]: trait@crate::io::AsyncReadExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586249,"byte_end":10586300,"line_start":28,"line_end":28,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":3697},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10587088,"byte_end":10587102,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"OwnedWriteHalf","qualname":"::net::unix::split_owned::OwnedWriteHalf","value":"OwnedWriteHalf {  }","parent":null,"children":[{"krate":0,"index":3698},{"krate":0,"index":3699}],"decl_id":null,"docs":" Owned write half of a [`UnixStream`], created by [`into_split`].","sig":null,"attributes":[{"value":"/ Owned write half of a [`UnixStream`], created by [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586376,"byte_end":10586444,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586445,"byte_end":10586448,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Note that in the [`AsyncWrite`] implementation of this type,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586449,"byte_end":10586513,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ [`poll_shutdown`] will shut down the stream in the write direction.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586514,"byte_end":10586585,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ Dropping the write half will also shut down the write half of the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586586,"byte_end":10586663,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586664,"byte_end":10586667,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Writing to an `OwnedWriteHalf` is usually done using the convenience methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586668,"byte_end":10586748,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ found on the [`AsyncWriteExt`] trait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586749,"byte_end":10586790,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586791,"byte_end":10586794,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ [`UnixStream`]: crate::net::UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586795,"byte_end":10586837,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586838,"byte_end":10586894,"line_start":44,"line_end":44,"column_start":1,"column_end":57}},{"value":"/ [`AsyncWrite`]: trait@crate::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586895,"byte_end":10586942,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/ [`poll_shutdown`]: fn@crate::io::AsyncWrite::poll_shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10586943,"byte_end":10587005,"line_start":46,"line_end":46,"column_start":1,"column_end":63}},{"value":"/ [`AsyncWriteExt`]: trait@crate::io::AsyncWriteExt","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10587006,"byte_end":10587059,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3702},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588071,"byte_end":10588083,"line_start":83,"line_end":83,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::net::unix::split_owned::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating that two halves were not from the same socket, and thus could\n not be reunited.\n","sig":null,"attributes":[{"value":"/ Error indicating that two halves were not from the same socket, and thus could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10587939,"byte_end":10588021,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ not be reunited.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588022,"byte_end":10588042,"line_start":81,"line_end":81,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3704},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588084,"byte_end":10588101,"line_start":83,"line_end":83,"column_start":25,"column_end":42},"name":"0","qualname":"::net::unix::split_owned::ReuniteError::0","value":"net::unix::split_owned::OwnedReadHalf","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3705},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588103,"byte_end":10588121,"line_start":83,"line_end":83,"column_start":44,"column_end":62},"name":"1","qualname":"::net::unix::split_owned::ReuniteError::1","value":"net::unix::split_owned::OwnedWriteHalf","parent":{"krate":0,"index":3702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588681,"byte_end":10588688,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedReadHalf>::reunite","value":"pub fn reunite(Self, OwnedWriteHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588404,"byte_end":10588474,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588479,"byte_end":10588543,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588548,"byte_end":10588600,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588605,"byte_end":10588608,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588613,"byte_end":10588669,"line_start":101,"line_end":101,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589325,"byte_end":10589332,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"reunite","qualname":"<OwnedWriteHalf>::reunite","value":"pub fn reunite(Self, OwnedReadHalf) -> Result<UnixStream, ReuniteError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two halves of a `UnixStream` back together and\n recover the original socket. Succeeds only if the two halves\n originated from the same call to [`into_split`].","sig":null,"attributes":[{"value":"/ Attempts to put the two halves of a `UnixStream` back together and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589048,"byte_end":10589118,"line_start":118,"line_end":118,"column_start":5,"column_end":75}},{"value":"/ recover the original socket. Succeeds only if the two halves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589123,"byte_end":10589187,"line_start":119,"line_end":119,"column_start":5,"column_end":69}},{"value":"/ originated from the same call to [`into_split`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589192,"byte_end":10589244,"line_start":120,"line_end":120,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589249,"byte_end":10589252,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: crate::net::UnixStream::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589257,"byte_end":10589313,"line_start":122,"line_end":122,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589638,"byte_end":10589644,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedWriteHalf>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the write half, but don't close the write half of the stream\n until the read half is dropped. If the read half has already been\n dropped, this closes the stream.\n","sig":null,"attributes":[{"value":"/ Destroy the write half, but don't close the write half of the stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589439,"byte_end":10589511,"line_start":127,"line_end":127,"column_start":5,"column_end":77}},{"value":"/ until the read half is dropped. If the read half has already been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589516,"byte_end":10589585,"line_start":128,"line_end":128,"column_start":5,"column_end":74}},{"value":"/ dropped, this closes the stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589590,"byte_end":10589626,"line_start":129,"line_end":129,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3528},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591270,"byte_end":10591280,"line_start":5,"line_end":5,"column_start":12,"column_end":22},"name":"SocketAddr","qualname":"::net::unix::socketaddr::SocketAddr","value":"","parent":null,"children":[],"decl_id":null,"docs":" An address associated with a Tokio Unix socket.\n","sig":null,"attributes":[{"value":"/ An address associated with a Tokio Unix socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591207,"byte_end":10591258,"line_start":4,"line_end":4,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591516,"byte_end":10591526,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"is_unnamed","qualname":"<SocketAddr>::is_unnamed","value":"pub fn is_unnamed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the address is unnamed.","sig":null,"attributes":[{"value":"/ Returns `true` if the address is unnamed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591338,"byte_end":10591383,"line_start":8,"line_end":8,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591388,"byte_end":10591391,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591396,"byte_end":10591441,"line_start":10,"line_end":10,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591446,"byte_end":10591449,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591454,"byte_end":10591504,"line_start":12,"line_end":12,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591787,"byte_end":10591798,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"as_pathname","qualname":"<SocketAddr>::as_pathname","value":"pub fn as_pathname(&Self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the contents of this address if it is a `pathname` address.","sig":null,"attributes":[{"value":"/ Returns the contents of this address if it is a `pathname` address.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591583,"byte_end":10591654,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591659,"byte_end":10591662,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ Documentation reflected in [`SocketAddr`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591667,"byte_end":10591712,"line_start":19,"line_end":19,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591717,"byte_end":10591720,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ [`SocketAddr`]: std::os::unix::net::SocketAddr","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591725,"byte_end":10591775,"line_start":21,"line_end":21,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3709},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593301,"byte_end":10593311,"line_start":35,"line_end":35,"column_start":16,"column_end":26},"name":"UnixStream","qualname":"::net::unix::stream::UnixStream","value":"UnixStream {  }","parent":null,"children":[{"krate":0,"index":3710}],"decl_id":null,"docs":" A structure representing a connected Unix socket.","sig":null,"attributes":[{"value":"cfg(all(unix, feature = \"net\"))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":21589,"byte_end":21623,"line_start":179,"line_end":179,"column_start":13,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3577},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593634,"byte_end":10593641,"line_start":46,"line_end":46,"column_start":18,"column_end":25},"name":"connect","qualname":"<UnixStream>::connect","value":"pub async fn connect<P>(P) -> /*impl Trait*/ where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Connects to the socket named by `path`.","sig":null,"attributes":[{"value":"/ Connects to the socket named by `path`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593392,"byte_end":10593435,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593440,"byte_end":10593443,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This function will create a new Unix socket and connect to the path","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593448,"byte_end":10593519,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ specified, associating the returned stream with the default event loop's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593524,"byte_end":10593600,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593605,"byte_end":10593616,"line_start":45,"line_end":45,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596304,"byte_end":10596309,"line_start":119,"line_end":119,"column_start":18,"column_end":23},"name":"ready","qualname":"<UnixStream>::ready","value":"pub async fn ready<'_>(&'_ Self, Interest) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for any of the requested ready states.","sig":null,"attributes":[{"value":"/ Wait for any of the requested ready states.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593933,"byte_end":10593980,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593985,"byte_end":10593988,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `try_read()` or `try_write()`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593993,"byte_end":10594067,"line_start":59,"line_end":59,"column_start":5,"column_end":79}},{"value":"/ can be used to concurrently read / write to the same socket on a single","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594072,"byte_end":10594147,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ task without splitting the socket.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594152,"byte_end":10594190,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594195,"byte_end":10594198,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594203,"byte_end":10594217,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594222,"byte_end":10594225,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Concurrently read and write to the stream on the same task without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594230,"byte_end":10594300,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ splitting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594305,"byte_end":10594319,"line_start":66,"line_end":66,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594324,"byte_end":10594327,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594332,"byte_end":10594345,"line_start":68,"line_end":68,"column_start":5,"column_end":18}},{"value":"/ use tokio::io::Interest;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594350,"byte_end":10594378,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594383,"byte_end":10594414,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594419,"byte_end":10594445,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594450,"byte_end":10594466,"line_start":72,"line_end":72,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594471,"byte_end":10594474,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594479,"byte_end":10594497,"line_start":74,"line_end":74,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594502,"byte_end":10594553,"line_start":75,"line_end":75,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594558,"byte_end":10594605,"line_start":76,"line_end":76,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594610,"byte_end":10594663,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594668,"byte_end":10594727,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594732,"byte_end":10594735,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594740,"byte_end":10594754,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/         let ready = stream.ready(Interest::READABLE | Interest::WRITABLE).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594759,"byte_end":10594844,"line_start":81,"line_end":81,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594849,"byte_end":10594852,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/         if ready.is_readable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594857,"byte_end":10594893,"line_start":83,"line_end":83,"column_start":5,"column_end":41}},{"value":"/             let mut data = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594898,"byte_end":10594943,"line_start":84,"line_end":84,"column_start":5,"column_end":50}},{"value":"/             // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10594948,"byte_end":10595022,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595027,"byte_end":10595089,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/             match stream.try_read(&mut data) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595094,"byte_end":10595144,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595149,"byte_end":10595179,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/                     println!(\"read {} bytes\", n);        ","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595184,"byte_end":10595245,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595250,"byte_end":10595271,"line_start":90,"line_end":90,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595276,"byte_end":10595352,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595357,"byte_end":10595390,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595395,"byte_end":10595416,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595421,"byte_end":10595452,"line_start":94,"line_end":94,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595457,"byte_end":10595502,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595507,"byte_end":10595528,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595533,"byte_end":10595550,"line_start":97,"line_end":97,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595555,"byte_end":10595558,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595563,"byte_end":10595576,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595581,"byte_end":10595584,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/         if ready.is_writable() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595589,"byte_end":10595625,"line_start":101,"line_end":101,"column_start":5,"column_end":41}},{"value":"/             // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595630,"byte_end":10595705,"line_start":102,"line_end":102,"column_start":5,"column_end":80}},{"value":"/             // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595710,"byte_end":10595772,"line_start":103,"line_end":103,"column_start":5,"column_end":67}},{"value":"/             match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595777,"byte_end":10595833,"line_start":104,"line_end":104,"column_start":5,"column_end":61}},{"value":"/                 Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595838,"byte_end":10595868,"line_start":105,"line_end":105,"column_start":5,"column_end":35}},{"value":"/                     println!(\"write {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595873,"byte_end":10595927,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595932,"byte_end":10595953,"line_start":107,"line_end":107,"column_start":5,"column_end":26}},{"value":"/                 Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10595958,"byte_end":10596034,"line_start":108,"line_end":108,"column_start":5,"column_end":81}},{"value":"/                     continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596039,"byte_end":10596072,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596077,"byte_end":10596098,"line_start":110,"line_end":110,"column_start":5,"column_end":26}},{"value":"/                 Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596103,"byte_end":10596134,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/                     return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596139,"byte_end":10596184,"line_start":112,"line_end":112,"column_start":5,"column_end":50}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596189,"byte_end":10596210,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596215,"byte_end":10596232,"line_start":114,"line_end":114,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596237,"byte_end":10596250,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596255,"byte_end":10596264,"line_start":116,"line_end":116,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596269,"byte_end":10596274,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596279,"byte_end":10596286,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597934,"byte_end":10597942,"line_start":169,"line_end":169,"column_start":18,"column_end":26},"name":"readable","qualname":"<UnixStream>::readable","value":"pub async fn readable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become readable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become readable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596466,"byte_end":10596509,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596514,"byte_end":10596517,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::READABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596522,"byte_end":10596599,"line_start":126,"line_end":126,"column_start":5,"column_end":82}},{"value":"/ paired with `try_read()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596604,"byte_end":10596633,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596638,"byte_end":10596641,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596646,"byte_end":10596660,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596665,"byte_end":10596668,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596673,"byte_end":10596686,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596691,"byte_end":10596722,"line_start":132,"line_end":132,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596727,"byte_end":10596753,"line_start":133,"line_end":133,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596758,"byte_end":10596774,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596779,"byte_end":10596782,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596787,"byte_end":10596805,"line_start":136,"line_end":136,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596810,"byte_end":10596861,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596866,"byte_end":10596894,"line_start":138,"line_end":138,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596899,"byte_end":10596946,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10596951,"byte_end":10597004,"line_start":140,"line_end":140,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597009,"byte_end":10597068,"line_start":141,"line_end":141,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597073,"byte_end":10597076,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     let mut msg = vec![0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597081,"byte_end":10597117,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597122,"byte_end":10597125,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597130,"byte_end":10597144,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597149,"byte_end":10597198,"line_start":146,"line_end":146,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597203,"byte_end":10597240,"line_start":147,"line_end":147,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597245,"byte_end":10597248,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597253,"byte_end":10597323,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597328,"byte_end":10597386,"line_start":150,"line_end":150,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut msg) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597391,"byte_end":10597436,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597441,"byte_end":10597467,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/                 msg.truncate(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597472,"byte_end":10597508,"line_start":153,"line_end":153,"column_start":5,"column_end":41}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597513,"byte_end":10597539,"line_start":154,"line_end":154,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597544,"byte_end":10597561,"line_start":155,"line_end":155,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597566,"byte_end":10597638,"line_start":156,"line_end":156,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597643,"byte_end":10597672,"line_start":157,"line_end":157,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597677,"byte_end":10597694,"line_start":158,"line_end":158,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597699,"byte_end":10597726,"line_start":159,"line_end":159,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597731,"byte_end":10597772,"line_start":160,"line_end":160,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597777,"byte_end":10597794,"line_start":161,"line_end":161,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597799,"byte_end":10597812,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597817,"byte_end":10597826,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597831,"byte_end":10597834,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/     println!(\"GOT = {:?}\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597839,"byte_end":10597875,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597880,"byte_end":10597894,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597899,"byte_end":10597904,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10597909,"byte_end":10597916,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3588},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599305,"byte_end":10599320,"line_start":203,"line_end":203,"column_start":12,"column_end":27},"name":"poll_read_ready","qualname":"<UnixStream>::poll_read_ready","value":"pub fn poll_read_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for read readiness.","sig":null,"attributes":[{"value":"/ Polls for read readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598043,"byte_end":10598072,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598077,"byte_end":10598080,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for reading, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598085,"byte_end":10598160,"line_start":176,"line_end":176,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598165,"byte_end":10598240,"line_start":177,"line_end":177,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for reading, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598245,"byte_end":10598318,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598323,"byte_end":10598333,"line_start":179,"line_end":179,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598338,"byte_end":10598341,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_read_ready` or `poll_read`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598346,"byte_end":10598419,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598424,"byte_end":10598492,"line_start":182,"line_end":182,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_write_ready` retains a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598497,"byte_end":10598570,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598575,"byte_end":10598606,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598611,"byte_end":10598614,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598619,"byte_end":10598694,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ via [`readable`] is not feasible. Where possible, using [`readable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598699,"byte_end":10598774,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598779,"byte_end":10598847,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598852,"byte_end":10598855,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598860,"byte_end":10598878,"line_start":190,"line_end":190,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598883,"byte_end":10598886,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598891,"byte_end":10598916,"line_start":192,"line_end":192,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598921,"byte_end":10598924,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10598929,"byte_end":10598995,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for reading.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599000,"byte_end":10599068,"line_start":195,"line_end":195,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599073,"byte_end":10599128,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599133,"byte_end":10599136,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599141,"byte_end":10599153,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599158,"byte_end":10599161,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599166,"byte_end":10599241,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599246,"byte_end":10599249,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ [`readable`]: method@Self::readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599254,"byte_end":10599293,"line_start":202,"line_end":202,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601763,"byte_end":10601771,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"try_read","qualname":"<UnixStream>::try_read","value":"pub fn try_read(&Self, &mut [u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, returning how\n many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffer, returning how","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599453,"byte_end":10599529,"line_start":207,"line_end":207,"column_start":5,"column_end":81}},{"value":"/ many bytes were read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599534,"byte_end":10599559,"line_start":208,"line_end":208,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599564,"byte_end":10599567,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599572,"byte_end":10599648,"line_start":210,"line_end":210,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599653,"byte_end":10599721,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/ `try_read()` is non-blocking, the buffer does not have to be stored by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599726,"byte_end":10599800,"line_start":212,"line_end":212,"column_start":5,"column_end":79}},{"value":"/ the async task and can exist entirely on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599805,"byte_end":10599860,"line_start":213,"line_end":213,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599865,"byte_end":10599868,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599873,"byte_end":10599943,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599948,"byte_end":10599951,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10599956,"byte_end":10599998,"line_start":217,"line_end":217,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600003,"byte_end":10600039,"line_start":218,"line_end":218,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600044,"byte_end":10600047,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600052,"byte_end":10600064,"line_start":220,"line_end":220,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600069,"byte_end":10600072,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600077,"byte_end":10600148,"line_start":222,"line_end":222,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600153,"byte_end":10600229,"line_start":223,"line_end":223,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600234,"byte_end":10600308,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600313,"byte_end":10600362,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600367,"byte_end":10600370,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600375,"byte_end":10600389,"line_start":227,"line_end":227,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600394,"byte_end":10600397,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600402,"byte_end":10600415,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600420,"byte_end":10600451,"line_start":230,"line_end":230,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600456,"byte_end":10600482,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600487,"byte_end":10600503,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600508,"byte_end":10600511,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600516,"byte_end":10600534,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600539,"byte_end":10600590,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600595,"byte_end":10600623,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600628,"byte_end":10600675,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600680,"byte_end":10600733,"line_start":238,"line_end":238,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600738,"byte_end":10600797,"line_start":239,"line_end":239,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600802,"byte_end":10600805,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600810,"byte_end":10600824,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600829,"byte_end":10600878,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600883,"byte_end":10600920,"line_start":243,"line_end":243,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600925,"byte_end":10600928,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10600933,"byte_end":10601006,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601011,"byte_end":10601057,"line_start":246,"line_end":246,"column_start":5,"column_end":51}},{"value":"/         let mut buf = [0; 4096];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601062,"byte_end":10601098,"line_start":247,"line_end":247,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601103,"byte_end":10601106,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601111,"byte_end":10601181,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601186,"byte_end":10601244,"line_start":250,"line_end":250,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read(&mut buf) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601249,"byte_end":10601294,"line_start":251,"line_end":251,"column_start":5,"column_end":50}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601299,"byte_end":10601330,"line_start":252,"line_end":252,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601335,"byte_end":10601361,"line_start":253,"line_end":253,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601366,"byte_end":10601415,"line_start":254,"line_end":254,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601420,"byte_end":10601437,"line_start":255,"line_end":255,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601442,"byte_end":10601514,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601519,"byte_end":10601548,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601553,"byte_end":10601570,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601575,"byte_end":10601602,"line_start":259,"line_end":259,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601607,"byte_end":10601648,"line_start":260,"line_end":260,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601653,"byte_end":10601670,"line_start":261,"line_end":261,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601675,"byte_end":10601688,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601693,"byte_end":10601702,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601707,"byte_end":10601710,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601715,"byte_end":10601729,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601734,"byte_end":10601739,"line_start":266,"line_end":266,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601744,"byte_end":10601751,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604781,"byte_end":10604798,"line_start":346,"line_end":346,"column_start":12,"column_end":29},"name":"try_read_vectored","qualname":"<UnixStream>::try_read_vectored","value":"pub fn try_read_vectored(&Self, &mut [io::IoSliceMut]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffers, returning\n how many bytes were read.","sig":null,"attributes":[{"value":"/ Try to read data from the stream into the provided buffers, returning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10601939,"byte_end":10602012,"line_start":274,"line_end":274,"column_start":5,"column_end":78}},{"value":"/ how many bytes were read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602017,"byte_end":10602046,"line_start":275,"line_end":275,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602051,"byte_end":10602054,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Data is copied to fill each buffer in order, with the final buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602059,"byte_end":10602129,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ written to possibly being only partially filled. This method behaves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602134,"byte_end":10602206,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/ equivalently to a single call to [`try_read()`] with concatenated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602211,"byte_end":10602280,"line_start":279,"line_end":279,"column_start":5,"column_end":74}},{"value":"/ buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602285,"byte_end":10602297,"line_start":280,"line_end":280,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602302,"byte_end":10602305,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Receives any pending data from the socket but does not wait for new data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602310,"byte_end":10602386,"line_start":282,"line_end":282,"column_start":5,"column_end":81}},{"value":"/ to arrive. On success, returns the number of bytes read. Because","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602391,"byte_end":10602459,"line_start":283,"line_end":283,"column_start":5,"column_end":73}},{"value":"/ `try_read_vectored()` is non-blocking, the buffer does not have to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602464,"byte_end":10602537,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ stored by the async task and can exist entirely on the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602542,"byte_end":10602607,"line_start":285,"line_end":285,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602612,"byte_end":10602615,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Usually, [`readable()`] or [`ready()`] is used with this function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602620,"byte_end":10602690,"line_start":287,"line_end":287,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602695,"byte_end":10602698,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ [`try_read()`]: UnixStream::try_read()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602703,"byte_end":10602745,"line_start":289,"line_end":289,"column_start":5,"column_end":47}},{"value":"/ [`readable()`]: UnixStream::readable()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602750,"byte_end":10602792,"line_start":290,"line_end":290,"column_start":5,"column_end":47}},{"value":"/ [`ready()`]: UnixStream::ready()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602797,"byte_end":10602833,"line_start":291,"line_end":291,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602838,"byte_end":10602841,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602846,"byte_end":10602858,"line_start":293,"line_end":293,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602863,"byte_end":10602866,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If data is successfully read, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602871,"byte_end":10602942,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ number of bytes read. `Ok(0)` indicates the stream's read half is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10602947,"byte_end":10603023,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ and will no longer yield data. If the stream is not ready to read data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603028,"byte_end":10603102,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603107,"byte_end":10603156,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603161,"byte_end":10603164,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603169,"byte_end":10603183,"line_start":300,"line_end":300,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603188,"byte_end":10603191,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603196,"byte_end":10603209,"line_start":302,"line_end":302,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603214,"byte_end":10603245,"line_start":303,"line_end":303,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603250,"byte_end":10603276,"line_start":304,"line_end":304,"column_start":5,"column_end":31}},{"value":"/ use std::io::{self, IoSliceMut};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603281,"byte_end":10603317,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603322,"byte_end":10603325,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603330,"byte_end":10603348,"line_start":307,"line_end":307,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603353,"byte_end":10603404,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603409,"byte_end":10603437,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603442,"byte_end":10603489,"line_start":310,"line_end":310,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603494,"byte_end":10603547,"line_start":311,"line_end":311,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603552,"byte_end":10603611,"line_start":312,"line_end":312,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603616,"byte_end":10603619,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603624,"byte_end":10603638,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be readable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603643,"byte_end":10603692,"line_start":315,"line_end":315,"column_start":5,"column_end":54}},{"value":"/         stream.readable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603697,"byte_end":10603734,"line_start":316,"line_end":316,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603739,"byte_end":10603742,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/         // Creating the buffer **after** the `await` prevents it from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603747,"byte_end":10603820,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/         // being stored in the async task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603825,"byte_end":10603871,"line_start":319,"line_end":319,"column_start":5,"column_end":51}},{"value":"/         let mut buf_a = [0; 512];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603876,"byte_end":10603913,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/         let mut buf_b = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603918,"byte_end":10603956,"line_start":321,"line_end":321,"column_start":5,"column_end":43}},{"value":"/         let mut bufs = [","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603961,"byte_end":10603989,"line_start":322,"line_end":322,"column_start":5,"column_end":33}},{"value":"/             IoSliceMut::new(&mut buf_a),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10603994,"byte_end":10604038,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/             IoSliceMut::new(&mut buf_b),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604043,"byte_end":10604087,"line_start":324,"line_end":324,"column_start":5,"column_end":49}},{"value":"/         ];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604092,"byte_end":10604106,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604111,"byte_end":10604114,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/         // Try to read data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604119,"byte_end":10604189,"line_start":327,"line_end":327,"column_start":5,"column_end":75}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604194,"byte_end":10604252,"line_start":328,"line_end":328,"column_start":5,"column_end":63}},{"value":"/         match stream.try_read_vectored(&mut bufs) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604257,"byte_end":10604312,"line_start":329,"line_end":329,"column_start":5,"column_end":60}},{"value":"/             Ok(0) => break,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604317,"byte_end":10604348,"line_start":330,"line_end":330,"column_start":5,"column_end":36}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604353,"byte_end":10604379,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/                 println!(\"read {} bytes\", n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604384,"byte_end":10604433,"line_start":332,"line_end":332,"column_start":5,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604438,"byte_end":10604455,"line_start":333,"line_end":333,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604460,"byte_end":10604532,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604537,"byte_end":10604566,"line_start":335,"line_end":335,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604571,"byte_end":10604588,"line_start":336,"line_end":336,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604593,"byte_end":10604620,"line_start":337,"line_end":337,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604625,"byte_end":10604666,"line_start":338,"line_end":338,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604671,"byte_end":10604688,"line_start":339,"line_end":339,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604693,"byte_end":10604706,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604711,"byte_end":10604720,"line_start":341,"line_end":341,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604725,"byte_end":10604728,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604733,"byte_end":10604747,"line_start":343,"line_end":343,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604752,"byte_end":10604757,"line_start":344,"line_end":344,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10604762,"byte_end":10604769,"line_start":345,"line_end":345,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3711},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10607496,"byte_end":10607508,"line_start":412,"line_end":412,"column_start":16,"column_end":28},"name":"try_read_buf","qualname":"<UnixStream>::try_read_buf","value":"pub fn try_read_buf<B: BufMut>(&Self, &mut B) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from the stream into the provided buffer, advancing the\n buffer's internal cursor, returning how many bytes were read.","sig":null,"attributes":[{"value":"cfg(feature = \"io-util\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":20649,"byte_end":20676,"line_start":130,"line_end":130,"column_start":13,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3594},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609493,"byte_end":10609501,"line_start":474,"line_end":474,"column_start":18,"column_end":26},"name":"writable","qualname":"<UnixStream>::writable","value":"pub async fn writable<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for the socket to become writable.","sig":null,"attributes":[{"value":"/ Wait for the socket to become writable.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608147,"byte_end":10608190,"line_start":433,"line_end":433,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608195,"byte_end":10608198,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to `ready(Interest::WRITABLE)` and is usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608203,"byte_end":10608280,"line_start":435,"line_end":435,"column_start":5,"column_end":82}},{"value":"/ paired with `try_write()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608285,"byte_end":10608315,"line_start":436,"line_end":436,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608320,"byte_end":10608323,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608328,"byte_end":10608342,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608347,"byte_end":10608350,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608355,"byte_end":10608368,"line_start":440,"line_end":440,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608373,"byte_end":10608404,"line_start":441,"line_end":441,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608409,"byte_end":10608435,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608440,"byte_end":10608456,"line_start":443,"line_end":443,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608461,"byte_end":10608464,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608469,"byte_end":10608487,"line_start":445,"line_end":445,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608492,"byte_end":10608543,"line_start":446,"line_end":446,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608548,"byte_end":10608576,"line_start":447,"line_end":447,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608581,"byte_end":10608628,"line_start":448,"line_end":448,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608633,"byte_end":10608686,"line_start":449,"line_end":449,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608691,"byte_end":10608750,"line_start":450,"line_end":450,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608755,"byte_end":10608758,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608763,"byte_end":10608777,"line_start":452,"line_end":452,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608782,"byte_end":10608831,"line_start":453,"line_end":453,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608836,"byte_end":10608873,"line_start":454,"line_end":454,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608878,"byte_end":10608881,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608886,"byte_end":10608957,"line_start":456,"line_end":456,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10608962,"byte_end":10609020,"line_start":457,"line_end":457,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609025,"byte_end":10609077,"line_start":458,"line_end":458,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609082,"byte_end":10609108,"line_start":459,"line_end":459,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609113,"byte_end":10609139,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609144,"byte_end":10609161,"line_start":461,"line_end":461,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609166,"byte_end":10609238,"line_start":462,"line_end":462,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609243,"byte_end":10609272,"line_start":463,"line_end":463,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609277,"byte_end":10609294,"line_start":464,"line_end":464,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609299,"byte_end":10609326,"line_start":465,"line_end":465,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609331,"byte_end":10609372,"line_start":466,"line_end":466,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609377,"byte_end":10609394,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609399,"byte_end":10609412,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609417,"byte_end":10609426,"line_start":469,"line_end":469,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609431,"byte_end":10609434,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609439,"byte_end":10609453,"line_start":471,"line_end":471,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609458,"byte_end":10609463,"line_start":472,"line_end":472,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609468,"byte_end":10609475,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610866,"byte_end":10610882,"line_start":508,"line_end":508,"column_start":12,"column_end":28},"name":"poll_write_ready","qualname":"<UnixStream>::poll_write_ready","value":"pub fn poll_write_ready(&Self, &mut Context) -> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Polls for write readiness.","sig":null,"attributes":[{"value":"/ Polls for write readiness.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609602,"byte_end":10609632,"line_start":479,"line_end":479,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609637,"byte_end":10609640,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ If the unix stream is not currently ready for writing, this method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609645,"byte_end":10609720,"line_start":481,"line_end":481,"column_start":5,"column_end":80}},{"value":"/ store a clone of the `Waker` from the provided `Context`. When the unix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609725,"byte_end":10609800,"line_start":482,"line_end":482,"column_start":5,"column_end":80}},{"value":"/ stream becomes ready for writing, `Waker::wake` will be called on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609805,"byte_end":10609878,"line_start":483,"line_end":483,"column_start":5,"column_end":78}},{"value":"/ waker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609883,"byte_end":10609893,"line_start":484,"line_end":484,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609898,"byte_end":10609901,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to `poll_write_ready` or `poll_write`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609906,"byte_end":10609981,"line_start":486,"line_end":486,"column_start":5,"column_end":80}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10609986,"byte_end":10610054,"line_start":487,"line_end":487,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup. (However, `poll_read_ready` retains a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610059,"byte_end":10610131,"line_start":488,"line_end":488,"column_start":5,"column_end":77}},{"value":"/ second, independent waker.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610136,"byte_end":10610167,"line_start":489,"line_end":489,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610172,"byte_end":10610175,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ This function is intended for cases where creating and pinning a future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610180,"byte_end":10610255,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ via [`writable`] is not feasible. Where possible, using [`writable`] is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610260,"byte_end":10610335,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ preferred, as this supports polling from multiple tasks at once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610340,"byte_end":10610408,"line_start":493,"line_end":493,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610413,"byte_end":10610416,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610421,"byte_end":10610439,"line_start":495,"line_end":495,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610444,"byte_end":10610447,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610452,"byte_end":10610477,"line_start":497,"line_end":497,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610482,"byte_end":10610485,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ * `Poll::Pending` if the unix stream is not ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610490,"byte_end":10610556,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/ * `Poll::Ready(Ok(()))` if the unix stream is ready for writing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610561,"byte_end":10610629,"line_start":500,"line_end":500,"column_start":5,"column_end":73}},{"value":"/ * `Poll::Ready(Err(e))` if an error is encountered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610634,"byte_end":10610689,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610694,"byte_end":10610697,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610702,"byte_end":10610714,"line_start":503,"line_end":503,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610719,"byte_end":10610722,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ This function may encounter any standard I/O error except `WouldBlock`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610727,"byte_end":10610802,"line_start":505,"line_end":505,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610807,"byte_end":10610810,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ [`writable`]: method@Self::writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10610815,"byte_end":10610854,"line_start":507,"line_end":507,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3599},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612716,"byte_end":10612725,"line_start":562,"line_end":562,"column_start":12,"column_end":21},"name":"try_write","qualname":"<UnixStream>::try_write","value":"pub fn try_write(&Self, &[u8]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write a buffer to the stream, returning how many bytes were\n written.","sig":null,"attributes":[{"value":"/ Try to write a buffer to the stream, returning how many bytes were","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611016,"byte_end":10611086,"line_start":512,"line_end":512,"column_start":5,"column_end":75}},{"value":"/ written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611091,"byte_end":10611103,"line_start":513,"line_end":513,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611108,"byte_end":10611111,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ The function will attempt to write the entire contents of `buf`, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611116,"byte_end":10611188,"line_start":515,"line_end":515,"column_start":5,"column_end":77}},{"value":"/ only part of the buffer may be written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611193,"byte_end":10611236,"line_start":516,"line_end":516,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611241,"byte_end":10611244,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611249,"byte_end":10611303,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611308,"byte_end":10611311,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611316,"byte_end":10611328,"line_start":520,"line_end":520,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611333,"byte_end":10611336,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611341,"byte_end":10611415,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611420,"byte_end":10611490,"line_start":523,"line_end":523,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611495,"byte_end":10611544,"line_start":524,"line_end":524,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611549,"byte_end":10611552,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611557,"byte_end":10611571,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611576,"byte_end":10611579,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611584,"byte_end":10611597,"line_start":528,"line_end":528,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611602,"byte_end":10611633,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611638,"byte_end":10611664,"line_start":530,"line_end":530,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611669,"byte_end":10611685,"line_start":531,"line_end":531,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611690,"byte_end":10611693,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611698,"byte_end":10611716,"line_start":533,"line_end":533,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611721,"byte_end":10611772,"line_start":534,"line_end":534,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611777,"byte_end":10611805,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611810,"byte_end":10611857,"line_start":536,"line_end":536,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611862,"byte_end":10611915,"line_start":537,"line_end":537,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611920,"byte_end":10611979,"line_start":538,"line_end":538,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611984,"byte_end":10611987,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10611992,"byte_end":10612006,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612011,"byte_end":10612060,"line_start":541,"line_end":541,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612065,"byte_end":10612102,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612107,"byte_end":10612110,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612115,"byte_end":10612186,"line_start":544,"line_end":544,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612191,"byte_end":10612249,"line_start":545,"line_end":545,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write(b\"hello world\") {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612254,"byte_end":10612306,"line_start":546,"line_end":546,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612311,"byte_end":10612337,"line_start":547,"line_end":547,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612342,"byte_end":10612368,"line_start":548,"line_end":548,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612373,"byte_end":10612390,"line_start":549,"line_end":549,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612395,"byte_end":10612467,"line_start":550,"line_end":550,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612472,"byte_end":10612501,"line_start":551,"line_end":551,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612506,"byte_end":10612523,"line_start":552,"line_end":552,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612528,"byte_end":10612555,"line_start":553,"line_end":553,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612560,"byte_end":10612601,"line_start":554,"line_end":554,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612606,"byte_end":10612623,"line_start":555,"line_end":555,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612628,"byte_end":10612641,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612646,"byte_end":10612655,"line_start":557,"line_end":557,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612660,"byte_end":10612663,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612668,"byte_end":10612682,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612687,"byte_end":10612692,"line_start":560,"line_end":560,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612697,"byte_end":10612704,"line_start":561,"line_end":561,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3601},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614862,"byte_end":10614880,"line_start":624,"line_end":624,"column_start":12,"column_end":30},"name":"try_write_vectored","qualname":"<UnixStream>::try_write_vectored","value":"pub fn try_write_vectored(&Self, &[io::IoSlice]) -> io::Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to write several buffers to the stream, returning how many bytes\n were written.","sig":null,"attributes":[{"value":"/ Try to write several buffers to the stream, returning how many bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612890,"byte_end":10612962,"line_start":568,"line_end":568,"column_start":5,"column_end":77}},{"value":"/ were written.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612967,"byte_end":10612984,"line_start":569,"line_end":569,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612989,"byte_end":10612992,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ Data is written from each buffer in order, with the final buffer read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10612997,"byte_end":10613070,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ from possible being only partially consumed. This method behaves","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613075,"byte_end":10613143,"line_start":572,"line_end":572,"column_start":5,"column_end":73}},{"value":"/ equivalently to a single call to [`try_write()`] with concatenated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613148,"byte_end":10613218,"line_start":573,"line_end":573,"column_start":5,"column_end":75}},{"value":"/ buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613223,"byte_end":10613235,"line_start":574,"line_end":574,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613240,"byte_end":10613243,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with `writable()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613248,"byte_end":10613302,"line_start":576,"line_end":576,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613307,"byte_end":10613310,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ [`try_write()`]: UnixStream::try_write()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613315,"byte_end":10613359,"line_start":578,"line_end":578,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613364,"byte_end":10613367,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613372,"byte_end":10613384,"line_start":580,"line_end":580,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613389,"byte_end":10613392,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ If data is successfully written, `Ok(n)` is returned, where `n` is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613397,"byte_end":10613471,"line_start":582,"line_end":582,"column_start":5,"column_end":79}},{"value":"/ number of bytes written. If the stream is not ready to write data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613476,"byte_end":10613546,"line_start":583,"line_end":583,"column_start":5,"column_end":75}},{"value":"/ `Err(io::ErrorKind::WouldBlock)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613551,"byte_end":10613600,"line_start":584,"line_end":584,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613605,"byte_end":10613608,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613613,"byte_end":10613627,"line_start":586,"line_end":586,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613632,"byte_end":10613635,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613640,"byte_end":10613653,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/ use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613658,"byte_end":10613689,"line_start":589,"line_end":589,"column_start":5,"column_end":36}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613694,"byte_end":10613720,"line_start":590,"line_end":590,"column_start":5,"column_end":31}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613725,"byte_end":10613741,"line_start":591,"line_end":591,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613746,"byte_end":10613749,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613754,"byte_end":10613772,"line_start":593,"line_end":593,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613777,"byte_end":10613828,"line_start":594,"line_end":594,"column_start":5,"column_end":56}},{"value":"/     // Connect to a peer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613833,"byte_end":10613861,"line_start":595,"line_end":595,"column_start":5,"column_end":33}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613866,"byte_end":10613913,"line_start":596,"line_end":596,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613918,"byte_end":10613971,"line_start":597,"line_end":597,"column_start":5,"column_end":58}},{"value":"/     let stream = UnixStream::connect(bind_path).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10613976,"byte_end":10614035,"line_start":598,"line_end":598,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614040,"byte_end":10614043,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/     let bufs = [io::IoSlice::new(b\"hello \"), io::IoSlice::new(b\"world\")];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614048,"byte_end":10614125,"line_start":600,"line_end":600,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614130,"byte_end":10614133,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614138,"byte_end":10614152,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/         // Wait for the socket to be writable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614157,"byte_end":10614206,"line_start":603,"line_end":603,"column_start":5,"column_end":54}},{"value":"/         stream.writable().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614211,"byte_end":10614248,"line_start":604,"line_end":604,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614253,"byte_end":10614256,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/         // Try to write data, this may still fail with `WouldBlock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614261,"byte_end":10614332,"line_start":606,"line_end":606,"column_start":5,"column_end":76}},{"value":"/         // if the readiness event is a false positive.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614337,"byte_end":10614395,"line_start":607,"line_end":607,"column_start":5,"column_end":63}},{"value":"/         match stream.try_write_vectored(&bufs) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614400,"byte_end":10614452,"line_start":608,"line_end":608,"column_start":5,"column_end":57}},{"value":"/             Ok(n) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614457,"byte_end":10614483,"line_start":609,"line_end":609,"column_start":5,"column_end":31}},{"value":"/                 break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614488,"byte_end":10614514,"line_start":610,"line_end":610,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614519,"byte_end":10614536,"line_start":611,"line_end":611,"column_start":5,"column_end":22}},{"value":"/             Err(ref e) if e.kind() == io::ErrorKind::WouldBlock => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614541,"byte_end":10614613,"line_start":612,"line_end":612,"column_start":5,"column_end":77}},{"value":"/                 continue;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614618,"byte_end":10614647,"line_start":613,"line_end":613,"column_start":5,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614652,"byte_end":10614669,"line_start":614,"line_end":614,"column_start":5,"column_end":22}},{"value":"/             Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614674,"byte_end":10614701,"line_start":615,"line_end":615,"column_start":5,"column_end":32}},{"value":"/                 return Err(e.into());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614706,"byte_end":10614747,"line_start":616,"line_end":616,"column_start":5,"column_end":46}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614752,"byte_end":10614769,"line_start":617,"line_end":617,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614774,"byte_end":10614787,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614792,"byte_end":10614801,"line_start":619,"line_end":619,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614806,"byte_end":10614809,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614814,"byte_end":10614828,"line_start":621,"line_end":621,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614833,"byte_end":10614838,"line_start":622,"line_end":622,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10614843,"byte_end":10614850,"line_start":623,"line_end":623,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615759,"byte_end":10615767,"line_start":644,"line_end":644,"column_start":12,"column_end":20},"name":"from_std","qualname":"<UnixStream>::from_std","value":"pub fn from_std(net::UnixStream) -> io::Result<UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","sig":null,"attributes":[{"value":"/ Creates new `UnixStream` from a `std::os::unix::net::UnixStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615067,"byte_end":10615136,"line_start":630,"line_end":630,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615141,"byte_end":10615144,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This function is intended to be used to wrap a UnixStream from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615149,"byte_end":10615219,"line_start":632,"line_end":632,"column_start":5,"column_end":75}},{"value":"/ standard library in the Tokio equivalent. The conversion assumes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615224,"byte_end":10615292,"line_start":633,"line_end":633,"column_start":5,"column_end":73}},{"value":"/ nothing about the underlying stream; it is left up to the user to set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615297,"byte_end":10615370,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ it in non-blocking mode.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615375,"byte_end":10615403,"line_start":635,"line_end":635,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615408,"byte_end":10615411,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615416,"byte_end":10615428,"line_start":637,"line_end":637,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615433,"byte_end":10615436,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ This function panics if thread-local runtime is not set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615441,"byte_end":10615501,"line_start":639,"line_end":639,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615506,"byte_end":10615509,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ The runtime is usually set implicitly when this function is called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615514,"byte_end":10615584,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ from a future driven by a tokio runtime, otherwise runtime can be set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615589,"byte_end":10615662,"line_start":642,"line_end":642,"column_start":5,"column_end":78}},{"value":"/ explicitly with [`Runtime::enter`](crate::runtime::Runtime::enter) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615667,"byte_end":10615747,"line_start":643,"line_end":643,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617577,"byte_end":10617585,"line_start":689,"line_end":689,"column_start":12,"column_end":20},"name":"into_std","qualname":"<UnixStream>::into_std","value":"pub fn into_std(Self) -> io::Result<std::os::unix::net::UnixStream>","parent":null,"children":[],"decl_id":null,"docs":" Turn a [`tokio::net::UnixStream`] into a [`std::os::unix::net::UnixStream`].","sig":null,"attributes":[{"value":"/ Turn a [`tokio::net::UnixStream`] into a [`std::os::unix::net::UnixStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10615968,"byte_end":10616048,"line_start":651,"line_end":651,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616053,"byte_end":10616056,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The returned [`std::os::unix::net::UnixStream`] will have nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616061,"byte_end":10616134,"line_start":653,"line_end":653,"column_start":5,"column_end":78}},{"value":"/ mode set as `true`.  Use [`set_nonblocking`] to change the blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616139,"byte_end":10616210,"line_start":654,"line_end":654,"column_start":5,"column_end":76}},{"value":"/ mode if needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616215,"byte_end":10616234,"line_start":655,"line_end":655,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616239,"byte_end":10616242,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616247,"byte_end":10616261,"line_start":657,"line_end":657,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616266,"byte_end":10616269,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616274,"byte_end":10616281,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616286,"byte_end":10616312,"line_start":660,"line_end":660,"column_start":5,"column_end":31}},{"value":"/ use std::io::Read;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616317,"byte_end":10616339,"line_start":661,"line_end":661,"column_start":5,"column_end":27}},{"value":"/ use tokio::net::UnixListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616344,"byte_end":10616377,"line_start":662,"line_end":662,"column_start":5,"column_end":38}},{"value":"/ # use tokio::net::UnixStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616382,"byte_end":10616415,"line_start":663,"line_end":663,"column_start":5,"column_end":38}},{"value":"/ # use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616420,"byte_end":10616455,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616460,"byte_end":10616463,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616468,"byte_end":10616486,"line_start":666,"line_end":666,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616491,"byte_end":10616542,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/     let dir = tempfile::tempdir().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616547,"byte_end":10616594,"line_start":668,"line_end":668,"column_start":5,"column_end":52}},{"value":"/     let bind_path = dir.path().join(\"bind_path\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616599,"byte_end":10616652,"line_start":669,"line_end":669,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616657,"byte_end":10616660,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/     let mut data = [0u8; 12];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616665,"byte_end":10616698,"line_start":671,"line_end":671,"column_start":5,"column_end":38}},{"value":"/     let listener = UnixListener::bind(&bind_path)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616703,"byte_end":10616758,"line_start":672,"line_end":672,"column_start":5,"column_end":60}},{"value":"/ #   let handle = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616763,"byte_end":10616804,"line_start":673,"line_end":673,"column_start":5,"column_end":46}},{"value":"/ #       let mut stream = UnixStream::connect(bind_path).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616809,"byte_end":10616884,"line_start":674,"line_end":674,"column_start":5,"column_end":80}},{"value":"/ #       stream.write(b\"Hello world!\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616889,"byte_end":10616946,"line_start":675,"line_end":675,"column_start":5,"column_end":62}},{"value":"/ #   });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616951,"byte_end":10616962,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/     let (tokio_unix_stream, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10616967,"byte_end":10617029,"line_start":677,"line_end":677,"column_start":5,"column_end":67}},{"value":"/     let mut std_unix_stream = tokio_unix_stream.into_std()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617034,"byte_end":10617098,"line_start":678,"line_end":678,"column_start":5,"column_end":69}},{"value":"/ #   handle.await.expect(\"The task being joined has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617103,"byte_end":10617169,"line_start":679,"line_end":679,"column_start":5,"column_end":71}},{"value":"/     std_unix_stream.set_nonblocking(false)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617174,"byte_end":10617222,"line_start":680,"line_end":680,"column_start":5,"column_end":53}},{"value":"/     std_unix_stream.read_exact(&mut data)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617227,"byte_end":10617274,"line_start":681,"line_end":681,"column_start":5,"column_end":52}},{"value":"/ #   assert_eq!(b\"Hello world!\", &data);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617279,"byte_end":10617322,"line_start":682,"line_end":682,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617327,"byte_end":10617341,"line_start":683,"line_end":683,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617346,"byte_end":10617351,"line_start":684,"line_end":684,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617356,"byte_end":10617363,"line_start":685,"line_end":685,"column_start":5,"column_end":12}},{"value":"/ [`tokio::net::UnixStream`]: UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617368,"byte_end":10617410,"line_start":686,"line_end":686,"column_start":5,"column_end":47}},{"value":"/ [`std::os::unix::net::UnixStream`]: std::os::unix::net::UnixStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617415,"byte_end":10617485,"line_start":687,"line_end":687,"column_start":5,"column_end":75}},{"value":"/ [`set_nonblocking`]: fn@std::os::unix::net::UnixStream::set_nonblocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617490,"byte_end":10617565,"line_start":688,"line_end":688,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3607},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618103,"byte_end":10618107,"line_start":701,"line_end":701,"column_start":12,"column_end":16},"name":"pair","qualname":"<UnixStream>::pair","value":"pub fn pair() -> io::Result<(UnixStream, UnixStream)>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unnamed pair of connected sockets.","sig":null,"attributes":[{"value":"/ Creates an unnamed pair of connected sockets.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617823,"byte_end":10617872,"line_start":696,"line_end":696,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617877,"byte_end":10617880,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ This function will create a pair of interconnected Unix sockets for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617885,"byte_end":10617956,"line_start":698,"line_end":698,"column_start":5,"column_end":76}},{"value":"/ communicating back and forth between one another. Each socket will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10617961,"byte_end":10618031,"line_start":699,"line_end":699,"column_start":5,"column_end":75}},{"value":"/ be associated with the default event loop's handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618036,"byte_end":10618091,"line_start":700,"line_end":700,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618550,"byte_end":10618560,"line_start":715,"line_end":715,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<UnixStream>::local_addr","value":"pub fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the local half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the local half of this connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618470,"byte_end":10618538,"line_start":714,"line_end":714,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3610},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618733,"byte_end":10618742,"line_start":720,"line_end":720,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<UnixStream>::peer_addr","value":"pub fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the socket address of the remote half of this connection.\n","sig":null,"attributes":[{"value":"/ Returns the socket address of the remote half of this connection.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618652,"byte_end":10618721,"line_start":719,"line_end":719,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618927,"byte_end":10618936,"line_start":725,"line_end":725,"column_start":12,"column_end":21},"name":"peer_cred","qualname":"<UnixStream>::peer_cred","value":"pub fn peer_cred(&Self) -> io::Result<UCred>","parent":null,"children":[],"decl_id":null,"docs":" Returns effective credentials of the process which called `connect` or `pair`.\n","sig":null,"attributes":[{"value":"/ Returns effective credentials of the process which called `connect` or `pair`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10618833,"byte_end":10618915,"line_start":724,"line_end":724,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3612},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619072,"byte_end":10619082,"line_start":730,"line_end":730,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UnixStream>::take_error","value":"pub fn take_error(&Self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the value of the `SO_ERROR` option.\n","sig":null,"attributes":[{"value":"/ Returns the value of the `SO_ERROR` option.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619013,"byte_end":10619060,"line_start":729,"line_end":729,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3614},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620058,"byte_end":10620063,"line_start":753,"line_end":753,"column_start":12,"column_end":17},"name":"split","qualname":"<UnixStream>::split","value":"pub fn split<'a>(&'a mut Self) -> (ReadHalf, WriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Split a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619686,"byte_end":10619722,"line_start":745,"line_end":745,"column_start":5,"column_end":41}},{"value":"/ Split a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619727,"byte_end":10619804,"line_start":746,"line_end":746,"column_start":5,"column_end":82}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619809,"byte_end":10619855,"line_start":747,"line_end":747,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619860,"byte_end":10619863,"line_start":748,"line_end":748,"column_start":5,"column_end":8}},{"value":"/ This method is more efficient than [`into_split`], but the halves cannot be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619868,"byte_end":10619947,"line_start":749,"line_end":749,"column_start":5,"column_end":84}},{"value":"/ moved into independently spawned tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10619952,"byte_end":10619995,"line_start":750,"line_end":750,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620000,"byte_end":10620003,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ [`into_split`]: Self::into_split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620008,"byte_end":10620046,"line_start":752,"line_end":752,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3616},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620705,"byte_end":10620715,"line_start":768,"line_end":768,"column_start":12,"column_end":22},"name":"into_split","qualname":"<UnixStream>::into_split","value":"pub fn into_split(Self) -> (OwnedReadHalf, OwnedWriteHalf)","parent":null,"children":[],"decl_id":null,"docs":" Splits a `UnixStream` into a read half and a write half, which can be used\n to read and write the stream concurrently.","sig":null,"attributes":[{"value":"/ Splits a `UnixStream` into a read half and a write half, which can be used","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620148,"byte_end":10620226,"line_start":757,"line_end":757,"column_start":5,"column_end":83}},{"value":"/ to read and write the stream concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620231,"byte_end":10620277,"line_start":758,"line_end":758,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620282,"byte_end":10620285,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ Unlike [`split`], the owned halves can be moved to separate tasks, however","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620290,"byte_end":10620368,"line_start":760,"line_end":760,"column_start":5,"column_end":83}},{"value":"/ this comes at the cost of a heap allocation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620373,"byte_end":10620421,"line_start":761,"line_end":761,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620426,"byte_end":10620429,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ **Note:** Dropping the write half will shut down the write half of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620434,"byte_end":10620508,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ stream. This is equivalent to calling [`shutdown()`] on the `UnixStream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620513,"byte_end":10620590,"line_start":764,"line_end":764,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620595,"byte_end":10620598,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ [`split`]: Self::split()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620603,"byte_end":10620631,"line_start":766,"line_end":766,"column_start":5,"column_end":33}},{"value":"/ [`shutdown()`]: fn@crate::io::AsyncWriteExt::shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620636,"byte_end":10620693,"line_start":767,"line_end":767,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":3715},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10623754,"byte_end":10623759,"line_start":5,"line_end":5,"column_start":12,"column_end":17},"name":"UCred","qualname":"::net::unix::ucred::UCred","value":"UCred {  }","parent":null,"children":[{"krate":0,"index":3716},{"krate":0,"index":3717},{"krate":0,"index":3718}],"decl_id":null,"docs":" Credentials of a process\n","sig":null,"attributes":[{"value":"/ Credentials of a process","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10623663,"byte_end":10623691,"line_start":3,"line_end":3,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624003,"byte_end":10624006,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"uid","qualname":"<UCred>::uid","value":"pub fn uid(&Self) -> uid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets UID (user ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets UID (user ID) of the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10623953,"byte_end":10623991,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624104,"byte_end":10624107,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"gid","qualname":"<UCred>::gid","value":"pub fn gid(&Self) -> gid_t","parent":null,"children":[],"decl_id":null,"docs":" Gets GID (group ID) of the process.\n","sig":null,"attributes":[{"value":"/ Gets GID (group ID) of the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624053,"byte_end":10624092,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624361,"byte_end":10624364,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"pid","qualname":"<UCred>::pid","value":"pub fn pid(&Self) -> Option<pid_t>","parent":null,"children":[],"decl_id":null,"docs":" Gets PID (process ID) of the process.","sig":null,"attributes":[{"value":"/ Gets PID (process ID) of the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624154,"byte_end":10624195,"line_start":25,"line_end":25,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624200,"byte_end":10624203,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is only implemented under Linux, Android, iOS, macOS, Solaris and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624208,"byte_end":10624282,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ Illumos. On other plaforms this will always return `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10624287,"byte_end":10624349,"line_start":28,"line_end":28,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":585},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":103598,"byte_end":103604,"line_start":51,"line_end":51,"column_start":10,"column_end":16},"name":"Unpark","qualname":"::park::Park::Unpark","value":"type Unpark: Unpark;","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Unpark handle type for the `Park` implementation.\n","sig":null,"attributes":[{"value":"/ Unpark handle type for the `Park` implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":103535,"byte_end":103588,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":586},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":103657,"byte_end":103662,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::park::Park::Error","value":"type Error: Debug;","parent":{"krate":0,"index":584},"children":[],"decl_id":null,"docs":" Error returned by `park`\n","sig":null,"attributes":[{"value":"/ Error returned by `park`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":103619,"byte_end":103647,"line_start":53,"line_end":53,"column_start":5,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":3806},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"runtime","qualname":"::runtime","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","parent":null,"children":[{"krate":0,"index":3807},{"krate":0,"index":3822},{"krate":0,"index":4427},{"krate":0,"index":4560},{"krate":0,"index":4561},{"krate":0,"index":4677},{"krate":0,"index":4678},{"krate":0,"index":4679},{"krate":0,"index":4737},{"krate":0,"index":4738},{"krate":0,"index":4748},{"krate":0,"index":4773},{"krate":0,"index":4774},{"krate":0,"index":4809},{"krate":0,"index":4810},{"krate":0,"index":4811},{"krate":0,"index":4812},{"krate":0,"index":4815},{"krate":0,"index":4922},{"krate":0,"index":4974},{"krate":0,"index":4975},{"krate":0,"index":5075},{"krate":0,"index":5294},{"krate":0,"index":5310},{"krate":0,"index":5311},{"krate":0,"index":5312},{"krate":0,"index":5327},{"krate":0,"index":5331},{"krate":0,"index":5333},{"krate":0,"index":5340},{"krate":0,"index":5313},{"krate":0,"index":5314}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"/ The Tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631281,"byte_end":10631303,"line_start":1,"line_end":1,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631304,"byte_end":10631307,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Unlike other Rust programs, asynchronous applications require runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631308,"byte_end":10631381,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ support. In particular, the following runtime services are necessary:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631382,"byte_end":10631455,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631456,"byte_end":10631459,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * An **I/O event loop**, called the driver, which drives I/O resources and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631460,"byte_end":10631538,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/   dispatches I/O events to tasks that depend on them.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631539,"byte_end":10631596,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ * A **scheduler** to execute [tasks] that use these I/O resources.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631597,"byte_end":10631667,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/ * A **timer** for scheduling work to run after a set period of time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631668,"byte_end":10631740,"line_start":9,"line_end":9,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631741,"byte_end":10631744,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Tokio's [`Runtime`] bundles all of these services as a single type, allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631745,"byte_end":10631825,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ them to be started, shut down, and configured together. However, often it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631826,"byte_end":10631906,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ not required to configure a [`Runtime`] manually, and a user may just use the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631907,"byte_end":10631988,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/ [`tokio::main`] attribute macro, which creates a [`Runtime`] under the hood.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10631989,"byte_end":10632069,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632070,"byte_end":10632073,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632074,"byte_end":10632085,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632086,"byte_end":10632089,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ When no fine tuning is required, the [`tokio::main`] attribute macro can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632090,"byte_end":10632169,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ used.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632170,"byte_end":10632179,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632180,"byte_end":10632183,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632184,"byte_end":10632197,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632198,"byte_end":10632230,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632231,"byte_end":10632280,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632281,"byte_end":10632284,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632285,"byte_end":10632303,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632304,"byte_end":10632367,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/     let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632368,"byte_end":10632434,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632435,"byte_end":10632438,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632439,"byte_end":10632453,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/         let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632454,"byte_end":10632513,"line_start":30,"line_end":30,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632514,"byte_end":10632517,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632518,"byte_end":10632555,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/             let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632556,"byte_end":10632596,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632597,"byte_end":10632600,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/             // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632601,"byte_end":10632681,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/             loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632682,"byte_end":10632704,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/                 let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632705,"byte_end":10632768,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/                     // socket closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632769,"byte_end":10632809,"line_start":38,"line_end":38,"column_start":1,"column_end":41}},{"value":"/                     Ok(n) if n == 0 => return,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632810,"byte_end":10632860,"line_start":39,"line_end":39,"column_start":1,"column_end":51}},{"value":"/                     Ok(n) => n,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632861,"byte_end":10632896,"line_start":40,"line_end":40,"column_start":1,"column_end":36}},{"value":"/                     Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632897,"byte_end":10632932,"line_start":41,"line_end":41,"column_start":1,"column_end":36}},{"value":"/                         println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10632933,"byte_end":10633015,"line_start":42,"line_end":42,"column_start":1,"column_end":83}},{"value":"/                         return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633016,"byte_end":10633051,"line_start":43,"line_end":43,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633052,"byte_end":10633077,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/                 };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633078,"byte_end":10633100,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633101,"byte_end":10633104,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/                 // Write the data back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633105,"byte_end":10633147,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/                 if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633148,"byte_end":10633220,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/                     println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633221,"byte_end":10633298,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/                     return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633299,"byte_end":10633330,"line_start":50,"line_end":50,"column_start":1,"column_end":32}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633331,"byte_end":10633352,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633353,"byte_end":10633370,"line_start":52,"line_end":52,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633371,"byte_end":10633386,"line_start":53,"line_end":53,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633387,"byte_end":10633396,"line_start":54,"line_end":54,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633397,"byte_end":10633402,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633403,"byte_end":10633410,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633411,"byte_end":10633414,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ From within the context of the runtime, additional tasks are spawned using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633415,"byte_end":10633493,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ the [`tokio::spawn`] function. Futures spawned using this function will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633494,"byte_end":10633572,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/ executed on the same thread pool used by the [`Runtime`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633573,"byte_end":10633634,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633635,"byte_end":10633638,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A [`Runtime`] instance can also be used directly.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633639,"byte_end":10633692,"line_start":62,"line_end":62,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633693,"byte_end":10633696,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633697,"byte_end":10633710,"line_start":64,"line_end":64,"column_start":1,"column_end":14}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633711,"byte_end":10633743,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ use tokio::io::{AsyncReadExt, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633744,"byte_end":10633793,"line_start":66,"line_end":66,"column_start":1,"column_end":50}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633794,"byte_end":10633826,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633827,"byte_end":10633830,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633831,"byte_end":10633888,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/     // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633889,"byte_end":10633918,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/     let rt  = Runtime::new()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633919,"byte_end":10633953,"line_start":71,"line_end":71,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633954,"byte_end":10633957,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/     // Spawn the root task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633958,"byte_end":10633988,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/     rt.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10633989,"byte_end":10634016,"line_start":74,"line_end":74,"column_start":1,"column_end":28}},{"value":"/         let listener = TcpListener::bind(\"127.0.0.1:8080\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634017,"byte_end":10634087,"line_start":75,"line_end":75,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634088,"byte_end":10634091,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634092,"byte_end":10634110,"line_start":77,"line_end":77,"column_start":1,"column_end":19}},{"value":"/             let (mut socket, _) = listener.accept().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634111,"byte_end":10634174,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634175,"byte_end":10634178,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634179,"byte_end":10634220,"line_start":80,"line_end":80,"column_start":1,"column_end":42}},{"value":"/                 let mut buf = [0; 1024];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634221,"byte_end":10634265,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634266,"byte_end":10634269,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/                 // In a loop, read data from the socket and write the data back.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634270,"byte_end":10634354,"line_start":83,"line_end":83,"column_start":1,"column_end":85}},{"value":"/                 loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634355,"byte_end":10634381,"line_start":84,"line_end":84,"column_start":1,"column_end":27}},{"value":"/                     let n = match socket.read(&mut buf).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634382,"byte_end":10634449,"line_start":85,"line_end":85,"column_start":1,"column_end":68}},{"value":"/                         // socket closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634450,"byte_end":10634494,"line_start":86,"line_end":86,"column_start":1,"column_end":45}},{"value":"/                         Ok(n) if n == 0 => return,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634495,"byte_end":10634549,"line_start":87,"line_end":87,"column_start":1,"column_end":55}},{"value":"/                         Ok(n) => n,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634550,"byte_end":10634589,"line_start":88,"line_end":88,"column_start":1,"column_end":40}},{"value":"/                         Err(e) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634590,"byte_end":10634629,"line_start":89,"line_end":89,"column_start":1,"column_end":40}},{"value":"/                             println!(\"failed to read from socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634630,"byte_end":10634716,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/                             return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634717,"byte_end":10634756,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/                         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634757,"byte_end":10634786,"line_start":92,"line_end":92,"column_start":1,"column_end":30}},{"value":"/                     };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634787,"byte_end":10634813,"line_start":93,"line_end":93,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634814,"byte_end":10634817,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/                     // Write the data back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634818,"byte_end":10634864,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/                     if let Err(e) = socket.write_all(&buf[0..n]).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634865,"byte_end":10634941,"line_start":96,"line_end":96,"column_start":1,"column_end":77}},{"value":"/                         println!(\"failed to write to socket; err = {:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10634942,"byte_end":10635023,"line_start":97,"line_end":97,"column_start":1,"column_end":82}},{"value":"/                         return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635024,"byte_end":10635059,"line_start":98,"line_end":98,"column_start":1,"column_end":36}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635060,"byte_end":10635085,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635086,"byte_end":10635107,"line_start":100,"line_end":100,"column_start":1,"column_end":22}},{"value":"/             });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635108,"byte_end":10635127,"line_start":101,"line_end":101,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635128,"byte_end":10635141,"line_start":102,"line_end":102,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635142,"byte_end":10635152,"line_start":103,"line_end":103,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635153,"byte_end":10635158,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635159,"byte_end":10635166,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635167,"byte_end":10635170,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ ## Runtime Configurations","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635171,"byte_end":10635200,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635201,"byte_end":10635204,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Tokio provides multiple task scheduling strategies, suitable for different","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635205,"byte_end":10635283,"line_start":109,"line_end":109,"column_start":1,"column_end":79}},{"value":"/ applications. The [runtime builder] or `#[tokio::main]` attribute may be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635284,"byte_end":10635360,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ used to select which scheduler to use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635361,"byte_end":10635403,"line_start":111,"line_end":111,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635404,"byte_end":10635407,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ #### Multi-Thread Scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635408,"byte_end":10635439,"line_start":113,"line_end":113,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635440,"byte_end":10635443,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ The multi-thread scheduler executes futures on a _thread pool_, using a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635444,"byte_end":10635519,"line_start":115,"line_end":115,"column_start":1,"column_end":76}},{"value":"/ work-stealing strategy. By default, it will start a worker thread for each","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635520,"byte_end":10635598,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/ CPU core available on the system. This tends to be the ideal configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635599,"byte_end":10635677,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ for most applications. The multi-thread scheduler requires the `rt-multi-thread`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635678,"byte_end":10635762,"line_start":118,"line_end":118,"column_start":1,"column_end":85}},{"value":"/ feature flag, and is selected by default:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635763,"byte_end":10635808,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635809,"byte_end":10635816,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635817,"byte_end":10635840,"line_start":121,"line_end":121,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635841,"byte_end":10635844,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635845,"byte_end":10635904,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/ let threaded_rt = runtime::Runtime::new()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635905,"byte_end":10635952,"line_start":124,"line_end":124,"column_start":1,"column_end":48}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635953,"byte_end":10635967,"line_start":125,"line_end":125,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635968,"byte_end":10635975,"line_start":126,"line_end":126,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635976,"byte_end":10635979,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ Most applications should use the multi-thread scheduler, except in some","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10635980,"byte_end":10636055,"line_start":128,"line_end":128,"column_start":1,"column_end":76}},{"value":"/ niche use-cases, such as when running only a single thread is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636056,"byte_end":10636131,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636132,"byte_end":10636135,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ #### Current-Thread Scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636136,"byte_end":10636169,"line_start":131,"line_end":131,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636170,"byte_end":10636173,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ The current-thread scheduler provides a _single-threaded_ future executor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636174,"byte_end":10636252,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ All tasks will be created and executed on the current thread. This requires","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636253,"byte_end":10636332,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ the `rt` feature flag.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636333,"byte_end":10636359,"line_start":135,"line_end":135,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636360,"byte_end":10636367,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636368,"byte_end":10636391,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636392,"byte_end":10636395,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ # fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636396,"byte_end":10636455,"line_start":139,"line_end":139,"column_start":1,"column_end":60}},{"value":"/ let basic_rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636456,"byte_end":10636513,"line_start":140,"line_end":140,"column_start":1,"column_end":58}},{"value":"/     .build()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636514,"byte_end":10636532,"line_start":141,"line_end":141,"column_start":1,"column_end":19}},{"value":"/ # Ok(()) }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636533,"byte_end":10636547,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636548,"byte_end":10636555,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636556,"byte_end":10636559,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #### Resource drivers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636560,"byte_end":10636585,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636586,"byte_end":10636589,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ When configuring a runtime by hand, no resource drivers are enabled by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636590,"byte_end":10636664,"line_start":147,"line_end":147,"column_start":1,"column_end":75}},{"value":"/ default. In this case, attempting to use networking types or time types will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636665,"byte_end":10636745,"line_start":148,"line_end":148,"column_start":1,"column_end":81}},{"value":"/ fail. In order to enable these types, the resource drivers must be enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636746,"byte_end":10636825,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ This is done with [`Builder::enable_io`] and [`Builder::enable_time`]. As a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636826,"byte_end":10636905,"line_start":150,"line_end":150,"column_start":1,"column_end":80}},{"value":"/ shorthand, [`Builder::enable_all`] enables both resource drivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636906,"byte_end":10636975,"line_start":151,"line_end":151,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636976,"byte_end":10636979,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ## Lifetime of spawned threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10636980,"byte_end":10637014,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637015,"byte_end":10637018,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The runtime may spawn threads depending on its configuration and usage. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637019,"byte_end":10637098,"line_start":155,"line_end":155,"column_start":1,"column_end":80}},{"value":"/ multi-thread scheduler spawns threads to schedule tasks and for `spawn_blocking`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637099,"byte_end":10637183,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ calls.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637184,"byte_end":10637194,"line_start":157,"line_end":157,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637195,"byte_end":10637198,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ While the `Runtime` is active, threads may shutdown after periods of being","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637199,"byte_end":10637277,"line_start":159,"line_end":159,"column_start":1,"column_end":79}},{"value":"/ idle. Once `Runtime` is dropped, all runtime threads are forcibly shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637278,"byte_end":10637357,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Any tasks that have not yet completed will be dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637358,"byte_end":10637416,"line_start":161,"line_end":161,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637417,"byte_end":10637420,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637421,"byte_end":10637445,"line_start":163,"line_end":163,"column_start":1,"column_end":25}},{"value":"/ [`Runtime`]: Runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637446,"byte_end":10637470,"line_start":164,"line_end":164,"column_start":1,"column_end":25}},{"value":"/ [`tokio::spawn`]: crate::spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637471,"byte_end":10637505,"line_start":165,"line_end":165,"column_start":1,"column_end":35}},{"value":"/ [`tokio::main`]: ../attr.main.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637506,"byte_end":10637544,"line_start":166,"line_end":166,"column_start":1,"column_end":39}},{"value":"/ [runtime builder]: crate::runtime::Builder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637545,"byte_end":10637591,"line_start":167,"line_end":167,"column_start":1,"column_end":47}},{"value":"/ [`Runtime::new`]: crate::runtime::Runtime::new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637592,"byte_end":10637642,"line_start":168,"line_end":168,"column_start":1,"column_end":51}},{"value":"/ [`Builder::basic_scheduler`]: crate::runtime::Builder::basic_scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637643,"byte_end":10637717,"line_start":169,"line_end":169,"column_start":1,"column_end":75}},{"value":"/ [`Builder::threaded_scheduler`]: crate::runtime::Builder::threaded_scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637718,"byte_end":10637798,"line_start":170,"line_end":170,"column_start":1,"column_end":81}},{"value":"/ [`Builder::enable_io`]: crate::runtime::Builder::enable_io","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637799,"byte_end":10637861,"line_start":171,"line_end":171,"column_start":1,"column_end":63}},{"value":"/ [`Builder::enable_time`]: crate::runtime::Builder::enable_time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637862,"byte_end":10637928,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ [`Builder::enable_all`]: crate::runtime::Builder::enable_all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10637929,"byte_end":10637993,"line_start":173,"line_end":173,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":4360},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673161,"byte_end":10673170,"line_start":8,"line_end":8,"column_start":16,"column_end":25},"name":"JoinError","qualname":"::runtime::task::error::JoinError","value":"JoinError {  }","parent":null,"children":[{"krate":0,"index":4361}],"decl_id":null,"docs":" Task failed to execute to completion.\n","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3935},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673659,"byte_end":10673671,"line_start":32,"line_end":32,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<JoinError>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task being cancelled\n","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task being cancelled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673579,"byte_end":10673647,"line_start":31,"line_end":31,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674125,"byte_end":10674133,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"is_panic","qualname":"<JoinError>::is_panic","value":"pub fn is_panic(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was caused by the task panicking","sig":null,"attributes":[{"value":"/ Returns true if the error was caused by the task panicking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673746,"byte_end":10673808,"line_start":36,"line_end":36,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673813,"byte_end":10673816,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673821,"byte_end":10673835,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673840,"byte_end":10673843,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673848,"byte_end":10673855,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use std::panic;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673860,"byte_end":10673879,"line_start":41,"line_end":41,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673884,"byte_end":10673887,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673892,"byte_end":10673910,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673915,"byte_end":10673936,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673941,"byte_end":10673979,"line_start":45,"line_end":45,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673984,"byte_end":10674011,"line_start":46,"line_end":46,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674016,"byte_end":10674046,"line_start":47,"line_end":47,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674051,"byte_end":10674054,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/     assert!(err.is_panic());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674059,"byte_end":10674091,"line_start":49,"line_end":49,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674096,"byte_end":10674101,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674106,"byte_end":10674113,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3937},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674988,"byte_end":10674998,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"into_panic","qualname":"<JoinError>::into_panic","value":"pub fn into_panic(Self) -> Box<Any + Send + 'static>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task panicked.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task panicked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674207,"byte_end":10674286,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674291,"byte_end":10674294,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674299,"byte_end":10674311,"line_start":58,"line_end":58,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674316,"byte_end":10674319,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ `into_panic()` panics if the `Error` does not represent the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674324,"byte_end":10674398,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ task terminating with a panic. Use `is_panic` to check the error reason","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674403,"byte_end":10674478,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ or `try_into_panic` for a variant that does not panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674483,"byte_end":10674541,"line_start":62,"line_end":62,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674546,"byte_end":10674549,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674554,"byte_end":10674568,"line_start":64,"line_end":64,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674573,"byte_end":10674576,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674581,"byte_end":10674600,"line_start":66,"line_end":66,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674605,"byte_end":10674624,"line_start":67,"line_end":67,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674629,"byte_end":10674632,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674637,"byte_end":10674655,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674660,"byte_end":10674681,"line_start":70,"line_end":70,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674686,"byte_end":10674724,"line_start":71,"line_end":71,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674729,"byte_end":10674756,"line_start":72,"line_end":72,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674761,"byte_end":10674791,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674796,"byte_end":10674799,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/     if err.is_panic() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674804,"byte_end":10674831,"line_start":75,"line_end":75,"column_start":5,"column_end":32}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674836,"byte_end":10674884,"line_start":76,"line_end":76,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(err.into_panic());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674889,"byte_end":10674940,"line_start":77,"line_end":77,"column_start":5,"column_end":56}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674945,"byte_end":10674954,"line_start":78,"line_end":78,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674959,"byte_end":10674964,"line_start":79,"line_end":79,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10674969,"byte_end":10674976,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675763,"byte_end":10675777,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"try_into_panic","qualname":"<JoinError>::try_into_panic","value":"pub fn try_into_panic(Self) -> Result<Box<Any + Send + 'static>, JoinError>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the join error, returning the object with which the task\n panicked if the task terminated due to a panic. Otherwise, `self` is\n returned.","sig":null,"attributes":[{"value":"/ Consumes the join error, returning the object with which the task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675139,"byte_end":10675208,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/ panicked if the task terminated due to a panic. Otherwise, `self` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675213,"byte_end":10675285,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675290,"byte_end":10675303,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675308,"byte_end":10675311,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675316,"byte_end":10675330,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675335,"byte_end":10675338,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675343,"byte_end":10675362,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ use std::panic;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675367,"byte_end":10675386,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675391,"byte_end":10675394,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675399,"byte_end":10675417,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675422,"byte_end":10675443,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/     let err = tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675448,"byte_end":10675486,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/         panic!(\"boom\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675491,"byte_end":10675518,"line_start":98,"line_end":98,"column_start":5,"column_end":32}},{"value":"/     }).await.unwrap_err();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675523,"byte_end":10675553,"line_start":99,"line_end":99,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675558,"byte_end":10675561,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/     if let Ok(reason) = err.try_into_panic() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675566,"byte_end":10675616,"line_start":101,"line_end":101,"column_start":5,"column_end":55}},{"value":"/         // Resume the panic on the main task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675621,"byte_end":10675669,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/         panic::resume_unwind(reason);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675674,"byte_end":10675715,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675720,"byte_end":10675729,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675734,"byte_end":10675739,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10675744,"byte_end":10675751,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4362},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695761,"byte_end":10695771,"line_start":144,"line_end":144,"column_start":16,"column_end":26},"name":"JoinHandle","qualname":"::runtime::task::join::JoinHandle","value":"JoinHandle {  }","parent":null,"children":[{"krate":0,"index":4364},{"krate":0,"index":4365}],"decl_id":null,"docs":" An owned permission to join on a task (await its termination).","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":4060},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697074,"byte_end":10697079,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"abort","qualname":"<JoinHandle<T>>::abort","value":"pub fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the task associated with the handle.","sig":null,"attributes":[{"value":"/ Abort the task associated with the handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696117,"byte_end":10696163,"line_start":161,"line_end":161,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696168,"byte_end":10696171,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Awaiting a cancelled task might complete as usual if the task was","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696176,"byte_end":10696245,"line_start":163,"line_end":163,"column_start":5,"column_end":74}},{"value":"/ already completed at the time it was cancelled, but most likely it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696250,"byte_end":10696320,"line_start":164,"line_end":164,"column_start":5,"column_end":75}},{"value":"/ will complete with a `Err(JoinError::Cancelled)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696325,"byte_end":10696378,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696383,"byte_end":10696386,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696391,"byte_end":10696402,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696407,"byte_end":10696427,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696432,"byte_end":10696435,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696440,"byte_end":10696458,"line_start":170,"line_end":170,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696463,"byte_end":10696484,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/    let mut handles = Vec::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696489,"byte_end":10696525,"line_start":172,"line_end":172,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696530,"byte_end":10696533,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696538,"byte_end":10696578,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696583,"byte_end":10696642,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/       true","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696647,"byte_end":10696661,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/    }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696666,"byte_end":10696677,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696682,"byte_end":10696685,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/    handles.push(tokio::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696690,"byte_end":10696730,"line_start":179,"line_end":179,"column_start":5,"column_end":45}},{"value":"/       time::sleep(time::Duration::from_secs(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696735,"byte_end":10696794,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/       false","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696799,"byte_end":10696814,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/    }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696819,"byte_end":10696830,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696835,"byte_end":10696838,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/    for handle in &handles {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696843,"byte_end":10696874,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/        handle.abort();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696879,"byte_end":10696905,"line_start":185,"line_end":185,"column_start":5,"column_end":31}},{"value":"/    }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696910,"byte_end":10696918,"line_start":186,"line_end":186,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696923,"byte_end":10696926,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/    for handle in handles {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696931,"byte_end":10696961,"line_start":188,"line_end":188,"column_start":5,"column_end":35}},{"value":"/        assert!(handle.await.unwrap_err().is_cancelled());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10696966,"byte_end":10697027,"line_start":189,"line_end":189,"column_start":5,"column_end":66}},{"value":"/    }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697032,"byte_end":10697040,"line_start":190,"line_end":190,"column_start":5,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697045,"byte_end":10697050,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697055,"byte_end":10697062,"line_start":192,"line_end":192,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4690},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754491,"byte_end":10754498,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::runtime::builder::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696},{"krate":0,"index":4697},{"krate":0,"index":4698},{"krate":0,"index":4699},{"krate":0,"index":4700},{"krate":0,"index":4701}],"decl_id":null,"docs":" Builds Tokio Runtime with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds Tokio Runtime with custom configuration values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753535,"byte_end":10753593,"line_start":8,"line_end":8,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753594,"byte_end":10753597,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753598,"byte_end":10753670,"line_start":10,"line_end":10,"column_start":1,"column_end":73}},{"value":"/ Runtime is constructed by calling [`build`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753671,"byte_end":10753719,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753720,"byte_end":10753723,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new_multi_thread`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753724,"byte_end":10753801,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ or [`Builder::new_current_thread`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753802,"byte_end":10753841,"line_start":14,"line_end":14,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753842,"byte_end":10753845,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753846,"byte_end":10753923,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ settings.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753924,"byte_end":10753937,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753938,"byte_end":10753941,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`build`]: method@Self::build","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753942,"byte_end":10753975,"line_start":19,"line_end":19,"column_start":1,"column_end":34}},{"value":"/ [`Builder::new_multi_thread`]: method@Self::new_multi_thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10753976,"byte_end":10754040,"line_start":20,"line_end":20,"column_start":1,"column_end":65}},{"value":"/ [`Builder::new_current_thread`]: method@Self::new_current_thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754041,"byte_end":10754109,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754110,"byte_end":10754113,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754114,"byte_end":10754128,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754129,"byte_end":10754132,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754133,"byte_end":10754140,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754141,"byte_end":10754173,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754174,"byte_end":10754177,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754178,"byte_end":10754193,"line_start":28,"line_end":28,"column_start":1,"column_end":16}},{"value":"/     // build runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754194,"byte_end":10754218,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/     let runtime = Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754219,"byte_end":10754268,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/         .worker_threads(4)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754269,"byte_end":10754299,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/         .thread_name(\"my-custom-name\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754300,"byte_end":10754342,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/         .thread_stack_size(3 * 1024 * 1024)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754343,"byte_end":10754390,"line_start":33,"line_end":33,"column_start":1,"column_end":48}},{"value":"/         .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754391,"byte_end":10754411,"line_start":34,"line_end":34,"column_start":1,"column_end":21}},{"value":"/         .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754412,"byte_end":10754434,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754435,"byte_end":10754438,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     // use runtime ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754439,"byte_end":10754465,"line_start":37,"line_end":37,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754466,"byte_end":10754471,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10754472,"byte_end":10754479,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4709},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10756019,"byte_end":10756037,"line_start":94,"line_end":94,"column_start":12,"column_end":30},"name":"new_current_thread","qualname":"<Builder>::new_current_thread","value":"pub fn new_current_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the current thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the current thread scheduler selected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755704,"byte_end":10755773,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755778,"byte_end":10755781,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755786,"byte_end":10755847,"line_start":88,"line_end":88,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755852,"byte_end":10755855,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ To spawn non-`Send` tasks on the resulting runtime, combine it with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755860,"byte_end":10755933,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ [`LocalSet`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755938,"byte_end":10755955,"line_start":91,"line_end":91,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755960,"byte_end":10755963,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`LocalSet`]: crate::task::LocalSet","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755968,"byte_end":10756007,"line_start":93,"line_end":93,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":4710},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10756362,"byte_end":10756378,"line_start":103,"line_end":103,"column_start":12,"column_end":28},"name":"new_multi_thread","qualname":"<Builder>::new_multi_thread","value":"pub fn new_multi_thread() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new builder with the multi thread scheduler selected.","sig":null,"attributes":[{"value":"/ Returns a new builder with the multi thread scheduler selected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10756106,"byte_end":10756173,"line_start":98,"line_end":98,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10756178,"byte_end":10756181,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10756186,"byte_end":10756247,"line_start":100,"line_end":100,"column_start":5,"column_end":66}},{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10756252,"byte_end":10756287,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4713},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757908,"byte_end":10757918,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"enable_all","qualname":"<Builder>::enable_all","value":"pub fn enable_all(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables both I/O and time drivers.","sig":null,"attributes":[{"value":"/ Enables both I/O and time drivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757415,"byte_end":10757453,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757458,"byte_end":10757461,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Doing this is a shorthand for calling `enable_io` and `enable_time`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757466,"byte_end":10757537,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ individually. If additional components are added to Tokio in the future,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757542,"byte_end":10757618,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ `enable_all` will include these future components.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757623,"byte_end":10757677,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757682,"byte_end":10757685,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757690,"byte_end":10757704,"line_start":149,"line_end":149,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757709,"byte_end":10757712,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757717,"byte_end":10757724,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757729,"byte_end":10757752,"line_start":152,"line_end":152,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757757,"byte_end":10757760,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757765,"byte_end":10757814,"line_start":154,"line_end":154,"column_start":5,"column_end":54}},{"value":"/     .enable_all()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757819,"byte_end":10757840,"line_start":155,"line_end":155,"column_start":5,"column_end":26}},{"value":"/     .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757845,"byte_end":10757861,"line_start":156,"line_end":156,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757866,"byte_end":10757884,"line_start":157,"line_end":157,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10757889,"byte_end":10757896,"line_start":158,"line_end":158,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4714},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759595,"byte_end":10759609,"line_start":217,"line_end":217,"column_start":12,"column_end":26},"name":"worker_threads","qualname":"<Builder>::worker_threads","value":"pub fn worker_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of worker threads the `Runtime` will use.","sig":null,"attributes":[{"value":"/ Sets the number of worker threads the `Runtime` will use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758146,"byte_end":10758207,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758212,"byte_end":10758215,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This can be any number above 0 though it is advised to keep this value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758220,"byte_end":10758294,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/ on the smaller side.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758299,"byte_end":10758323,"line_start":171,"line_end":171,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758328,"byte_end":10758331,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Default","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758336,"byte_end":10758349,"line_start":173,"line_end":173,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758354,"byte_end":10758357,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The default value is the number of cores available to the system.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758362,"byte_end":10758431,"line_start":175,"line_end":175,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758436,"byte_end":10758439,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758444,"byte_end":10758455,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758460,"byte_end":10758463,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ When using the `current_thread` runtime this method will panic, since","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758468,"byte_end":10758541,"line_start":179,"line_end":179,"column_start":5,"column_end":78}},{"value":"/ those variants do not allow setting worker thread counts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758546,"byte_end":10758607,"line_start":180,"line_end":180,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758612,"byte_end":10758615,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758620,"byte_end":10758623,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758628,"byte_end":10758642,"line_start":183,"line_end":183,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758647,"byte_end":10758650,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ## Multi threaded runtime with 4 threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758655,"byte_end":10758699,"line_start":185,"line_end":185,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758704,"byte_end":10758707,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758712,"byte_end":10758719,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758724,"byte_end":10758747,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758752,"byte_end":10758755,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ // This will spawn a work-stealing runtime with 4 worker threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758760,"byte_end":10758829,"line_start":190,"line_end":190,"column_start":5,"column_end":74}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758834,"byte_end":10758883,"line_start":191,"line_end":191,"column_start":5,"column_end":54}},{"value":"/     .worker_threads(4)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758888,"byte_end":10758914,"line_start":192,"line_end":192,"column_start":5,"column_end":31}},{"value":"/     .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758919,"byte_end":10758935,"line_start":193,"line_end":193,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758940,"byte_end":10758958,"line_start":194,"line_end":194,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758963,"byte_end":10758966,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ rt.spawn(async move {});","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10758971,"byte_end":10758999,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759004,"byte_end":10759011,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759016,"byte_end":10759019,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ## Current thread runtime (will only run on the current thread via `Runtime::block_on`)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759024,"byte_end":10759115,"line_start":199,"line_end":199,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759120,"byte_end":10759123,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759128,"byte_end":10759135,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759140,"byte_end":10759163,"line_start":202,"line_end":202,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759168,"byte_end":10759171,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ // Create a runtime that _must_ be driven from a call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759176,"byte_end":10759233,"line_start":204,"line_end":204,"column_start":5,"column_end":62}},{"value":"/ // to `Runtime::block_on`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759238,"byte_end":10759268,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let rt = runtime::Builder::new_current_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759273,"byte_end":10759324,"line_start":206,"line_end":206,"column_start":5,"column_end":56}},{"value":"/     .build()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759329,"byte_end":10759345,"line_start":207,"line_end":207,"column_start":5,"column_end":21}},{"value":"/     .unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759350,"byte_end":10759368,"line_start":208,"line_end":208,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759373,"byte_end":10759376,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ // This will run the runtime and future on the current thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759381,"byte_end":10759446,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/ rt.block_on(async move {});","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759451,"byte_end":10759482,"line_start":211,"line_end":211,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759487,"byte_end":10759494,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759499,"byte_end":10759502,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759507,"byte_end":10759518,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759523,"byte_end":10759526,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759531,"byte_end":10759583,"line_start":216,"line_end":216,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760734,"byte_end":10760754,"line_start":245,"line_end":245,"column_start":12,"column_end":32},"name":"max_blocking_threads","qualname":"<Builder>::max_blocking_threads","value":"pub fn max_blocking_threads(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the limit for additional threads spawned by the Runtime.","sig":null,"attributes":[{"value":"/ Specifies the limit for additional threads spawned by the Runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759776,"byte_end":10759846,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759851,"byte_end":10759854,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ These threads are used for blocking operations like tasks spawned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759859,"byte_end":10759928,"line_start":225,"line_end":225,"column_start":5,"column_end":74}},{"value":"/ through [`spawn_blocking`]. Unlike the [`worker_threads`], they are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10759933,"byte_end":10760008,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ always active and will exit if left idle for too long. You can change","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760013,"byte_end":10760086,"line_start":227,"line_end":227,"column_start":5,"column_end":78}},{"value":"/ this timeout duration with [`thread_keep_alive`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760091,"byte_end":10760144,"line_start":228,"line_end":228,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760149,"byte_end":10760152,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The default value is 512.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760157,"byte_end":10760186,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760191,"byte_end":10760194,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760199,"byte_end":10760210,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760215,"byte_end":10760218,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ This will panic if `val` is not larger than `0`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760223,"byte_end":10760275,"line_start":234,"line_end":234,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760280,"byte_end":10760283,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Upgrading from 0.x","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760288,"byte_end":10760312,"line_start":236,"line_end":236,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760317,"byte_end":10760320,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ In old versions `max_threads` limited both blocking and worker threads, but the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760325,"byte_end":10760408,"line_start":238,"line_end":238,"column_start":5,"column_end":88}},{"value":"/ current `max_blocking_threads` does not include async worker threads in the count.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760413,"byte_end":10760499,"line_start":239,"line_end":239,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760504,"byte_end":10760507,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760512,"byte_end":10760566,"line_start":241,"line_end":241,"column_start":5,"column_end":59}},{"value":"/ [`worker_threads`]: Self::worker_threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760571,"byte_end":10760615,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/ [`thread_keep_alive`]: Self::thread_keep_alive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760620,"byte_end":10760670,"line_start":243,"line_end":243,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4716},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761310,"byte_end":10761321,"line_start":266,"line_end":266,"column_start":12,"column_end":23},"name":"thread_name","qualname":"<Builder>::thread_name","value":"pub fn thread_name<impl Into<String>: Into<String>>(&mut Self,\n                                                    impl Into<String>)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760927,"byte_end":10760991,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10760996,"byte_end":10760999,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ The default name is \"tokio-runtime-worker\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761004,"byte_end":10761051,"line_start":253,"line_end":253,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761056,"byte_end":10761059,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761064,"byte_end":10761078,"line_start":255,"line_end":255,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761083,"byte_end":10761086,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761091,"byte_end":10761098,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761103,"byte_end":10761128,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761133,"byte_end":10761136,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761141,"byte_end":10761162,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761167,"byte_end":10761216,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/     .thread_name(\"my-pool\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761221,"byte_end":10761252,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761257,"byte_end":10761274,"line_start":263,"line_end":263,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761279,"byte_end":10761286,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761291,"byte_end":10761298,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4719},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762170,"byte_end":10762184,"line_start":292,"line_end":292,"column_start":12,"column_end":26},"name":"thread_name_fn","qualname":"<Builder>::thread_name_fn","value":"pub fn thread_name_fn<F>(&mut Self, F) -> &mut Self where F: Fn() -> String +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","sig":null,"attributes":[{"value":"/ Sets a function used to generate the name of threads spawned by the `Runtime`'s thread pool.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761495,"byte_end":10761591,"line_start":272,"line_end":272,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761596,"byte_end":10761599,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The default name fn is `|| \"tokio-runtime-worker\".into()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761604,"byte_end":10761666,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761671,"byte_end":10761674,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761679,"byte_end":10761693,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761698,"byte_end":10761701,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761706,"byte_end":10761713,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761718,"byte_end":10761743,"line_start":279,"line_end":279,"column_start":5,"column_end":30}},{"value":"/ # use std::sync::atomic::{AtomicUsize, Ordering};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761748,"byte_end":10761801,"line_start":280,"line_end":280,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761806,"byte_end":10761809,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761814,"byte_end":10761835,"line_start":282,"line_end":282,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761840,"byte_end":10761889,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/     .thread_name_fn(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761894,"byte_end":10761922,"line_start":284,"line_end":284,"column_start":5,"column_end":33}},{"value":"/        static ATOMIC_ID: AtomicUsize = AtomicUsize::new(0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761927,"byte_end":10761990,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/        let id = ATOMIC_ID.fetch_add(1, Ordering::SeqCst);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10761995,"byte_end":10762056,"line_start":286,"line_end":286,"column_start":5,"column_end":66}},{"value":"/        format!(\"my-pool-{}\", id)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762061,"byte_end":10762097,"line_start":287,"line_end":287,"column_start":5,"column_end":41}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762102,"byte_end":10762112,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762117,"byte_end":10762134,"line_start":289,"line_end":289,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762139,"byte_end":10762146,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762151,"byte_end":10762158,"line_start":291,"line_end":291,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4721},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762949,"byte_end":10762966,"line_start":319,"line_end":319,"column_start":12,"column_end":29},"name":"thread_stack_size","qualname":"<Builder>::thread_stack_size","value":"pub fn thread_stack_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stack size (in bytes) for worker threads.","sig":null,"attributes":[{"value":"/ Sets the stack size (in bytes) for worker threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762360,"byte_end":10762414,"line_start":300,"line_end":300,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762419,"byte_end":10762422,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The actual stack size may be greater than this value if the platform","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762427,"byte_end":10762499,"line_start":302,"line_end":302,"column_start":5,"column_end":77}},{"value":"/ specifies minimal stack size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762504,"byte_end":10762537,"line_start":303,"line_end":303,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762542,"byte_end":10762545,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ The default stack size for spawned threads is 2 MiB, though this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762550,"byte_end":10762618,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/ particular stack size is subject to change in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762623,"byte_end":10762684,"line_start":306,"line_end":306,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762689,"byte_end":10762692,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762697,"byte_end":10762711,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762716,"byte_end":10762719,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762724,"byte_end":10762731,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762736,"byte_end":10762761,"line_start":311,"line_end":311,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762766,"byte_end":10762769,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762774,"byte_end":10762795,"line_start":313,"line_end":313,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762800,"byte_end":10762849,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/     .thread_stack_size(32 * 1024)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762854,"byte_end":10762891,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762896,"byte_end":10762913,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762918,"byte_end":10762925,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10762930,"byte_end":10762937,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763586,"byte_end":10763601,"line_start":343,"line_end":343,"column_start":12,"column_end":27},"name":"on_thread_start","qualname":"<Builder>::on_thread_start","value":"pub fn on_thread_start<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` after each thread is started but before it starts\n doing work.","sig":null,"attributes":[{"value":"/ Executes function `f` after each thread is started but before it starts","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763073,"byte_end":10763148,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763153,"byte_end":10763168,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763173,"byte_end":10763176,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763181,"byte_end":10763243,"line_start":327,"line_end":327,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763248,"byte_end":10763251,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763256,"byte_end":10763270,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763275,"byte_end":10763278,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763283,"byte_end":10763290,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763295,"byte_end":10763320,"line_start":332,"line_end":332,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763325,"byte_end":10763328,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763333,"byte_end":10763354,"line_start":334,"line_end":334,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763359,"byte_end":10763413,"line_start":335,"line_end":335,"column_start":5,"column_end":59}},{"value":"/     .on_thread_start(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763418,"byte_end":10763447,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/         println!(\"thread started\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763452,"byte_end":10763491,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763496,"byte_end":10763506,"line_start":338,"line_end":338,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763511,"byte_end":10763528,"line_start":339,"line_end":339,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763533,"byte_end":10763540,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763545,"byte_end":10763552,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763557,"byte_end":10763574,"line_start":342,"line_end":342,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4724},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764242,"byte_end":10764256,"line_start":369,"line_end":369,"column_start":12,"column_end":26},"name":"on_thread_stop","qualname":"<Builder>::on_thread_stop","value":"pub fn on_thread_stop<F>(&mut Self, F) -> &mut Self where F: Fn() -> () +\nSend + Sync + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes function `f` before each thread stops.","sig":null,"attributes":[{"value":"/ Executes function `f` before each thread stops.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763773,"byte_end":10763824,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763829,"byte_end":10763832,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ This is intended for bookkeeping and monitoring use cases.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763837,"byte_end":10763899,"line_start":353,"line_end":353,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763904,"byte_end":10763907,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763912,"byte_end":10763926,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763931,"byte_end":10763934,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763939,"byte_end":10763946,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763951,"byte_end":10763976,"line_start":358,"line_end":358,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763981,"byte_end":10763984,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10763989,"byte_end":10764010,"line_start":360,"line_end":360,"column_start":5,"column_end":26}},{"value":"/ let runtime = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764015,"byte_end":10764069,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/     .on_thread_stop(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764074,"byte_end":10764102,"line_start":362,"line_end":362,"column_start":5,"column_end":33}},{"value":"/         println!(\"thread stopping\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764107,"byte_end":10764147,"line_start":363,"line_end":363,"column_start":5,"column_end":45}},{"value":"/     })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764152,"byte_end":10764162,"line_start":364,"line_end":364,"column_start":5,"column_end":15}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764167,"byte_end":10764184,"line_start":365,"line_end":365,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764189,"byte_end":10764196,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764201,"byte_end":10764208,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"cfg(not(loom))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764213,"byte_end":10764230,"line_start":368,"line_end":368,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764820,"byte_end":10764825,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"pub fn build(&mut Self) -> io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Creates the configured `Runtime`.","sig":null,"attributes":[{"value":"/ Creates the configured `Runtime`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764428,"byte_end":10764465,"line_start":377,"line_end":377,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764470,"byte_end":10764473,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned `Runtime` instance is ready to spawn tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764478,"byte_end":10764538,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764543,"byte_end":10764546,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764551,"byte_end":10764565,"line_start":381,"line_end":381,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764570,"byte_end":10764573,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764578,"byte_end":10764585,"line_start":383,"line_end":383,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Builder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764590,"byte_end":10764622,"line_start":384,"line_end":384,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764627,"byte_end":10764630,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let rt  = Builder::new_multi_thread().build().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764635,"byte_end":10764694,"line_start":386,"line_end":386,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764699,"byte_end":10764702,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ rt.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764707,"byte_end":10764730,"line_start":388,"line_end":388,"column_start":5,"column_end":28}},{"value":"/     println!(\"Hello from the Tokio runtime\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764735,"byte_end":10764784,"line_start":389,"line_end":389,"column_start":5,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764789,"byte_end":10764796,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10764801,"byte_end":10764808,"line_start":391,"line_end":391,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10766004,"byte_end":10766021,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"thread_keep_alive","qualname":"<Builder>::thread_keep_alive","value":"pub fn thread_keep_alive(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets a custom timeout for a thread in the blocking pool.","sig":null,"attributes":[{"value":"/ Sets a custom timeout for a thread in the blocking pool.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765495,"byte_end":10765555,"line_start":413,"line_end":413,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765560,"byte_end":10765563,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ By default, the timeout for a thread is set to 10 seconds. This can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765568,"byte_end":10765639,"line_start":415,"line_end":415,"column_start":5,"column_end":76}},{"value":"/ be overriden using .thread_keep_alive().","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765644,"byte_end":10765688,"line_start":416,"line_end":416,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765693,"byte_end":10765696,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765701,"byte_end":10765714,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765719,"byte_end":10765722,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765727,"byte_end":10765734,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # use tokio::runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765739,"byte_end":10765764,"line_start":421,"line_end":421,"column_start":5,"column_end":30}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765769,"byte_end":10765799,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765804,"byte_end":10765807,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765812,"byte_end":10765833,"line_start":424,"line_end":424,"column_start":5,"column_end":26}},{"value":"/ let rt = runtime::Builder::new_multi_thread()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765838,"byte_end":10765887,"line_start":425,"line_end":425,"column_start":5,"column_end":54}},{"value":"/     .thread_keep_alive(Duration::from_millis(100))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765892,"byte_end":10765946,"line_start":426,"line_end":426,"column_start":5,"column_end":59}},{"value":"/     .build();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765951,"byte_end":10765968,"line_start":427,"line_end":427,"column_start":5,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765973,"byte_end":10765980,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10765985,"byte_end":10765992,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4840},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10767768,"byte_end":10767777,"line_start":483,"line_end":483,"column_start":16,"column_end":25},"name":"enable_io","qualname":"<Builder>::enable_io","value":"pub fn enable_io(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the I/O driver.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4842},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10768301,"byte_end":10768312,"line_start":506,"line_end":506,"column_start":16,"column_end":27},"name":"enable_time","qualname":"<Builder>::enable_time","value":"pub fn enable_time(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the time driver.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4886},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779083,"byte_end":10779089,"line_start":16,"line_end":16,"column_start":12,"column_end":18},"name":"Handle","qualname":"::runtime::handle::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891},{"krate":0,"index":4892}],"decl_id":null,"docs":" Handle to the runtime.","sig":null,"attributes":[{"value":"/ Handle to the runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10778814,"byte_end":10778840,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10778841,"byte_end":10778844,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The handle is internally reference-counted and can be freely cloned. A handle can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10778845,"byte_end":10778933,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ obtained using the [`Runtime::handle`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10778934,"byte_end":10778984,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10778985,"byte_end":10778988,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::handle`]: crate::runtime::Runtime::handle()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10778989,"byte_end":10779047,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":4897},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779835,"byte_end":10779845,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"EnterGuard","qualname":"::runtime::handle::EnterGuard","value":"EnterGuard {  }","parent":null,"children":[{"krate":0,"index":4899},{"krate":0,"index":4900}],"decl_id":null,"docs":" Runtime context guard.","sig":null,"attributes":[{"value":"/ Runtime context guard.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779540,"byte_end":10779566,"line_start":35,"line_end":35,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779567,"byte_end":10779570,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Returned by [`Runtime::enter`] and [`Handle::enter`], the context guard exits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779571,"byte_end":10779652,"line_start":37,"line_end":37,"column_start":1,"column_end":82}},{"value":"/ the runtime context on drop.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779653,"byte_end":10779685,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779686,"byte_end":10779689,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Runtime::enter`]: fn@crate::runtime::Runtime::enter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779690,"byte_end":10779747,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"must_use = \"Creating and dropping a guard does nothing\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779765,"byte_end":10779823,"line_start":42,"line_end":42,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":4790},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780319,"byte_end":10780324,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"enter","qualname":"<Handle>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context. This allows you to construct types that must\n have an executor available on creation such as [`Sleep`] or [`TcpStream`].\n It will also allow you to call methods such as [`tokio::spawn`].","sig":null,"attributes":[{"value":"/ Enter the runtime context. This allows you to construct types that must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779929,"byte_end":10780004,"line_start":49,"line_end":49,"column_start":5,"column_end":80}},{"value":"/ have an executor available on creation such as [`Sleep`] or [`TcpStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780009,"byte_end":10780087,"line_start":50,"line_end":50,"column_start":5,"column_end":83}},{"value":"/ It will also allow you to call methods such as [`tokio::spawn`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780092,"byte_end":10780160,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780165,"byte_end":10780168,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`Sleep`]: struct@crate::time::Sleep","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780173,"byte_end":10780213,"line_start":53,"line_end":53,"column_start":5,"column_end":45}},{"value":"/ [`TcpStream`]: struct@crate::net::TcpStream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780218,"byte_end":10780265,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/ [`tokio::spawn`]: fn@crate::spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780270,"byte_end":10780307,"line_start":55,"line_end":55,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4791},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781818,"byte_end":10781825,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"current","qualname":"<Handle>::current","value":"pub fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Handle` view over the currently running `Runtime`","sig":null,"attributes":[{"value":"/ Returns a `Handle` view over the currently running `Runtime`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780469,"byte_end":10780533,"line_start":63,"line_end":63,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780538,"byte_end":10780541,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780546,"byte_end":10780557,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780562,"byte_end":10780565,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This will panic if called outside the context of a Tokio runtime. That means that you must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780570,"byte_end":10780664,"line_start":67,"line_end":67,"column_start":5,"column_end":99}},{"value":"/ call this on one of the threads **being run by the runtime**. Calling this from within a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780669,"byte_end":10780761,"line_start":68,"line_end":68,"column_start":5,"column_end":97}},{"value":"/ thread created by `std::thread::spawn` (for example) will cause a panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780766,"byte_end":10780842,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780847,"byte_end":10780850,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780855,"byte_end":10780869,"line_start":71,"line_end":71,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780874,"byte_end":10780877,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This can be used to obtain the handle of the surrounding runtime from an async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780882,"byte_end":10780964,"line_start":73,"line_end":73,"column_start":5,"column_end":87}},{"value":"/ block or function running on that runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10780969,"byte_end":10781015,"line_start":74,"line_end":74,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781020,"byte_end":10781023,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781028,"byte_end":10781035,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/ # use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781040,"byte_end":10781062,"line_start":77,"line_end":77,"column_start":5,"column_end":27}},{"value":"/ # use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781067,"byte_end":10781101,"line_start":78,"line_end":78,"column_start":5,"column_end":39}},{"value":"/ # fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781106,"byte_end":10781122,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/ # let rt = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781127,"byte_end":10781166,"line_start":80,"line_end":80,"column_start":5,"column_end":44}},{"value":"/ # rt.spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781171,"byte_end":10781193,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781198,"byte_end":10781229,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781234,"byte_end":10781237,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Inside an async block or function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781242,"byte_end":10781283,"line_start":84,"line_end":84,"column_start":5,"column_end":46}},{"value":"/ let handle = Handle::current();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781288,"byte_end":10781323,"line_start":85,"line_end":85,"column_start":5,"column_end":40}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781328,"byte_end":10781352,"line_start":86,"line_end":86,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running in the existing Runtime\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781357,"byte_end":10781413,"line_start":87,"line_end":87,"column_start":5,"column_end":61}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781418,"byte_end":10781425,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781430,"byte_end":10781433,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # let handle =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781438,"byte_end":10781456,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781461,"byte_end":10781488,"line_start":91,"line_end":91,"column_start":5,"column_end":32}},{"value":"/     // Notice that the handle is created outside of this thread and then moved in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781493,"byte_end":10781578,"line_start":92,"line_end":92,"column_start":5,"column_end":90}},{"value":"/     handle.spawn(async { /* ... */ })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781583,"byte_end":10781624,"line_start":93,"line_end":93,"column_start":5,"column_end":46}},{"value":"/     // This next line would cause a panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781629,"byte_end":10781674,"line_start":94,"line_end":94,"column_start":5,"column_end":50}},{"value":"/     // let handle2 = Handle::current();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781679,"byte_end":10781722,"line_start":95,"line_end":95,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781727,"byte_end":10781734,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ # handle.join().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781739,"byte_end":10781768,"line_start":97,"line_end":97,"column_start":5,"column_end":34}},{"value":"/ # });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781773,"byte_end":10781782,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781787,"byte_end":10781794,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781799,"byte_end":10781806,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782099,"byte_end":10782110,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"try_current","qualname":"<Handle>::try_current","value":"pub fn try_current() -> Result<Self, TryCurrentError>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Handle view over the currently running Runtime","sig":null,"attributes":[{"value":"/ Returns a Handle view over the currently running Runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781906,"byte_end":10781966,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781971,"byte_end":10781974,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ Returns an error if no Runtime has been started","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10781979,"byte_end":10782030,"line_start":107,"line_end":107,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782035,"byte_end":10782038,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Contrary to `current`, this never panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782043,"byte_end":10782087,"line_start":109,"line_end":109,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":4793},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783065,"byte_end":10783070,"line_start":142,"line_end":142,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Handle>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"/ Spawn a future onto the Tokio runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782213,"byte_end":10782255,"line_start":114,"line_end":114,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782260,"byte_end":10782263,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This spawns the given future onto the runtime's executor, usually a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782268,"byte_end":10782339,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ thread pool. The thread pool is then responsible for polling the future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782344,"byte_end":10782419,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/ until it completes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782424,"byte_end":10782447,"line_start":118,"line_end":118,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782452,"byte_end":10782455,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ See [module level][mod] documentation for more details.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782460,"byte_end":10782519,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782524,"byte_end":10782527,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [mod]: index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782532,"byte_end":10782553,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782558,"byte_end":10782561,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782566,"byte_end":10782580,"line_start":124,"line_end":124,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782585,"byte_end":10782588,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782593,"byte_end":10782600,"line_start":126,"line_end":126,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782605,"byte_end":10782637,"line_start":127,"line_end":127,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782642,"byte_end":10782645,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782650,"byte_end":10782666,"line_start":129,"line_end":129,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782671,"byte_end":10782696,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782701,"byte_end":10782738,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782743,"byte_end":10782780,"line_start":132,"line_end":132,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782785,"byte_end":10782814,"line_start":133,"line_end":133,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782819,"byte_end":10782822,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ // Spawn a future onto the runtime using the handle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782827,"byte_end":10782882,"line_start":135,"line_end":135,"column_start":5,"column_end":60}},{"value":"/ handle.spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782887,"byte_end":10782911,"line_start":136,"line_end":136,"column_start":5,"column_end":29}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782916,"byte_end":10782967,"line_start":137,"line_end":137,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782972,"byte_end":10782979,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782984,"byte_end":10782991,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10782996,"byte_end":10783003,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783039,"byte_end":10783051,"line_start":141,"line_end":141,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4795},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783973,"byte_end":10783987,"line_start":172,"line_end":172,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"<Handle>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking\n operations.","sig":null,"attributes":[{"value":"/ Run the provided function on an executor dedicated to blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783370,"byte_end":10783436,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/ operations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783441,"byte_end":10783456,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783461,"byte_end":10783464,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783469,"byte_end":10783483,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783488,"byte_end":10783491,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783496,"byte_end":10783503,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783508,"byte_end":10783540,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783545,"byte_end":10783548,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783553,"byte_end":10783569,"line_start":160,"line_end":160,"column_start":5,"column_end":21}},{"value":"/ // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783574,"byte_end":10783599,"line_start":161,"line_end":161,"column_start":5,"column_end":30}},{"value":"/ let rt = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783604,"byte_end":10783641,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783646,"byte_end":10783683,"line_start":163,"line_end":163,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783688,"byte_end":10783717,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783722,"byte_end":10783725,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Spawn a blocking function onto the runtime using the handle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783730,"byte_end":10783796,"line_start":166,"line_end":166,"column_start":5,"column_end":71}},{"value":"/ handle.spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783801,"byte_end":10783831,"line_start":167,"line_end":167,"column_start":5,"column_end":35}},{"value":"/     println!(\"now running on a worker thread\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783836,"byte_end":10783887,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783892,"byte_end":10783899,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783904,"byte_end":10783911,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10783947,"byte_end":10783959,"line_start":171,"line_end":171,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":4798},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788005,"byte_end":10788013,"line_start":276,"line_end":276,"column_start":12,"column_end":20},"name":"block_on","qualname":"<Handle>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on this `Handle`'s associated `Runtime`.","sig":null,"attributes":[{"value":"/ Run a future to completion on this `Handle`'s associated `Runtime`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785178,"byte_end":10785249,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785254,"byte_end":10785257,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the current thread, blocking until it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785262,"byte_end":10785336,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785341,"byte_end":10785414,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785419,"byte_end":10785484,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785489,"byte_end":10785492,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ When this is used on a `current_thread` runtime, only the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785497,"byte_end":10785558,"line_start":212,"line_end":212,"column_start":5,"column_end":66}},{"value":"/ [`Runtime::block_on`] method can drive the IO and timer drivers, but the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785563,"byte_end":10785639,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ `Handle::block_on` method cannot drive them. This means that, when using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785644,"byte_end":10785720,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ this method on a current_thread runtime, anything that relies on IO or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785725,"byte_end":10785799,"line_start":215,"line_end":215,"column_start":5,"column_end":79}},{"value":"/ timers will not work unless there is another thread currently calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785804,"byte_end":10785877,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ [`Runtime::block_on`] on the same runtime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785882,"byte_end":10785928,"line_start":217,"line_end":217,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785933,"byte_end":10785936,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # If the runtime has been shut down","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785941,"byte_end":10785980,"line_start":219,"line_end":219,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785985,"byte_end":10785988,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ If the `Handle`'s associated `Runtime` has been shut down (through","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10785993,"byte_end":10786063,"line_start":221,"line_end":221,"column_start":5,"column_end":75}},{"value":"/ [`Runtime::shutdown_background`], [`Runtime::shutdown_timeout`], or by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786068,"byte_end":10786142,"line_start":222,"line_end":222,"column_start":5,"column_end":79}},{"value":"/ dropping it) and `Handle::block_on` is used it might return an error or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786147,"byte_end":10786222,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/ panic. Specifically IO resources will return an error and timers will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786227,"byte_end":10786300,"line_start":224,"line_end":224,"column_start":5,"column_end":78}},{"value":"/ panic. Runtime independent futures will run as normal.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786305,"byte_end":10786363,"line_start":225,"line_end":225,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786368,"byte_end":10786371,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786376,"byte_end":10786388,"line_start":227,"line_end":227,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786393,"byte_end":10786396,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function panics if the provided future panics, if called within an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786401,"byte_end":10786476,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ asynchronous execution context, or if a timer future is executed on a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786481,"byte_end":10786554,"line_start":230,"line_end":230,"column_start":5,"column_end":78}},{"value":"/ runtime that has been shut down.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786559,"byte_end":10786595,"line_start":231,"line_end":231,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786600,"byte_end":10786603,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786608,"byte_end":10786622,"line_start":233,"line_end":233,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786627,"byte_end":10786630,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786635,"byte_end":10786642,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786647,"byte_end":10786679,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786684,"byte_end":10786687,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ // Create the runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786692,"byte_end":10786717,"line_start":238,"line_end":238,"column_start":5,"column_end":30}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786722,"byte_end":10786760,"line_start":239,"line_end":239,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786765,"byte_end":10786768,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ // Get a handle from this runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786773,"byte_end":10786810,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ let handle = rt.handle();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786815,"byte_end":10786844,"line_start":242,"line_end":242,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786849,"byte_end":10786852,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // Execute the future, blocking the current thread until completion","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786857,"byte_end":10786928,"line_start":244,"line_end":244,"column_start":5,"column_end":76}},{"value":"/ handle.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786933,"byte_end":10786960,"line_start":245,"line_end":245,"column_start":5,"column_end":32}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786965,"byte_end":10786991,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10786996,"byte_end":10787003,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787008,"byte_end":10787015,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787020,"byte_end":10787023,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Or using `Handle::current`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787028,"byte_end":10787059,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787064,"byte_end":10787067,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787072,"byte_end":10787079,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Handle;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787084,"byte_end":10787115,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787120,"byte_end":10787123,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787128,"byte_end":10787146,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main () {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787151,"byte_end":10787173,"line_start":256,"line_end":256,"column_start":5,"column_end":27}},{"value":"/     let handle = Handle::current();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787178,"byte_end":10787217,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787222,"byte_end":10787258,"line_start":258,"line_end":258,"column_start":5,"column_end":41}},{"value":"/         // Using Handle::block_on to run async code in the new thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787263,"byte_end":10787337,"line_start":259,"line_end":259,"column_start":5,"column_end":79}},{"value":"/         handle.block_on(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787342,"byte_end":10787377,"line_start":260,"line_end":260,"column_start":5,"column_end":40}},{"value":"/             println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787382,"byte_end":10787416,"line_start":261,"line_end":261,"column_start":5,"column_end":39}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787421,"byte_end":10787436,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787441,"byte_end":10787452,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787457,"byte_end":10787462,"line_start":264,"line_end":264,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787467,"byte_end":10787474,"line_start":265,"line_end":265,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787479,"byte_end":10787482,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ [`JoinError`]: struct@crate::task::JoinError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787487,"byte_end":10787535,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/ [`JoinHandle`]: struct@crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787540,"byte_end":10787590,"line_start":268,"line_end":268,"column_start":5,"column_end":55}},{"value":"/ [`Runtime::block_on`]: fn@crate::runtime::Runtime::block_on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787595,"byte_end":10787658,"line_start":269,"line_end":269,"column_start":5,"column_end":68}},{"value":"/ [`Runtime::shutdown_background`]: fn@crate::runtime::Runtime::shutdown_background","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787663,"byte_end":10787748,"line_start":270,"line_end":270,"column_start":5,"column_end":90}},{"value":"/ [`Runtime::shutdown_timeout`]: fn@crate::runtime::Runtime::shutdown_timeout","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787753,"byte_end":10787832,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/ [`spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787837,"byte_end":10787888,"line_start":272,"line_end":272,"column_start":5,"column_end":56}},{"value":"/ [`tokio::fs`]: crate::fs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787893,"byte_end":10787921,"line_start":273,"line_end":273,"column_start":5,"column_end":33}},{"value":"/ [`tokio::net`]: crate::net","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787926,"byte_end":10787956,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/ [`tokio::time`]: crate::time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10787961,"byte_end":10787993,"line_start":275,"line_end":275,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":4801},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788633,"byte_end":10788648,"line_start":295,"line_end":295,"column_start":12,"column_end":27},"name":"TryCurrentError","qualname":"::runtime::handle::TryCurrentError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `try_current` when no Runtime has been started\n","sig":null,"attributes":[{"value":"/ Error returned by `try_current` when no Runtime has been started","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788553,"byte_end":10788621,"line_start":294,"line_end":294,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":5327},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10640369,"byte_end":10640376,"line_start":264,"line_end":264,"column_start":16,"column_end":23},"name":"Runtime","qualname":"::runtime::Runtime","value":"Runtime {  }","parent":null,"children":[{"krate":0,"index":5328},{"krate":0,"index":5329},{"krate":0,"index":5330}],"decl_id":null,"docs":" The Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":5315},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10642359,"byte_end":10642362,"line_start":321,"line_end":321,"column_start":16,"column_end":19},"name":"new","qualname":"<Runtime>::new","value":"pub fn new() -> std::io::Result<Runtime>","parent":null,"children":[],"decl_id":null,"docs":" Create a new runtime instance with default configuration values.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10642241,"byte_end":10642276,"line_start":319,"line_end":319,"column_start":9,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":5316},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10643000,"byte_end":10643006,"line_start":342,"line_end":342,"column_start":16,"column_end":22},"name":"handle","qualname":"<Runtime>::handle","value":"pub fn handle(&Self) -> &Handle","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to the runtime's spawner.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5317},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10643930,"byte_end":10643935,"line_start":372,"line_end":372,"column_start":16,"column_end":21},"name":"spawn","qualname":"<Runtime>::spawn","value":"pub fn spawn<F>(&Self, F) -> JoinHandle<F::Output> where F: Future + Send +\n'static, F::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawn a future onto the Tokio runtime.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10643900,"byte_end":10643912,"line_start":371,"line_end":371,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10644708,"byte_end":10644722,"line_start":397,"line_end":397,"column_start":16,"column_end":30},"name":"spawn_blocking","qualname":"<Runtime>::spawn_blocking","value":"pub fn spawn_blocking<F, R>(&Self, F) -> JoinHandle<R> where F: FnOnce() ->\nR + Send + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Run the provided function on an executor dedicated to blocking operations.","sig":null,"attributes":[{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10644678,"byte_end":10644690,"line_start":396,"line_end":396,"column_start":40,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10646654,"byte_end":10646662,"line_start":446,"line_end":446,"column_start":16,"column_end":24},"name":"block_on","qualname":"<Runtime>::block_on","value":"pub fn block_on<F: Future>(&Self, F) -> F::Output","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the Tokio runtime. This is the\n runtime's entry point.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10648150,"byte_end":10648155,"line_start":488,"line_end":488,"column_start":16,"column_end":21},"name":"enter","qualname":"<Runtime>::enter","value":"pub fn enter(&Self) -> EnterGuard","parent":null,"children":[],"decl_id":null,"docs":" Enter the runtime context.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10649725,"byte_end":10649741,"line_start":527,"line_end":527,"column_start":16,"column_end":32},"name":"shutdown_timeout","qualname":"<Runtime>::shutdown_timeout","value":"pub fn shutdown_timeout(Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, waiting for at most `duration` for all spawned\n task to shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10651162,"byte_end":10651181,"line_start":559,"line_end":559,"column_start":16,"column_end":35},"name":"shutdown_background","qualname":"<Runtime>::shutdown_background","value":"pub fn shutdown_background(Self)","parent":null,"children":[],"decl_id":null,"docs":" Shutdown the runtime, without waiting for any spawned tasks to shutdown.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5379},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":5380},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5392},{"krate":0,"index":5393},{"krate":0,"index":5556},{"krate":0,"index":5991},{"krate":0,"index":6134},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137},{"krate":0,"index":14019},{"krate":0,"index":6138},{"krate":0,"index":6139},{"krate":0,"index":6140},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6315},{"krate":0,"index":6407},{"krate":0,"index":6408},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6448},{"krate":0,"index":6449},{"krate":0,"index":6450},{"krate":0,"index":6451},{"krate":0,"index":6452},{"krate":0,"index":6787},{"krate":0,"index":6788},{"krate":0,"index":6789},{"krate":0,"index":6790},{"krate":0,"index":6791},{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794},{"krate":0,"index":6839},{"krate":0,"index":6840},{"krate":0,"index":6916},{"krate":0,"index":6917},{"krate":0,"index":6918},{"krate":0,"index":6919}],"decl_id":null,"docs":" Synchronization primitives for use in asynchronous contexts.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ Synchronization primitives for use in asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854478,"byte_end":10854542,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854543,"byte_end":10854546,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Tokio programs tend to be organized as a set of [tasks] where each task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854547,"byte_end":10854622,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ operates independently and may be executed on separate physical threads. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854623,"byte_end":10854703,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ synchronization primitives provided in this module permit these independent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854704,"byte_end":10854783,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ tasks to communicate together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854784,"byte_end":10854818,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854819,"byte_end":10854822,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [tasks]: crate::task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854823,"byte_end":10854847,"line_start":10,"line_end":10,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854848,"byte_end":10854851,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Message passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854852,"byte_end":10854873,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854874,"byte_end":10854877,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The most common form of synchronization in a Tokio program is message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854878,"byte_end":10854951,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ passing. Two tasks operate independently and send messages to each other to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10854952,"byte_end":10855031,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ synchronize. Doing so has the advantage of avoiding shared state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855032,"byte_end":10855101,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855102,"byte_end":10855105,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Message passing is implemented using channels. A channel supports sending a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855106,"byte_end":10855185,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ message from one producer task to one or more consumer tasks. There are a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855186,"byte_end":10855263,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ few flavors of channels provided by Tokio. Each channel flavor supports","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855264,"byte_end":10855339,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ different message passing patterns. When a channel supports multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855340,"byte_end":10855412,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ producers, many separate tasks may **send** messages. When a channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855413,"byte_end":10855485,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ supports multiple consumers, many different separate tasks may **receive**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855486,"byte_end":10855564,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/ messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855565,"byte_end":10855578,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855579,"byte_end":10855582,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Tokio provides many different channel flavors as different message passing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855583,"byte_end":10855661,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ patterns are best handled with different implementations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855662,"byte_end":10855723,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855724,"byte_end":10855727,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## `oneshot` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855728,"byte_end":10855752,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855753,"byte_end":10855756,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ The [`oneshot` channel][oneshot] supports sending a **single** value from a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855757,"byte_end":10855836,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ single producer to a single consumer. This channel is usually used to send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855837,"byte_end":10855915,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ the result of a computation to a waiter.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855916,"byte_end":10855960,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855961,"byte_end":10855964,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ **Example:** using a [`oneshot` channel][oneshot] to receive the result of a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10855965,"byte_end":10856045,"line_start":35,"line_end":35,"column_start":1,"column_end":81}},{"value":"/ computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856046,"byte_end":10856062,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856063,"byte_end":10856066,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856067,"byte_end":10856074,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856075,"byte_end":10856104,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856105,"byte_end":10856108,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856109,"byte_end":10856152,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/     \"represents the result of the computation\".to_string()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856153,"byte_end":10856215,"line_start":42,"line_end":42,"column_start":1,"column_end":63}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856216,"byte_end":10856221,"line_start":43,"line_end":43,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856222,"byte_end":10856225,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856226,"byte_end":10856244,"line_start":45,"line_end":45,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856245,"byte_end":10856266,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856267,"byte_end":10856309,"line_start":47,"line_end":47,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856310,"byte_end":10856313,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856314,"byte_end":10856347,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         let res = some_computation().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856348,"byte_end":10856395,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/         tx.send(res).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856396,"byte_end":10856430,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856431,"byte_end":10856442,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856443,"byte_end":10856446,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856447,"byte_end":10856524,"line_start":54,"line_end":54,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856525,"byte_end":10856528,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856529,"byte_end":10856571,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/     let res = rx.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856572,"byte_end":10856608,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856609,"byte_end":10856614,"line_start":58,"line_end":58,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856615,"byte_end":10856622,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856623,"byte_end":10856626,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Note, if the task produces a computation result as its final","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856627,"byte_end":10856691,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ action before terminating, the [`JoinHandle`] can be used to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856692,"byte_end":10856756,"line_start":62,"line_end":62,"column_start":1,"column_end":65}},{"value":"/ receive that value instead of allocating resources for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856757,"byte_end":10856819,"line_start":63,"line_end":63,"column_start":1,"column_end":63}},{"value":"/ `oneshot` channel. Awaiting on [`JoinHandle`] returns `Result`. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856820,"byte_end":10856890,"line_start":64,"line_end":64,"column_start":1,"column_end":71}},{"value":"/ the task panics, the `Joinhandle` yields `Err` with the panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856891,"byte_end":10856956,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ cause.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856957,"byte_end":10856967,"line_start":66,"line_end":66,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856968,"byte_end":10856971,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ **Example:**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856972,"byte_end":10856988,"line_start":68,"line_end":68,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856989,"byte_end":10856992,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10856993,"byte_end":10857000,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ async fn some_computation() -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857001,"byte_end":10857044,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/     \"the result of the computation\".to_string()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857045,"byte_end":10857096,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857097,"byte_end":10857102,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857103,"byte_end":10857106,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857107,"byte_end":10857125,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857126,"byte_end":10857147,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857148,"byte_end":10857199,"line_start":77,"line_end":77,"column_start":1,"column_end":52}},{"value":"/         some_computation().await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857200,"byte_end":10857236,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857237,"byte_end":10857248,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857249,"byte_end":10857252,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     // Do other work while the computation is happening in the background","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857253,"byte_end":10857330,"line_start":81,"line_end":81,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857331,"byte_end":10857334,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/     // Wait for the computation result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857335,"byte_end":10857377,"line_start":83,"line_end":83,"column_start":1,"column_end":43}},{"value":"/     let res = join_handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857378,"byte_end":10857423,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857424,"byte_end":10857429,"line_start":85,"line_end":85,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857430,"byte_end":10857437,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857438,"byte_end":10857441,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [oneshot]: oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857442,"byte_end":10857464,"line_start":88,"line_end":88,"column_start":1,"column_end":23}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857465,"byte_end":10857508,"line_start":89,"line_end":89,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857509,"byte_end":10857512,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ## `mpsc` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857513,"byte_end":10857534,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857535,"byte_end":10857538,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc` channel][mpsc] supports sending **many** values from **many**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857539,"byte_end":10857616,"line_start":93,"line_end":93,"column_start":1,"column_end":78}},{"value":"/ producers to a single consumer. This channel is often used to send work to a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857617,"byte_end":10857697,"line_start":94,"line_end":94,"column_start":1,"column_end":81}},{"value":"/ task or to receive the result of many computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857698,"byte_end":10857753,"line_start":95,"line_end":95,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857754,"byte_end":10857757,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ **Example:** using an mpsc to incrementally stream the results of a series","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857758,"byte_end":10857836,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ of computations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857837,"byte_end":10857857,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857858,"byte_end":10857861,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857862,"byte_end":10857869,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857870,"byte_end":10857896,"line_start":101,"line_end":101,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857897,"byte_end":10857900,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation(input: u32) -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857901,"byte_end":10857954,"line_start":103,"line_end":103,"column_start":1,"column_end":54}},{"value":"/     format!(\"the result of computation {}\", input)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10857955,"byte_end":10858009,"line_start":104,"line_end":104,"column_start":1,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858010,"byte_end":10858015,"line_start":105,"line_end":105,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858016,"byte_end":10858019,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858020,"byte_end":10858038,"line_start":107,"line_end":107,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858039,"byte_end":10858060,"line_start":108,"line_end":108,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858061,"byte_end":10858107,"line_start":109,"line_end":109,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858108,"byte_end":10858111,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858112,"byte_end":10858145,"line_start":111,"line_end":111,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858146,"byte_end":10858174,"line_start":112,"line_end":112,"column_start":1,"column_end":29}},{"value":"/             let res = some_computation(i).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858175,"byte_end":10858227,"line_start":113,"line_end":113,"column_start":1,"column_end":53}},{"value":"/             tx.send(res).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858228,"byte_end":10858272,"line_start":114,"line_end":114,"column_start":1,"column_end":45}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858273,"byte_end":10858286,"line_start":115,"line_end":115,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858287,"byte_end":10858298,"line_start":116,"line_end":116,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858299,"byte_end":10858302,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858303,"byte_end":10858350,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/         println!(\"got = {}\", res);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858351,"byte_end":10858389,"line_start":119,"line_end":119,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858390,"byte_end":10858399,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858400,"byte_end":10858405,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858406,"byte_end":10858413,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858414,"byte_end":10858417,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ The argument to `mpsc::channel` is the channel capacity. This is the maximum","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858418,"byte_end":10858498,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/ number of values that can be stored in the channel pending receipt at any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858499,"byte_end":10858576,"line_start":125,"line_end":125,"column_start":1,"column_end":78}},{"value":"/ given time. Properly setting this value is key in implementing robust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858577,"byte_end":10858650,"line_start":126,"line_end":126,"column_start":1,"column_end":74}},{"value":"/ programs as the channel capacity plays a critical part in handling back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858651,"byte_end":10858726,"line_start":127,"line_end":127,"column_start":1,"column_end":76}},{"value":"/ pressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858727,"byte_end":10858740,"line_start":128,"line_end":128,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858741,"byte_end":10858744,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ A common concurrency pattern for resource management is to spawn a task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858745,"byte_end":10858820,"line_start":130,"line_end":130,"column_start":1,"column_end":76}},{"value":"/ dedicated to managing that resource and using message passing between other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858821,"byte_end":10858900,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ tasks to interact with the resource. The resource may be anything that may","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858901,"byte_end":10858979,"line_start":132,"line_end":132,"column_start":1,"column_end":79}},{"value":"/ not be concurrently used. Some examples include a socket and program state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10858980,"byte_end":10859059,"line_start":133,"line_end":133,"column_start":1,"column_end":80}},{"value":"/ For example, if multiple tasks need to send data over a single socket, spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859060,"byte_end":10859140,"line_start":134,"line_end":134,"column_start":1,"column_end":81}},{"value":"/ a task to manage the socket and use a channel to synchronize.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859141,"byte_end":10859206,"line_start":135,"line_end":135,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859207,"byte_end":10859210,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ **Example:** sending data from many tasks over a single socket using message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859211,"byte_end":10859291,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ passing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859292,"byte_end":10859304,"line_start":138,"line_end":138,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859305,"byte_end":10859308,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859309,"byte_end":10859322,"line_start":140,"line_end":140,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::{self, AsyncWriteExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859323,"byte_end":10859364,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859365,"byte_end":10859395,"line_start":142,"line_end":142,"column_start":1,"column_end":31}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859396,"byte_end":10859422,"line_start":143,"line_end":143,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859423,"byte_end":10859426,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859427,"byte_end":10859445,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859446,"byte_end":10859485,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/     let mut socket = TcpStream::connect(\"www.example.com:1234\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859486,"byte_end":10859561,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859562,"byte_end":10859608,"line_start":148,"line_end":148,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859609,"byte_end":10859612,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859613,"byte_end":10859637,"line_start":150,"line_end":150,"column_start":1,"column_end":25}},{"value":"/         // Each task needs its own `tx` handle. This is done by cloning the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859638,"byte_end":10859717,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/         // original handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859718,"byte_end":10859749,"line_start":152,"line_end":152,"column_start":1,"column_end":32}},{"value":"/         let tx = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859750,"byte_end":10859782,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859783,"byte_end":10859786,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859787,"byte_end":10859824,"line_start":155,"line_end":155,"column_start":1,"column_end":38}},{"value":"/             tx.send(&b\"data to write\"[..]).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859825,"byte_end":10859887,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859888,"byte_end":10859903,"line_start":157,"line_end":157,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859904,"byte_end":10859913,"line_start":158,"line_end":158,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859914,"byte_end":10859917,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/     // The `rx` half of the channel returns `None` once **all** `tx` clones","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859918,"byte_end":10859997,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/     // drop. To ensure `None` is returned, drop the handle owned by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10859998,"byte_end":10860073,"line_start":161,"line_end":161,"column_start":1,"column_end":76}},{"value":"/     // current task. If this `tx` handle is not dropped, there will always","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860074,"byte_end":10860152,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/     // be a single outstanding `tx` handle.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860153,"byte_end":10860200,"line_start":163,"line_end":163,"column_start":1,"column_end":48}},{"value":"/     drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860201,"byte_end":10860218,"line_start":164,"line_end":164,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860219,"byte_end":10860222,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/     while let Some(res) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860223,"byte_end":10860270,"line_start":166,"line_end":166,"column_start":1,"column_end":48}},{"value":"/         socket.write_all(res).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860271,"byte_end":10860312,"line_start":167,"line_end":167,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860313,"byte_end":10860322,"line_start":168,"line_end":168,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860323,"byte_end":10860326,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860327,"byte_end":10860341,"line_start":170,"line_end":170,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860342,"byte_end":10860347,"line_start":171,"line_end":171,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860348,"byte_end":10860355,"line_start":172,"line_end":172,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860356,"byte_end":10860359,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ The [`mpsc`][mpsc] and [`oneshot`][oneshot] channels can be combined to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860360,"byte_end":10860435,"line_start":174,"line_end":174,"column_start":1,"column_end":76}},{"value":"/ provide a request / response type synchronization pattern with a shared","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860436,"byte_end":10860511,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ resource. A task is spawned to synchronize a resource and waits on commands","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860512,"byte_end":10860591,"line_start":176,"line_end":176,"column_start":1,"column_end":80}},{"value":"/ received on a [`mpsc`][mpsc] channel. Each command includes a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860592,"byte_end":10860657,"line_start":177,"line_end":177,"column_start":1,"column_end":66}},{"value":"/ [`oneshot`][oneshot] `Sender` on which the result of the command is sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860658,"byte_end":10860735,"line_start":178,"line_end":178,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860736,"byte_end":10860739,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a task to synchronize a `u64` counter. Each task sends an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860740,"byte_end":10860818,"line_start":180,"line_end":180,"column_start":1,"column_end":79}},{"value":"/ \"fetch and increment\" command. The counter value **before** the increment is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860819,"byte_end":10860899,"line_start":181,"line_end":181,"column_start":1,"column_end":81}},{"value":"/ sent over the provided `oneshot` channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860900,"byte_end":10860945,"line_start":182,"line_end":182,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860946,"byte_end":10860949,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860950,"byte_end":10860957,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::{oneshot, mpsc};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860958,"byte_end":10860995,"line_start":185,"line_end":185,"column_start":1,"column_end":38}},{"value":"/ use Command::Increment;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10860996,"byte_end":10861023,"line_start":186,"line_end":186,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861024,"byte_end":10861027,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ enum Command {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861028,"byte_end":10861046,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/     Increment,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861047,"byte_end":10861065,"line_start":189,"line_end":189,"column_start":1,"column_end":19}},{"value":"/     // Other commands can be added here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861066,"byte_end":10861109,"line_start":190,"line_end":190,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861110,"byte_end":10861115,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861116,"byte_end":10861119,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861120,"byte_end":10861138,"line_start":193,"line_end":193,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861139,"byte_end":10861160,"line_start":194,"line_end":194,"column_start":1,"column_end":22}},{"value":"/     let (cmd_tx, mut cmd_rx) = mpsc::channel::<(Command, oneshot::Sender<u64>)>(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861161,"byte_end":10861250,"line_start":195,"line_end":195,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861251,"byte_end":10861254,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to manage the counter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861255,"byte_end":10861300,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861301,"byte_end":10861334,"line_start":198,"line_end":198,"column_start":1,"column_end":34}},{"value":"/         let mut counter: u64 = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861335,"byte_end":10861372,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861373,"byte_end":10861376,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/         while let Some((cmd, response)) = cmd_rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861377,"byte_end":10861444,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/             match cmd {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861445,"byte_end":10861472,"line_start":202,"line_end":202,"column_start":1,"column_end":28}},{"value":"/                 Increment => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861473,"byte_end":10861507,"line_start":203,"line_end":203,"column_start":1,"column_end":35}},{"value":"/                     let prev = counter;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861508,"byte_end":10861551,"line_start":204,"line_end":204,"column_start":1,"column_end":44}},{"value":"/                     counter += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861552,"byte_end":10861589,"line_start":205,"line_end":205,"column_start":1,"column_end":38}},{"value":"/                     response.send(prev).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861590,"byte_end":10861643,"line_start":206,"line_end":206,"column_start":1,"column_end":54}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861644,"byte_end":10861665,"line_start":207,"line_end":207,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861666,"byte_end":10861683,"line_start":208,"line_end":208,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861684,"byte_end":10861697,"line_start":209,"line_end":209,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861698,"byte_end":10861709,"line_start":210,"line_end":210,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861710,"byte_end":10861713,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/     let mut join_handles = vec![];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861714,"byte_end":10861752,"line_start":212,"line_end":212,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861753,"byte_end":10861756,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that will send the increment command.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861757,"byte_end":10861817,"line_start":214,"line_end":214,"column_start":1,"column_end":61}},{"value":"/     for _ in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861818,"byte_end":10861842,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/         let cmd_tx = cmd_tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861843,"byte_end":10861883,"line_start":216,"line_end":216,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861884,"byte_end":10861887,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/         join_handles.push(tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861888,"byte_end":10861943,"line_start":218,"line_end":218,"column_start":1,"column_end":56}},{"value":"/             let (resp_tx, resp_rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10861944,"byte_end":10862004,"line_start":219,"line_end":219,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862005,"byte_end":10862008,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/             cmd_tx.send((Increment, resp_tx)).await.ok().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862009,"byte_end":10862079,"line_start":221,"line_end":221,"column_start":1,"column_end":71}},{"value":"/             let res = resp_rx.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862080,"byte_end":10862129,"line_start":222,"line_end":222,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862130,"byte_end":10862133,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/             println!(\"previous value = {}\", res);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862134,"byte_end":10862187,"line_start":224,"line_end":224,"column_start":1,"column_end":54}},{"value":"/         }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862188,"byte_end":10862204,"line_start":225,"line_end":225,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862205,"byte_end":10862214,"line_start":226,"line_end":226,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862215,"byte_end":10862218,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/     // Wait for all tasks to complete","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862219,"byte_end":10862260,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/     for join_handle in join_handles.drain(..) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862261,"byte_end":10862312,"line_start":229,"line_end":229,"column_start":1,"column_end":52}},{"value":"/         join_handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862313,"byte_end":10862352,"line_start":230,"line_end":230,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862353,"byte_end":10862362,"line_start":231,"line_end":231,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862363,"byte_end":10862368,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862369,"byte_end":10862376,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862377,"byte_end":10862380,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ [mpsc]: mpsc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862381,"byte_end":10862397,"line_start":235,"line_end":235,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862398,"byte_end":10862401,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ## `broadcast` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862402,"byte_end":10862428,"line_start":237,"line_end":237,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862429,"byte_end":10862432,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The [`broadcast` channel] supports sending **many** values from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862433,"byte_end":10862500,"line_start":239,"line_end":239,"column_start":1,"column_end":68}},{"value":"/ **many** producers to **many** consumers. Each consumer will receive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862501,"byte_end":10862573,"line_start":240,"line_end":240,"column_start":1,"column_end":73}},{"value":"/ **each** value. This channel can be used to implement \"fan out\" style","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862574,"byte_end":10862647,"line_start":241,"line_end":241,"column_start":1,"column_end":74}},{"value":"/ patterns common with pub / sub or \"chat\" systems.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862648,"byte_end":10862701,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862702,"byte_end":10862705,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ This channel tends to be used less often than `oneshot` and `mpsc` but still","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862706,"byte_end":10862786,"line_start":244,"line_end":244,"column_start":1,"column_end":81}},{"value":"/ has its use cases.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862787,"byte_end":10862809,"line_start":245,"line_end":245,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862810,"byte_end":10862813,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862814,"byte_end":10862829,"line_start":247,"line_end":247,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862830,"byte_end":10862833,"line_start":248,"line_end":248,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862834,"byte_end":10862841,"line_start":249,"line_end":249,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862842,"byte_end":10862873,"line_start":250,"line_end":250,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862874,"byte_end":10862877,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862878,"byte_end":10862896,"line_start":252,"line_end":252,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862897,"byte_end":10862918,"line_start":253,"line_end":253,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862919,"byte_end":10862970,"line_start":254,"line_end":254,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10862971,"byte_end":10863008,"line_start":255,"line_end":255,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863009,"byte_end":10863012,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863013,"byte_end":10863046,"line_start":257,"line_end":257,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863047,"byte_end":10863101,"line_start":258,"line_end":258,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863102,"byte_end":10863156,"line_start":259,"line_end":259,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863157,"byte_end":10863168,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863169,"byte_end":10863172,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863173,"byte_end":10863206,"line_start":262,"line_end":262,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863207,"byte_end":10863261,"line_start":263,"line_end":263,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863262,"byte_end":10863316,"line_start":264,"line_end":264,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863317,"byte_end":10863328,"line_start":265,"line_end":265,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863329,"byte_end":10863332,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863333,"byte_end":10863362,"line_start":267,"line_end":267,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863363,"byte_end":10863392,"line_start":268,"line_end":268,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863393,"byte_end":10863398,"line_start":269,"line_end":269,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863399,"byte_end":10863406,"line_start":270,"line_end":270,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863407,"byte_end":10863410,"line_start":271,"line_end":271,"column_start":1,"column_end":4}},{"value":"/ [`broadcast` channel]: crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863411,"byte_end":10863460,"line_start":272,"line_end":272,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863461,"byte_end":10863464,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ ## `watch` channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863465,"byte_end":10863487,"line_start":274,"line_end":274,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863488,"byte_end":10863491,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] supports sending **many** values from a **single**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863492,"byte_end":10863568,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ producer to **many** consumers. However, only the **most recent** value is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863569,"byte_end":10863647,"line_start":277,"line_end":277,"column_start":1,"column_end":79}},{"value":"/ stored in the channel. Consumers are notified when a new value is sent, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863648,"byte_end":10863727,"line_start":278,"line_end":278,"column_start":1,"column_end":80}},{"value":"/ there is no guarantee that consumers will see **all** values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863728,"byte_end":10863793,"line_start":279,"line_end":279,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863794,"byte_end":10863797,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ The [`watch` channel] is similar to a [`broadcast` channel] with capacity 1.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863798,"byte_end":10863878,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863879,"byte_end":10863882,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ Use cases for the [`watch` channel] include broadcasting configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863883,"byte_end":10863957,"line_start":283,"line_end":283,"column_start":1,"column_end":75}},{"value":"/ changes or signalling program state changes, such as transitioning to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10863958,"byte_end":10864031,"line_start":284,"line_end":284,"column_start":1,"column_end":74}},{"value":"/ shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864032,"byte_end":10864045,"line_start":285,"line_end":285,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864046,"byte_end":10864049,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ **Example:** use a [`watch` channel] to notify tasks of configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864050,"byte_end":10864123,"line_start":287,"line_end":287,"column_start":1,"column_end":74}},{"value":"/ changes. In this example, a configuration file is checked periodically. When","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864124,"byte_end":10864204,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/ the file changes, the configuration changes are signalled to consumers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864205,"byte_end":10864280,"line_start":289,"line_end":289,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864281,"byte_end":10864284,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864285,"byte_end":10864292,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864293,"byte_end":10864320,"line_start":292,"line_end":292,"column_start":1,"column_end":28}},{"value":"/ use tokio::time::{self, Duration, Instant};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864321,"byte_end":10864368,"line_start":293,"line_end":293,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864369,"byte_end":10864372,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864373,"byte_end":10864389,"line_start":295,"line_end":295,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864390,"byte_end":10864393,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ #[derive(Debug, Clone, Eq, PartialEq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864394,"byte_end":10864436,"line_start":297,"line_end":297,"column_start":1,"column_end":43}},{"value":"/ struct Config {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864437,"byte_end":10864456,"line_start":298,"line_end":298,"column_start":1,"column_end":20}},{"value":"/     timeout: Duration,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864457,"byte_end":10864483,"line_start":299,"line_end":299,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864484,"byte_end":10864489,"line_start":300,"line_end":300,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864490,"byte_end":10864493,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ impl Config {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864494,"byte_end":10864511,"line_start":302,"line_end":302,"column_start":1,"column_end":18}},{"value":"/     async fn load_from_file() -> io::Result<Config> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864512,"byte_end":10864569,"line_start":303,"line_end":303,"column_start":1,"column_end":58}},{"value":"/         // file loading and deserialization logic here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864570,"byte_end":10864628,"line_start":304,"line_end":304,"column_start":1,"column_end":59}},{"value":"/ # Ok(Config { timeout: Duration::from_secs(1) })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864629,"byte_end":10864681,"line_start":305,"line_end":305,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864682,"byte_end":10864691,"line_start":306,"line_end":306,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864692,"byte_end":10864697,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864698,"byte_end":10864701,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ async fn my_async_operation() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864702,"byte_end":10864737,"line_start":309,"line_end":309,"column_start":1,"column_end":36}},{"value":"/     // Do something here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864738,"byte_end":10864766,"line_start":310,"line_end":310,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864767,"byte_end":10864772,"line_start":311,"line_end":311,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864773,"byte_end":10864776,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864777,"byte_end":10864795,"line_start":313,"line_end":313,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864796,"byte_end":10864817,"line_start":314,"line_end":314,"column_start":1,"column_end":22}},{"value":"/     // Load initial configuration value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864818,"byte_end":10864861,"line_start":315,"line_end":315,"column_start":1,"column_end":44}},{"value":"/     let mut config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864862,"byte_end":10864927,"line_start":316,"line_end":316,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864928,"byte_end":10864931,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/     // Create the watch channel, initialized with the loaded configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10864932,"byte_end":10865010,"line_start":318,"line_end":318,"column_start":1,"column_end":79}},{"value":"/     let (tx, rx) = watch::channel(config.clone());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865011,"byte_end":10865065,"line_start":319,"line_end":319,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865066,"byte_end":10865069,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/     // Spawn a task to monitor the file.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865070,"byte_end":10865114,"line_start":321,"line_end":321,"column_start":1,"column_end":45}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865115,"byte_end":10865148,"line_start":322,"line_end":322,"column_start":1,"column_end":34}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865149,"byte_end":10865167,"line_start":323,"line_end":323,"column_start":1,"column_end":19}},{"value":"/             // Wait 10 seconds between checks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865168,"byte_end":10865217,"line_start":324,"line_end":324,"column_start":1,"column_end":50}},{"value":"/             time::sleep(Duration::from_secs(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865218,"byte_end":10865277,"line_start":325,"line_end":325,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865278,"byte_end":10865281,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/             // Load the configuration file","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865282,"byte_end":10865328,"line_start":327,"line_end":327,"column_start":1,"column_end":47}},{"value":"/             let new_config = Config::load_from_file().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865329,"byte_end":10865402,"line_start":328,"line_end":328,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865403,"byte_end":10865406,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/             // If the configuration changed, send the new config value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865407,"byte_end":10865481,"line_start":330,"line_end":330,"column_start":1,"column_end":75}},{"value":"/             // on the watch channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865482,"byte_end":10865522,"line_start":331,"line_end":331,"column_start":1,"column_end":41}},{"value":"/             if new_config != config {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865523,"byte_end":10865564,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/                 tx.send(new_config.clone()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865565,"byte_end":10865622,"line_start":333,"line_end":333,"column_start":1,"column_end":58}},{"value":"/                 config = new_config;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865623,"byte_end":10865663,"line_start":334,"line_end":334,"column_start":1,"column_end":41}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865664,"byte_end":10865681,"line_start":335,"line_end":335,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865682,"byte_end":10865695,"line_start":336,"line_end":336,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865696,"byte_end":10865707,"line_start":337,"line_end":337,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865708,"byte_end":10865711,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/     let mut handles = vec![];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865712,"byte_end":10865745,"line_start":339,"line_end":339,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865746,"byte_end":10865749,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/     // Spawn tasks that runs the async operation for at most `timeout`. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865750,"byte_end":10865828,"line_start":341,"line_end":341,"column_start":1,"column_end":79}},{"value":"/     // the timeout elapses, restart the operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865829,"byte_end":10865883,"line_start":342,"line_end":342,"column_start":1,"column_end":55}},{"value":"/     //","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865884,"byte_end":10865894,"line_start":343,"line_end":343,"column_start":1,"column_end":11}},{"value":"/     // The task simultaneously watches the `Config` for changes. When the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865895,"byte_end":10865972,"line_start":344,"line_end":344,"column_start":1,"column_end":78}},{"value":"/     // timeout duration changes, the timeout is updated without restarting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10865973,"byte_end":10866051,"line_start":345,"line_end":345,"column_start":1,"column_end":79}},{"value":"/     // the in-flight operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866052,"byte_end":10866087,"line_start":346,"line_end":346,"column_start":1,"column_end":36}},{"value":"/     for _ in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866088,"byte_end":10866111,"line_start":347,"line_end":347,"column_start":1,"column_end":24}},{"value":"/         // Clone a config watch handle for use in this task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866112,"byte_end":10866175,"line_start":348,"line_end":348,"column_start":1,"column_end":64}},{"value":"/         let mut rx = rx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866176,"byte_end":10866212,"line_start":349,"line_end":349,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866213,"byte_end":10866216,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/         let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866217,"byte_end":10866267,"line_start":351,"line_end":351,"column_start":1,"column_end":51}},{"value":"/             // Start the initial operation and pin the future to the stack.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866268,"byte_end":10866347,"line_start":352,"line_end":352,"column_start":1,"column_end":80}},{"value":"/             // Pinning to the stack is required to resume the operation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866348,"byte_end":10866423,"line_start":353,"line_end":353,"column_start":1,"column_end":76}},{"value":"/             // across multiple calls to `select!`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866424,"byte_end":10866477,"line_start":354,"line_end":354,"column_start":1,"column_end":54}},{"value":"/             let op = my_async_operation();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866478,"byte_end":10866524,"line_start":355,"line_end":355,"column_start":1,"column_end":47}},{"value":"/             tokio::pin!(op);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866525,"byte_end":10866557,"line_start":356,"line_end":356,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866558,"byte_end":10866561,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/             // Get the initial config value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866562,"byte_end":10866609,"line_start":358,"line_end":358,"column_start":1,"column_end":48}},{"value":"/             let mut conf = rx.borrow().clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866610,"byte_end":10866661,"line_start":359,"line_end":359,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866662,"byte_end":10866665,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/             let mut op_start = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866666,"byte_end":10866716,"line_start":361,"line_end":361,"column_start":1,"column_end":51}},{"value":"/             let sleep = time::sleep_until(op_start + conf.timeout);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866717,"byte_end":10866788,"line_start":362,"line_end":362,"column_start":1,"column_end":72}},{"value":"/             tokio::pin!(sleep);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866789,"byte_end":10866824,"line_start":363,"line_end":363,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866825,"byte_end":10866828,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/             loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866829,"byte_end":10866851,"line_start":365,"line_end":365,"column_start":1,"column_end":23}},{"value":"/                 tokio::select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866852,"byte_end":10866888,"line_start":366,"line_end":366,"column_start":1,"column_end":37}},{"value":"/                     _ = &mut sleep => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866889,"byte_end":10866932,"line_start":367,"line_end":367,"column_start":1,"column_end":44}},{"value":"/                         // The operation elapsed. Restart it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866933,"byte_end":10866997,"line_start":368,"line_end":368,"column_start":1,"column_end":65}},{"value":"/                         op.set(my_async_operation());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10866998,"byte_end":10867055,"line_start":369,"line_end":369,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867056,"byte_end":10867059,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/                         // Track the new start time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867060,"byte_end":10867115,"line_start":371,"line_end":371,"column_start":1,"column_end":56}},{"value":"/                         op_start = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867116,"byte_end":10867170,"line_start":372,"line_end":372,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867171,"byte_end":10867174,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/                         // Restart the timeout","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867175,"byte_end":10867225,"line_start":374,"line_end":374,"column_start":1,"column_end":51}},{"value":"/                         sleep.set(time::sleep_until(op_start + conf.timeout));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867226,"byte_end":10867308,"line_start":375,"line_end":375,"column_start":1,"column_end":83}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867309,"byte_end":10867334,"line_start":376,"line_end":376,"column_start":1,"column_end":26}},{"value":"/                     _ = rx.changed() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867335,"byte_end":10867380,"line_start":377,"line_end":377,"column_start":1,"column_end":46}},{"value":"/                         conf = rx.borrow().clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867381,"byte_end":10867436,"line_start":378,"line_end":378,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867437,"byte_end":10867440,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"/                         // The configuration has been updated. Update the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867441,"byte_end":10867518,"line_start":380,"line_end":380,"column_start":1,"column_end":78}},{"value":"/                         // `sleep` using the new `timeout` value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867519,"byte_end":10867588,"line_start":381,"line_end":381,"column_start":1,"column_end":70}},{"value":"/                         sleep.as_mut().reset(op_start + conf.timeout);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867589,"byte_end":10867663,"line_start":382,"line_end":382,"column_start":1,"column_end":75}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867664,"byte_end":10867689,"line_start":383,"line_end":383,"column_start":1,"column_end":26}},{"value":"/                     _ = &mut op => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867690,"byte_end":10867730,"line_start":384,"line_end":384,"column_start":1,"column_end":41}},{"value":"/                         // The operation completed!","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867731,"byte_end":10867786,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/                         return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867787,"byte_end":10867821,"line_start":386,"line_end":386,"column_start":1,"column_end":35}},{"value":"/                     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867822,"byte_end":10867847,"line_start":387,"line_end":387,"column_start":1,"column_end":26}},{"value":"/                 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867848,"byte_end":10867869,"line_start":388,"line_end":388,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867870,"byte_end":10867887,"line_start":389,"line_end":389,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867888,"byte_end":10867903,"line_start":390,"line_end":390,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867904,"byte_end":10867907,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/         handles.push(handle);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867908,"byte_end":10867941,"line_start":392,"line_end":392,"column_start":1,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867942,"byte_end":10867951,"line_start":393,"line_end":393,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867952,"byte_end":10867955,"line_start":394,"line_end":394,"column_start":1,"column_end":4}},{"value":"/     for handle in handles.drain(..) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867956,"byte_end":10867997,"line_start":395,"line_end":395,"column_start":1,"column_end":42}},{"value":"/         handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10867998,"byte_end":10868032,"line_start":396,"line_end":396,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868033,"byte_end":10868042,"line_start":397,"line_end":397,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868043,"byte_end":10868048,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868049,"byte_end":10868056,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868057,"byte_end":10868060,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"/ [`watch` channel]: mod@crate::sync::watch","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868061,"byte_end":10868106,"line_start":401,"line_end":401,"column_start":1,"column_end":46}},{"value":"/ [`broadcast` channel]: mod@crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868107,"byte_end":10868160,"line_start":402,"line_end":402,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868161,"byte_end":10868164,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # State synchronization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868165,"byte_end":10868192,"line_start":404,"line_end":404,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868193,"byte_end":10868196,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ The remaining synchronization primitives focus on synchronizing state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868197,"byte_end":10868271,"line_start":406,"line_end":406,"column_start":1,"column_end":75}},{"value":"/ These are asynchronous equivalents to versions provided by `std`. They","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868272,"byte_end":10868346,"line_start":407,"line_end":407,"column_start":1,"column_end":75}},{"value":"/ operate in a similar way as their `std` counterparts but will wait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868347,"byte_end":10868417,"line_start":408,"line_end":408,"column_start":1,"column_end":71}},{"value":"/ asynchronously instead of blocking the thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868418,"byte_end":10868468,"line_start":409,"line_end":409,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868469,"byte_end":10868472,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`](Barrier) Ensures multiple tasks will wait for each other to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868473,"byte_end":10868550,"line_start":411,"line_end":411,"column_start":1,"column_end":78}},{"value":"/   reach a point in the program, before continuing execution all together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868551,"byte_end":10868628,"line_start":412,"line_end":412,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868629,"byte_end":10868632,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ * [`Mutex`](Mutex) Mutual Exclusion mechanism, which ensures that at most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868633,"byte_end":10868710,"line_start":414,"line_end":414,"column_start":1,"column_end":78}},{"value":"/   one thread at a time is able to access some data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868711,"byte_end":10868766,"line_start":415,"line_end":415,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868767,"byte_end":10868770,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ * [`Notify`](Notify) Basic task notification. `Notify` supports notifying a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868771,"byte_end":10868850,"line_start":417,"line_end":417,"column_start":1,"column_end":80}},{"value":"/   receiving task without sending data. In this case, the task wakes up and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868851,"byte_end":10868929,"line_start":418,"line_end":418,"column_start":1,"column_end":79}},{"value":"/   resumes processing.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868930,"byte_end":10868955,"line_start":419,"line_end":419,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868956,"byte_end":10868959,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ * [`RwLock`](RwLock) Provides a mutual exclusion mechanism which allows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10868960,"byte_end":10869035,"line_start":421,"line_end":421,"column_start":1,"column_end":76}},{"value":"/   multiple readers at the same time, while allowing only one writer at a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869036,"byte_end":10869112,"line_start":422,"line_end":422,"column_start":1,"column_end":77}},{"value":"/   time. In some cases, this can be more efficient than a mutex.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869113,"byte_end":10869180,"line_start":423,"line_end":423,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869181,"byte_end":10869184,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ * [`Semaphore`](Semaphore) Limits the amount of concurrency. A semaphore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869185,"byte_end":10869261,"line_start":425,"line_end":425,"column_start":1,"column_end":77}},{"value":"/   holds a number of permits, which tasks may request in order to enter a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869262,"byte_end":10869338,"line_start":426,"line_end":426,"column_start":1,"column_end":77}},{"value":"/   critical section. Semaphores are useful for implementing limiting or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869339,"byte_end":10869413,"line_start":427,"line_end":427,"column_start":1,"column_end":75}},{"value":"/   bounding of any kind.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869414,"byte_end":10869441,"line_start":428,"line_end":428,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6973},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872179,"byte_end":10872186,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"Barrier","qualname":"::sync::barrier::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":6974},{"krate":0,"index":6975},{"krate":0,"index":6976}],"decl_id":null,"docs":" A barrier enables multiple tasks to synchronize the beginning of some computation.","sig":null,"attributes":[{"value":"/ A barrier enables multiple tasks to synchronize the beginning of some computation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871118,"byte_end":10871204,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871205,"byte_end":10871208,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871209,"byte_end":10871216,"line_start":7,"line_end":7,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871217,"byte_end":10871237,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871238,"byte_end":10871261,"line_start":9,"line_end":9,"column_start":1,"column_end":24}},{"value":"/ use tokio::sync::Barrier;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871262,"byte_end":10871291,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871292,"byte_end":10871315,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871316,"byte_end":10871319,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let mut handles = Vec::with_capacity(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871320,"byte_end":10871365,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ let barrier = Arc::new(Barrier::new(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871366,"byte_end":10871411,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ for _ in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871412,"byte_end":10871432,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"/     let c = barrier.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871433,"byte_end":10871465,"line_start":16,"line_end":16,"column_start":1,"column_end":33}},{"value":"/     // The same messages will be printed together.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871466,"byte_end":10871520,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/     // You will NOT see any interleaving.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871521,"byte_end":10871566,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/     handles.push(tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871567,"byte_end":10871613,"line_start":19,"line_end":19,"column_start":1,"column_end":47}},{"value":"/         println!(\"before wait\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871614,"byte_end":10871650,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/         let wait_result = c.wait().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871651,"byte_end":10871696,"line_start":21,"line_end":21,"column_start":1,"column_end":46}},{"value":"/         println!(\"after wait\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871697,"byte_end":10871732,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/         wait_result","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871733,"byte_end":10871756,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/     }));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871757,"byte_end":10871769,"line_start":24,"line_end":24,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871770,"byte_end":10871775,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871776,"byte_end":10871779,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Will not resolve until all \"after wait\" messages have been printed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871780,"byte_end":10871853,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ let mut num_leaders = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871854,"byte_end":10871882,"line_start":28,"line_end":28,"column_start":1,"column_end":29}},{"value":"/ for handle in handles {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871883,"byte_end":10871910,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"/     let wait_result = handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871911,"byte_end":10871959,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/     if wait_result.is_leader() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871960,"byte_end":10871996,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/         num_leaders += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10871997,"byte_end":10872026,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872027,"byte_end":10872036,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872037,"byte_end":10872042,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872043,"byte_end":10872046,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Exactly one barrier will resolve as the \"leader\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872047,"byte_end":10872102,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(num_leaders, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872103,"byte_end":10872134,"line_start":37,"line_end":37,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872135,"byte_end":10872142,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872143,"byte_end":10872150,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5384},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872641,"byte_end":10872644,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Barrier>::new","value":"pub fn new(usize) -> Barrier","parent":null,"children":[],"decl_id":null,"docs":" Creates a new barrier that can block a given number of tasks.","sig":null,"attributes":[{"value":"/ Creates a new barrier that can block a given number of tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872409,"byte_end":10872474,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872479,"byte_end":10872482,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ A barrier will block `n`-1 tasks which call [`Barrier::wait`] and then wake up all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872487,"byte_end":10872573,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/ tasks at once when the `n`th task calls `wait`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872578,"byte_end":10872629,"line_start":58,"line_end":58,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873713,"byte_end":10873717,"line_start":88,"line_end":88,"column_start":18,"column_end":22},"name":"wait","qualname":"<Barrier>::wait","value":"pub async fn wait<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Does not resolve until all tasks have rendezvoused here.","sig":null,"attributes":[{"value":"/ Does not resolve until all tasks have rendezvoused here.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873243,"byte_end":10873303,"line_start":80,"line_end":80,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873308,"byte_end":10873311,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Barriers are re-usable after all tasks have rendezvoused once, and can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873316,"byte_end":10873390,"line_start":82,"line_end":82,"column_start":5,"column_end":79}},{"value":"/ be used continuously.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873395,"byte_end":10873420,"line_start":83,"line_end":83,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873425,"byte_end":10873428,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ A single (arbitrary) future will receive a [`BarrierWaitResult`] that returns `true` from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873433,"byte_end":10873526,"line_start":85,"line_end":85,"column_start":5,"column_end":98}},{"value":"/ [`BarrierWaitResult::is_leader`] when returning from this function, and all other tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873531,"byte_end":10873622,"line_start":86,"line_end":86,"column_start":5,"column_end":96}},{"value":"/ will receive a result that will return `false` from `is_leader`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10873627,"byte_end":10873695,"line_start":87,"line_end":87,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":6985},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875636,"byte_end":10875653,"line_start":134,"line_end":134,"column_start":12,"column_end":29},"name":"BarrierWaitResult","qualname":"::sync::barrier::BarrierWaitResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.\n","sig":null,"attributes":[{"value":"/ A `BarrierWaitResult` is returned by `wait` when all tasks in the `Barrier` have rendezvoused.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875502,"byte_end":10875600,"line_start":132,"line_end":132,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":5389},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875893,"byte_end":10875902,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"is_leader","qualname":"<BarrierWaitResult>::is_leader","value":"pub fn is_leader(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this task from wait is the \"leader task\".","sig":null,"attributes":[{"value":"/ Returns `true` if this task from wait is the \"leader task\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875691,"byte_end":10875754,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875759,"byte_end":10875762,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Only one task will have `true` returned from their result, all other tasks will have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875767,"byte_end":10875855,"line_start":139,"line_end":139,"column_start":5,"column_end":93}},{"value":"/ `false` returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875860,"byte_end":10875881,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":5393},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"broadcast","qualname":"::sync::broadcast","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396},{"krate":0,"index":5397},{"krate":0,"index":5398},{"krate":0,"index":5399},{"krate":0,"index":5400},{"krate":0,"index":5401},{"krate":0,"index":5402},{"krate":0,"index":5403},{"krate":0,"index":5404},{"krate":0,"index":5405},{"krate":0,"index":5406},{"krate":0,"index":13823},{"krate":0,"index":5407},{"krate":0,"index":5408},{"krate":0,"index":5409},{"krate":0,"index":13829},{"krate":0,"index":5410},{"krate":0,"index":5411},{"krate":0,"index":5412},{"krate":0,"index":5413},{"krate":0,"index":5414},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5422},{"krate":0,"index":5435},{"krate":0,"index":5436},{"krate":0,"index":5442},{"krate":0,"index":5447},{"krate":0,"index":5453},{"krate":0,"index":5458},{"krate":0,"index":5462},{"krate":0,"index":5467},{"krate":0,"index":5470},{"krate":0,"index":5473},{"krate":0,"index":5474},{"krate":0,"index":5476},{"krate":0,"index":5478},{"krate":0,"index":5480},{"krate":0,"index":5482},{"krate":0,"index":5484},{"krate":0,"index":5493},{"krate":0,"index":5495},{"krate":0,"index":5497},{"krate":0,"index":5500},{"krate":0,"index":5503},{"krate":0,"index":5507},{"krate":0,"index":5513},{"krate":0,"index":5516},{"krate":0,"index":5521},{"krate":0,"index":5526},{"krate":0,"index":5532},{"krate":0,"index":5538},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5549},{"krate":0,"index":5554}],"decl_id":null,"docs":" A multi-producer, multi-consumer broadcast queue. Each sent value is seen by\n all consumers.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, multi-consumer broadcast queue. Each sent value is seen by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10875944,"byte_end":10876024,"line_start":1,"line_end":1,"column_start":1,"column_end":81}},{"value":"/ all consumers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876025,"byte_end":10876043,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876044,"byte_end":10876047,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ A [`Sender`] is used to broadcast values to **all** connected [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876048,"byte_end":10876126,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ values. [`Sender`] handles are clone-able, allowing concurrent send and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876127,"byte_end":10876202,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ receive actions. [`Sender`] and [`Receiver`] are both `Send` and `Sync` as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876203,"byte_end":10876281,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ long as `T` is also `Send` or `Sync` respectively.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876282,"byte_end":10876336,"line_start":7,"line_end":7,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876337,"byte_end":10876340,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ When a value is sent, **all** [`Receiver`] handles are notified and will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876341,"byte_end":10876417,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ receive the value. The value is stored once inside the channel and cloned on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876418,"byte_end":10876498,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ demand for each receiver. Once all receivers have received a clone of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876499,"byte_end":10876576,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ value, the value is released from the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876577,"byte_end":10876627,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876628,"byte_end":10876631,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A channel is created by calling [`channel`], specifying the maximum number","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876632,"byte_end":10876710,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ of messages the channel can retain at any given time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876711,"byte_end":10876768,"line_start":15,"line_end":15,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876769,"byte_end":10876772,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ New [`Receiver`] handles are created by calling [`Sender::subscribe`]. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876773,"byte_end":10876851,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ returned [`Receiver`] will receive values sent **after** the call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876852,"byte_end":10876924,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `subscribe`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876925,"byte_end":10876941,"line_start":19,"line_end":19,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876942,"byte_end":10876945,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Lagging","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876946,"byte_end":10876960,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876961,"byte_end":10876964,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ As sent messages must be retained until **all** [`Receiver`] handles receive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10876965,"byte_end":10877045,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/ a clone, broadcast channels are susceptible to the \"slow receiver\" problem.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877046,"byte_end":10877125,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ In this case, all but one receiver are able to receive values at the rate","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877126,"byte_end":10877203,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ they are sent. Because one receiver is stalled, the channel starts to fill","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877204,"byte_end":10877282,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877283,"byte_end":10877290,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877291,"byte_end":10877294,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This broadcast channel implementation handles this case by setting a hard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877295,"byte_end":10877372,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ upper bound on the number of values the channel may retain at any given","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877373,"byte_end":10877448,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ time. This upper bound is passed to the [`channel`] function as an argument.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877449,"byte_end":10877529,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877530,"byte_end":10877533,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ If a value is sent when the channel is at capacity, the oldest value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877534,"byte_end":10877606,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ currently held by the channel is released. This frees up space for the new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877607,"byte_end":10877685,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/ value. Any receiver that has not yet seen the released value will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877686,"byte_end":10877762,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ [`RecvError::Lagged`] the next time [`recv`] is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877763,"byte_end":10877822,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877823,"byte_end":10877826,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Once [`RecvError::Lagged`] is returned, the lagging receiver's position is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877827,"byte_end":10877905,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ updated to the oldest value contained by the channel. The next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877906,"byte_end":10877980,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ [`recv`] will return this value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10877981,"byte_end":10878017,"line_start":40,"line_end":40,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878018,"byte_end":10878021,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This behavior enables a receiver to detect when it has lagged so far behind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878022,"byte_end":10878101,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ that data has been dropped. The caller may decide how to respond to this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878102,"byte_end":10878179,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ either by aborting its task or by tolerating lost messages and resuming","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878180,"byte_end":10878255,"line_start":44,"line_end":44,"column_start":1,"column_end":76}},{"value":"/ consumption of the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878256,"byte_end":10878287,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878288,"byte_end":10878291,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Closing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878292,"byte_end":10878306,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878307,"byte_end":10878310,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ When **all** [`Sender`] handles have been dropped, no new values may be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878311,"byte_end":10878386,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ sent. At this point, the channel is \"closed\". Once a receiver has received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878387,"byte_end":10878465,"line_start":50,"line_end":50,"column_start":1,"column_end":79}},{"value":"/ all values retained by the channel, the next call to [`recv`] will return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878466,"byte_end":10878543,"line_start":51,"line_end":51,"column_start":1,"column_end":78}},{"value":"/ with [`RecvError::Closed`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878544,"byte_end":10878575,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878576,"byte_end":10878579,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878580,"byte_end":10878626,"line_start":54,"line_end":54,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878627,"byte_end":10878695,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878696,"byte_end":10878746,"line_start":56,"line_end":56,"column_start":1,"column_end":51}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878747,"byte_end":10878795,"line_start":57,"line_end":57,"column_start":1,"column_end":49}},{"value":"/ [`RecvError::Lagged`]: crate::sync::broadcast::error::RecvError::Lagged","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878796,"byte_end":10878871,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ [`RecvError::Closed`]: crate::sync::broadcast::error::RecvError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878872,"byte_end":10878947,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10878948,"byte_end":10879000,"line_start":60,"line_end":60,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879001,"byte_end":10879004,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879005,"byte_end":10879019,"line_start":62,"line_end":62,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879020,"byte_end":10879023,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ Basic usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879024,"byte_end":10879039,"line_start":64,"line_end":64,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879040,"byte_end":10879043,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879044,"byte_end":10879051,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879052,"byte_end":10879083,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879084,"byte_end":10879087,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879088,"byte_end":10879106,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879107,"byte_end":10879128,"line_start":70,"line_end":70,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879129,"byte_end":10879180,"line_start":71,"line_end":71,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879181,"byte_end":10879218,"line_start":72,"line_end":72,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879219,"byte_end":10879222,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879223,"byte_end":10879256,"line_start":74,"line_end":74,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879257,"byte_end":10879311,"line_start":75,"line_end":75,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879312,"byte_end":10879366,"line_start":76,"line_end":76,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879367,"byte_end":10879378,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879379,"byte_end":10879382,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879383,"byte_end":10879416,"line_start":79,"line_end":79,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879417,"byte_end":10879471,"line_start":80,"line_end":80,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879472,"byte_end":10879526,"line_start":81,"line_end":81,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879527,"byte_end":10879538,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879539,"byte_end":10879542,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879543,"byte_end":10879572,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879573,"byte_end":10879602,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879603,"byte_end":10879608,"line_start":86,"line_end":86,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879609,"byte_end":10879616,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879617,"byte_end":10879620,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Handling lag","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879621,"byte_end":10879637,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879638,"byte_end":10879641,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879642,"byte_end":10879649,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879650,"byte_end":10879681,"line_start":92,"line_end":92,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879682,"byte_end":10879685,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879686,"byte_end":10879704,"line_start":94,"line_end":94,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879705,"byte_end":10879726,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879727,"byte_end":10879776,"line_start":96,"line_end":96,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879777,"byte_end":10879780,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879781,"byte_end":10879810,"line_start":98,"line_end":98,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879811,"byte_end":10879840,"line_start":99,"line_end":99,"column_start":1,"column_end":30}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879841,"byte_end":10879870,"line_start":100,"line_end":100,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879871,"byte_end":10879874,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879875,"byte_end":10879912,"line_start":102,"line_end":102,"column_start":1,"column_end":38}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879913,"byte_end":10879955,"line_start":103,"line_end":103,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879956,"byte_end":10879959,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10879960,"byte_end":10880029,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880030,"byte_end":10880033,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880034,"byte_end":10880083,"line_start":107,"line_end":107,"column_start":1,"column_end":50}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880084,"byte_end":10880133,"line_start":108,"line_end":108,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880134,"byte_end":10880139,"line_start":109,"line_end":109,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880140,"byte_end":10880147,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5415},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881344,"byte_end":10881350,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::broadcast::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5417}],"decl_id":null,"docs":" Sending-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Sending-half of the [`broadcast`] channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880551,"byte_end":10880597,"line_start":126,"line_end":126,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880598,"byte_end":10880601,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ May be used from many threads. Messages can be sent with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880602,"byte_end":10880662,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`send`][Sender::send].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880663,"byte_end":10880690,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880691,"byte_end":10880694,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880695,"byte_end":10880709,"line_start":131,"line_end":131,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880710,"byte_end":10880713,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880714,"byte_end":10880721,"line_start":133,"line_end":133,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880722,"byte_end":10880753,"line_start":134,"line_end":134,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880754,"byte_end":10880757,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880758,"byte_end":10880776,"line_start":136,"line_end":136,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880777,"byte_end":10880798,"line_start":137,"line_end":137,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880799,"byte_end":10880850,"line_start":138,"line_end":138,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880851,"byte_end":10880888,"line_start":139,"line_end":139,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880889,"byte_end":10880892,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880893,"byte_end":10880926,"line_start":141,"line_end":141,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880927,"byte_end":10880981,"line_start":142,"line_end":142,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10880982,"byte_end":10881036,"line_start":143,"line_end":143,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881037,"byte_end":10881048,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881049,"byte_end":10881052,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881053,"byte_end":10881086,"line_start":146,"line_end":146,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881087,"byte_end":10881141,"line_start":147,"line_end":147,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881142,"byte_end":10881196,"line_start":148,"line_end":148,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881197,"byte_end":10881208,"line_start":149,"line_end":149,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881209,"byte_end":10881212,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881213,"byte_end":10881242,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881243,"byte_end":10881272,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881273,"byte_end":10881278,"line_start":153,"line_end":153,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881279,"byte_end":10881286,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881287,"byte_end":10881290,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881291,"byte_end":10881332,"line_start":156,"line_end":156,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":5418},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882398,"byte_end":10882406,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::broadcast::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5420},{"krate":0,"index":5421}],"decl_id":null,"docs":" Receiving-half of the [`broadcast`] channel.","sig":null,"attributes":[{"value":"/ Receiving-half of the [`broadcast`] channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881387,"byte_end":10881435,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881436,"byte_end":10881439,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ Must not be used concurrently. Messages may be retrieved using","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881440,"byte_end":10881506,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ [`recv`][Receiver::recv].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881507,"byte_end":10881536,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881537,"byte_end":10881540,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`BroadcastStream`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881541,"byte_end":10881619,"line_start":166,"line_end":166,"column_start":1,"column_end":79}},{"value":"/ wrapper.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881620,"byte_end":10881632,"line_start":167,"line_end":167,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881633,"byte_end":10881636,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ [`BroadcastStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.BroadcastStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881637,"byte_end":10881744,"line_start":169,"line_end":169,"column_start":1,"column_end":108}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881745,"byte_end":10881748,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881749,"byte_end":10881763,"line_start":171,"line_end":171,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881764,"byte_end":10881767,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881768,"byte_end":10881775,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881776,"byte_end":10881807,"line_start":174,"line_end":174,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881808,"byte_end":10881811,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881812,"byte_end":10881830,"line_start":176,"line_end":176,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881831,"byte_end":10881852,"line_start":177,"line_end":177,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881853,"byte_end":10881904,"line_start":178,"line_end":178,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881905,"byte_end":10881942,"line_start":179,"line_end":179,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881943,"byte_end":10881946,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881947,"byte_end":10881980,"line_start":181,"line_end":181,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10881981,"byte_end":10882035,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882036,"byte_end":10882090,"line_start":183,"line_end":183,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882091,"byte_end":10882102,"line_start":184,"line_end":184,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882103,"byte_end":10882106,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882107,"byte_end":10882140,"line_start":186,"line_end":186,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882141,"byte_end":10882195,"line_start":187,"line_end":187,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882196,"byte_end":10882250,"line_start":188,"line_end":188,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882251,"byte_end":10882262,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882263,"byte_end":10882266,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882267,"byte_end":10882296,"line_start":191,"line_end":191,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882297,"byte_end":10882326,"line_start":192,"line_end":192,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882327,"byte_end":10882332,"line_start":193,"line_end":193,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882333,"byte_end":10882340,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882341,"byte_end":10882344,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ [`broadcast`]: crate::sync::broadcast","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882345,"byte_end":10882386,"line_start":196,"line_end":196,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":5422},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882555,"byte_end":10882560,"line_start":205,"line_end":205,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::broadcast::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","parent":null,"children":[{"krate":0,"index":5423},{"krate":0,"index":6992},{"krate":0,"index":6996},{"krate":0,"index":5424},{"krate":0,"index":5427},{"krate":0,"index":6999},{"krate":0,"index":7009},{"krate":0,"index":7005},{"krate":0,"index":7006},{"krate":0,"index":5429},{"krate":0,"index":5431},{"krate":0,"index":7011},{"krate":0,"index":7023},{"krate":0,"index":7019},{"krate":0,"index":7020},{"krate":0,"index":5432},{"krate":0,"index":5434}],"decl_id":null,"docs":" Broadcast error types\n","sig":null,"attributes":[{"value":"/ Broadcast error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882567,"byte_end":10882592,"line_start":206,"line_end":206,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":6992},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883064,"byte_end":10883073,"line_start":219,"line_end":219,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::broadcast::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by from the [`send`] function on a [`Sender`].","sig":null,"attributes":[{"value":"/ Error returned by from the [`send`] function on a [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882617,"byte_end":10882682,"line_start":210,"line_end":210,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882687,"byte_end":10882690,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ A **send** operation can only fail if there are no active receivers,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882695,"byte_end":10882767,"line_start":212,"line_end":212,"column_start":5,"column_end":77}},{"value":"/ implying that the message could never be received. The error contains the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882772,"byte_end":10882849,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/ message being sent as a payload so it can be recovered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882854,"byte_end":10882913,"line_start":214,"line_end":214,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882918,"byte_end":10882921,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ [`send`]: crate::sync::broadcast::Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882926,"byte_end":10882976,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10882981,"byte_end":10883027,"line_start":217,"line_end":217,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":6995},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883077,"byte_end":10883082,"line_start":219,"line_end":219,"column_start":29,"column_end":34},"name":"0","qualname":"::sync::broadcast::error::SendError::0","value":"T","parent":{"krate":0,"index":6992},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7000},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883679,"byte_end":10883685,"line_start":237,"line_end":237,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::RecvError::Closed","value":"RecvError::Closed","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883574,"byte_end":10883649,"line_start":235,"line_end":235,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883658,"byte_end":10883670,"line_start":236,"line_end":236,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7002},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883911,"byte_end":10883917,"line_start":243,"line_end":243,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::RecvError::Lagged","value":"RecvError::Lagged(u64)","parent":{"krate":0,"index":6999},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind. Attempting to receive again will\n return the oldest message still retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind. Attempting to receive again will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883696,"byte_end":10883768,"line_start":239,"line_end":239,"column_start":9,"column_end":81}},{"value":"/ return the oldest message still retained by the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883777,"byte_end":10883837,"line_start":240,"line_end":240,"column_start":9,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883846,"byte_end":10883849,"line_start":241,"line_end":241,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883858,"byte_end":10883902,"line_start":242,"line_end":242,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":6999},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883554,"byte_end":10883563,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"RecvError","qualname":"::sync::broadcast::error::RecvError","value":"pub enum RecvError {\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind. Attempting to receive again will\n    /// return the oldest message still retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7000},{"krate":0,"index":7002}],"decl_id":null,"docs":" An error returned from the [`recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`recv`] function on a [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883321,"byte_end":10883388,"line_start":229,"line_end":229,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883393,"byte_end":10883396,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883401,"byte_end":10883453,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883458,"byte_end":10883508,"line_start":232,"line_end":232,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7012},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884757,"byte_end":10884762,"line_start":267,"line_end":267,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::broadcast::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7011},"children":[],"decl_id":null,"docs":" The channel is currently empty. There are still active\n [`Sender`] handles, so data may yet become available.","sig":null,"attributes":[{"value":"/ The channel is currently empty. There are still active","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884557,"byte_end":10884615,"line_start":263,"line_end":263,"column_start":9,"column_end":67}},{"value":"/ [`Sender`] handles, so data may yet become available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884624,"byte_end":10884681,"line_start":264,"line_end":264,"column_start":9,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884690,"byte_end":10884693,"line_start":265,"line_end":265,"column_start":9,"column_end":12}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884702,"byte_end":10884748,"line_start":266,"line_end":266,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884878,"byte_end":10884884,"line_start":271,"line_end":271,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::broadcast::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7011},"children":[],"decl_id":null,"docs":" There are no more active senders implying no further messages will ever\n be sent.\n","sig":null,"attributes":[{"value":"/ There are no more active senders implying no further messages will ever","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884773,"byte_end":10884848,"line_start":269,"line_end":269,"column_start":9,"column_end":84}},{"value":"/ be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884857,"byte_end":10884869,"line_start":270,"line_end":270,"column_start":9,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7016},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885157,"byte_end":10885163,"line_start":278,"line_end":278,"column_start":9,"column_end":15},"name":"Lagged","qualname":"::sync::broadcast::error::TryRecvError::Lagged","value":"TryRecvError::Lagged(u64)","parent":{"krate":0,"index":7011},"children":[],"decl_id":null,"docs":" The receiver lagged too far behind and has been forcibly disconnected.\n Attempting to receive again will return the oldest message still\n retained by the channel.","sig":null,"attributes":[{"value":"/ The receiver lagged too far behind and has been forcibly disconnected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884895,"byte_end":10884969,"line_start":273,"line_end":273,"column_start":9,"column_end":83}},{"value":"/ Attempting to receive again will return the oldest message still","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884978,"byte_end":10885046,"line_start":274,"line_end":274,"column_start":9,"column_end":77}},{"value":"/ retained by the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885055,"byte_end":10885083,"line_start":275,"line_end":275,"column_start":9,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885092,"byte_end":10885095,"line_start":276,"line_end":276,"column_start":9,"column_end":12}},{"value":"/ Includes the number of skipped messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885104,"byte_end":10885148,"line_start":277,"line_end":277,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":7011},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884534,"byte_end":10884546,"line_start":262,"line_end":262,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::broadcast::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The channel is currently empty. There are still active\n    /// [`Sender`] handles, so data may yet become available.\n    ///\n    /// [`Sender`]: crate::sync::broadcast::Sender\n    Empty,\n\n    /// There are no more active senders implying no further messages will ever\n    /// be sent.\n    Closed,\n\n    /// The receiver lagged too far behind and has been forcibly disconnected.\n    /// Attempting to receive again will return the oldest message still\n    /// retained by the channel.\n    ///\n    /// Includes the number of skipped messages.\n    Lagged(u64),\n}","parent":null,"children":[{"krate":0,"index":7012},{"krate":0,"index":7014},{"krate":0,"index":7016}],"decl_id":null,"docs":" An error returned from the [`try_recv`] function on a [`Receiver`].","sig":null,"attributes":[{"value":"/ An error returned from the [`try_recv`] function on a [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884289,"byte_end":10884360,"line_start":257,"line_end":257,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884365,"byte_end":10884368,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884373,"byte_end":10884433,"line_start":259,"line_end":259,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884438,"byte_end":10884488,"line_start":260,"line_end":260,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":5474},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889358,"byte_end":10889365,"line_start":428,"line_end":428,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::broadcast::channel","value":"pub fn channel<T: Clone>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a bounded, multi-producer, multi-consumer channel where each sent\n value is broadcasted to all active receivers.","sig":null,"attributes":[{"value":"/ Create a bounded, multi-producer, multi-consumer channel where each sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887732,"byte_end":10887808,"line_start":383,"line_end":383,"column_start":1,"column_end":77}},{"value":"/ value is broadcasted to all active receivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887809,"byte_end":10887858,"line_start":384,"line_end":384,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887859,"byte_end":10887862,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ All data sent on [`Sender`] will become available on every active","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887863,"byte_end":10887932,"line_start":386,"line_end":386,"column_start":1,"column_end":70}},{"value":"/ [`Receiver`] in the same order as it was sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887933,"byte_end":10887983,"line_start":387,"line_end":387,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887984,"byte_end":10887987,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887988,"byte_end":10888062,"line_start":389,"line_end":389,"column_start":1,"column_end":75}},{"value":"/ points in the process or it can be used concurrently from an `Arc`. New","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888063,"byte_end":10888138,"line_start":390,"line_end":390,"column_start":1,"column_end":76}},{"value":"/ `Receiver` handles are created by calling [`Sender::subscribe`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888139,"byte_end":10888207,"line_start":391,"line_end":391,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888208,"byte_end":10888211,"line_start":392,"line_end":392,"column_start":1,"column_end":4}},{"value":"/ If all [`Receiver`] handles are dropped, the `send` method will return a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888212,"byte_end":10888288,"line_start":393,"line_end":393,"column_start":1,"column_end":77}},{"value":"/ [`SendError`]. Similarly, if all [`Sender`] handles are dropped, the [`recv`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888289,"byte_end":10888370,"line_start":394,"line_end":394,"column_start":1,"column_end":82}},{"value":"/ method will return a [`RecvError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888371,"byte_end":10888410,"line_start":395,"line_end":395,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888411,"byte_end":10888414,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888415,"byte_end":10888461,"line_start":397,"line_end":397,"column_start":1,"column_end":47}},{"value":"/ [`Sender::subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888462,"byte_end":10888530,"line_start":398,"line_end":398,"column_start":1,"column_end":69}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888531,"byte_end":10888581,"line_start":399,"line_end":399,"column_start":1,"column_end":51}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888582,"byte_end":10888634,"line_start":400,"line_end":400,"column_start":1,"column_end":53}},{"value":"/ [`SendError`]: crate::sync::broadcast::error::SendError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888635,"byte_end":10888694,"line_start":401,"line_end":401,"column_start":1,"column_end":60}},{"value":"/ [`RecvError`]: crate::sync::broadcast::error::RecvError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888695,"byte_end":10888754,"line_start":402,"line_end":402,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888755,"byte_end":10888758,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888759,"byte_end":10888773,"line_start":404,"line_end":404,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888774,"byte_end":10888777,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888778,"byte_end":10888785,"line_start":406,"line_end":406,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888786,"byte_end":10888817,"line_start":407,"line_end":407,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888818,"byte_end":10888821,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888822,"byte_end":10888840,"line_start":409,"line_end":409,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888841,"byte_end":10888862,"line_start":410,"line_end":410,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888863,"byte_end":10888914,"line_start":411,"line_end":411,"column_start":1,"column_end":52}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888915,"byte_end":10888952,"line_start":412,"line_end":412,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888953,"byte_end":10888956,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888957,"byte_end":10888990,"line_start":414,"line_end":414,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10888991,"byte_end":10889045,"line_start":415,"line_end":415,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889046,"byte_end":10889100,"line_start":416,"line_end":416,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889101,"byte_end":10889112,"line_start":417,"line_end":417,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889113,"byte_end":10889116,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889117,"byte_end":10889150,"line_start":419,"line_end":419,"column_start":1,"column_end":34}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889151,"byte_end":10889205,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889206,"byte_end":10889260,"line_start":421,"line_end":421,"column_start":1,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889261,"byte_end":10889272,"line_start":422,"line_end":422,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889273,"byte_end":10889276,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889277,"byte_end":10889306,"line_start":424,"line_end":424,"column_start":1,"column_end":30}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889307,"byte_end":10889336,"line_start":425,"line_end":425,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889337,"byte_end":10889342,"line_start":426,"line_end":426,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10889343,"byte_end":10889350,"line_start":427,"line_end":427,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5486},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892417,"byte_end":10892421,"line_start":525,"line_end":525,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<usize, SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value to all active [`Receiver`] handles, returning\n it back if it could not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value to all active [`Receiver`] handles, returning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890567,"byte_end":10890641,"line_start":475,"line_end":475,"column_start":5,"column_end":79}},{"value":"/ it back if it could not be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890646,"byte_end":10890682,"line_start":476,"line_end":476,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890687,"byte_end":10890690,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when there is at least one active [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890695,"byte_end":10890770,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"/ handle. An unsuccessful send would be one where all associated","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890775,"byte_end":10890841,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ [`Receiver`] handles have already been dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890846,"byte_end":10890897,"line_start":480,"line_end":480,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890902,"byte_end":10890905,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890910,"byte_end":10890922,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890927,"byte_end":10890930,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ On success, the number of subscribed [`Receiver`] handles is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890935,"byte_end":10891009,"line_start":484,"line_end":484,"column_start":5,"column_end":79}},{"value":"/ This does not mean that this number of receivers will see the message as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891014,"byte_end":10891090,"line_start":485,"line_end":485,"column_start":5,"column_end":81}},{"value":"/ a receiver may drop before receiving the message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891095,"byte_end":10891148,"line_start":486,"line_end":486,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891153,"byte_end":10891156,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891161,"byte_end":10891171,"line_start":488,"line_end":488,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891176,"byte_end":10891179,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ A return value of `Ok` **does not** mean that the sent value will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891184,"byte_end":10891256,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ observed by all or any of the active [`Receiver`] handles. [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891261,"byte_end":10891336,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ handles may be dropped before receiving the sent message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891341,"byte_end":10891402,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891407,"byte_end":10891410,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ A return value of `Err` **does not** mean that future calls to `send`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891415,"byte_end":10891488,"line_start":494,"line_end":494,"column_start":5,"column_end":78}},{"value":"/ will fail. New [`Receiver`] handles may be created by calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891493,"byte_end":10891558,"line_start":495,"line_end":495,"column_start":5,"column_end":70}},{"value":"/ [`subscribe`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891563,"byte_end":10891581,"line_start":496,"line_end":496,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891586,"byte_end":10891589,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891594,"byte_end":10891644,"line_start":498,"line_end":498,"column_start":5,"column_end":55}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891649,"byte_end":10891709,"line_start":499,"line_end":499,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891714,"byte_end":10891717,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891722,"byte_end":10891736,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891741,"byte_end":10891744,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891749,"byte_end":10891756,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891761,"byte_end":10891792,"line_start":504,"line_end":504,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891797,"byte_end":10891800,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891805,"byte_end":10891823,"line_start":506,"line_end":506,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891828,"byte_end":10891849,"line_start":507,"line_end":507,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891854,"byte_end":10891905,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891910,"byte_end":10891947,"line_start":509,"line_end":509,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891952,"byte_end":10891955,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891960,"byte_end":10891993,"line_start":511,"line_end":511,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10891998,"byte_end":10892052,"line_start":512,"line_end":512,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892057,"byte_end":10892111,"line_start":513,"line_end":513,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892116,"byte_end":10892127,"line_start":514,"line_end":514,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892132,"byte_end":10892135,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892140,"byte_end":10892173,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892178,"byte_end":10892232,"line_start":517,"line_end":517,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892237,"byte_end":10892291,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892296,"byte_end":10892307,"line_start":519,"line_end":519,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892312,"byte_end":10892315,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892320,"byte_end":10892349,"line_start":521,"line_end":521,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892354,"byte_end":10892383,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892388,"byte_end":10892393,"line_start":523,"line_end":523,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892398,"byte_end":10892405,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5488},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893181,"byte_end":10893190,"line_start":553,"line_end":553,"column_start":12,"column_end":21},"name":"subscribe","qualname":"<Sender<T>>::subscribe","value":"pub fn subscribe(&Self) -> Receiver<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Receiver`] handle that will receive values sent **after**\n this call to `subscribe`.","sig":null,"attributes":[{"value":"/ Creates a new [`Receiver`] handle that will receive values sent **after**","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892586,"byte_end":10892663,"line_start":530,"line_end":530,"column_start":5,"column_end":82}},{"value":"/ this call to `subscribe`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892668,"byte_end":10892697,"line_start":531,"line_end":531,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892702,"byte_end":10892705,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892710,"byte_end":10892724,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892729,"byte_end":10892732,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892737,"byte_end":10892744,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892749,"byte_end":10892780,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892785,"byte_end":10892788,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892793,"byte_end":10892811,"line_start":538,"line_end":538,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892816,"byte_end":10892837,"line_start":539,"line_end":539,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892842,"byte_end":10892889,"line_start":540,"line_end":540,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892894,"byte_end":10892897,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/     // Will not be seen","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892902,"byte_end":10892929,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892934,"byte_end":10892963,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892968,"byte_end":10892971,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/     let mut rx = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10892976,"byte_end":10893012,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893017,"byte_end":10893020,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893025,"byte_end":10893054,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893059,"byte_end":10893062,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/     let value = rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893067,"byte_end":10893112,"line_start":549,"line_end":549,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(20, value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893117,"byte_end":10893147,"line_start":550,"line_end":550,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893152,"byte_end":10893157,"line_start":551,"line_end":551,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893162,"byte_end":10893169,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5489},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894449,"byte_end":10894463,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"receiver_count","qualname":"<Sender<T>>::receiver_count","value":"pub fn receiver_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of active receivers","sig":null,"attributes":[{"value":"/ Returns the number of active receivers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893297,"byte_end":10893339,"line_start":558,"line_end":558,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893344,"byte_end":10893347,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ An active receiver is a [`Receiver`] handle returned from [`channel`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893352,"byte_end":10893428,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ [`subscribe`]. These are the handles that will receive values sent on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893433,"byte_end":10893506,"line_start":561,"line_end":561,"column_start":5,"column_end":78}},{"value":"/ this [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893511,"byte_end":10893531,"line_start":562,"line_end":562,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893536,"byte_end":10893539,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893544,"byte_end":10893554,"line_start":564,"line_end":564,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893559,"byte_end":10893562,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ It is not guaranteed that a sent message will reach this number of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893567,"byte_end":10893637,"line_start":566,"line_end":566,"column_start":5,"column_end":75}},{"value":"/ receivers. Active receivers may never call [`recv`] again before","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893642,"byte_end":10893710,"line_start":567,"line_end":567,"column_start":5,"column_end":73}},{"value":"/ dropping.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893715,"byte_end":10893728,"line_start":568,"line_end":568,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893733,"byte_end":10893736,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893741,"byte_end":10893793,"line_start":570,"line_end":570,"column_start":5,"column_end":57}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893798,"byte_end":10893848,"line_start":571,"line_end":571,"column_start":5,"column_end":55}},{"value":"/ [`Sender`]: crate::sync::broadcast::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893853,"byte_end":10893899,"line_start":572,"line_end":572,"column_start":5,"column_end":51}},{"value":"/ [`subscribe`]: crate::sync::broadcast::Sender::subscribe","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893904,"byte_end":10893964,"line_start":573,"line_end":573,"column_start":5,"column_end":65}},{"value":"/ [`channel`]: crate::sync::broadcast::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10893969,"byte_end":10894017,"line_start":574,"line_end":574,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894022,"byte_end":10894025,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894030,"byte_end":10894044,"line_start":576,"line_end":576,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894049,"byte_end":10894052,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894057,"byte_end":10894064,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894069,"byte_end":10894100,"line_start":579,"line_end":579,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894105,"byte_end":10894108,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894113,"byte_end":10894131,"line_start":581,"line_end":581,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894136,"byte_end":10894157,"line_start":582,"line_end":582,"column_start":5,"column_end":26}},{"value":"/     let (tx, _rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894162,"byte_end":10894210,"line_start":583,"line_end":583,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894215,"byte_end":10894218,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(1, tx.receiver_count());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894223,"byte_end":10894266,"line_start":585,"line_end":585,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894271,"byte_end":10894274,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/     let mut _rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894279,"byte_end":10894317,"line_start":587,"line_end":587,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894322,"byte_end":10894325,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(2, tx.receiver_count());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894330,"byte_end":10894373,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894378,"byte_end":10894381,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894386,"byte_end":10894415,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894420,"byte_end":10894425,"line_start":592,"line_end":592,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10894430,"byte_end":10894437,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5509},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904026,"byte_end":10904030,"line_start":877,"line_end":877,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901798,"byte_end":10901844,"line_start":812,"line_end":812,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901849,"byte_end":10901852,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ Each [`Receiver`] handle will receive a clone of all values sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901857,"byte_end":10901925,"line_start":814,"line_end":814,"column_start":5,"column_end":73}},{"value":"/ **after** it has subscribed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901930,"byte_end":10901962,"line_start":815,"line_end":815,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901967,"byte_end":10901970,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ `Err(RecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901975,"byte_end":10902045,"line_start":817,"line_end":817,"column_start":5,"column_end":75}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902050,"byte_end":10902124,"line_start":818,"line_end":818,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902129,"byte_end":10902132,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902137,"byte_end":10902213,"line_start":820,"line_end":820,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902218,"byte_end":10902294,"line_start":821,"line_end":821,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(RecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902299,"byte_end":10902367,"line_start":822,"line_end":822,"column_start":5,"column_end":73}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902372,"byte_end":10902445,"line_start":823,"line_end":823,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`recv`] will return this value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902450,"byte_end":10902519,"line_start":824,"line_end":824,"column_start":5,"column_end":74}},{"value":"/ **unless** it has been since overwritten.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902524,"byte_end":10902569,"line_start":825,"line_end":825,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902574,"byte_end":10902577,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902582,"byte_end":10902632,"line_start":827,"line_end":827,"column_start":5,"column_end":55}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902637,"byte_end":10902689,"line_start":828,"line_end":828,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902694,"byte_end":10902697,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902702,"byte_end":10902716,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902721,"byte_end":10902724,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902729,"byte_end":10902736,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902741,"byte_end":10902772,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902777,"byte_end":10902780,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902785,"byte_end":10902803,"line_start":835,"line_end":835,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902808,"byte_end":10902829,"line_start":836,"line_end":836,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx1) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902834,"byte_end":10902885,"line_start":837,"line_end":837,"column_start":5,"column_end":56}},{"value":"/     let mut rx2 = tx.subscribe();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902890,"byte_end":10902927,"line_start":838,"line_end":838,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902932,"byte_end":10902935,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902940,"byte_end":10902973,"line_start":840,"line_end":840,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10902978,"byte_end":10903032,"line_start":841,"line_end":841,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx1.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903037,"byte_end":10903091,"line_start":842,"line_end":842,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903096,"byte_end":10903107,"line_start":843,"line_end":843,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903112,"byte_end":10903115,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903120,"byte_end":10903153,"line_start":845,"line_end":845,"column_start":5,"column_end":38}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903158,"byte_end":10903212,"line_start":846,"line_end":846,"column_start":5,"column_end":59}},{"value":"/         assert_eq!(rx2.recv().await.unwrap(), 20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903217,"byte_end":10903271,"line_start":847,"line_end":847,"column_start":5,"column_end":59}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903276,"byte_end":10903287,"line_start":848,"line_end":848,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903292,"byte_end":10903295,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903300,"byte_end":10903329,"line_start":850,"line_end":850,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903334,"byte_end":10903363,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903368,"byte_end":10903373,"line_start":852,"line_end":852,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903378,"byte_end":10903385,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903390,"byte_end":10903393,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Handling lag","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903398,"byte_end":10903414,"line_start":855,"line_end":855,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903419,"byte_end":10903422,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903427,"byte_end":10903434,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903439,"byte_end":10903470,"line_start":858,"line_end":858,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903475,"byte_end":10903478,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903483,"byte_end":10903501,"line_start":860,"line_end":860,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903506,"byte_end":10903527,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903532,"byte_end":10903581,"line_start":862,"line_end":862,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903586,"byte_end":10903589,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903594,"byte_end":10903623,"line_start":864,"line_end":864,"column_start":5,"column_end":34}},{"value":"/     tx.send(20).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903628,"byte_end":10903657,"line_start":865,"line_end":865,"column_start":5,"column_end":34}},{"value":"/     tx.send(30).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903662,"byte_end":10903691,"line_start":866,"line_end":866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903696,"byte_end":10903699,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/     // The receiver lagged behind","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903704,"byte_end":10903741,"line_start":868,"line_end":868,"column_start":5,"column_end":42}},{"value":"/     assert!(rx.recv().await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903746,"byte_end":10903788,"line_start":869,"line_end":869,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903793,"byte_end":10903796,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/     // At this point, we can abort or continue with lost messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903801,"byte_end":10903870,"line_start":871,"line_end":871,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903875,"byte_end":10903878,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(20, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903883,"byte_end":10903932,"line_start":873,"line_end":873,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(30, rx.recv().await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903937,"byte_end":10903986,"line_start":874,"line_end":874,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10903991,"byte_end":10903996,"line_start":875,"line_end":875,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904001,"byte_end":10904008,"line_start":876,"line_end":876,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5512},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905791,"byte_end":10905799,"line_start":922,"line_end":922,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return a pending value on this receiver without awaiting.","sig":null,"attributes":[{"value":"/ Attempts to return a pending value on this receiver without awaiting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904132,"byte_end":10904205,"line_start":882,"line_end":882,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904210,"byte_end":10904213,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ This is useful for a flavor of \"optimistic check\" before deciding to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904218,"byte_end":10904290,"line_start":884,"line_end":884,"column_start":5,"column_end":77}},{"value":"/ await on a receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904295,"byte_end":10904319,"line_start":885,"line_end":885,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904324,"byte_end":10904327,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Compared with [`recv`], this function has three failure cases instead of two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904332,"byte_end":10904412,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ (one for closed, one for an empty buffer, one for a lagging receiver).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904417,"byte_end":10904491,"line_start":888,"line_end":888,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904496,"byte_end":10904499,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ `Err(TryRecvError::Closed)` is returned when all `Sender` halves have","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904504,"byte_end":10904577,"line_start":890,"line_end":890,"column_start":5,"column_end":78}},{"value":"/ dropped, indicating that no further values can be sent on the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904582,"byte_end":10904656,"line_start":891,"line_end":891,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904661,"byte_end":10904664,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ If the [`Receiver`] handle falls behind, once the channel is full, newly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904669,"byte_end":10904745,"line_start":893,"line_end":893,"column_start":5,"column_end":81}},{"value":"/ sent values will overwrite old values. At this point, a call to [`recv`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904750,"byte_end":10904826,"line_start":894,"line_end":894,"column_start":5,"column_end":81}},{"value":"/ will return with `Err(TryRecvError::Lagged)` and the [`Receiver`]'s","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904831,"byte_end":10904902,"line_start":895,"line_end":895,"column_start":5,"column_end":76}},{"value":"/ internal cursor is updated to point to the oldest value still held by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904907,"byte_end":10904980,"line_start":896,"line_end":896,"column_start":5,"column_end":78}},{"value":"/ the channel. A subsequent call to [`try_recv`] will return this value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10904985,"byte_end":10905058,"line_start":897,"line_end":897,"column_start":5,"column_end":78}},{"value":"/ **unless** it has been since overwritten. If there are no values to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905063,"byte_end":10905134,"line_start":898,"line_end":898,"column_start":5,"column_end":76}},{"value":"/ receive, `Err(TryRecvError::Empty)` is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905139,"byte_end":10905191,"line_start":899,"line_end":899,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905196,"byte_end":10905199,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ [`recv`]: crate::sync::broadcast::Receiver::recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905204,"byte_end":10905256,"line_start":901,"line_end":901,"column_start":5,"column_end":57}},{"value":"/ [`try_recv`]: crate::sync::broadcast::Receiver::try_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905261,"byte_end":10905321,"line_start":902,"line_end":902,"column_start":5,"column_end":65}},{"value":"/ [`Receiver`]: crate::sync::broadcast::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905326,"byte_end":10905376,"line_start":903,"line_end":903,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905381,"byte_end":10905384,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905389,"byte_end":10905403,"line_start":905,"line_end":905,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905408,"byte_end":10905411,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905416,"byte_end":10905423,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::broadcast;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905428,"byte_end":10905459,"line_start":908,"line_end":908,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905464,"byte_end":10905467,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905472,"byte_end":10905490,"line_start":910,"line_end":910,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905495,"byte_end":10905516,"line_start":911,"line_end":911,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = broadcast::channel(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905521,"byte_end":10905571,"line_start":912,"line_end":912,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905576,"byte_end":10905579,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.try_recv().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905584,"byte_end":10905624,"line_start":914,"line_end":914,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905629,"byte_end":10905632,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/     tx.send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905637,"byte_end":10905666,"line_start":916,"line_end":916,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905671,"byte_end":10905674,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/     let value = rx.try_recv().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905679,"byte_end":10905722,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/     assert_eq!(10, value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905727,"byte_end":10905757,"line_start":919,"line_end":919,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905762,"byte_end":10905767,"line_start":920,"line_end":920,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905772,"byte_end":10905779,"line_start":921,"line_end":921,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5556},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mpsc","qualname":"::sync::mpsc","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","parent":null,"children":[{"krate":0,"index":5557},{"krate":0,"index":5631},{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5871},{"krate":0,"index":5916},{"krate":0,"index":5967},{"krate":0,"index":5968},{"krate":0,"index":5969},{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5990}],"decl_id":null,"docs":" A multi-producer, single-consumer queue for sending values between\n asynchronous tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A multi-producer, single-consumer queue for sending values between","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910072,"byte_end":10910142,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ asynchronous tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910143,"byte_end":10910166,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910167,"byte_end":10910170,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides two variants of the channel: bounded and unbounded. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910171,"byte_end":10910251,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ bounded variant has a limit on the number of messages that the channel can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910252,"byte_end":10910330,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ store, and if this limit is reached, trying to send another message will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910331,"byte_end":10910407,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ wait until a message is received from the channel. An unbounded channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910408,"byte_end":10910487,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ an infinite capacity, so the `send` method will always complete immediately.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910488,"byte_end":10910568,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ This makes the [`UnboundedSender`] usable from both synchronous and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910569,"byte_end":10910640,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ asynchronous code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910641,"byte_end":10910663,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910664,"byte_end":10910667,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Similar to the `mpsc` channels provided by `std`, the channel constructor","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910668,"byte_end":10910745,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ functions provide separate send and receive handles, [`Sender`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910746,"byte_end":10910817,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [`Receiver`] for the bounded channel, [`UnboundedSender`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910818,"byte_end":10910883,"line_start":16,"line_end":16,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedReceiver`] for the unbounded channel. If there is no message to read,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910884,"byte_end":10910968,"line_start":17,"line_end":17,"column_start":1,"column_end":85}},{"value":"/ the current task will be notified when a new value is sent. [`Sender`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10910969,"byte_end":10911047,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ [`UnboundedSender`] allow sending values into the channel. If the bounded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911048,"byte_end":10911125,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ channel is at capacity, the send is rejected and the task will be notified","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911126,"byte_end":10911204,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ when additional capacity is available. In other words, the channel provides","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911205,"byte_end":10911284,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ backpressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911285,"byte_end":10911302,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911303,"byte_end":10911306,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911307,"byte_end":10911310,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Disconnection","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911311,"byte_end":10911330,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911331,"byte_end":10911334,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ When all [`Sender`] handles have been dropped, it is no longer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911335,"byte_end":10911401,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/ possible to send values into the channel. This is considered the termination","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911402,"byte_end":10911482,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ event of the stream. As such, `Receiver::poll` returns `Ok(Ready(None))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911483,"byte_end":10911560,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911561,"byte_end":10911564,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ If the [`Receiver`] handle is dropped, then messages can no longer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911565,"byte_end":10911635,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ be read out of the channel. In this case, all further attempts to send will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911636,"byte_end":10911715,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ result in an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911716,"byte_end":10911739,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911740,"byte_end":10911743,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Clean Shutdown","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911744,"byte_end":10911764,"line_start":35,"line_end":35,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911765,"byte_end":10911768,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ When the [`Receiver`] is dropped, it is possible for unprocessed messages to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911769,"byte_end":10911849,"line_start":37,"line_end":37,"column_start":1,"column_end":81}},{"value":"/ remain in the channel. Instead, it is usually desirable to perform a \"clean\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911850,"byte_end":10911930,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ shutdown. To do this, the receiver first calls `close`, which will prevent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10911931,"byte_end":10912009,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ any further messages to be sent into the channel. Then, the receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912010,"byte_end":10912082,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ consumes the channel to completion, at which point the receiver can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912083,"byte_end":10912157,"line_start":41,"line_end":41,"column_start":1,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912158,"byte_end":10912170,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912171,"byte_end":10912174,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ # Communicating between sync and async code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912175,"byte_end":10912222,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912223,"byte_end":10912226,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ When you want to communicate between synchronous and asynchronous code, there","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912227,"byte_end":10912308,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/ are two situations to consider:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912309,"byte_end":10912344,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912345,"byte_end":10912348,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ **Bounded channel**: If you need a bounded channel, you should use a bounded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912349,"byte_end":10912429,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/ Tokio `mpsc` channel for both directions of communication. Instead of calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912430,"byte_end":10912511,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ the async [`send`][bounded-send] or [`recv`][bounded-recv] methods, in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912512,"byte_end":10912586,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ synchronous code you will need to use the [`blocking_send`][blocking-send] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912587,"byte_end":10912668,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ [`blocking_recv`][blocking-recv] methods.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912669,"byte_end":10912714,"line_start":53,"line_end":53,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912715,"byte_end":10912718,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ **Unbounded channel**: You should use the kind of channel that matches where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912719,"byte_end":10912799,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ the receiver is. So for sending a message _from async to sync_, you should","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912800,"byte_end":10912878,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ use [the standard library unbounded channel][std-unbounded] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912879,"byte_end":10912945,"line_start":57,"line_end":57,"column_start":1,"column_end":67}},{"value":"/ [crossbeam][crossbeam-unbounded].  Similarly, for sending a message _from sync","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10912946,"byte_end":10913028,"line_start":58,"line_end":58,"column_start":1,"column_end":83}},{"value":"/ to async_, you should use an unbounded Tokio `mpsc` channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913029,"byte_end":10913093,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913094,"byte_end":10913097,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::mpsc::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913098,"byte_end":10913139,"line_start":61,"line_end":61,"column_start":1,"column_end":42}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913140,"byte_end":10913185,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ [bounded-send]: crate::sync::mpsc::Sender::send()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913186,"byte_end":10913239,"line_start":63,"line_end":63,"column_start":1,"column_end":54}},{"value":"/ [bounded-recv]: crate::sync::mpsc::Receiver::recv()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913240,"byte_end":10913295,"line_start":64,"line_end":64,"column_start":1,"column_end":56}},{"value":"/ [blocking-send]: crate::sync::mpsc::Sender::blocking_send()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913296,"byte_end":10913359,"line_start":65,"line_end":65,"column_start":1,"column_end":64}},{"value":"/ [blocking-recv]: crate::sync::mpsc::Receiver::blocking_recv()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913360,"byte_end":10913425,"line_start":66,"line_end":66,"column_start":1,"column_end":66}},{"value":"/ [`UnboundedSender`]: crate::sync::mpsc::UnboundedSender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913426,"byte_end":10913485,"line_start":67,"line_end":67,"column_start":1,"column_end":60}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913486,"byte_end":10913549,"line_start":68,"line_end":68,"column_start":1,"column_end":64}},{"value":"/ [`Handle::block_on`]: crate::runtime::Handle::block_on()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913550,"byte_end":10913610,"line_start":69,"line_end":69,"column_start":1,"column_end":61}},{"value":"/ [std-unbounded]: std::sync::mpsc::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913611,"byte_end":10913656,"line_start":70,"line_end":70,"column_start":1,"column_end":46}},{"value":"/ [crossbeam-unbounded]: https://docs.rs/crossbeam/*/crossbeam/channel/fn.unbounded.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913657,"byte_end":10913747,"line_start":71,"line_end":71,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":5643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927954,"byte_end":10927960,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::mpsc::bounded::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":5645}],"decl_id":null,"docs":" Send values to the associated `Receiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927643,"byte_end":10927688,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927689,"byte_end":10927692,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927693,"byte_end":10927756,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927757,"byte_end":10927760,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ To use the `Sender` in a poll function, you can use the [`PollSender`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927761,"byte_end":10927835,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ utility.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927836,"byte_end":10927848,"line_start":18,"line_end":18,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927849,"byte_end":10927852,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`PollSender`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSender.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10927853,"byte_end":10927942,"line_start":20,"line_end":20,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":5646},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928335,"byte_end":10928341,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"Permit","qualname":"::sync::mpsc::bounded::Permit","value":"Permit {  }","parent":null,"children":[{"krate":0,"index":5649}],"decl_id":null,"docs":" Permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Permit to send one value into the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928003,"byte_end":10928049,"line_start":25,"line_end":25,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928050,"byte_end":10928053,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ `Permit` values are returned by [`Sender::reserve()`] and [`Sender::try_reserve()`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928054,"byte_end":10928141,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ and are used to guarantee channel capacity before generating a message to send.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928142,"byte_end":10928225,"line_start":28,"line_end":28,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928226,"byte_end":10928229,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ [`Sender::reserve()`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928230,"byte_end":10928272,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/ [`Sender::try_reserve()`]: Sender::try_reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928273,"byte_end":10928323,"line_start":31,"line_end":31,"column_start":1,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":5650},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928910,"byte_end":10928921,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"OwnedPermit","qualname":"::sync::mpsc::bounded::OwnedPermit","value":"OwnedPermit {  }","parent":null,"children":[{"krate":0,"index":5652}],"decl_id":null,"docs":" Owned permit to send one value into the channel.","sig":null,"attributes":[{"value":"/ Owned permit to send one value into the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928392,"byte_end":10928444,"line_start":36,"line_end":36,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928445,"byte_end":10928448,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This is identical to the [`Permit`] type, except that it moves the sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928449,"byte_end":10928526,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ rather than borrowing it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928527,"byte_end":10928556,"line_start":39,"line_end":39,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928557,"byte_end":10928560,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `OwnedPermit` values are returned by [`Sender::reserve_owned()`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928561,"byte_end":10928633,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ [`Sender::try_reserve_owned()`] and are used to guarantee channel capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928634,"byte_end":10928712,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ before generating a message to send.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928713,"byte_end":10928753,"line_start":43,"line_end":43,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928754,"byte_end":10928757,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928758,"byte_end":10928780,"line_start":45,"line_end":45,"column_start":1,"column_end":23}},{"value":"/ [`Sender::reserve_owned()`]: Sender::reserve_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928781,"byte_end":10928835,"line_start":46,"line_end":46,"column_start":1,"column_end":55}},{"value":"/ [`Sender::try_reserve_owned()`]: Sender::try_reserve_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928836,"byte_end":10928898,"line_start":47,"line_end":47,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":5653},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929288,"byte_end":10929296,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::mpsc::bounded::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":5655}],"decl_id":null,"docs":" Receive values from the associated `Sender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `Sender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10928972,"byte_end":10929020,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929021,"byte_end":10929024,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929025,"byte_end":10929088,"line_start":54,"line_end":54,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929089,"byte_end":10929092,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`ReceiverStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929093,"byte_end":10929166,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929167,"byte_end":10929170,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ [`ReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.ReceiverStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929171,"byte_end":10929276,"line_start":58,"line_end":58,"column_start":1,"column_end":106}}]},{"kind":"Function","id":{"krate":0,"index":5656},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930754,"byte_end":10930761,"line_start":108,"line_end":108,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::mpsc::bounded::channel","value":"pub fn channel<T>(usize) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a bounded mpsc channel for communicating between asynchronous tasks\n with backpressure.","sig":null,"attributes":[{"value":"/ Creates a bounded mpsc channel for communicating between asynchronous tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929368,"byte_end":10929447,"line_start":64,"line_end":64,"column_start":1,"column_end":80}},{"value":"/ with backpressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929448,"byte_end":10929470,"line_start":65,"line_end":65,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929471,"byte_end":10929474,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The channel will buffer up to the provided number of messages.  Once the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929475,"byte_end":10929551,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ buffer is full, attempts to `send` new messages will wait until a message is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929552,"byte_end":10929632,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"/ received from the channel. The provided buffer capacity must be at least 1.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929633,"byte_end":10929712,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929713,"byte_end":10929716,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ All data sent on `Sender` will become available on `Receiver` in the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929717,"byte_end":10929794,"line_start":71,"line_end":71,"column_start":1,"column_end":78}},{"value":"/ order as it was sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929795,"byte_end":10929820,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929821,"byte_end":10929824,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The `Sender` can be cloned to `send` to the same channel from multiple code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929825,"byte_end":10929904,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ locations. Only one `Receiver` is supported.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929905,"byte_end":10929953,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929954,"byte_end":10929957,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ If the `Receiver` is disconnected while trying to `send`, the `send` method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10929958,"byte_end":10930037,"line_start":77,"line_end":77,"column_start":1,"column_end":80}},{"value":"/ will return a `SendError`. Similarly, if `Sender` is disconnected while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930038,"byte_end":10930113,"line_start":78,"line_end":78,"column_start":1,"column_end":76}},{"value":"/ trying to `recv`, the `recv` method will return a `RecvError`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930114,"byte_end":10930180,"line_start":79,"line_end":79,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930181,"byte_end":10930184,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930185,"byte_end":10930197,"line_start":81,"line_end":81,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930198,"byte_end":10930201,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Panics if the buffer capacity is 0.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930202,"byte_end":10930241,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930242,"byte_end":10930245,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930246,"byte_end":10930260,"line_start":85,"line_end":85,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930261,"byte_end":10930264,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930265,"byte_end":10930276,"line_start":87,"line_end":87,"column_start":1,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930277,"byte_end":10930303,"line_start":88,"line_end":88,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930304,"byte_end":10930307,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930308,"byte_end":10930326,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930327,"byte_end":10930348,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930349,"byte_end":10930395,"line_start":92,"line_end":92,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930396,"byte_end":10930399,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930400,"byte_end":10930433,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930434,"byte_end":10930462,"line_start":95,"line_end":95,"column_start":1,"column_end":29}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930463,"byte_end":10930513,"line_start":96,"line_end":96,"column_start":1,"column_end":51}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930514,"byte_end":10930563,"line_start":97,"line_end":97,"column_start":1,"column_end":50}},{"value":"/                 return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930564,"byte_end":10930591,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930592,"byte_end":10930609,"line_start":99,"line_end":99,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930610,"byte_end":10930623,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930624,"byte_end":10930635,"line_start":101,"line_end":101,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930636,"byte_end":10930639,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930640,"byte_end":10930685,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930686,"byte_end":10930722,"line_start":104,"line_end":104,"column_start":1,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930723,"byte_end":10930732,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930733,"byte_end":10930738,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10930739,"byte_end":10930746,"line_start":107,"line_end":107,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5662},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933123,"byte_end":10933127,"line_start":180,"line_end":180,"column_start":18,"column_end":22},"name":"recv","qualname":"<Receiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931361,"byte_end":10931407,"line_start":128,"line_end":128,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931412,"byte_end":10931415,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931420,"byte_end":10931495,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931500,"byte_end":10931573,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931578,"byte_end":10931654,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931659,"byte_end":10931734,"line_start":133,"line_end":133,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931739,"byte_end":10931742,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931747,"byte_end":10931820,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will sleep until a message is sent or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931825,"byte_end":10931899,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931904,"byte_end":10931930,"line_start":137,"line_end":137,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931935,"byte_end":10931938,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931943,"byte_end":10932012,"line_start":139,"line_end":139,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932017,"byte_end":10932089,"line_start":140,"line_end":140,"column_start":5,"column_end":77}},{"value":"/ closed by `recv` until the permits are released.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932094,"byte_end":10932146,"line_start":141,"line_end":141,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932151,"byte_end":10932154,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932159,"byte_end":10932185,"line_start":143,"line_end":143,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932190,"byte_end":10932239,"line_start":144,"line_end":144,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932244,"byte_end":10932247,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932252,"byte_end":10932266,"line_start":146,"line_end":146,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932271,"byte_end":10932274,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932279,"byte_end":10932286,"line_start":148,"line_end":148,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932291,"byte_end":10932317,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932322,"byte_end":10932325,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932330,"byte_end":10932348,"line_start":151,"line_end":151,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932353,"byte_end":10932374,"line_start":152,"line_end":152,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932379,"byte_end":10932425,"line_start":153,"line_end":153,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932430,"byte_end":10932433,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932438,"byte_end":10932471,"line_start":155,"line_end":155,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932476,"byte_end":10932520,"line_start":156,"line_end":156,"column_start":5,"column_end":49}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932525,"byte_end":10932536,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932541,"byte_end":10932544,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932549,"byte_end":10932600,"line_start":159,"line_end":159,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932605,"byte_end":10932647,"line_start":160,"line_end":160,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932652,"byte_end":10932657,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932662,"byte_end":10932669,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932674,"byte_end":10932677,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932682,"byte_end":10932706,"line_start":164,"line_end":164,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932711,"byte_end":10932714,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932719,"byte_end":10932726,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932731,"byte_end":10932757,"line_start":167,"line_end":167,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932762,"byte_end":10932765,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932770,"byte_end":10932788,"line_start":169,"line_end":169,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932793,"byte_end":10932814,"line_start":170,"line_end":170,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(100);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932819,"byte_end":10932865,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932870,"byte_end":10932873,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932878,"byte_end":10932918,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/     tx.send(\"world\").await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932923,"byte_end":10932963,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932968,"byte_end":10932971,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10932976,"byte_end":10933027,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933032,"byte_end":10933083,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933088,"byte_end":10933093,"line_start":178,"line_end":178,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933098,"byte_end":10933105,"line_start":179,"line_end":179,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5667},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935191,"byte_end":10935204,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<Receiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933248,"byte_end":10933310,"line_start":185,"line_end":185,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933315,"byte_end":10933318,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This method returns `None` if the channel has been closed and there are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933323,"byte_end":10933398,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ no remaining messages in the channel's buffer. This indicates that no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933403,"byte_end":10933476,"line_start":188,"line_end":188,"column_start":5,"column_end":78}},{"value":"/ further values can ever be received from this `Receiver`. The channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933481,"byte_end":10933557,"line_start":189,"line_end":189,"column_start":5,"column_end":81}},{"value":"/ closed when all senders have been dropped, or when [`close`] is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933562,"byte_end":10933637,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933642,"byte_end":10933645,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ If there are no messages in the channel's buffer, but the channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933650,"byte_end":10933723,"line_start":192,"line_end":192,"column_start":5,"column_end":78}},{"value":"/ not yet been closed, this method will block until a message is sent or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933728,"byte_end":10933802,"line_start":193,"line_end":193,"column_start":5,"column_end":79}},{"value":"/ the channel is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933807,"byte_end":10933833,"line_start":194,"line_end":194,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933838,"byte_end":10933841,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933846,"byte_end":10933914,"line_start":196,"line_end":196,"column_start":5,"column_end":73}},{"value":"/ asynchronous code to synchronous code, and will work even if the sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933919,"byte_end":10933994,"line_start":197,"line_end":197,"column_start":5,"column_end":80}},{"value":"/ is not using [`blocking_send`] to send the message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10933999,"byte_end":10934054,"line_start":198,"line_end":198,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934059,"byte_end":10934062,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that if [`close`] is called, but there are still outstanding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934067,"byte_end":10934136,"line_start":200,"line_end":200,"column_start":5,"column_end":74}},{"value":"/ [`Permits`] from before it was closed, the channel is not considered","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934141,"byte_end":10934213,"line_start":201,"line_end":201,"column_start":5,"column_end":77}},{"value":"/ closed by `blocking_recv` until the permits are released.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934218,"byte_end":10934279,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934284,"byte_end":10934287,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Self::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934292,"byte_end":10934318,"line_start":204,"line_end":204,"column_start":5,"column_end":31}},{"value":"/ [`Permits`]: struct@crate::sync::mpsc::Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934323,"byte_end":10934372,"line_start":205,"line_end":205,"column_start":5,"column_end":54}},{"value":"/ [`blocking_send`]: fn@crate::sync::mpsc::Sender::blocking_send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934377,"byte_end":10934443,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934448,"byte_end":10934451,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934456,"byte_end":10934468,"line_start":208,"line_end":208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934473,"byte_end":10934476,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934481,"byte_end":10934548,"line_start":210,"line_end":210,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934553,"byte_end":10934565,"line_start":211,"line_end":211,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934570,"byte_end":10934573,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934578,"byte_end":10934592,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934597,"byte_end":10934600,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934605,"byte_end":10934612,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934617,"byte_end":10934637,"line_start":216,"line_end":216,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934642,"byte_end":10934674,"line_start":217,"line_end":217,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934679,"byte_end":10934705,"line_start":218,"line_end":218,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934710,"byte_end":10934713,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934718,"byte_end":10934733,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934738,"byte_end":10934789,"line_start":221,"line_end":221,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934794,"byte_end":10934797,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934802,"byte_end":10934849,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934854,"byte_end":10934907,"line_start":224,"line_end":224,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934912,"byte_end":10934923,"line_start":225,"line_end":225,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934928,"byte_end":10934931,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/     Runtime::new()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934936,"byte_end":10934958,"line_start":227,"line_end":227,"column_start":5,"column_end":27}},{"value":"/         .unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934963,"byte_end":10934984,"line_start":228,"line_end":228,"column_start":5,"column_end":26}},{"value":"/         .block_on(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10934989,"byte_end":10935023,"line_start":229,"line_end":229,"column_start":5,"column_end":39}},{"value":"/             let _ = tx.send(10).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935028,"byte_end":10935070,"line_start":230,"line_end":230,"column_start":5,"column_end":47}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935075,"byte_end":10935090,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935095,"byte_end":10935128,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935133,"byte_end":10935138,"line_start":233,"line_end":233,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935143,"byte_end":10935150,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935155,"byte_end":10935179,"line_start":235,"line_end":235,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5668},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936615,"byte_end":10936620,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel without dropping it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935287,"byte_end":10935350,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935355,"byte_end":10935358,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935363,"byte_end":10935438,"line_start":242,"line_end":242,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered. Any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935443,"byte_end":10935515,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ outstanding [`Permit`] values will still be able to send messages.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935520,"byte_end":10935590,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935595,"byte_end":10935598,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ To guarantee that no messages are dropped, after calling `close()`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935603,"byte_end":10935674,"line_start":246,"line_end":246,"column_start":5,"column_end":76}},{"value":"/ `recv()` must be called until `None` is returned. If there are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935679,"byte_end":10935745,"line_start":247,"line_end":247,"column_start":5,"column_end":71}},{"value":"/ outstanding [`Permit`] or [`OwnedPermit`] values, the `recv` method will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935750,"byte_end":10935826,"line_start":248,"line_end":248,"column_start":5,"column_end":81}},{"value":"/ not return `None` until those are released.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935831,"byte_end":10935878,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935883,"byte_end":10935886,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935891,"byte_end":10935913,"line_start":251,"line_end":251,"column_start":5,"column_end":27}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935918,"byte_end":10935950,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935955,"byte_end":10935958,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935963,"byte_end":10935977,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935982,"byte_end":10935985,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10935990,"byte_end":10935997,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936002,"byte_end":10936028,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936033,"byte_end":10936036,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936041,"byte_end":10936059,"line_start":259,"line_end":259,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936064,"byte_end":10936085,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(20);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936090,"byte_end":10936135,"line_start":261,"line_end":261,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936140,"byte_end":10936143,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936148,"byte_end":10936181,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/         let mut i = 0;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936186,"byte_end":10936212,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/         while let Ok(permit) = tx.reserve().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936217,"byte_end":10936272,"line_start":265,"line_end":265,"column_start":5,"column_end":60}},{"value":"/             permit.send(i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936277,"byte_end":10936308,"line_start":266,"line_end":266,"column_start":5,"column_end":36}},{"value":"/             i += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936313,"byte_end":10936336,"line_start":267,"line_end":267,"column_start":5,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936341,"byte_end":10936354,"line_start":268,"line_end":268,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936359,"byte_end":10936370,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936375,"byte_end":10936378,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936383,"byte_end":10936402,"line_start":271,"line_end":271,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936407,"byte_end":10936410,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/     while let Some(msg) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936415,"byte_end":10936462,"line_start":273,"line_end":273,"column_start":5,"column_end":52}},{"value":"/         println!(\"got {}\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936467,"byte_end":10936503,"line_start":274,"line_end":274,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936508,"byte_end":10936517,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936522,"byte_end":10936525,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/     // Channel closed and no messages are lost.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936530,"byte_end":10936581,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936586,"byte_end":10936591,"line_start":278,"line_end":278,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936596,"byte_end":10936603,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5669},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937461,"byte_end":10937470,"line_start":299,"line_end":299,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<Receiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936672,"byte_end":10936726,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936731,"byte_end":10936734,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936739,"byte_end":10936763,"line_start":286,"line_end":286,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936768,"byte_end":10936771,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936776,"byte_end":10936850,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936855,"byte_end":10936869,"line_start":289,"line_end":289,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936874,"byte_end":10936936,"line_start":290,"line_end":290,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10936941,"byte_end":10937015,"line_start":291,"line_end":291,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937020,"byte_end":10937072,"line_start":292,"line_end":292,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937077,"byte_end":10937080,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937085,"byte_end":10937157,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937162,"byte_end":10937238,"line_start":295,"line_end":295,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937243,"byte_end":10937319,"line_start":296,"line_end":296,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937324,"byte_end":10937395,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937400,"byte_end":10937449,"line_start":298,"line_end":298,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5678},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939566,"byte_end":10939570,"line_start":364,"line_end":364,"column_start":18,"column_end":22},"name":"send","qualname":"<Sender<T>>::send","value":"pub async fn send<'_>(&'_ Self, T) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937926,"byte_end":10937977,"line_start":319,"line_end":319,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937982,"byte_end":10937985,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937990,"byte_end":10938066,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938071,"byte_end":10938147,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been closed. Note that a return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938152,"byte_end":10938226,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ value of `Err` means that the data will never be received, but a return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938231,"byte_end":10938306,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ value of `Ok` does not mean that the data will be received. It is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938311,"byte_end":10938380,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ possible for the corresponding receiver to hang up immediately after","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938385,"byte_end":10938457,"line_start":326,"line_end":326,"column_start":5,"column_end":77}},{"value":"/ this function returns `Ok`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938462,"byte_end":10938493,"line_start":327,"line_end":327,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938498,"byte_end":10938501,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938506,"byte_end":10938518,"line_start":329,"line_end":329,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938523,"byte_end":10938526,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938531,"byte_end":10938604,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938609,"byte_end":10938683,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938688,"byte_end":10938748,"line_start":333,"line_end":333,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938753,"byte_end":10938756,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938761,"byte_end":10938791,"line_start":335,"line_end":335,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938796,"byte_end":10938822,"line_start":336,"line_end":336,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938827,"byte_end":10938830,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938835,"byte_end":10938849,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938854,"byte_end":10938857,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send` will block until the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938862,"byte_end":10938932,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ previously sent value was received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938937,"byte_end":10938976,"line_start":341,"line_end":341,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938981,"byte_end":10938984,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10938989,"byte_end":10939000,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939005,"byte_end":10939031,"line_start":344,"line_end":344,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939036,"byte_end":10939039,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939044,"byte_end":10939062,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939067,"byte_end":10939088,"line_start":347,"line_end":347,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939093,"byte_end":10939137,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939142,"byte_end":10939145,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939150,"byte_end":10939183,"line_start":350,"line_end":350,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939188,"byte_end":10939216,"line_start":351,"line_end":351,"column_start":5,"column_end":33}},{"value":"/             if let Err(_) = tx.send(i).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939221,"byte_end":10939271,"line_start":352,"line_end":352,"column_start":5,"column_end":55}},{"value":"/                 println!(\"receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939276,"byte_end":10939325,"line_start":353,"line_end":353,"column_start":5,"column_end":54}},{"value":"/                 return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939330,"byte_end":10939357,"line_start":354,"line_end":354,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939362,"byte_end":10939379,"line_start":355,"line_end":355,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939384,"byte_end":10939397,"line_start":356,"line_end":356,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939402,"byte_end":10939413,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939418,"byte_end":10939421,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939426,"byte_end":10939471,"line_start":359,"line_end":359,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939476,"byte_end":10939512,"line_start":360,"line_end":360,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939517,"byte_end":10939526,"line_start":361,"line_end":361,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939531,"byte_end":10939536,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939541,"byte_end":10939548,"line_start":363,"line_end":363,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5681},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940703,"byte_end":10940709,"line_start":405,"line_end":405,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939822,"byte_end":10939866,"line_start":374,"line_end":374,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939871,"byte_end":10939874,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939879,"byte_end":10939954,"line_start":376,"line_end":376,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10939959,"byte_end":10940014,"line_start":377,"line_end":377,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940019,"byte_end":10940022,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940027,"byte_end":10940041,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940046,"byte_end":10940049,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940054,"byte_end":10940061,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940066,"byte_end":10940092,"line_start":382,"line_end":382,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940097,"byte_end":10940100,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940105,"byte_end":10940123,"line_start":384,"line_end":384,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940128,"byte_end":10940149,"line_start":385,"line_end":385,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::channel::<()>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940154,"byte_end":10940201,"line_start":386,"line_end":386,"column_start":5,"column_end":52}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940206,"byte_end":10940236,"line_start":387,"line_end":387,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940241,"byte_end":10940271,"line_start":388,"line_end":388,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940276,"byte_end":10940306,"line_start":389,"line_end":389,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940311,"byte_end":10940341,"line_start":390,"line_end":390,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940346,"byte_end":10940379,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940384,"byte_end":10940405,"line_start":392,"line_end":392,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940410,"byte_end":10940421,"line_start":393,"line_end":393,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940426,"byte_end":10940429,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940434,"byte_end":10940457,"line_start":395,"line_end":395,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940462,"byte_end":10940487,"line_start":396,"line_end":396,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940492,"byte_end":10940517,"line_start":397,"line_end":397,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940522,"byte_end":10940547,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940552,"byte_end":10940577,"line_start":399,"line_end":399,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940582,"byte_end":10940606,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940611,"byte_end":10940621,"line_start":401,"line_end":401,"column_start":5,"column_end":15}},{"value":"/     println!(\"Receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940626,"byte_end":10940663,"line_start":402,"line_end":402,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940668,"byte_end":10940673,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940678,"byte_end":10940685,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5684},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942883,"byte_end":10942891,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"try_send","qualname":"<Sender<T>>::try_send","value":"pub fn try_send(&Self, T) -> Result<(), TrySendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to immediately send a message on this `Sender`","sig":null,"attributes":[{"value":"/ Attempts to immediately send a message on this `Sender`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940763,"byte_end":10940822,"line_start":409,"line_end":409,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940827,"byte_end":10940830,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ This method differs from [`send`] by returning immediately if the channel's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940835,"byte_end":10940914,"line_start":411,"line_end":411,"column_start":5,"column_end":84}},{"value":"/ buffer is full or no receiver is waiting to acquire some data. Compared","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940919,"byte_end":10940994,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ with [`send`], this function has two failure cases instead of one (one for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10940999,"byte_end":10941077,"line_start":413,"line_end":413,"column_start":5,"column_end":83}},{"value":"/ disconnection, one for a full buffer).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941082,"byte_end":10941124,"line_start":414,"line_end":414,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941129,"byte_end":10941132,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941137,"byte_end":10941149,"line_start":416,"line_end":416,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941154,"byte_end":10941157,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ If the channel capacity has been reached, i.e., the channel has `n`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941162,"byte_end":10941233,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ buffered values where `n` is the argument passed to [`channel`], then an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941238,"byte_end":10941314,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941319,"byte_end":10941341,"line_start":420,"line_end":420,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941346,"byte_end":10941349,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941354,"byte_end":10941427,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] handle dropping, the function returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941432,"byte_end":10941506,"line_start":423,"line_end":423,"column_start":5,"column_end":79}},{"value":"/ an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941511,"byte_end":10941571,"line_start":424,"line_end":424,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941576,"byte_end":10941579,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941584,"byte_end":10941610,"line_start":426,"line_end":426,"column_start":5,"column_end":31}},{"value":"/ [`channel`]: channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941615,"byte_end":10941639,"line_start":427,"line_end":427,"column_start":5,"column_end":29}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941644,"byte_end":10941674,"line_start":428,"line_end":428,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941679,"byte_end":10941682,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941687,"byte_end":10941701,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941706,"byte_end":10941709,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941714,"byte_end":10941721,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941726,"byte_end":10941752,"line_start":433,"line_end":433,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941757,"byte_end":10941760,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941765,"byte_end":10941783,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941788,"byte_end":10941809,"line_start":436,"line_end":436,"column_start":5,"column_end":26}},{"value":"/     // Create a channel with buffer size 1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941814,"byte_end":10941860,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/     let (tx1, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941865,"byte_end":10941910,"line_start":438,"line_end":438,"column_start":5,"column_end":50}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941915,"byte_end":10941945,"line_start":439,"line_end":439,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941950,"byte_end":10941953,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941958,"byte_end":10941991,"line_start":441,"line_end":441,"column_start":5,"column_end":38}},{"value":"/         tx1.send(1).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10941996,"byte_end":10942035,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/         tx1.send(2).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942040,"byte_end":10942079,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/         // task waits until the receiver receives a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942084,"byte_end":10942146,"line_start":444,"line_end":444,"column_start":5,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942151,"byte_end":10942162,"line_start":445,"line_end":445,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942167,"byte_end":10942170,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942175,"byte_end":10942208,"line_start":447,"line_end":447,"column_start":5,"column_end":38}},{"value":"/         // This will return an error and send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942213,"byte_end":10942262,"line_start":448,"line_end":448,"column_start":5,"column_end":54}},{"value":"/         // no message if the buffer is full","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942267,"byte_end":10942314,"line_start":449,"line_end":449,"column_start":5,"column_end":52}},{"value":"/         let _ = tx2.try_send(3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942319,"byte_end":10942355,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942360,"byte_end":10942371,"line_start":451,"line_end":451,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942376,"byte_end":10942379,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/     let mut msg;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942384,"byte_end":10942404,"line_start":453,"line_end":453,"column_start":5,"column_end":25}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942409,"byte_end":10942448,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942453,"byte_end":10942498,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942503,"byte_end":10942506,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/     msg = rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942511,"byte_end":10942550,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/     println!(\"message {} received\", msg);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942555,"byte_end":10942600,"line_start":458,"line_end":458,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942605,"byte_end":10942608,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/     // Third message may have never been sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942613,"byte_end":10942662,"line_start":460,"line_end":460,"column_start":5,"column_end":54}},{"value":"/     match rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942667,"byte_end":10942698,"line_start":461,"line_end":461,"column_start":5,"column_end":36}},{"value":"/         Some(msg) => println!(\"message {} received\", msg),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942703,"byte_end":10942765,"line_start":462,"line_end":462,"column_start":5,"column_end":67}},{"value":"/         None => println!(\"the third message was never sent\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942770,"byte_end":10942835,"line_start":463,"line_end":463,"column_start":5,"column_end":70}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942840,"byte_end":10942849,"line_start":464,"line_end":464,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942854,"byte_end":10942859,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10942864,"byte_end":10942871,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5685},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944980,"byte_end":10944992,"line_start":526,"line_end":526,"column_start":18,"column_end":30},"name":"send_timeout","qualname":"<Sender<T>>::send_timeout","value":"pub async fn send_timeout<'_>(&'_ Self, T, Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a value, waiting until there is capacity, but only for a limited time.","sig":null,"attributes":[{"value":"/ Sends a value, waiting until there is capacity, but only for a limited time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943296,"byte_end":10943376,"line_start":479,"line_end":479,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943381,"byte_end":10943384,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ Shares the same success and error conditions as [`send`], adding one more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943389,"byte_end":10943466,"line_start":481,"line_end":481,"column_start":5,"column_end":82}},{"value":"/ condition for an unsuccessful send, which is when the provided timeout has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943471,"byte_end":10943549,"line_start":482,"line_end":482,"column_start":5,"column_end":83}},{"value":"/ elapsed, and there is no capacity available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943554,"byte_end":10943602,"line_start":483,"line_end":483,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943607,"byte_end":10943610,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943615,"byte_end":10943641,"line_start":485,"line_end":485,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943646,"byte_end":10943649,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943654,"byte_end":10943666,"line_start":487,"line_end":487,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943671,"byte_end":10943674,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943679,"byte_end":10943752,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/ being called or the [`Receiver`] having been dropped,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943757,"byte_end":10943814,"line_start":490,"line_end":490,"column_start":5,"column_end":62}},{"value":"/ the function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943819,"byte_end":10943900,"line_start":491,"line_end":491,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943905,"byte_end":10943908,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943913,"byte_end":10943943,"line_start":493,"line_end":493,"column_start":5,"column_end":35}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943948,"byte_end":10943974,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943979,"byte_end":10943982,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10943987,"byte_end":10944001,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944006,"byte_end":10944009,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ In the following example, each call to `send_timeout` will block until the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944014,"byte_end":10944092,"line_start":498,"line_end":498,"column_start":5,"column_end":83}},{"value":"/ previously sent value was received, unless the timeout has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944097,"byte_end":10944168,"line_start":499,"line_end":499,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944173,"byte_end":10944176,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944181,"byte_end":10944192,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944197,"byte_end":10944223,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944228,"byte_end":10944267,"line_start":503,"line_end":503,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944272,"byte_end":10944275,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944280,"byte_end":10944298,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944303,"byte_end":10944324,"line_start":506,"line_end":506,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944329,"byte_end":10944373,"line_start":507,"line_end":507,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944378,"byte_end":10944381,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944386,"byte_end":10944419,"line_start":509,"line_end":509,"column_start":5,"column_end":38}},{"value":"/         for i in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944424,"byte_end":10944452,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/             if let Err(e) = tx.send_timeout(i, Duration::from_millis(100)).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944457,"byte_end":10944543,"line_start":511,"line_end":511,"column_start":5,"column_end":91}},{"value":"/                 println!(\"send error: #{:?}\", e);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944548,"byte_end":10944601,"line_start":512,"line_end":512,"column_start":5,"column_end":58}},{"value":"/                 return;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944606,"byte_end":10944633,"line_start":513,"line_end":513,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944638,"byte_end":10944655,"line_start":514,"line_end":514,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944660,"byte_end":10944673,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944678,"byte_end":10944689,"line_start":516,"line_end":516,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944694,"byte_end":10944697,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/     while let Some(i) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944702,"byte_end":10944747,"line_start":518,"line_end":518,"column_start":5,"column_end":50}},{"value":"/         println!(\"got = {}\", i);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944752,"byte_end":10944788,"line_start":519,"line_end":519,"column_start":5,"column_end":41}},{"value":"/         sleep(Duration::from_millis(200)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944793,"byte_end":10944845,"line_start":520,"line_end":520,"column_start":5,"column_end":57}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944850,"byte_end":10944859,"line_start":521,"line_end":521,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944864,"byte_end":10944869,"line_start":522,"line_end":522,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944874,"byte_end":10944881,"line_start":523,"line_end":523,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10944886,"byte_end":10944910,"line_start":524,"line_end":524,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5688},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946557,"byte_end":10946570,"line_start":579,"line_end":579,"column_start":12,"column_end":25},"name":"blocking_send","qualname":"<Sender<T>>::blocking_send","value":"pub fn blocking_send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Blocking send to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking send to call outside of asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945485,"byte_end":10945544,"line_start":545,"line_end":545,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945549,"byte_end":10945552,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This method is intended for use cases where you are sending from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945557,"byte_end":10945625,"line_start":547,"line_end":547,"column_start":5,"column_end":73}},{"value":"/ synchronous code to asynchronous code, and will work even if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945630,"byte_end":10945698,"line_start":548,"line_end":548,"column_start":5,"column_end":73}},{"value":"/ receiver is not using [`blocking_recv`] to receive the message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945703,"byte_end":10945770,"line_start":549,"line_end":549,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945775,"byte_end":10945778,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ [`blocking_recv`]: fn@crate::sync::mpsc::Receiver::blocking_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945783,"byte_end":10945851,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945856,"byte_end":10945859,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945864,"byte_end":10945876,"line_start":553,"line_end":553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945881,"byte_end":10945884,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945889,"byte_end":10945956,"line_start":555,"line_end":555,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945961,"byte_end":10945973,"line_start":556,"line_end":556,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945978,"byte_end":10945981,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10945986,"byte_end":10946000,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946005,"byte_end":10946008,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946013,"byte_end":10946020,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946025,"byte_end":10946045,"line_start":561,"line_end":561,"column_start":5,"column_end":25}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946050,"byte_end":10946082,"line_start":562,"line_end":562,"column_start":5,"column_end":37}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946087,"byte_end":10946113,"line_start":563,"line_end":563,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946118,"byte_end":10946121,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946126,"byte_end":10946141,"line_start":565,"line_end":565,"column_start":5,"column_end":20}},{"value":"/     let (tx, mut rx) = mpsc::channel::<u8>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946146,"byte_end":10946196,"line_start":566,"line_end":566,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946201,"byte_end":10946204,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946209,"byte_end":10946256,"line_start":568,"line_end":568,"column_start":5,"column_end":52}},{"value":"/         tx.blocking_send(10).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946261,"byte_end":10946303,"line_start":569,"line_end":569,"column_start":5,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946308,"byte_end":10946319,"line_start":570,"line_end":570,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946324,"byte_end":10946327,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/     Runtime::new().unwrap().block_on(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946332,"byte_end":10946385,"line_start":572,"line_end":572,"column_start":5,"column_end":58}},{"value":"/         assert_eq!(Some(10), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946390,"byte_end":10946440,"line_start":573,"line_end":573,"column_start":5,"column_end":55}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946445,"byte_end":10946456,"line_start":574,"line_end":574,"column_start":5,"column_end":16}},{"value":"/     sync_code.join().unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946461,"byte_end":10946494,"line_start":575,"line_end":575,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946499,"byte_end":10946504,"line_start":576,"line_end":576,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946509,"byte_end":10946516,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946521,"byte_end":10946545,"line_start":578,"line_end":578,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5689},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947261,"byte_end":10947270,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`Receiver`] is dropped, or when the [`Receiver::close`] method is\n called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946679,"byte_end":10946743,"line_start":583,"line_end":583,"column_start":5,"column_end":69}},{"value":"/ [`Receiver`] is dropped, or when the [`Receiver::close`] method is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946748,"byte_end":10946818,"line_start":584,"line_end":584,"column_start":5,"column_end":75}},{"value":"/ called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946823,"byte_end":10946834,"line_start":585,"line_end":585,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946839,"byte_end":10946842,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: crate::sync::mpsc::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946847,"byte_end":10946892,"line_start":587,"line_end":587,"column_start":5,"column_end":50}},{"value":"/ [`Receiver::close`]: crate::sync::mpsc::Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946897,"byte_end":10946956,"line_start":588,"line_end":588,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946961,"byte_end":10946964,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946969,"byte_end":10946976,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(42);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10946981,"byte_end":10947037,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947042,"byte_end":10947071,"line_start":592,"line_end":592,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947076,"byte_end":10947079,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947084,"byte_end":10947109,"line_start":594,"line_end":594,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947114,"byte_end":10947144,"line_start":595,"line_end":595,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947149,"byte_end":10947152,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947157,"byte_end":10947170,"line_start":597,"line_end":597,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947175,"byte_end":10947203,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947208,"byte_end":10947237,"line_start":599,"line_end":599,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947242,"byte_end":10947249,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5690},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948661,"byte_end":10948668,"line_start":643,"line_end":643,"column_start":18,"column_end":25},"name":"reserve","qualname":"<Sender<T>>::reserve","value":"pub async fn reserve<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity. Once capacity to send one message is\n available, it is reserved for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity. Once capacity to send one message is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947329,"byte_end":10947396,"line_start":605,"line_end":605,"column_start":5,"column_end":72}},{"value":"/ available, it is reserved for the caller.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947401,"byte_end":10947446,"line_start":606,"line_end":606,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947451,"byte_end":10947454,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947459,"byte_end":10947534,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947539,"byte_end":10947614,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. A [`Permit`] is returned to track","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947619,"byte_end":10947692,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ the reserved capacity. The [`send`] function on [`Permit`] consumes the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947697,"byte_end":10947772,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ reserved capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947777,"byte_end":10947799,"line_start":612,"line_end":612,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947804,"byte_end":10947807,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947812,"byte_end":10947888,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947893,"byte_end":10947912,"line_start":615,"line_end":615,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947917,"byte_end":10947920,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947925,"byte_end":10947947,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947952,"byte_end":10947978,"line_start":618,"line_end":618,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947983,"byte_end":10947986,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10947991,"byte_end":10948005,"line_start":620,"line_end":620,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948010,"byte_end":10948013,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948018,"byte_end":10948025,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948030,"byte_end":10948056,"line_start":623,"line_end":623,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948061,"byte_end":10948064,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948069,"byte_end":10948087,"line_start":625,"line_end":625,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948092,"byte_end":10948113,"line_start":626,"line_end":626,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948118,"byte_end":10948162,"line_start":627,"line_end":627,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948167,"byte_end":10948170,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948175,"byte_end":10948202,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948207,"byte_end":10948256,"line_start":630,"line_end":630,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948261,"byte_end":10948264,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948269,"byte_end":10948335,"line_start":632,"line_end":632,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948340,"byte_end":10948370,"line_start":633,"line_end":633,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948375,"byte_end":10948418,"line_start":634,"line_end":634,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948423,"byte_end":10948426,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948431,"byte_end":10948472,"line_start":636,"line_end":636,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948477,"byte_end":10948502,"line_start":637,"line_end":637,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948507,"byte_end":10948510,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948515,"byte_end":10948566,"line_start":639,"line_end":639,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948571,"byte_end":10948621,"line_start":640,"line_end":640,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948626,"byte_end":10948631,"line_start":641,"line_end":641,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948636,"byte_end":10948643,"line_start":642,"line_end":642,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5693},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951789,"byte_end":10951802,"line_start":722,"line_end":722,"column_start":18,"column_end":31},"name":"reserve_owned","qualname":"<Sender<T>>::reserve_owned","value":"pub async fn reserve_owned(Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for channel capacity, moving the `Sender` and returning an owned\n permit. Once capacity to send one message is available, it is reserved\n for the caller.","sig":null,"attributes":[{"value":"/ Wait for channel capacity, moving the `Sender` and returning an owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948806,"byte_end":10948879,"line_start":648,"line_end":648,"column_start":5,"column_end":78}},{"value":"/ permit. Once capacity to send one message is available, it is reserved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948884,"byte_end":10948958,"line_start":649,"line_end":649,"column_start":5,"column_end":79}},{"value":"/ for the caller.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948963,"byte_end":10948982,"line_start":650,"line_end":650,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948987,"byte_end":10948990,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10948995,"byte_end":10949069,"line_start":652,"line_end":652,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::reserve`],","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949074,"byte_end":10949149,"line_start":653,"line_end":653,"column_start":5,"column_end":80}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949154,"byte_end":10949229,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime. `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949234,"byte_end":10949309,"line_start":655,"line_end":655,"column_start":5,"column_end":80}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949314,"byte_end":10949389,"line_start":656,"line_end":656,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949394,"byte_end":10949468,"line_start":657,"line_end":657,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `reserve_owned`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949473,"byte_end":10949534,"line_start":658,"line_end":658,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949539,"byte_end":10949542,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ If the channel is full, the function waits for the number of unreceived","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949547,"byte_end":10949622,"line_start":660,"line_end":660,"column_start":5,"column_end":80}},{"value":"/ messages to become less than the channel capacity. Capacity to send one","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949627,"byte_end":10949702,"line_start":661,"line_end":661,"column_start":5,"column_end":80}},{"value":"/ message is reserved for the caller. An [`OwnedPermit`] is returned to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949707,"byte_end":10949780,"line_start":662,"line_end":662,"column_start":5,"column_end":78}},{"value":"/ track the reserved capacity. The [`send`] function on [`OwnedPermit`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949785,"byte_end":10949858,"line_start":663,"line_end":663,"column_start":5,"column_end":78}},{"value":"/ consumes the reserved capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949863,"byte_end":10949898,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949903,"byte_end":10949906,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949911,"byte_end":10949982,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ capacity back to the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10949987,"byte_end":10950020,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950025,"byte_end":10950028,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950033,"byte_end":10950047,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/ Sending a message using an [`OwnedPermit`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950052,"byte_end":10950099,"line_start":670,"line_end":670,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950104,"byte_end":10950111,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950116,"byte_end":10950142,"line_start":672,"line_end":672,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950147,"byte_end":10950150,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950155,"byte_end":10950173,"line_start":674,"line_end":674,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950178,"byte_end":10950199,"line_start":675,"line_end":675,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950204,"byte_end":10950248,"line_start":676,"line_end":676,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950253,"byte_end":10950256,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity, moving the sender.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950261,"byte_end":10950308,"line_start":678,"line_end":678,"column_start":5,"column_end":52}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950313,"byte_end":10950368,"line_start":679,"line_end":679,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950373,"byte_end":10950376,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/     // Send a message, consuming the permit and returning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950381,"byte_end":10950442,"line_start":681,"line_end":681,"column_start":5,"column_end":66}},{"value":"/     // the moved sender.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950447,"byte_end":10950475,"line_start":682,"line_end":682,"column_start":5,"column_end":33}},{"value":"/     let tx = permit.send(123);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950480,"byte_end":10950514,"line_start":683,"line_end":683,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950519,"byte_end":10950522,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950527,"byte_end":10950579,"line_start":685,"line_end":685,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 123);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950584,"byte_end":10950634,"line_start":686,"line_end":686,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950639,"byte_end":10950642,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/     // The sender can now be used again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950647,"byte_end":10950691,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/     tx.send(456).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950696,"byte_end":10950732,"line_start":689,"line_end":689,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950737,"byte_end":10950742,"line_start":690,"line_end":690,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950747,"byte_end":10950754,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950759,"byte_end":10950762,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ When multiple [`OwnedPermit`]s are needed, or the sender cannot be moved","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950767,"byte_end":10950843,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ by value, it can be inexpensively cloned before calling `reserve_owned`:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950848,"byte_end":10950924,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950929,"byte_end":10950932,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950937,"byte_end":10950944,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950949,"byte_end":10950975,"line_start":697,"line_end":697,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950980,"byte_end":10950983,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10950988,"byte_end":10951006,"line_start":699,"line_end":699,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951011,"byte_end":10951032,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951037,"byte_end":10951081,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951086,"byte_end":10951089,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951094,"byte_end":10951143,"line_start":703,"line_end":703,"column_start":5,"column_end":54}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951148,"byte_end":10951211,"line_start":704,"line_end":704,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951216,"byte_end":10951219,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951224,"byte_end":10951290,"line_start":706,"line_end":706,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951295,"byte_end":10951325,"line_start":707,"line_end":707,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951330,"byte_end":10951373,"line_start":708,"line_end":708,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951378,"byte_end":10951381,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951386,"byte_end":10951428,"line_start":710,"line_end":710,"column_start":5,"column_end":47}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951433,"byte_end":10951458,"line_start":711,"line_end":711,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951463,"byte_end":10951466,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951471,"byte_end":10951522,"line_start":713,"line_end":713,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951527,"byte_end":10951577,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951582,"byte_end":10951587,"line_start":715,"line_end":715,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951592,"byte_end":10951599,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951604,"byte_end":10951607,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ [`Sender::reserve`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951612,"byte_end":10951652,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951657,"byte_end":10951689,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951694,"byte_end":10951725,"line_start":720,"line_end":720,"column_start":5,"column_end":36}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10951730,"byte_end":10951771,"line_start":721,"line_end":721,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5699},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953702,"byte_end":10953713,"line_start":779,"line_end":779,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<Sender<T>>::try_reserve","value":"pub fn try_reserve(&Self) -> Result<Permit<, T>, TrySendError<()>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952181,"byte_end":10952260,"line_start":736,"line_end":736,"column_start":5,"column_end":84}},{"value":"/ available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952265,"byte_end":10952279,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952284,"byte_end":10952287,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return [`TrySendError`], otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952292,"byte_end":10952372,"line_start":739,"line_end":739,"column_start":5,"column_end":85}},{"value":"/ if there is a slot available it will return a [`Permit`] that will then allow you","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952377,"byte_end":10952462,"line_start":740,"line_end":740,"column_start":5,"column_end":90}},{"value":"/ to [`send`] on the channel with a guaranteed slot. This function is similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952467,"byte_end":10952549,"line_start":741,"line_end":741,"column_start":5,"column_end":87}},{"value":"/ [`reserve`] except it does not await for the slot to become available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952554,"byte_end":10952628,"line_start":742,"line_end":742,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952633,"byte_end":10952636,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ Dropping [`Permit`] without sending a message releases the capacity back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952641,"byte_end":10952717,"line_start":744,"line_end":744,"column_start":5,"column_end":81}},{"value":"/ to the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952722,"byte_end":10952741,"line_start":745,"line_end":745,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952746,"byte_end":10952749,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ [`Permit`]: Permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952754,"byte_end":10952776,"line_start":747,"line_end":747,"column_start":5,"column_end":27}},{"value":"/ [`send`]: Permit::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952781,"byte_end":10952807,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952812,"byte_end":10952844,"line_start":749,"line_end":749,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952849,"byte_end":10952852,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952857,"byte_end":10952871,"line_start":751,"line_end":751,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952876,"byte_end":10952879,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952884,"byte_end":10952891,"line_start":753,"line_end":753,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952896,"byte_end":10952922,"line_start":754,"line_end":754,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952927,"byte_end":10952930,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952935,"byte_end":10952953,"line_start":756,"line_end":756,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952958,"byte_end":10952979,"line_start":757,"line_end":757,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10952984,"byte_end":10953028,"line_start":758,"line_end":758,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953033,"byte_end":10953036,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953041,"byte_end":10953068,"line_start":760,"line_end":760,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.try_reserve().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953073,"byte_end":10953120,"line_start":761,"line_end":761,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953125,"byte_end":10953128,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953133,"byte_end":10953199,"line_start":763,"line_end":763,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953204,"byte_end":10953234,"line_start":764,"line_end":764,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953239,"byte_end":10953282,"line_start":765,"line_end":765,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953287,"byte_end":10953290,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953295,"byte_end":10953359,"line_start":767,"line_end":767,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953364,"byte_end":10953409,"line_start":768,"line_end":768,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953414,"byte_end":10953457,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953462,"byte_end":10953465,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953470,"byte_end":10953511,"line_start":771,"line_end":771,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953516,"byte_end":10953541,"line_start":772,"line_end":772,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953546,"byte_end":10953549,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953554,"byte_end":10953605,"line_start":774,"line_end":774,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953610,"byte_end":10953660,"line_start":775,"line_end":775,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953665,"byte_end":10953668,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953673,"byte_end":10953678,"line_start":777,"line_end":777,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953683,"byte_end":10953690,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5700},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956345,"byte_end":10956362,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"try_reserve_owned","qualname":"<Sender<T>>::try_reserve_owned","value":"pub fn try_reserve_owned(Self) -> Result<OwnedPermit<T>, TrySendError<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Try to acquire a slot in the channel without waiting for the slot to become\n available, returning an owned permit.","sig":null,"attributes":[{"value":"/ Try to acquire a slot in the channel without waiting for the slot to become","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10953965,"byte_end":10954044,"line_start":788,"line_end":788,"column_start":5,"column_end":84}},{"value":"/ available, returning an owned permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954049,"byte_end":10954090,"line_start":789,"line_end":789,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954095,"byte_end":10954098,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This moves the sender _by value_, and returns an owned permit that can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954103,"byte_end":10954177,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ be used to send a message into the channel. Unlike [`Sender::try_reserve`],","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954182,"byte_end":10954261,"line_start":792,"line_end":792,"column_start":5,"column_end":84}},{"value":"/ this method may be used in cases where the permit must be valid for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954266,"byte_end":10954341,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ `'static` lifetime.  `Sender`s may be cloned cheaply (`Sender::clone` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954346,"byte_end":10954422,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ essentially a reference count increment, comparable to [`Arc::clone`]),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954427,"byte_end":10954502,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ so when multiple [`OwnedPermit`]s are needed or the `Sender` cannot be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954507,"byte_end":10954581,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ moved, it can be cloned prior to calling `try_reserve_owned`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954586,"byte_end":10954651,"line_start":797,"line_end":797,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954656,"byte_end":10954659,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ If the channel is full this function will return a [`TrySendError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954664,"byte_end":10954736,"line_start":799,"line_end":799,"column_start":5,"column_end":77}},{"value":"/ Since the sender is taken by value, the `TrySendError` returned in this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954741,"byte_end":10954816,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ case contains the sender, so that it may be used again. Otherwise, if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954821,"byte_end":10954894,"line_start":801,"line_end":801,"column_start":5,"column_end":78}},{"value":"/ there is a slot available, this method will return an [`OwnedPermit`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954899,"byte_end":10954972,"line_start":802,"line_end":802,"column_start":5,"column_end":78}},{"value":"/ that can then be used to [`send`] on the channel with a guaranteed slot.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10954977,"byte_end":10955053,"line_start":803,"line_end":803,"column_start":5,"column_end":81}},{"value":"/ This function is similar to  [`reserve_owned`] except it does not await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955058,"byte_end":10955133,"line_start":804,"line_end":804,"column_start":5,"column_end":80}},{"value":"/ for the slot to become available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955138,"byte_end":10955175,"line_start":805,"line_end":805,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955180,"byte_end":10955183,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Dropping the [`OwnedPermit`] without sending a message releases the capacity back","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955188,"byte_end":10955273,"line_start":807,"line_end":807,"column_start":5,"column_end":90}},{"value":"/ to the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955278,"byte_end":10955297,"line_start":808,"line_end":808,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955302,"byte_end":10955305,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [`OwnedPermit`]: OwnedPermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955310,"byte_end":10955342,"line_start":810,"line_end":810,"column_start":5,"column_end":37}},{"value":"/ [`send`]: OwnedPermit::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955347,"byte_end":10955378,"line_start":811,"line_end":811,"column_start":5,"column_end":36}},{"value":"/ [`reserve_owned`]: Sender::reserve_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955383,"byte_end":10955427,"line_start":812,"line_end":812,"column_start":5,"column_end":49}},{"value":"/ [`Arc::clone`]: std::sync::Arc::clone","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955432,"byte_end":10955473,"line_start":813,"line_end":813,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955478,"byte_end":10955481,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955486,"byte_end":10955500,"line_start":815,"line_end":815,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955505,"byte_end":10955508,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955513,"byte_end":10955520,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955525,"byte_end":10955551,"line_start":818,"line_end":818,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955556,"byte_end":10955559,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955564,"byte_end":10955582,"line_start":820,"line_end":820,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955587,"byte_end":10955608,"line_start":821,"line_end":821,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955613,"byte_end":10955657,"line_start":822,"line_end":822,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955662,"byte_end":10955665,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955670,"byte_end":10955697,"line_start":824,"line_end":824,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.clone().try_reserve_owned().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955702,"byte_end":10955763,"line_start":825,"line_end":825,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955768,"byte_end":10955771,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955776,"byte_end":10955842,"line_start":827,"line_end":827,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955847,"byte_end":10955877,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955882,"byte_end":10955925,"line_start":829,"line_end":829,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955930,"byte_end":10955933,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/     // Trying to reserve an additional slot on the `tx` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10955938,"byte_end":10956002,"line_start":831,"line_end":831,"column_start":5,"column_end":69}},{"value":"/     // fail because there is no capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956007,"byte_end":10956052,"line_start":832,"line_end":832,"column_start":5,"column_end":50}},{"value":"/     assert!(tx.try_reserve().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956057,"byte_end":10956100,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956105,"byte_end":10956108,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/     // Sending on the permit succeeds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956113,"byte_end":10956154,"line_start":835,"line_end":835,"column_start":5,"column_end":46}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956159,"byte_end":10956184,"line_start":836,"line_end":836,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956189,"byte_end":10956192,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956197,"byte_end":10956248,"line_start":838,"line_end":838,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956253,"byte_end":10956303,"line_start":839,"line_end":839,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956308,"byte_end":10956311,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956316,"byte_end":10956321,"line_start":841,"line_end":841,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956326,"byte_end":10956333,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5701},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957020,"byte_end":10957032,"line_start":866,"line_end":866,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<Sender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956649,"byte_end":10956706,"line_start":854,"line_end":854,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956711,"byte_end":10956714,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956719,"byte_end":10956733,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956738,"byte_end":10956741,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956746,"byte_end":10956753,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956758,"byte_end":10956813,"line_start":859,"line_end":859,"column_start":5,"column_end":60}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956818,"byte_end":10956844,"line_start":860,"line_end":860,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956849,"byte_end":10956884,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956889,"byte_end":10956892,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::channel::<()>(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956897,"byte_end":10956954,"line_start":863,"line_end":863,"column_start":5,"column_end":62}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10956959,"byte_end":10956996,"line_start":864,"line_end":864,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957001,"byte_end":10957008,"line_start":865,"line_end":865,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5702},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958075,"byte_end":10958083,"line_start":899,"line_end":899,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Sender<T>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current capacity of the channel.","sig":null,"attributes":[{"value":"/ Returns the current capacity of the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957119,"byte_end":10957167,"line_start":870,"line_end":870,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957172,"byte_end":10957175,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ The capacity goes down when sending a value by calling [`send`] or by reserving capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957180,"byte_end":10957272,"line_start":872,"line_end":872,"column_start":5,"column_end":97}},{"value":"/ with [`reserve`]. The capacity goes up when values are received by the [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957277,"byte_end":10957365,"line_start":873,"line_end":873,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957370,"byte_end":10957373,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957378,"byte_end":10957392,"line_start":875,"line_end":875,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957397,"byte_end":10957400,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957405,"byte_end":10957412,"line_start":877,"line_end":877,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957417,"byte_end":10957443,"line_start":878,"line_end":878,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957448,"byte_end":10957451,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957456,"byte_end":10957474,"line_start":880,"line_end":880,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957479,"byte_end":10957500,"line_start":881,"line_end":881,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel::<()>(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957505,"byte_end":10957555,"line_start":882,"line_end":882,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957560,"byte_end":10957563,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957568,"byte_end":10957605,"line_start":884,"line_end":884,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957610,"byte_end":10957613,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/     // Making a reservation drops the capacity by one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957618,"byte_end":10957676,"line_start":886,"line_end":886,"column_start":5,"column_end":63}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957681,"byte_end":10957730,"line_start":887,"line_end":887,"column_start":5,"column_end":54}},{"value":"/     assert_eq!(tx.capacity(), 4);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957735,"byte_end":10957772,"line_start":888,"line_end":888,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957777,"byte_end":10957780,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/     // Sending and receiving a value increases the caapcity by one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957785,"byte_end":10957856,"line_start":890,"line_end":890,"column_start":5,"column_end":76}},{"value":"/     permit.send(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957861,"byte_end":10957885,"line_start":891,"line_end":891,"column_start":5,"column_end":29}},{"value":"/     rx.recv().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957890,"byte_end":10957923,"line_start":892,"line_end":892,"column_start":5,"column_end":38}},{"value":"/     assert_eq!(tx.capacity(), 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957928,"byte_end":10957965,"line_start":893,"line_end":893,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957970,"byte_end":10957975,"line_start":894,"line_end":894,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957980,"byte_end":10957987,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10957992,"byte_end":10957995,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ [`send`]: Sender::send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958000,"byte_end":10958026,"line_start":897,"line_end":897,"column_start":5,"column_end":31}},{"value":"/ [`reserve`]: Sender::reserve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958031,"byte_end":10958063,"line_start":898,"line_end":898,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5711},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959630,"byte_end":10959634,"line_start":955,"line_end":955,"column_start":12,"column_end":16},"name":"send","qualname":"<Permit>::send","value":"pub fn send(Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958557,"byte_end":10958603,"line_start":923,"line_end":923,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958608,"byte_end":10958611,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958616,"byte_end":10958691,"line_start":925,"line_end":925,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958696,"byte_end":10958770,"line_start":926,"line_end":926,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958775,"byte_end":10958849,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958854,"byte_end":10958902,"line_start":928,"line_end":928,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958907,"byte_end":10958910,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958915,"byte_end":10958955,"line_start":930,"line_end":930,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958960,"byte_end":10958963,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958968,"byte_end":10958982,"line_start":932,"line_end":932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958987,"byte_end":10958990,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958995,"byte_end":10959002,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959007,"byte_end":10959033,"line_start":935,"line_end":935,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959038,"byte_end":10959041,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959046,"byte_end":10959064,"line_start":937,"line_end":937,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959069,"byte_end":10959090,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959095,"byte_end":10959139,"line_start":939,"line_end":939,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959144,"byte_end":10959147,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959152,"byte_end":10959179,"line_start":941,"line_end":941,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959184,"byte_end":10959233,"line_start":942,"line_end":942,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959238,"byte_end":10959241,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/     // Trying to send directly on the `tx` will fail due to no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959246,"byte_end":10959312,"line_start":944,"line_end":944,"column_start":5,"column_end":71}},{"value":"/     // available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959317,"byte_end":10959347,"line_start":945,"line_end":945,"column_start":5,"column_end":35}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959352,"byte_end":10959395,"line_start":946,"line_end":946,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959400,"byte_end":10959403,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959408,"byte_end":10959447,"line_start":948,"line_end":948,"column_start":5,"column_end":44}},{"value":"/     permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959452,"byte_end":10959477,"line_start":949,"line_end":949,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959482,"byte_end":10959485,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959490,"byte_end":10959541,"line_start":951,"line_end":951,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959546,"byte_end":10959596,"line_start":952,"line_end":952,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959601,"byte_end":10959606,"line_start":953,"line_end":953,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959611,"byte_end":10959618,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961696,"byte_end":10961700,"line_start":1027,"line_end":1027,"column_start":12,"column_end":16},"name":"send","qualname":"<OwnedPermit<T>>::send","value":"pub fn send(Self, T) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Sends a value using the reserved capacity.","sig":null,"attributes":[{"value":"/ Sends a value using the reserved capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960509,"byte_end":10960555,"line_start":993,"line_end":993,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960560,"byte_end":10960563,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ Capacity for the message has already been reserved. The message is sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960568,"byte_end":10960643,"line_start":995,"line_end":995,"column_start":5,"column_end":80}},{"value":"/ to the receiver and the permit is consumed. The operation will succeed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960648,"byte_end":10960722,"line_start":996,"line_end":996,"column_start":5,"column_end":79}},{"value":"/ even if the receiver half has been closed. See [`Receiver::close`] for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960727,"byte_end":10960801,"line_start":997,"line_end":997,"column_start":5,"column_end":79}},{"value":"/ more details on performing a clean shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960806,"byte_end":10960854,"line_start":998,"line_end":998,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960859,"byte_end":10960862,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Permit::send`], this method returns the [`Sender`] from which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960867,"byte_end":10960941,"line_start":1000,"line_end":1000,"column_start":5,"column_end":79}},{"value":"/ the `OwnedPermit` was reserved.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960946,"byte_end":10960981,"line_start":1001,"line_end":1001,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960986,"byte_end":10960989,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ [`Receiver::close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960994,"byte_end":10961034,"line_start":1003,"line_end":1003,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961039,"byte_end":10961042,"line_start":1004,"line_end":1004,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961047,"byte_end":10961061,"line_start":1005,"line_end":1005,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961066,"byte_end":10961069,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961074,"byte_end":10961081,"line_start":1007,"line_end":1007,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961086,"byte_end":10961112,"line_start":1008,"line_end":1008,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961117,"byte_end":10961120,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961125,"byte_end":10961143,"line_start":1010,"line_end":1010,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961148,"byte_end":10961169,"line_start":1011,"line_end":1011,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961174,"byte_end":10961218,"line_start":1012,"line_end":1012,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961223,"byte_end":10961226,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/     // Reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961231,"byte_end":10961258,"line_start":1014,"line_end":1014,"column_start":5,"column_end":32}},{"value":"/     let permit = tx.reserve_owned().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961263,"byte_end":10961318,"line_start":1015,"line_end":1015,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961323,"byte_end":10961326,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/     // Send a message on the permit, returning the sender.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961331,"byte_end":10961393,"line_start":1017,"line_end":1017,"column_start":5,"column_end":67}},{"value":"/     let tx = permit.send(456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961398,"byte_end":10961432,"line_start":1018,"line_end":1018,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961437,"byte_end":10961440,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/     // The value sent on the permit is received","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961445,"byte_end":10961496,"line_start":1020,"line_end":1020,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(rx.recv().await.unwrap(), 456);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961501,"byte_end":10961551,"line_start":1021,"line_end":1021,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961556,"byte_end":10961559,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961564,"byte_end":10961621,"line_start":1023,"line_end":1023,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961626,"byte_end":10961662,"line_start":1024,"line_end":1024,"column_start":5,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961667,"byte_end":10961672,"line_start":1025,"line_end":1025,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961677,"byte_end":10961684,"line_start":1026,"line_end":1026,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5724},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962925,"byte_end":10962932,"line_start":1066,"line_end":1066,"column_start":12,"column_end":19},"name":"release","qualname":"<OwnedPermit<T>>::release","value":"pub fn release(Self) -> Sender<T>","parent":null,"children":[],"decl_id":null,"docs":" Release the reserved capacity *without* sending a message, returning the\n [`Sender`].","sig":null,"attributes":[{"value":"/ Release the reserved capacity *without* sending a message, returning the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10961953,"byte_end":10962029,"line_start":1036,"line_end":1036,"column_start":5,"column_end":81}},{"value":"/ [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962034,"byte_end":10962049,"line_start":1037,"line_end":1037,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962054,"byte_end":10962057,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962062,"byte_end":10962076,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962081,"byte_end":10962084,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962089,"byte_end":10962096,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962101,"byte_end":10962127,"line_start":1042,"line_end":1042,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962132,"byte_end":10962135,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962140,"byte_end":10962158,"line_start":1044,"line_end":1044,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962163,"byte_end":10962184,"line_start":1045,"line_end":1045,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = mpsc::channel(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962189,"byte_end":10962229,"line_start":1046,"line_end":1046,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962234,"byte_end":10962237,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/     // Clone the sender and reserve capacity","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962242,"byte_end":10962290,"line_start":1048,"line_end":1048,"column_start":5,"column_end":53}},{"value":"/     let permit = tx.clone().reserve_owned().await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962295,"byte_end":10962358,"line_start":1049,"line_end":1049,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962363,"byte_end":10962366,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/     // Trying to send on the original `tx` will fail, since the `permit`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962371,"byte_end":10962447,"line_start":1051,"line_end":1051,"column_start":5,"column_end":81}},{"value":"/     // has reserved all the available capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962452,"byte_end":10962503,"line_start":1052,"line_end":1052,"column_start":5,"column_end":56}},{"value":"/     assert!(tx.try_send(123).is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962508,"byte_end":10962551,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962556,"byte_end":10962559,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/     // Release the permit without sending a message, returning the clone","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962564,"byte_end":10962640,"line_start":1055,"line_end":1055,"column_start":5,"column_end":81}},{"value":"/     // of the sender.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962645,"byte_end":10962670,"line_start":1056,"line_end":1056,"column_start":5,"column_end":30}},{"value":"/     let tx2 = permit.release();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962675,"byte_end":10962710,"line_start":1057,"line_end":1057,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962715,"byte_end":10962718,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/     // We may now reuse `tx` to send another message.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962723,"byte_end":10962780,"line_start":1059,"line_end":1059,"column_start":5,"column_end":62}},{"value":"/     tx.send(789).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962785,"byte_end":10962821,"line_start":1060,"line_end":1060,"column_start":5,"column_end":41}},{"value":"/     # drop(rx); drop(tx2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962826,"byte_end":10962856,"line_start":1061,"line_end":1061,"column_start":5,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962861,"byte_end":10962866,"line_start":1062,"line_end":1062,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962871,"byte_end":10962878,"line_start":1063,"line_end":1063,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962883,"byte_end":10962886,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10962891,"byte_end":10962913,"line_start":1065,"line_end":1065,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":5924},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985063,"byte_end":10985078,"line_start":12,"line_end":12,"column_start":12,"column_end":27},"name":"UnboundedSender","qualname":"::sync::mpsc::unbounded::UnboundedSender","value":"UnboundedSender {  }","parent":null,"children":[{"krate":0,"index":5926}],"decl_id":null,"docs":" Send values to the associated `UnboundedReceiver`.","sig":null,"attributes":[{"value":"/ Send values to the associated `UnboundedReceiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10984905,"byte_end":10984959,"line_start":8,"line_end":8,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10984960,"byte_end":10984963,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10984964,"byte_end":10984996,"line_start":10,"line_end":10,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10984997,"byte_end":10985051,"line_start":11,"line_end":11,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":5933},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985871,"byte_end":10985888,"line_start":40,"line_end":40,"column_start":12,"column_end":29},"name":"UnboundedReceiver","qualname":"::sync::mpsc::unbounded::UnboundedReceiver","value":"UnboundedReceiver {  }","parent":null,"children":[{"krate":0,"index":5935}],"decl_id":null,"docs":" Receive values from the associated `UnboundedSender`.","sig":null,"attributes":[{"value":"/ Receive values from the associated `UnboundedSender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985495,"byte_end":10985552,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985553,"byte_end":10985556,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985557,"byte_end":10985589,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ [`unbounded_channel`](unbounded_channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985590,"byte_end":10985644,"line_start":35,"line_end":35,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985645,"byte_end":10985648,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ This receiver can be turned into a `Stream` using [`UnboundedReceiverStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985649,"byte_end":10985731,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985732,"byte_end":10985735,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [`UnboundedReceiverStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.UnboundedReceiverStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985736,"byte_end":10985859,"line_start":39,"line_end":39,"column_start":1,"column_end":124}}]},{"kind":"Function","id":{"krate":0,"index":5939},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986720,"byte_end":10986737,"line_start":63,"line_end":63,"column_start":8,"column_end":25},"name":"unbounded_channel","qualname":"::sync::mpsc::unbounded::unbounded_channel","value":"pub fn unbounded_channel<T>() -> (UnboundedSender<T>, UnboundedReceiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates an unbounded mpsc channel for communicating between asynchronous\n tasks without backpressure.","sig":null,"attributes":[{"value":"/ Creates an unbounded mpsc channel for communicating between asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986187,"byte_end":10986263,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ tasks without backpressure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986264,"byte_end":10986295,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986296,"byte_end":10986299,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A `send` on this channel will always succeed as long as the receive half has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986300,"byte_end":10986380,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ not been closed. If the receiver falls behind, messages will be arbitrarily","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986381,"byte_end":10986460,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ buffered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986461,"byte_end":10986474,"line_start":58,"line_end":58,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986475,"byte_end":10986478,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ **Note** that the amount of available system memory is an implicit bound to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986479,"byte_end":10986558,"line_start":60,"line_end":60,"column_start":1,"column_end":80}},{"value":"/ the channel. Using an `unbounded` channel has the ability of causing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986559,"byte_end":10986635,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ process to run out of memory. In this case, the process will be aborted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986636,"byte_end":10986712,"line_start":62,"line_end":62,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":5945},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988216,"byte_end":10988220,"line_start":119,"line_end":119,"column_start":18,"column_end":22},"name":"recv","qualname":"<UnboundedReceiver<T>>::recv","value":"pub async fn recv<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Receives the next value for this receiver.","sig":null,"attributes":[{"value":"/ Receives the next value for this receiver.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987146,"byte_end":10987192,"line_start":80,"line_end":80,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987197,"byte_end":10987200,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ `None` is returned when all `Sender` halves have dropped, indicating","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987205,"byte_end":10987277,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ that no further values can be sent on the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987282,"byte_end":10987336,"line_start":83,"line_end":83,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987341,"byte_end":10987344,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987349,"byte_end":10987363,"line_start":85,"line_end":85,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987368,"byte_end":10987371,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987376,"byte_end":10987383,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987388,"byte_end":10987414,"line_start":88,"line_end":88,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987419,"byte_end":10987422,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987427,"byte_end":10987445,"line_start":90,"line_end":90,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987450,"byte_end":10987471,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987476,"byte_end":10987529,"line_start":92,"line_end":92,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987534,"byte_end":10987537,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987542,"byte_end":10987575,"line_start":94,"line_end":94,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"hello\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987580,"byte_end":10987618,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987623,"byte_end":10987634,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987639,"byte_end":10987642,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987647,"byte_end":10987698,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(None, rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987703,"byte_end":10987745,"line_start":99,"line_end":99,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987750,"byte_end":10987755,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987760,"byte_end":10987767,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987772,"byte_end":10987775,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ Values are buffered:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987780,"byte_end":10987804,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987809,"byte_end":10987812,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987817,"byte_end":10987824,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987829,"byte_end":10987855,"line_start":106,"line_end":106,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987860,"byte_end":10987863,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987868,"byte_end":10987886,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987891,"byte_end":10987912,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987917,"byte_end":10987970,"line_start":110,"line_end":110,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987975,"byte_end":10987978,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10987983,"byte_end":10988017,"line_start":112,"line_end":112,"column_start":5,"column_end":39}},{"value":"/     tx.send(\"world\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988022,"byte_end":10988056,"line_start":113,"line_end":113,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988061,"byte_end":10988064,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(Some(\"hello\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988069,"byte_end":10988120,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(Some(\"world\"), rx.recv().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988125,"byte_end":10988176,"line_start":116,"line_end":116,"column_start":5,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988181,"byte_end":10988186,"line_start":117,"line_end":117,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988191,"byte_end":10988198,"line_start":118,"line_end":118,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5950},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989027,"byte_end":10989040,"line_start":151,"line_end":151,"column_start":12,"column_end":25},"name":"blocking_recv","qualname":"<UnboundedReceiver<T>>::blocking_recv","value":"pub fn blocking_recv(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Blocking receive to call outside of asynchronous contexts.","sig":null,"attributes":[{"value":"/ Blocking receive to call outside of asynchronous contexts.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988342,"byte_end":10988404,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988409,"byte_end":10988412,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988417,"byte_end":10988429,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988434,"byte_end":10988437,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This function panics if called within an asynchronous execution","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988442,"byte_end":10988509,"line_start":129,"line_end":129,"column_start":5,"column_end":72}},{"value":"/ context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988514,"byte_end":10988526,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988531,"byte_end":10988534,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988539,"byte_end":10988553,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988558,"byte_end":10988561,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988566,"byte_end":10988573,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988578,"byte_end":10988598,"line_start":135,"line_end":135,"column_start":5,"column_end":25}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988603,"byte_end":10988629,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988634,"byte_end":10988637,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988642,"byte_end":10988660,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988665,"byte_end":10988686,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel::<u8>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988691,"byte_end":10988750,"line_start":140,"line_end":140,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988755,"byte_end":10988758,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     let sync_code = thread::spawn(move || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988763,"byte_end":10988810,"line_start":142,"line_end":142,"column_start":5,"column_end":52}},{"value":"/         assert_eq!(Some(10), rx.blocking_recv());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988815,"byte_end":10988868,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988873,"byte_end":10988884,"line_start":144,"line_end":144,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988889,"byte_end":10988892,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     let _ = tx.send(10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988897,"byte_end":10988925,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/     sync_code.join().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988930,"byte_end":10988964,"line_start":147,"line_end":147,"column_start":5,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988969,"byte_end":10988974,"line_start":148,"line_end":148,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988979,"byte_end":10988986,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10988991,"byte_end":10989015,"line_start":150,"line_end":150,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":5951},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989360,"byte_end":10989365,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"close","qualname":"<UnboundedReceiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the receiving half of a channel, without dropping it.","sig":null,"attributes":[{"value":"/ Closes the receiving half of a channel, without dropping it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989123,"byte_end":10989187,"line_start":155,"line_end":155,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989192,"byte_end":10989195,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This prevents any further messages from being sent on the channel while","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989200,"byte_end":10989275,"line_start":157,"line_end":157,"column_start":5,"column_end":80}},{"value":"/ still enabling the receiver to drain messages that are buffered.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989280,"byte_end":10989348,"line_start":158,"line_end":158,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990206,"byte_end":10990215,"line_start":178,"line_end":178,"column_start":12,"column_end":21},"name":"poll_recv","qualname":"<UnboundedReceiver<T>>::poll_recv","value":"pub fn poll_recv(&mut Self, &mut Context) -> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to receive the next message on this channel.","sig":null,"attributes":[{"value":"/ Polls to receive the next message on this channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989417,"byte_end":10989471,"line_start":163,"line_end":163,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989476,"byte_end":10989479,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989484,"byte_end":10989508,"line_start":165,"line_end":165,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989513,"byte_end":10989516,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if no messages are available but the channel is not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989521,"byte_end":10989595,"line_start":167,"line_end":167,"column_start":5,"column_end":79}},{"value":"/    closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989600,"byte_end":10989614,"line_start":168,"line_end":168,"column_start":5,"column_end":19}},{"value":"/  * `Poll::Ready(Some(message))` if a message is available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989619,"byte_end":10989681,"line_start":169,"line_end":169,"column_start":5,"column_end":67}},{"value":"/  * `Poll::Ready(None)` if the channel has been closed and all messages","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989686,"byte_end":10989760,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/    sent before it was closed have been received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989765,"byte_end":10989817,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989822,"byte_end":10989825,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ When the method returns `Poll::Pending`, the `Waker` in the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989830,"byte_end":10989902,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/ `Context` is scheduled to receive a wakeup when a message is sent on any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989907,"byte_end":10989983,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/ receiver, or when the channel is closed.  Note that on multiple calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10989988,"byte_end":10990064,"line_start":175,"line_end":175,"column_start":5,"column_end":81}},{"value":"/ `poll_recv`, only the `Waker` from the `Context` passed to the most","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990069,"byte_end":10990140,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990145,"byte_end":10990194,"line_start":177,"line_end":177,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":5956},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10991143,"byte_end":10991147,"line_start":200,"line_end":200,"column_start":12,"column_end":16},"name":"send","qualname":"<UnboundedSender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a message on this `UnboundedSender` without blocking.","sig":null,"attributes":[{"value":"/ Attempts to send a message on this `UnboundedSender` without blocking.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990455,"byte_end":10990529,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990534,"byte_end":10990537,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ This method is not marked async because sending a message to an unbounded channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990542,"byte_end":10990627,"line_start":190,"line_end":190,"column_start":5,"column_end":90}},{"value":"/ never requires any form of waiting. Because of this, the `send` method can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990632,"byte_end":10990713,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ used in both synchronous and asynchronous code without problems.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990718,"byte_end":10990786,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990791,"byte_end":10990794,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If the receive half of the channel is closed, either due to [`close`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990799,"byte_end":10990872,"line_start":194,"line_end":194,"column_start":5,"column_end":78}},{"value":"/ being called or the [`UnboundedReceiver`] having been dropped, this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990877,"byte_end":10990948,"line_start":195,"line_end":195,"column_start":5,"column_end":76}},{"value":"/ function returns an error. The error includes the value passed to `send`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990953,"byte_end":10991030,"line_start":196,"line_end":196,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10991035,"byte_end":10991038,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`close`]: UnboundedReceiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10991043,"byte_end":10991082,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ [`UnboundedReceiver`]: UnboundedReceiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10991087,"byte_end":10991131,"line_start":199,"line_end":199,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5962},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993076,"byte_end":10993082,"line_start":270,"line_end":270,"column_start":18,"column_end":24},"name":"closed","qualname":"<UnboundedSender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the receiver has dropped.","sig":null,"attributes":[{"value":"/ Completes when the receiver has dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992185,"byte_end":10992229,"line_start":239,"line_end":239,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992234,"byte_end":10992237,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This allows the producers to get notified when interest in the produced","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992242,"byte_end":10992317,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992322,"byte_end":10992377,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992382,"byte_end":10992385,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992390,"byte_end":10992404,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992409,"byte_end":10992412,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992417,"byte_end":10992424,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992429,"byte_end":10992455,"line_start":247,"line_end":247,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992460,"byte_end":10992463,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992468,"byte_end":10992486,"line_start":249,"line_end":249,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992491,"byte_end":10992512,"line_start":250,"line_end":250,"column_start":5,"column_end":26}},{"value":"/     let (tx1, rx) = mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992517,"byte_end":10992573,"line_start":251,"line_end":251,"column_start":5,"column_end":61}},{"value":"/     let tx2 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992578,"byte_end":10992608,"line_start":252,"line_end":252,"column_start":5,"column_end":35}},{"value":"/     let tx3 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992613,"byte_end":10992643,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/     let tx4 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992648,"byte_end":10992678,"line_start":254,"line_end":254,"column_start":5,"column_end":35}},{"value":"/     let tx5 = tx1.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992683,"byte_end":10992713,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992718,"byte_end":10992751,"line_start":256,"line_end":256,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992756,"byte_end":10992777,"line_start":257,"line_end":257,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992782,"byte_end":10992793,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992798,"byte_end":10992801,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     futures::join!(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992806,"byte_end":10992829,"line_start":260,"line_end":260,"column_start":5,"column_end":28}},{"value":"/         tx1.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992834,"byte_end":10992859,"line_start":261,"line_end":261,"column_start":5,"column_end":30}},{"value":"/         tx2.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992864,"byte_end":10992889,"line_start":262,"line_end":262,"column_start":5,"column_end":30}},{"value":"/         tx3.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992894,"byte_end":10992919,"line_start":263,"line_end":263,"column_start":5,"column_end":30}},{"value":"/         tx4.closed(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992924,"byte_end":10992949,"line_start":264,"line_end":264,"column_start":5,"column_end":30}},{"value":"/         tx5.closed()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992954,"byte_end":10992978,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     );","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10992983,"byte_end":10992993,"line_start":266,"line_end":266,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993041,"byte_end":10993046,"line_start":268,"line_end":268,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993051,"byte_end":10993058,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5965},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993779,"byte_end":10993788,"line_start":291,"line_end":291,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<UnboundedSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when the\n [`UnboundedReceiver`] is dropped, or when the\n [`UnboundedReceiver::close`] method is called.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993135,"byte_end":10993199,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/ [`UnboundedReceiver`] is dropped, or when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993204,"byte_end":10993253,"line_start":274,"line_end":274,"column_start":5,"column_end":54}},{"value":"/ [`UnboundedReceiver::close`] method is called.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993258,"byte_end":10993308,"line_start":275,"line_end":275,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993313,"byte_end":10993316,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ [`UnboundedReceiver`]: crate::sync::mpsc::UnboundedReceiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993321,"byte_end":10993384,"line_start":277,"line_end":277,"column_start":5,"column_end":68}},{"value":"/ [`UnboundedReceiver::close`]: crate::sync::mpsc::UnboundedReceiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993389,"byte_end":10993466,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993471,"byte_end":10993474,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993479,"byte_end":10993486,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993491,"byte_end":10993555,"line_start":281,"line_end":281,"column_start":5,"column_end":69}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993560,"byte_end":10993589,"line_start":282,"line_end":282,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993594,"byte_end":10993597,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993602,"byte_end":10993627,"line_start":284,"line_end":284,"column_start":5,"column_end":30}},{"value":"/ assert!(!tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993632,"byte_end":10993662,"line_start":285,"line_end":285,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993667,"byte_end":10993670,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993675,"byte_end":10993688,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993693,"byte_end":10993721,"line_start":288,"line_end":288,"column_start":5,"column_end":33}},{"value":"/ assert!(tx2.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993726,"byte_end":10993755,"line_start":289,"line_end":289,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993760,"byte_end":10993767,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5966},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994236,"byte_end":10994248,"line_start":307,"line_end":307,"column_start":12,"column_end":24},"name":"same_channel","qualname":"<UnboundedSender<T>>::same_channel","value":"pub fn same_channel(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if senders belong to the same channel.","sig":null,"attributes":[{"value":"/ Returns `true` if senders belong to the same channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993847,"byte_end":10993904,"line_start":295,"line_end":295,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993909,"byte_end":10993912,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993917,"byte_end":10993931,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993936,"byte_end":10993939,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993944,"byte_end":10993951,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10993956,"byte_end":10994020,"line_start":300,"line_end":300,"column_start":5,"column_end":69}},{"value":"/ let  tx2 = tx.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994025,"byte_end":10994051,"line_start":301,"line_end":301,"column_start":5,"column_end":31}},{"value":"/ assert!(tx.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994056,"byte_end":10994091,"line_start":302,"line_end":302,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994096,"byte_end":10994099,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (tx3, rx3) = tokio::sync::mpsc::unbounded_channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994104,"byte_end":10994170,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ assert!(!tx3.same_channel(&tx2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994175,"byte_end":10994212,"line_start":305,"line_end":305,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10994217,"byte_end":10994224,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":5971},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::sync::mpsc::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","parent":null,"children":[{"krate":0,"index":5972},{"krate":0,"index":5973},{"krate":0,"index":7029},{"krate":0,"index":7033},{"krate":0,"index":5974},{"krate":0,"index":5977},{"krate":0,"index":7036},{"krate":0,"index":7044},{"krate":0,"index":5979},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":7047},{"krate":0,"index":7050},{"krate":0,"index":5987},{"krate":0,"index":5989},{"krate":0,"index":7057},{"krate":0,"index":7065},{"krate":0,"index":7052},{"krate":0,"index":7054}],"decl_id":null,"docs":" Channel error types\n","sig":null,"attributes":[{"value":"/ Channel error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994333,"byte_end":10994356,"line_start":1,"line_end":1,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":7029},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994460,"byte_end":10994469,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"SendError","qualname":"::sync::mpsc::error::SendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Sender`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Sender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994396,"byte_end":10994431,"line_start":6,"line_end":6,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7032},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994473,"byte_end":10994478,"line_start":8,"line_end":8,"column_start":25,"column_end":30},"name":"0","qualname":"::sync::mpsc::error::SendError::0","value":"T","parent":{"krate":0,"index":7029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7038},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995022,"byte_end":10995026,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Full","qualname":"::sync::mpsc::error::TrySendError::Full","value":"TrySendError::Full(T)","parent":{"krate":0,"index":7036},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n currently full and sending would require blocking.\n","sig":null,"attributes":[{"value":"/ The data could not be sent on the channel because the channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994890,"byte_end":10994958,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/ currently full and sending would require blocking.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994963,"byte_end":10995017,"line_start":25,"line_end":25,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7041},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995127,"byte_end":10995133,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::mpsc::error::TrySendError::Closed","value":"TrySendError::Closed(T)","parent":{"krate":0,"index":7036},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[{"value":"/ The receive half of the channel was explicitly closed or has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995036,"byte_end":10995105,"line_start":28,"line_end":28,"column_start":5,"column_end":74}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995110,"byte_end":10995122,"line_start":29,"line_end":29,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":7036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994868,"byte_end":10994880,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"TrySendError","qualname":"::sync::mpsc::error::TrySendError","value":"pub enum TrySendError<T> {\n\n    /// The data could not be sent on the channel because the channel is\n    /// currently full and sending would require blocking.\n    Full(T),\n\n    /// The receive half of the channel was explicitly closed or has been\n    /// dropped.\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":7038},{"krate":0,"index":7041}],"decl_id":null,"docs":" This enumeration is the list of the possible error outcomes for the\n [try_send](super::Sender::try_send) method.\n","sig":null,"attributes":[{"value":"/ This enumeration is the list of the possible error outcomes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994722,"byte_end":10994793,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ [try_send](super::Sender::try_send) method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994794,"byte_end":10994841,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995771,"byte_end":10995780,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"RecvError","qualname":"::sync::mpsc::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995709,"byte_end":10995742,"line_start":56,"line_end":56,"column_start":1,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7059},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996289,"byte_end":10996296,"line_start":76,"line_end":76,"column_start":9,"column_end":16},"name":"Timeout","qualname":"::sync::mpsc::error::SendTimeoutError::Timeout","value":"SendTimeoutError::Timeout(T)","parent":{"krate":0,"index":7057},"children":[],"decl_id":null,"docs":" The data could not be sent on the channel because the channel is\n full, and the timeout to send has elapsed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7062},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996409,"byte_end":10996415,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::mpsc::error::SendTimeoutError::Closed","value":"SendTimeoutError::Closed(T)","parent":{"krate":0,"index":7057},"children":[],"decl_id":null,"docs":" The receive half of the channel was explicitly closed or has been\n dropped.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7057},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996127,"byte_end":10996143,"line_start":73,"line_end":73,"column_start":14,"column_end":30},"name":"SendTimeoutError","qualname":"::sync::mpsc::error::SendTimeoutError","value":"pub enum SendTimeoutError<T> {\n\n    #[doc =\n      r\" The data could not be sent on the channel because the channel is\"]\n    #[doc = r\" full, and the timeout to send has elapsed.\"]\n    Timeout(T),\n\n    #[doc =\n      r\" The receive half of the channel was explicitly closed or has been\"]\n    #[doc = r\" dropped.\"]\n    Closed(T),\n}","parent":null,"children":[{"krate":0,"index":7059},{"krate":0,"index":7062}],"decl_id":null,"docs":" Error returned by [`Sender::send_timeout`](super::Sender::send_timeout)].\n","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":24331,"byte_end":24355,"line_start":311,"line_end":311,"column_start":13,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6003},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001826,"byte_end":11001831,"line_start":126,"line_end":126,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::sync::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":6005},{"krate":0,"index":6006}],"decl_id":null,"docs":" An asynchronous `Mutex`-like type.","sig":null,"attributes":[{"value":"/ An asynchronous `Mutex`-like type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997163,"byte_end":10997201,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997202,"byte_end":10997205,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This type acts similarly to [`std::sync::Mutex`], with two major","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997206,"byte_end":10997274,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ differences: [`lock`] is an async method so does not block, and the lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997275,"byte_end":10997351,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ guard is designed to be held across `.await` points.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997352,"byte_end":10997408,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997409,"byte_end":10997412,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Which kind of mutex should you use?","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997413,"byte_end":10997454,"line_start":17,"line_end":17,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997455,"byte_end":10997458,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Contrary to popular belief, it is ok and often preferred to use the ordinary","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997459,"byte_end":10997539,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ [`Mutex`][std] from the standard library in asynchronous code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997540,"byte_end":10997606,"line_start":20,"line_end":20,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997607,"byte_end":10997610,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The feature that the async mutex offers over the blocking mutex is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997611,"byte_end":10997685,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ ability to keep it locked across an `.await` point. This makes the async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997686,"byte_end":10997762,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ mutex more expensive than the blocking mutex, so the blocking mutex should","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997763,"byte_end":10997841,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ be preferred in the cases where it can be used. The primary use case for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997842,"byte_end":10997922,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ async mutex is to provide shared mutable access to IO resources such as a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10997923,"byte_end":10998000,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ database connection. If the value behind the mutex is just data, it's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998001,"byte_end":10998074,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/ usually appropriate to use a blocking mutex such as the one in the standard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998075,"byte_end":10998154,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ library or [`parking_lot`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998155,"byte_end":10998186,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998187,"byte_end":10998190,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Note that, although the compiler will not prevent the std `Mutex` from holding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998191,"byte_end":10998273,"line_start":31,"line_end":31,"column_start":1,"column_end":83}},{"value":"/ its guard across `.await` points in situations where the task is not movable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998274,"byte_end":10998354,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ between threads, this virtually never leads to correct concurrent code in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998355,"byte_end":10998432,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ practice as it can easily lead to deadlocks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998433,"byte_end":10998481,"line_start":34,"line_end":34,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998482,"byte_end":10998485,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ A common pattern is to wrap the `Arc<Mutex<...>>` in a struct that provides","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998486,"byte_end":10998565,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ non-async methods for performing operations on the data within, and only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998566,"byte_end":10998642,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ lock the mutex inside these methods. The [mini-redis] example provides an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998643,"byte_end":10998720,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ illustration of this pattern.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998721,"byte_end":10998754,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998755,"byte_end":10998758,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Additionally, when you _do_ want shared access to an IO resource, it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998759,"byte_end":10998834,"line_start":41,"line_end":41,"column_start":1,"column_end":76}},{"value":"/ often better to spawn a task to manage the IO resource, and to use message","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998835,"byte_end":10998913,"line_start":42,"line_end":42,"column_start":1,"column_end":79}},{"value":"/ passing to communicate with that task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998914,"byte_end":10998956,"line_start":43,"line_end":43,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998957,"byte_end":10998960,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [std]: std::sync::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998961,"byte_end":10998988,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ [`parking_lot`]: https://docs.rs/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10998989,"byte_end":10999037,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [mini-redis]: https://github.com/tokio-rs/mini-redis/blob/master/src/db.rs","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999038,"byte_end":10999116,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999117,"byte_end":10999120,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999121,"byte_end":10999136,"line_start":49,"line_end":49,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999137,"byte_end":10999140,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999141,"byte_end":10999159,"line_start":51,"line_end":51,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999160,"byte_end":10999187,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999188,"byte_end":10999211,"line_start":53,"line_end":53,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999212,"byte_end":10999215,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999216,"byte_end":10999234,"line_start":55,"line_end":55,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999235,"byte_end":10999256,"line_start":56,"line_end":56,"column_start":1,"column_end":22}},{"value":"/     let data1 = Arc::new(Mutex::new(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999257,"byte_end":10999301,"line_start":57,"line_end":57,"column_start":1,"column_end":45}},{"value":"/     let data2 = Arc::clone(&data1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999302,"byte_end":10999341,"line_start":58,"line_end":58,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999342,"byte_end":10999345,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999346,"byte_end":10999379,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"/         let mut lock = data2.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999380,"byte_end":10999426,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/         *lock += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999427,"byte_end":10999450,"line_start":62,"line_end":62,"column_start":1,"column_end":24}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999451,"byte_end":10999462,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999463,"byte_end":10999466,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/     let mut lock = data1.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999467,"byte_end":10999509,"line_start":65,"line_end":65,"column_start":1,"column_end":43}},{"value":"/     *lock += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999510,"byte_end":10999529,"line_start":66,"line_end":66,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999530,"byte_end":10999535,"line_start":67,"line_end":67,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999536,"byte_end":10999543,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999544,"byte_end":10999547,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999548,"byte_end":10999551,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999552,"byte_end":10999570,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999571,"byte_end":10999598,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999599,"byte_end":10999622,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999623,"byte_end":10999626,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999627,"byte_end":10999645,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999646,"byte_end":10999667,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/     let count = Arc::new(Mutex::new(0));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999668,"byte_end":10999712,"line_start":77,"line_end":77,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999713,"byte_end":10999716,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     for i in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999717,"byte_end":10999740,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/         let my_count = Arc::clone(&count);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999741,"byte_end":10999787,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/         tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999788,"byte_end":10999825,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/             for j in 0..10 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999826,"byte_end":10999858,"line_start":82,"line_end":82,"column_start":1,"column_end":33}},{"value":"/                 let mut lock = my_count.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999859,"byte_end":10999916,"line_start":83,"line_end":83,"column_start":1,"column_end":58}},{"value":"/                 *lock += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999917,"byte_end":10999948,"line_start":84,"line_end":84,"column_start":1,"column_end":32}},{"value":"/                 println!(\"{} {} {}\", i, j, lock);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":10999949,"byte_end":11000002,"line_start":85,"line_end":85,"column_start":1,"column_end":54}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000003,"byte_end":11000020,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000021,"byte_end":11000036,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000037,"byte_end":11000046,"line_start":88,"line_end":88,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000047,"byte_end":11000050,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000051,"byte_end":11000065,"line_start":90,"line_end":90,"column_start":1,"column_end":15}},{"value":"/         if *count.lock().await >= 50 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000066,"byte_end":11000108,"line_start":91,"line_end":91,"column_start":1,"column_end":43}},{"value":"/             break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000109,"byte_end":11000131,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000132,"byte_end":11000145,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000146,"byte_end":11000155,"line_start":94,"line_end":94,"column_start":1,"column_end":10}},{"value":"/     println!(\"Count hit 50.\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000156,"byte_end":11000190,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000191,"byte_end":11000196,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000197,"byte_end":11000204,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/ There are a few things of note here to pay attention to in this example.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000205,"byte_end":11000281,"line_start":98,"line_end":98,"column_start":1,"column_end":77}},{"value":"/ 1. The mutex is wrapped in an [`Arc`] to allow it to be shared across","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000282,"byte_end":11000355,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/    threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000356,"byte_end":11000371,"line_start":100,"line_end":100,"column_start":1,"column_end":16}},{"value":"/ 2. Each spawned task obtains a lock and releases it on every iteration.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000372,"byte_end":11000447,"line_start":101,"line_end":101,"column_start":1,"column_end":76}},{"value":"/ 3. Mutation of the data protected by the Mutex is done by de-referencing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000448,"byte_end":11000524,"line_start":102,"line_end":102,"column_start":1,"column_end":77}},{"value":"/    the obtained lock as seen on lines 12 and 19.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000525,"byte_end":11000577,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000578,"byte_end":11000581,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Tokio's Mutex works in a simple FIFO (first in, first out) style where all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000582,"byte_end":11000660,"line_start":105,"line_end":105,"column_start":1,"column_end":79}},{"value":"/ calls to [`lock`] complete in the order they were performed. In that way the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000661,"byte_end":11000741,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ Mutex is \"fair\" and predictable in how it distributes the locks to inner","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000742,"byte_end":11000818,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ data. Locks are released and reacquired after every iteration, so basically,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000819,"byte_end":11000899,"line_start":108,"line_end":108,"column_start":1,"column_end":81}},{"value":"/ each thread goes to the back of the line after it increments the value once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000900,"byte_end":11000980,"line_start":109,"line_end":109,"column_start":1,"column_end":81}},{"value":"/ Note that there's some unpredictability to the timing between when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11000981,"byte_end":11001055,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ threads are started, but once they are going they alternate predictably.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001056,"byte_end":11001132,"line_start":111,"line_end":111,"column_start":1,"column_end":77}},{"value":"/ Finally, since there is only a single valid lock at any given time, there is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001133,"byte_end":11001213,"line_start":112,"line_end":112,"column_start":1,"column_end":81}},{"value":"/ no possibility of a race condition when mutating the inner value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001214,"byte_end":11001283,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001284,"byte_end":11001287,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Note that in contrast to [`std::sync::Mutex`], this implementation does not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001288,"byte_end":11001367,"line_start":115,"line_end":115,"column_start":1,"column_end":80}},{"value":"/ poison the mutex when a thread holding the [`MutexGuard`] panics. In such a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001368,"byte_end":11001447,"line_start":116,"line_end":116,"column_start":1,"column_end":80}},{"value":"/ case, the mutex will be unlocked. If the panic is caught, this might leave","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001448,"byte_end":11001526,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the data protected by the mutex in an inconsistent state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001527,"byte_end":11001588,"line_start":118,"line_end":118,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001589,"byte_end":11001592,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001593,"byte_end":11001620,"line_start":120,"line_end":120,"column_start":1,"column_end":28}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001621,"byte_end":11001658,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/ [`Arc`]: struct@std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001659,"byte_end":11001693,"line_start":122,"line_end":122,"column_start":1,"column_end":35}},{"value":"/ [`std::sync::Mutex`]: struct@std::sync::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001694,"byte_end":11001743,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001744,"byte_end":11001781,"line_start":124,"line_end":124,"column_start":1,"column_end":38}},{"value":"/ [`lock`]: method@Mutex::lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001782,"byte_end":11001814,"line_start":125,"line_end":125,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6007},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002331,"byte_end":11002341,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::sync::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":6010}],"decl_id":null,"docs":" A handle to a held `Mutex`. The guard can be held across any `.await` point\n as it is [`Send`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex`. The guard can be held across any `.await` point","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001899,"byte_end":11001978,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ as it is [`Send`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11001979,"byte_end":11002001,"line_start":132,"line_end":132,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002002,"byte_end":11002005,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002006,"byte_end":11002085,"line_start":134,"line_end":134,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally borrows the `Mutex`, so the mutex will not be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002086,"byte_end":11002161,"line_start":135,"line_end":135,"column_start":1,"column_end":76}},{"value":"/ dropped while a guard exists.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002162,"byte_end":11002195,"line_start":136,"line_end":136,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002196,"byte_end":11002199,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002200,"byte_end":11002278,"line_start":138,"line_end":138,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002279,"byte_end":11002319,"line_start":139,"line_end":139,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":6011},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003129,"byte_end":11003144,"line_start":159,"line_end":159,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::sync::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":6013}],"decl_id":null,"docs":" An owned handle to a held `Mutex`.","sig":null,"attributes":[{"value":"/ An owned handle to a held `Mutex`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002386,"byte_end":11002424,"line_start":144,"line_end":144,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002425,"byte_end":11002428,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ This guard is only available from a `Mutex` that is wrapped in an [`Arc`]. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002429,"byte_end":11002510,"line_start":146,"line_end":146,"column_start":1,"column_end":82}},{"value":"/ is identical to `MutexGuard`, except that rather than borrowing the `Mutex`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002511,"byte_end":11002591,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ it clones the `Arc`, incrementing the reference count. This means that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002592,"byte_end":11002666,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ unlike `MutexGuard`, it will have the `'static` lifetime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002667,"byte_end":11002728,"line_start":149,"line_end":149,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002729,"byte_end":11002732,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ As long as you have this guard, you have exclusive access to the underlying","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002733,"byte_end":11002812,"line_start":151,"line_end":151,"column_start":1,"column_end":80}},{"value":"/ `T`. The guard internally keeps a reference-counted pointer to the original","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002813,"byte_end":11002892,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ `Mutex`, so even if the lock goes away, the guard remains valid.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002893,"byte_end":11002961,"line_start":153,"line_end":153,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002962,"byte_end":11002965,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ The lock is automatically released whenever the guard is dropped, at which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11002966,"byte_end":11003044,"line_start":155,"line_end":155,"column_start":1,"column_end":79}},{"value":"/ point `lock` will succeed yet again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003045,"byte_end":11003085,"line_start":156,"line_end":156,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003086,"byte_end":11003089,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003090,"byte_end":11003117,"line_start":158,"line_end":158,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":6014},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003470,"byte_end":11003486,"line_start":169,"line_end":169,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::sync::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":6017},{"krate":0,"index":6018},{"krate":0,"index":6019}],"decl_id":null,"docs":" A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","sig":null,"attributes":[{"value":"/ A handle to a held `Mutex` that has had a function applied to it via [`MutexGuard::map`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003186,"byte_end":11003279,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003280,"byte_end":11003283,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This can be used to hold a subfield of the protected data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003284,"byte_end":11003346,"line_start":165,"line_end":165,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003347,"byte_end":11003350,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`MutexGuard::map`]: method@MutexGuard::map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003351,"byte_end":11003398,"line_start":167,"line_end":167,"column_start":1,"column_end":48}},{"value":"must_use = \"if unused the Mutex will immediately unlock\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003399,"byte_end":11003458,"line_start":168,"line_end":168,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7068},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004887,"byte_end":11004899,"line_start":201,"line_end":201,"column_start":12,"column_end":24},"name":"TryLockError","qualname":"::sync::mutex::TryLockError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and\n [`RwLock::try_write`] functions.","sig":null,"attributes":[{"value":"/ Error returned from the [`Mutex::try_lock`], [`RwLock::try_read`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004298,"byte_end":11004371,"line_start":186,"line_end":186,"column_start":1,"column_end":74}},{"value":"/ [`RwLock::try_write`] functions.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004372,"byte_end":11004408,"line_start":187,"line_end":187,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004409,"byte_end":11004412,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ `Mutex::try_lock` operation will only fail if the mutex is already locked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004413,"byte_end":11004491,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004492,"byte_end":11004495,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_read` operation will only fail if the lock is currently held","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004496,"byte_end":11004573,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ by an exclusive writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004574,"byte_end":11004601,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004602,"byte_end":11004605,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ `RwLock::try_write` operation will if lock is held by any reader or by an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004606,"byte_end":11004683,"line_start":194,"line_end":194,"column_start":1,"column_end":78}},{"value":"/ exclusive writer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004684,"byte_end":11004705,"line_start":195,"line_end":195,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004706,"byte_end":11004709,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ [`Mutex::try_lock`]: Mutex::try_lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004710,"byte_end":11004750,"line_start":197,"line_end":197,"column_start":1,"column_end":41}},{"value":"/ [`RwLock::try_read`]: fn@super::RwLock::try_read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004751,"byte_end":11004803,"line_start":198,"line_end":198,"column_start":1,"column_end":53}},{"value":"/ [`RwLock::try_write`]: fn@super::RwLock::try_write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004804,"byte_end":11004858,"line_start":199,"line_end":199,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6039},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006126,"byte_end":11006129,"line_start":245,"line_end":245,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"pub fn new(T) -> Self where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new lock in an unlocked state ready for use.","sig":null,"attributes":[{"value":"/ Creates a new lock in an unlocked state ready for use.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005923,"byte_end":11005981,"line_start":236,"line_end":236,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005986,"byte_end":11005989,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005994,"byte_end":11006008,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006013,"byte_end":11006016,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006021,"byte_end":11006028,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006033,"byte_end":11006060,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006065,"byte_end":11006068,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let lock = Mutex::new(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006073,"byte_end":11006102,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006107,"byte_end":11006114,"line_start":244,"line_end":244,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6040},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007287,"byte_end":11007291,"line_start":293,"line_end":293,"column_start":18,"column_end":22},"name":"lock","qualname":"<Mutex<T>>::lock","value":"pub async fn lock<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task\n to yield until the lock has been acquired.\n When the lock has been acquired, function returns a [`MutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006827,"byte_end":11006873,"line_start":276,"line_end":276,"column_start":5,"column_end":51}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006878,"byte_end":11006924,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/ When the lock has been acquired, function returns a [`MutexGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11006929,"byte_end":11007000,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007005,"byte_end":11007008,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007013,"byte_end":11007027,"line_start":280,"line_end":280,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007032,"byte_end":11007035,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007040,"byte_end":11007047,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007052,"byte_end":11007079,"line_start":283,"line_end":283,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007084,"byte_end":11007087,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007092,"byte_end":11007110,"line_start":285,"line_end":285,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007115,"byte_end":11007136,"line_start":286,"line_end":286,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007141,"byte_end":11007175,"line_start":287,"line_end":287,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007180,"byte_end":11007183,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.lock().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007188,"byte_end":11007227,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007232,"byte_end":11007247,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007252,"byte_end":11007257,"line_start":291,"line_end":291,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007262,"byte_end":11007269,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6043},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008318,"byte_end":11008328,"line_start":324,"line_end":324,"column_start":18,"column_end":28},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"pub async fn lock_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this mutex, causing the current task to yield until the lock has\n been acquired. When the lock has been acquired, this returns an\n [`OwnedMutexGuard`].","sig":null,"attributes":[{"value":"/ Locks this mutex, causing the current task to yield until the lock has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007397,"byte_end":11007471,"line_start":298,"line_end":298,"column_start":5,"column_end":79}},{"value":"/ been acquired. When the lock has been acquired, this returns an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007476,"byte_end":11007543,"line_start":299,"line_end":299,"column_start":5,"column_end":72}},{"value":"/ [`OwnedMutexGuard`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007548,"byte_end":11007572,"line_start":300,"line_end":300,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007577,"byte_end":11007580,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::lock`], except that the returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007585,"byte_end":11007658,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/ guard references the `Mutex` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007663,"byte_end":11007736,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ it. Therefore, the `Mutex` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007741,"byte_end":11007812,"line_start":304,"line_end":304,"column_start":5,"column_end":76}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007817,"byte_end":11007892,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007897,"byte_end":11007939,"line_start":306,"line_end":306,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007944,"byte_end":11007947,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007952,"byte_end":11007966,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007971,"byte_end":11007974,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007979,"byte_end":11007986,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11007991,"byte_end":11008018,"line_start":311,"line_end":311,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008023,"byte_end":11008046,"line_start":312,"line_end":312,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008051,"byte_end":11008054,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008059,"byte_end":11008077,"line_start":314,"line_end":314,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008082,"byte_end":11008103,"line_start":315,"line_end":315,"column_start":5,"column_end":26}},{"value":"/     let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008108,"byte_end":11008152,"line_start":316,"line_end":316,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008157,"byte_end":11008160,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/     let mut n = mutex.clone().lock_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008165,"byte_end":11008218,"line_start":318,"line_end":318,"column_start":5,"column_end":58}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008223,"byte_end":11008238,"line_start":319,"line_end":319,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008243,"byte_end":11008248,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008253,"byte_end":11008260,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008265,"byte_end":11008268,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008273,"byte_end":11008300,"line_start":323,"line_end":323,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":6050},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009205,"byte_end":11009213,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"pub fn try_lock(&Self) -> Result<MutexGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the\n lock is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008737,"byte_end":11008806,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/ lock is currently held somewhere else.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008811,"byte_end":11008853,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008858,"byte_end":11008861,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008866,"byte_end":11008900,"line_start":340,"line_end":340,"column_start":5,"column_end":39}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008905,"byte_end":11008919,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008924,"byte_end":11008927,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008932,"byte_end":11008939,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008944,"byte_end":11008971,"line_start":344,"line_end":344,"column_start":5,"column_end":32}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11008976,"byte_end":11009039,"line_start":345,"line_end":345,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009044,"byte_end":11009047,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009052,"byte_end":11009082,"line_start":347,"line_end":347,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009087,"byte_end":11009090,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.try_lock()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009095,"byte_end":11009125,"line_start":349,"line_end":349,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009130,"byte_end":11009152,"line_start":350,"line_end":350,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009157,"byte_end":11009169,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009174,"byte_end":11009181,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009186,"byte_end":11009193,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6051},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009893,"byte_end":11009900,"line_start":378,"line_end":378,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009422,"byte_end":11009477,"line_start":361,"line_end":361,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009482,"byte_end":11009485,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009490,"byte_end":11009565,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009570,"byte_end":11009644,"line_start":364,"line_end":364,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009649,"byte_end":11009652,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009657,"byte_end":11009671,"line_start":366,"line_end":366,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009676,"byte_end":11009679,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009684,"byte_end":11009691,"line_start":368,"line_end":368,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009696,"byte_end":11009723,"line_start":369,"line_end":369,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009728,"byte_end":11009731,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009736,"byte_end":11009751,"line_start":371,"line_end":371,"column_start":5,"column_end":20}},{"value":"/     let mut mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009756,"byte_end":11009794,"line_start":372,"line_end":372,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009799,"byte_end":11009802,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.get_mut();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009807,"byte_end":11009839,"line_start":374,"line_end":374,"column_start":5,"column_end":37}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009844,"byte_end":11009859,"line_start":375,"line_end":375,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009864,"byte_end":11009869,"line_start":376,"line_end":376,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11009874,"byte_end":11009881,"line_start":377,"line_end":377,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6052},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010981,"byte_end":11010995,"line_start":409,"line_end":409,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"pub fn try_lock_owned(Arc<Self>) -> Result<OwnedMutexGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire the lock, and returns [`TryLockError`] if the lock\n is currently held somewhere else.","sig":null,"attributes":[{"value":"/ Attempts to acquire the lock, and returns [`TryLockError`] if the lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010069,"byte_end":11010143,"line_start":385,"line_end":385,"column_start":5,"column_end":79}},{"value":"/ is currently held somewhere else.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010148,"byte_end":11010185,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010190,"byte_end":11010193,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`Mutex::try_lock`], except that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010198,"byte_end":11010266,"line_start":388,"line_end":388,"column_start":5,"column_end":73}},{"value":"/ returned  guard references the `Mutex` with an [`Arc`] rather than by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010271,"byte_end":11010344,"line_start":389,"line_end":389,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `Mutex` must be wrapped in an `Arc` to call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010349,"byte_end":11010425,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ this method, and the guard will live for the `'static` lifetime, as it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010430,"byte_end":11010504,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ keeps the `Mutex` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010509,"byte_end":11010557,"line_start":392,"line_end":392,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010562,"byte_end":11010565,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010570,"byte_end":11010604,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010609,"byte_end":11010636,"line_start":395,"line_end":395,"column_start":5,"column_end":32}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010641,"byte_end":11010655,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010660,"byte_end":11010663,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010668,"byte_end":11010675,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010680,"byte_end":11010707,"line_start":399,"line_end":399,"column_start":5,"column_end":32}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010712,"byte_end":11010735,"line_start":400,"line_end":400,"column_start":5,"column_end":28}},{"value":"/ # async fn dox() -> Result<(), tokio::sync::TryLockError> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010740,"byte_end":11010803,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010808,"byte_end":11010811,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mutex = Arc::new(Mutex::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010816,"byte_end":11010856,"line_start":403,"line_end":403,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010861,"byte_end":11010864,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let n = mutex.clone().try_lock_owned()?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010869,"byte_end":11010913,"line_start":405,"line_end":405,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010918,"byte_end":11010940,"line_start":406,"line_end":406,"column_start":5,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010945,"byte_end":11010957,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11010962,"byte_end":11010969,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6053},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011553,"byte_end":11011563,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the mutex, returning the underlying data.\n # Examples","sig":null,"attributes":[{"value":"/ Consumes the mutex, returning the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011220,"byte_end":11011274,"line_start":416,"line_end":416,"column_start":5,"column_end":59}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011279,"byte_end":11011293,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011298,"byte_end":11011301,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011306,"byte_end":11011313,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011318,"byte_end":11011345,"line_start":420,"line_end":420,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011350,"byte_end":11011353,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011358,"byte_end":11011376,"line_start":422,"line_end":422,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011381,"byte_end":11011402,"line_start":423,"line_end":423,"column_start":5,"column_end":26}},{"value":"/     let mutex = Mutex::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011407,"byte_end":11011441,"line_start":424,"line_end":424,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011446,"byte_end":11011449,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/     let n = mutex.into_inner();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011454,"byte_end":11011489,"line_start":426,"line_end":426,"column_start":5,"column_end":40}},{"value":"/     assert_eq!(n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011494,"byte_end":11011519,"line_start":427,"line_end":427,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011524,"byte_end":11011529,"line_start":428,"line_end":428,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011534,"byte_end":11011541,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6066},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013289,"byte_end":11013292,"line_start":501,"line_end":501,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012303,"byte_end":11012375,"line_start":470,"line_end":470,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012380,"byte_end":11012383,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012388,"byte_end":11012476,"line_start":472,"line_end":472,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012481,"byte_end":11012484,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::map(...)`. A method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012489,"byte_end":11012581,"line_start":474,"line_end":474,"column_start":5,"column_end":97}},{"value":"/ would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012586,"byte_end":11012671,"line_start":475,"line_end":475,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012676,"byte_end":11012679,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012684,"byte_end":11012698,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012703,"byte_end":11012706,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012711,"byte_end":11012718,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012723,"byte_end":11012764,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012769,"byte_end":11012772,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012777,"byte_end":11012825,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012830,"byte_end":11012850,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012855,"byte_end":11012858,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012863,"byte_end":11012883,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012888,"byte_end":11012911,"line_start":486,"line_end":486,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012916,"byte_end":11012949,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012954,"byte_end":11012957,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012962,"byte_end":11012967,"line_start":489,"line_end":489,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::map(foo.lock().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012972,"byte_end":11013045,"line_start":490,"line_end":490,"column_start":5,"column_end":78}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013050,"byte_end":11013070,"line_start":491,"line_end":491,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013075,"byte_end":11013080,"line_start":492,"line_end":492,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013085,"byte_end":11013088,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013093,"byte_end":11013135,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013140,"byte_end":11013147,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013152,"byte_end":11013159,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013164,"byte_end":11013167,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013172,"byte_end":11013209,"line_start":498,"line_end":498,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013214,"byte_end":11013263,"line_start":499,"line_end":499,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013268,"byte_end":11013277,"line_start":500,"line_end":500,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6069},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014748,"byte_end":11014755,"line_start":548,"line_end":548,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013624,"byte_end":11013711,"line_start":515,"line_end":515,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013716,"byte_end":11013777,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013782,"byte_end":11013785,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013790,"byte_end":11013878,"line_start":518,"line_end":518,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013883,"byte_end":11013886,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MutexGuard::try_map(...)`. A","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013891,"byte_end":11013980,"line_start":520,"line_end":520,"column_start":5,"column_end":94}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11013985,"byte_end":11014077,"line_start":521,"line_end":521,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014082,"byte_end":11014085,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014090,"byte_end":11014104,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014109,"byte_end":11014112,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014117,"byte_end":11014124,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{Mutex, MutexGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014129,"byte_end":11014170,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014175,"byte_end":11014178,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014183,"byte_end":11014231,"line_start":528,"line_end":528,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014236,"byte_end":11014256,"line_start":529,"line_end":529,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014261,"byte_end":11014264,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014269,"byte_end":11014289,"line_start":531,"line_end":531,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014294,"byte_end":11014317,"line_start":532,"line_end":532,"column_start":5,"column_end":28}},{"value":"/ let foo = Mutex::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014322,"byte_end":11014355,"line_start":533,"line_end":533,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014360,"byte_end":11014363,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014368,"byte_end":11014373,"line_start":535,"line_end":535,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = MutexGuard::try_map(foo.lock().await, |f| Some(&mut f.0))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014378,"byte_end":11014460,"line_start":536,"line_end":536,"column_start":5,"column_end":87}},{"value":"/         .expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014465,"byte_end":11014504,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014509,"byte_end":11014529,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014534,"byte_end":11014539,"line_start":539,"line_end":539,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014544,"byte_end":11014547,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *foo.lock().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014552,"byte_end":11014594,"line_start":541,"line_end":541,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014599,"byte_end":11014606,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014611,"byte_end":11014618,"line_start":543,"line_end":543,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014623,"byte_end":11014626,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`MutexGuard`]: struct@MutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014631,"byte_end":11014668,"line_start":545,"line_end":545,"column_start":5,"column_end":42}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014673,"byte_end":11014722,"line_start":546,"line_end":546,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11014727,"byte_end":11014736,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6107},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017321,"byte_end":11017324,"line_start":642,"line_end":642,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"pub fn map<U, F>(Self, F) -> MappedMutexGuard where F: FnOnce(&mut T) ->\n&mut U","parent":null,"children":[],"decl_id":null,"docs":" Makes a new [`MappedMutexGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Makes a new [`MappedMutexGuard`] for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016853,"byte_end":11016925,"line_start":633,"line_end":633,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016930,"byte_end":11016933,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016938,"byte_end":11017032,"line_start":635,"line_end":635,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017037,"byte_end":11017040,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::map(...)`. A","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017045,"byte_end":11017136,"line_start":637,"line_end":637,"column_start":5,"column_end":96}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017141,"byte_end":11017233,"line_start":638,"line_end":638,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017238,"byte_end":11017241,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017246,"byte_end":11017295,"line_start":640,"line_end":640,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017300,"byte_end":11017309,"line_start":641,"line_end":641,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6110},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018203,"byte_end":11018210,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"try_map","qualname":"<MappedMutexGuard>::try_map","value":"pub fn try_map<U, F>(Self, F) -> Result<MappedMutexGuard, Self> where\nF: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The\n original guard is returned if the closure returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`MappedMutexGuard`] for a component of the locked data. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017650,"byte_end":11017737,"line_start":656,"line_end":656,"column_start":5,"column_end":92}},{"value":"/ original guard is returned if the closure returns `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017742,"byte_end":11017803,"line_start":657,"line_end":657,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017808,"byte_end":11017811,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the [`MappedMutexGuard`] passed in already locked the mutex.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017816,"byte_end":11017910,"line_start":659,"line_end":659,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017915,"byte_end":11017918,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as `MappedMutexGuard::try_map(...)`. A","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11017923,"byte_end":11018018,"line_start":661,"line_end":661,"column_start":5,"column_end":100}},{"value":"/ method would interfere with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018023,"byte_end":11018115,"line_start":662,"line_end":662,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018120,"byte_end":11018123,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ [`MappedMutexGuard`]: struct@MappedMutexGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018128,"byte_end":11018177,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018182,"byte_end":11018191,"line_start":665,"line_end":665,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7073},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11023081,"byte_end":11023087,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"Notify","qualname":"::sync::notify::Notify","value":"Notify {  }","parent":null,"children":[{"krate":0,"index":7074},{"krate":0,"index":7075}],"decl_id":null,"docs":" Notify a single task to wake up.","sig":null,"attributes":[{"value":"/ Notify a single task to wake up.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020238,"byte_end":11020274,"line_start":22,"line_end":22,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020275,"byte_end":11020278,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `Notify` provides a basic mechanism to notify a single task of an event.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020279,"byte_end":11020355,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ `Notify` itself does not carry any data. Instead, it is to be used to signal","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020356,"byte_end":11020436,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ another task to perform an operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020437,"byte_end":11020478,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020479,"byte_end":11020482,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Notify` can be thought of as a [`Semaphore`] starting with 0 permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020483,"byte_end":11020557,"line_start":28,"line_end":28,"column_start":1,"column_end":75}},{"value":"/ [`notified().await`] waits for a permit to become available, and [`notify_one()`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020558,"byte_end":11020643,"line_start":29,"line_end":29,"column_start":1,"column_end":86}},{"value":"/ sets a permit **if there currently are no available permits**.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020644,"byte_end":11020710,"line_start":30,"line_end":30,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020711,"byte_end":11020714,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The synchronization details of `Notify` are similar to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020715,"byte_end":11020773,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"/ [`thread::park`][park] and [`Thread::unpark`][unpark] from std. A [`Notify`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020774,"byte_end":11020854,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ value contains a single permit. [`notified().await`] waits for the permit to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020855,"byte_end":11020935,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ be made available, consumes the permit, and resumes.  [`notify_one()`] sets the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11020936,"byte_end":11021019,"line_start":35,"line_end":35,"column_start":1,"column_end":84}},{"value":"/ permit, waking a pending task if there is one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021020,"byte_end":11021070,"line_start":36,"line_end":36,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021071,"byte_end":11021074,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **before** `notified().await`, then the next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021075,"byte_end":11021159,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/ `notified().await` will complete immediately, consuming the permit. Any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021160,"byte_end":11021235,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/ subsequent calls to `notified().await` will wait for a new permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021236,"byte_end":11021306,"line_start":40,"line_end":40,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021307,"byte_end":11021310,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ If `notify_one()` is called **multiple** times before `notified().await`, only a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021311,"byte_end":11021395,"line_start":42,"line_end":42,"column_start":1,"column_end":85}},{"value":"/ **single** permit is stored. The next call to `notified().await` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021396,"byte_end":11021469,"line_start":43,"line_end":43,"column_start":1,"column_end":74}},{"value":"/ complete immediately, but the one after will wait for a new permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021470,"byte_end":11021541,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021542,"byte_end":11021545,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021546,"byte_end":11021560,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021561,"byte_end":11021564,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Basic usage.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021565,"byte_end":11021581,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021582,"byte_end":11021585,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021586,"byte_end":11021593,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021594,"byte_end":11021622,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021623,"byte_end":11021646,"line_start":52,"line_end":52,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021647,"byte_end":11021650,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021651,"byte_end":11021669,"line_start":54,"line_end":54,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021670,"byte_end":11021691,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021692,"byte_end":11021737,"line_start":56,"line_end":56,"column_start":1,"column_end":46}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021738,"byte_end":11021775,"line_start":57,"line_end":57,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021776,"byte_end":11021779,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021780,"byte_end":11021813,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021814,"byte_end":11021851,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021852,"byte_end":11021898,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021899,"byte_end":11021910,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021911,"byte_end":11021914,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021915,"byte_end":11021956,"line_start":64,"line_end":64,"column_start":1,"column_end":42}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021957,"byte_end":11021985,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021986,"byte_end":11021991,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11021992,"byte_end":11021999,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022000,"byte_end":11022003,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Unbound mpsc channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022004,"byte_end":11022029,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022030,"byte_end":11022033,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022034,"byte_end":11022041,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022042,"byte_end":11022070,"line_start":72,"line_end":72,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022071,"byte_end":11022074,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ use std::collections::VecDeque;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022075,"byte_end":11022110,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/ use std::sync::Mutex;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022111,"byte_end":11022136,"line_start":75,"line_end":75,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022137,"byte_end":11022140,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ struct Channel<T> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022141,"byte_end":11022164,"line_start":77,"line_end":77,"column_start":1,"column_end":24}},{"value":"/     values: Mutex<VecDeque<T>>,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022165,"byte_end":11022200,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     notify: Notify,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022201,"byte_end":11022224,"line_start":79,"line_end":79,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022225,"byte_end":11022230,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022231,"byte_end":11022234,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ impl<T> Channel<T> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022235,"byte_end":11022259,"line_start":82,"line_end":82,"column_start":1,"column_end":25}},{"value":"/     pub fn send(&self, value: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022260,"byte_end":11022298,"line_start":83,"line_end":83,"column_start":1,"column_end":39}},{"value":"/         self.values.lock().unwrap()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022299,"byte_end":11022338,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/             .push_back(value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022339,"byte_end":11022373,"line_start":85,"line_end":85,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022374,"byte_end":11022377,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/         // Notify the consumer a value is available","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022378,"byte_end":11022433,"line_start":87,"line_end":87,"column_start":1,"column_end":56}},{"value":"/         self.notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022434,"byte_end":11022471,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022472,"byte_end":11022481,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022482,"byte_end":11022485,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/     pub async fn recv(&self) -> T {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022486,"byte_end":11022525,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/         loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022526,"byte_end":11022544,"line_start":92,"line_end":92,"column_start":1,"column_end":19}},{"value":"/             // Drain values","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022545,"byte_end":11022576,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"/             if let Some(value) = self.values.lock().unwrap().pop_front() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022577,"byte_end":11022655,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/                 return value;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022656,"byte_end":11022689,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022690,"byte_end":11022707,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022708,"byte_end":11022711,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/             // Wait for values to be available","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022712,"byte_end":11022762,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/             self.notify.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022763,"byte_end":11022808,"line_start":99,"line_end":99,"column_start":1,"column_end":46}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022809,"byte_end":11022822,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022823,"byte_end":11022832,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022833,"byte_end":11022838,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022839,"byte_end":11022846,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022847,"byte_end":11022850,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [park]: std::thread::park","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022851,"byte_end":11022880,"line_start":105,"line_end":105,"column_start":1,"column_end":30}},{"value":"/ [unpark]: std::thread::Thread::unpark","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022881,"byte_end":11022922,"line_start":106,"line_end":106,"column_start":1,"column_end":42}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022923,"byte_end":11022967,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/ [`notify_one()`]: Notify::notify_one()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11022968,"byte_end":11023010,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/ [`Semaphore`]: crate::sync::Semaphore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11023011,"byte_end":11023052,"line_start":109,"line_end":109,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":7095},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11023937,"byte_end":11023945,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"Notified","qualname":"::sync::notify::Notified","value":"Notified {  }","parent":null,"children":[{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7099}],"decl_id":null,"docs":" Future returned from `notified()`\n","sig":null,"attributes":[{"value":"/ Future returned from `notified()`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11023871,"byte_end":11023908,"line_start":143,"line_end":143,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6173},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025405,"byte_end":11025408,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"new","qualname":"<Notify>::new","value":"pub fn new() -> Notify","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Notify`, initialized without a permit.","sig":null,"attributes":[{"value":"/ Create a new `Notify`, initialized without a permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025201,"byte_end":11025257,"line_start":200,"line_end":200,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025262,"byte_end":11025265,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025270,"byte_end":11025284,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025289,"byte_end":11025292,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025297,"byte_end":11025304,"line_start":204,"line_end":204,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025309,"byte_end":11025337,"line_start":205,"line_end":205,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025342,"byte_end":11025345,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ let notify = Notify::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025350,"byte_end":11025381,"line_start":207,"line_end":207,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025386,"byte_end":11025393,"line_start":208,"line_end":208,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6174},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027109,"byte_end":11027117,"line_start":269,"line_end":269,"column_start":12,"column_end":20},"name":"notified","qualname":"<Notify>::notified","value":"pub fn notified(&Self) -> Notified","parent":null,"children":[],"decl_id":null,"docs":" Wait for a notification.","sig":null,"attributes":[{"value":"/ Wait for a notification.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026062,"byte_end":11026090,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026095,"byte_end":11026098,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ Equivalent to:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026103,"byte_end":11026121,"line_start":236,"line_end":236,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026126,"byte_end":11026129,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026134,"byte_end":11026147,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ async fn notified(&self);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026152,"byte_end":11026181,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026186,"byte_end":11026193,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026198,"byte_end":11026201,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Each `Notify` value holds a single permit. If a permit is available from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026206,"byte_end":11026282,"line_start":242,"line_end":242,"column_start":5,"column_end":81}},{"value":"/ an earlier call to [`notify_one()`], then `notified().await` will complete","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026287,"byte_end":11026365,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/ immediately, consuming that permit. Otherwise, `notified().await` waits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026370,"byte_end":11026445,"line_start":244,"line_end":244,"column_start":5,"column_end":80}},{"value":"/ for a permit to be made available by the next call to `notify_one()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026450,"byte_end":11026523,"line_start":245,"line_end":245,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026528,"byte_end":11026531,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ [`notify_one()`]: Notify::notify_one","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026536,"byte_end":11026576,"line_start":247,"line_end":247,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026581,"byte_end":11026584,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026589,"byte_end":11026603,"line_start":249,"line_end":249,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026608,"byte_end":11026611,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026616,"byte_end":11026623,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026628,"byte_end":11026656,"line_start":252,"line_end":252,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026661,"byte_end":11026684,"line_start":253,"line_end":253,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026689,"byte_end":11026692,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026697,"byte_end":11026715,"line_start":255,"line_end":255,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026720,"byte_end":11026741,"line_start":256,"line_end":256,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026746,"byte_end":11026791,"line_start":257,"line_end":257,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026796,"byte_end":11026833,"line_start":258,"line_end":258,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026838,"byte_end":11026841,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026846,"byte_end":11026879,"line_start":260,"line_end":260,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026884,"byte_end":11026921,"line_start":261,"line_end":261,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026926,"byte_end":11026972,"line_start":262,"line_end":262,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026977,"byte_end":11026988,"line_start":263,"line_end":263,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11026993,"byte_end":11026996,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027001,"byte_end":11027042,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027047,"byte_end":11027075,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027080,"byte_end":11027085,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027090,"byte_end":11027097,"line_start":268,"line_end":268,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6175},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028893,"byte_end":11028903,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Notify>::notify_one","value":"pub fn notify_one(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies a waiting task","sig":null,"attributes":[{"value":"/ Notifies a waiting task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027642,"byte_end":11027669,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027674,"byte_end":11027677,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Otherwise, a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027682,"byte_end":11027753,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ permit is stored in this `Notify` value and the **next** call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027758,"byte_end":11027826,"line_start":288,"line_end":288,"column_start":5,"column_end":73}},{"value":"/ [`notified().await`] will complete immediately consuming the permit made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027831,"byte_end":11027907,"line_start":289,"line_end":289,"column_start":5,"column_end":81}},{"value":"/ available by this call to `notify_one()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027912,"byte_end":11027957,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027962,"byte_end":11027965,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ At most one permit may be stored by `Notify`. Many sequential calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11027970,"byte_end":11028044,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ `notify_one` will result in a single permit being stored. The next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028049,"byte_end":11028127,"line_start":293,"line_end":293,"column_start":5,"column_end":83}},{"value":"/ `notified().await` will complete immediately, but the one after that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028132,"byte_end":11028204,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ will wait.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028209,"byte_end":11028223,"line_start":295,"line_end":295,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028228,"byte_end":11028231,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [`notified().await`]: Notify::notified()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028236,"byte_end":11028280,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028285,"byte_end":11028288,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028293,"byte_end":11028307,"line_start":299,"line_end":299,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028312,"byte_end":11028315,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028320,"byte_end":11028327,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028332,"byte_end":11028360,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028365,"byte_end":11028388,"line_start":303,"line_end":303,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028393,"byte_end":11028396,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028401,"byte_end":11028419,"line_start":305,"line_end":305,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028424,"byte_end":11028445,"line_start":306,"line_end":306,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028450,"byte_end":11028495,"line_start":307,"line_end":307,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028500,"byte_end":11028537,"line_start":308,"line_end":308,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028542,"byte_end":11028545,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028550,"byte_end":11028583,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/         notify2.notified().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028588,"byte_end":11028625,"line_start":311,"line_end":311,"column_start":5,"column_end":42}},{"value":"/         println!(\"received notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028630,"byte_end":11028676,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028681,"byte_end":11028692,"line_start":313,"line_end":313,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028697,"byte_end":11028700,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/     println!(\"sending notification\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028705,"byte_end":11028746,"line_start":315,"line_end":315,"column_start":5,"column_end":46}},{"value":"/     notify.notify_one();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028751,"byte_end":11028779,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028784,"byte_end":11028789,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11028794,"byte_end":11028801,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6176},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031238,"byte_end":11031252,"line_start":387,"line_end":387,"column_start":12,"column_end":26},"name":"notify_waiters","qualname":"<Notify>::notify_waiters","value":"pub fn notify_waiters(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Notifies all waiting tasks","sig":null,"attributes":[{"value":"/ Notifies all waiting tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030146,"byte_end":11030176,"line_start":355,"line_end":355,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030181,"byte_end":11030184,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If a task is currently waiting, that task is notified. Unlike with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030189,"byte_end":11030259,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ `notify_one()`, no permit is stored to be used by the next call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030264,"byte_end":11030334,"line_start":358,"line_end":358,"column_start":5,"column_end":75}},{"value":"/ `notified().await`. The purpose of this method is to notify all","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030339,"byte_end":11030406,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ already registered waiters. Registering for notification is done by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030411,"byte_end":11030482,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ acquiring an instance of the `Notified` future via calling `notified()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030487,"byte_end":11030563,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030568,"byte_end":11030571,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030576,"byte_end":11030590,"line_start":363,"line_end":363,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030595,"byte_end":11030598,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030603,"byte_end":11030610,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Notify;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030615,"byte_end":11030643,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030648,"byte_end":11030671,"line_start":367,"line_end":367,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030676,"byte_end":11030679,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030684,"byte_end":11030702,"line_start":369,"line_end":369,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030707,"byte_end":11030728,"line_start":370,"line_end":370,"column_start":5,"column_end":26}},{"value":"/     let notify = Arc::new(Notify::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030733,"byte_end":11030778,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/     let notify2 = notify.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030783,"byte_end":11030820,"line_start":372,"line_end":372,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030825,"byte_end":11030828,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     let notified1 = notify.notified();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030833,"byte_end":11030875,"line_start":374,"line_end":374,"column_start":5,"column_end":47}},{"value":"/     let notified2 = notify.notified();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030880,"byte_end":11030922,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030927,"byte_end":11030930,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/     let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030935,"byte_end":11030981,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/         println!(\"sending notifications\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11030986,"byte_end":11031032,"line_start":378,"line_end":378,"column_start":5,"column_end":51}},{"value":"/         notify2.notify_waiters();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031037,"byte_end":11031074,"line_start":379,"line_end":379,"column_start":5,"column_end":42}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031079,"byte_end":11031090,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031095,"byte_end":11031098,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/     notified1.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031103,"byte_end":11031127,"line_start":382,"line_end":382,"column_start":5,"column_end":29}},{"value":"/     notified2.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031132,"byte_end":11031156,"line_start":383,"line_end":383,"column_start":5,"column_end":29}},{"value":"/     println!(\"received notifications\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031161,"byte_end":11031204,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031209,"byte_end":11031214,"line_start":385,"line_end":385,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11031219,"byte_end":11031226,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":6200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"oneshot","qualname":"::sync::oneshot","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6203},{"krate":0,"index":6204},{"krate":0,"index":6205},{"krate":0,"index":6206},{"krate":0,"index":6207},{"krate":0,"index":6208},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":14069},{"krate":0,"index":6211},{"krate":0,"index":14071},{"krate":0,"index":6212},{"krate":0,"index":6213},{"krate":0,"index":14073},{"krate":0,"index":6214},{"krate":0,"index":14075},{"krate":0,"index":6215},{"krate":0,"index":6216},{"krate":0,"index":6217},{"krate":0,"index":6218},{"krate":0,"index":7113},{"krate":0,"index":7116},{"krate":0,"index":7119},{"krate":0,"index":7122},{"krate":0,"index":6219},{"krate":0,"index":6227},{"krate":0,"index":6228},{"krate":0,"index":6234},{"krate":0,"index":6237},{"krate":0,"index":7150},{"krate":0,"index":7154},{"krate":0,"index":7153},{"krate":0,"index":6248},{"krate":0,"index":6250},{"krate":0,"index":6261},{"krate":0,"index":6264},{"krate":0,"index":6268},{"krate":0,"index":6271},{"krate":0,"index":6275},{"krate":0,"index":6282},{"krate":0,"index":6284},{"krate":0,"index":6286},{"krate":0,"index":6288},{"krate":0,"index":6291},{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6313}],"decl_id":null,"docs":" A one-shot channel is used for sending a single message between\n asynchronous tasks. The [`channel`] function is used to create a\n [`Sender`] and [`Receiver`] handle pair that form the channel.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A one-shot channel is used for sending a single message between","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044231,"byte_end":11044298,"line_start":3,"line_end":3,"column_start":1,"column_end":68}},{"value":"/ asynchronous tasks. The [`channel`] function is used to create a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044299,"byte_end":11044367,"line_start":4,"line_end":4,"column_start":1,"column_end":69}},{"value":"/ [`Sender`] and [`Receiver`] handle pair that form the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044368,"byte_end":11044434,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044435,"byte_end":11044438,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The `Sender` handle is used by the producer to send the value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044439,"byte_end":11044505,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"/ The `Receiver` handle is used by the consumer to receive the value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044506,"byte_end":11044577,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044578,"byte_end":11044581,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044582,"byte_end":11044628,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044629,"byte_end":11044632,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044633,"byte_end":11044647,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044648,"byte_end":11044651,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044652,"byte_end":11044659,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044660,"byte_end":11044689,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044690,"byte_end":11044693,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044694,"byte_end":11044712,"line_start":17,"line_end":17,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044713,"byte_end":11044734,"line_start":18,"line_end":18,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044735,"byte_end":11044777,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044778,"byte_end":11044781,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044782,"byte_end":11044815,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044816,"byte_end":11044856,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044857,"byte_end":11044906,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044907,"byte_end":11044920,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044921,"byte_end":11044932,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044933,"byte_end":11044936,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044937,"byte_end":11044961,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11044962,"byte_end":11045009,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045010,"byte_end":11045063,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045064,"byte_end":11045073,"line_start":30,"line_end":30,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045074,"byte_end":11045079,"line_start":31,"line_end":31,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045080,"byte_end":11045087,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045088,"byte_end":11045091,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045092,"byte_end":11045165,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045166,"byte_end":11045191,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045192,"byte_end":11045195,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045196,"byte_end":11045203,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045204,"byte_end":11045233,"line_start":38,"line_end":38,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045234,"byte_end":11045237,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045238,"byte_end":11045256,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045257,"byte_end":11045278,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045279,"byte_end":11045328,"line_start":42,"line_end":42,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045329,"byte_end":11045332,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045333,"byte_end":11045366,"line_start":44,"line_end":44,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045367,"byte_end":11045388,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045389,"byte_end":11045400,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045401,"byte_end":11045404,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045405,"byte_end":11045429,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045430,"byte_end":11045481,"line_start":49,"line_end":49,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045482,"byte_end":11045535,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045536,"byte_end":11045545,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045546,"byte_end":11045551,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045552,"byte_end":11045559,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7113},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046082,"byte_end":11046088,"line_start":72,"line_end":72,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::oneshot::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7115}],"decl_id":null,"docs":" Sends a value to the associated [`Receiver`].","sig":null,"attributes":[{"value":"/ Sends a value to the associated [`Receiver`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045891,"byte_end":11045940,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045941,"byte_end":11045944,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11045945,"byte_end":11046015,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046016,"byte_end":11046053,"line_start":70,"line_end":70,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":7119},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047255,"byte_end":11047263,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::oneshot::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7121}],"decl_id":null,"docs":" Receive a value from the associated [`Sender`].","sig":null,"attributes":[{"value":"/ Receive a value from the associated [`Sender`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046131,"byte_end":11046182,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046183,"byte_end":11046186,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ A pair of both a [`Sender`] and a [`Receiver`]  are created by the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046187,"byte_end":11046257,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046258,"byte_end":11046295,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046296,"byte_end":11046299,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046300,"byte_end":11046314,"line_start":81,"line_end":81,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046315,"byte_end":11046318,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046319,"byte_end":11046326,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046327,"byte_end":11046356,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046357,"byte_end":11046360,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046361,"byte_end":11046379,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046380,"byte_end":11046401,"line_start":87,"line_end":87,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046402,"byte_end":11046444,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046445,"byte_end":11046448,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046449,"byte_end":11046482,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046483,"byte_end":11046523,"line_start":91,"line_end":91,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046524,"byte_end":11046573,"line_start":92,"line_end":92,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046574,"byte_end":11046587,"line_start":93,"line_end":93,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046588,"byte_end":11046599,"line_start":94,"line_end":94,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046600,"byte_end":11046603,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046604,"byte_end":11046628,"line_start":96,"line_end":96,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046629,"byte_end":11046676,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046677,"byte_end":11046730,"line_start":98,"line_end":98,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046731,"byte_end":11046740,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046741,"byte_end":11046746,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046747,"byte_end":11046754,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046755,"byte_end":11046758,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ If the sender is dropped without sending, the receiver will fail with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046759,"byte_end":11046832,"line_start":103,"line_end":103,"column_start":1,"column_end":74}},{"value":"/ [`error::RecvError`]:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046833,"byte_end":11046858,"line_start":104,"line_end":104,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046859,"byte_end":11046862,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046863,"byte_end":11046870,"line_start":106,"line_end":106,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046871,"byte_end":11046900,"line_start":107,"line_end":107,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046901,"byte_end":11046904,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046905,"byte_end":11046923,"line_start":109,"line_end":109,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046924,"byte_end":11046945,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel::<u32>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046946,"byte_end":11046995,"line_start":111,"line_end":111,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11046996,"byte_end":11046999,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047000,"byte_end":11047033,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/         drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047034,"byte_end":11047055,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047056,"byte_end":11047067,"line_start":115,"line_end":115,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047068,"byte_end":11047071,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047072,"byte_end":11047096,"line_start":117,"line_end":117,"column_start":1,"column_end":25}},{"value":"/         Ok(_) => panic!(\"This doesn't happen\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047097,"byte_end":11047148,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047149,"byte_end":11047202,"line_start":119,"line_end":119,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047203,"byte_end":11047212,"line_start":120,"line_end":120,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047213,"byte_end":11047218,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047219,"byte_end":11047226,"line_start":122,"line_end":122,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":6219},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047314,"byte_end":11047319,"line_start":128,"line_end":128,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::oneshot::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","parent":null,"children":[{"krate":0,"index":6220},{"krate":0,"index":7125},{"krate":0,"index":7135},{"krate":0,"index":7132},{"krate":0,"index":7133},{"krate":0,"index":7128},{"krate":0,"index":7129},{"krate":0,"index":7137},{"krate":0,"index":7148},{"krate":0,"index":7145},{"krate":0,"index":7146},{"krate":0,"index":7142},{"krate":0,"index":7143},{"krate":0,"index":6221},{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6226}],"decl_id":null,"docs":" Oneshot error types\n","sig":null,"attributes":[{"value":"/ Oneshot error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047326,"byte_end":11047349,"line_start":129,"line_end":129,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":7125},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047491,"byte_end":11047500,"line_start":135,"line_end":135,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::oneshot::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `Future` implementation for `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `Future` implementation for `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047374,"byte_end":11047439,"line_start":133,"line_end":133,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7138},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047722,"byte_end":11047727,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"name":"Empty","qualname":"::sync::oneshot::error::TryRecvError::Empty","value":"TryRecvError::Empty","parent":{"krate":0,"index":7137},"children":[],"decl_id":null,"docs":" The send half of the channel has not yet sent a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel has not yet sent a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047655,"byte_end":11047713,"line_start":140,"line_end":140,"column_start":9,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7140},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047816,"byte_end":11047822,"line_start":144,"line_end":144,"column_start":9,"column_end":15},"name":"Closed","qualname":"::sync::oneshot::error::TryRecvError::Closed","value":"TryRecvError::Closed","parent":{"krate":0,"index":7137},"children":[],"decl_id":null,"docs":" The send half of the channel was dropped without sending a value.\n","sig":null,"attributes":[{"value":"/ The send half of the channel was dropped without sending a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047738,"byte_end":11047807,"line_start":143,"line_end":143,"column_start":9,"column_end":78}}]},{"kind":"Enum","id":{"krate":0,"index":7137},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047632,"byte_end":11047644,"line_start":139,"line_end":139,"column_start":14,"column_end":26},"name":"TryRecvError","qualname":"::sync::oneshot::error::TryRecvError","value":"pub enum TryRecvError {\n\n    /// The send half of the channel has not yet sent a value.\n    Empty,\n\n    /// The send half of the channel was dropped without sending a value.\n    Closed,\n}","parent":null,"children":[{"krate":0,"index":7138},{"krate":0,"index":7140}],"decl_id":null,"docs":" Error returned by the `try_recv` function on `Receiver`.\n","sig":null,"attributes":[{"value":"/ Error returned by the `try_recv` function on `Receiver`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047522,"byte_end":11047582,"line_start":137,"line_end":137,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":6248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050555,"byte_end":11050562,"line_start":253,"line_end":253,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::oneshot::channel","value":"pub fn channel<T>() -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Create a new one-shot channel for sending single values across asynchronous\n tasks.","sig":null,"attributes":[{"value":"/ Create a new one-shot channel for sending single values across asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11049740,"byte_end":11049819,"line_start":223,"line_end":223,"column_start":1,"column_end":80}},{"value":"/ tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11049820,"byte_end":11049830,"line_start":224,"line_end":224,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11049831,"byte_end":11049834,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ The function returns separate \"send\" and \"receive\" handles. The `Sender`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11049835,"byte_end":11049911,"line_start":226,"line_end":226,"column_start":1,"column_end":77}},{"value":"/ handle is used by the producer to send the value. The `Receiver` handle is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11049912,"byte_end":11049990,"line_start":227,"line_end":227,"column_start":1,"column_end":79}},{"value":"/ used by the consumer to receive the value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11049991,"byte_end":11050037,"line_start":228,"line_end":228,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050038,"byte_end":11050041,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ Each handle can be used on separate tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050042,"byte_end":11050088,"line_start":230,"line_end":230,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050089,"byte_end":11050092,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050093,"byte_end":11050107,"line_start":232,"line_end":232,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050108,"byte_end":11050111,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050112,"byte_end":11050119,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050120,"byte_end":11050149,"line_start":235,"line_end":235,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050150,"byte_end":11050153,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050154,"byte_end":11050172,"line_start":237,"line_end":237,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050173,"byte_end":11050194,"line_start":238,"line_end":238,"column_start":1,"column_end":22}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050195,"byte_end":11050237,"line_start":239,"line_end":239,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050238,"byte_end":11050241,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050242,"byte_end":11050275,"line_start":241,"line_end":241,"column_start":1,"column_end":34}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050276,"byte_end":11050316,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050317,"byte_end":11050366,"line_start":243,"line_end":243,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050367,"byte_end":11050380,"line_start":244,"line_end":244,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050381,"byte_end":11050392,"line_start":245,"line_end":245,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050393,"byte_end":11050396,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050397,"byte_end":11050421,"line_start":247,"line_end":247,"column_start":1,"column_end":25}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050422,"byte_end":11050469,"line_start":248,"line_end":248,"column_start":1,"column_end":48}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050470,"byte_end":11050523,"line_start":249,"line_end":249,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050524,"byte_end":11050533,"line_start":250,"line_end":250,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050534,"byte_end":11050539,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050540,"byte_end":11050547,"line_start":252,"line_end":252,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6252},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052585,"byte_end":11052589,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(Self, T) -> Result<(), T>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to send a value on this channel, returning it back if it could\n not be sent.","sig":null,"attributes":[{"value":"/ Attempts to send a value on this channel, returning it back if it could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051014,"byte_end":11051089,"line_start":270,"line_end":270,"column_start":5,"column_end":80}},{"value":"/ not be sent.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051094,"byte_end":11051110,"line_start":271,"line_end":271,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051115,"byte_end":11051118,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This method consumes `self` as only one value may ever be sent on a oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051123,"byte_end":11051202,"line_start":273,"line_end":273,"column_start":5,"column_end":84}},{"value":"/ channel. It is not marked async because sending a message to an oneshot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051207,"byte_end":11051282,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ channel never requires any form of waiting.  Because of this, the `send`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051287,"byte_end":11051363,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ method can be used in both synchronous and asynchronous code without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051368,"byte_end":11051440,"line_start":276,"line_end":276,"column_start":5,"column_end":77}},{"value":"/ problems.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051445,"byte_end":11051458,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051463,"byte_end":11051466,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ A successful send occurs when it is determined that the other end of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051471,"byte_end":11051547,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ channel has not hung up already. An unsuccessful send would be one where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051552,"byte_end":11051628,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"/ the corresponding receiver has already been deallocated. Note that a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051633,"byte_end":11051705,"line_start":281,"line_end":281,"column_start":5,"column_end":77}},{"value":"/ return value of `Err` means that the data will never be received, but","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051710,"byte_end":11051783,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ a return value of `Ok` does *not* mean that the data will be received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051788,"byte_end":11051862,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ It is possible for the corresponding receiver to hang up immediately","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051867,"byte_end":11051939,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ after this function returns `Ok`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051944,"byte_end":11051981,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051986,"byte_end":11051989,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11051994,"byte_end":11052008,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052013,"byte_end":11052016,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ Send a value to another task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052021,"byte_end":11052053,"line_start":289,"line_end":289,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052058,"byte_end":11052061,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052066,"byte_end":11052073,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052078,"byte_end":11052107,"line_start":292,"line_end":292,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052112,"byte_end":11052115,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052120,"byte_end":11052138,"line_start":294,"line_end":294,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052143,"byte_end":11052164,"line_start":295,"line_end":295,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052169,"byte_end":11052211,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052216,"byte_end":11052219,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052224,"byte_end":11052257,"line_start":298,"line_end":298,"column_start":5,"column_end":38}},{"value":"/         if let Err(_) = tx.send(3) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052262,"byte_end":11052302,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/             println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052307,"byte_end":11052356,"line_start":300,"line_end":300,"column_start":5,"column_end":54}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052361,"byte_end":11052374,"line_start":301,"line_end":301,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052379,"byte_end":11052390,"line_start":302,"line_end":302,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052395,"byte_end":11052398,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/     match rx.await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052403,"byte_end":11052427,"line_start":304,"line_end":304,"column_start":5,"column_end":29}},{"value":"/         Ok(v) => println!(\"got = {:?}\", v),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052432,"byte_end":11052479,"line_start":305,"line_end":305,"column_start":5,"column_end":52}},{"value":"/         Err(_) => println!(\"the sender dropped\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052484,"byte_end":11052537,"line_start":306,"line_end":306,"column_start":5,"column_end":58}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052542,"byte_end":11052551,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052556,"byte_end":11052561,"line_start":308,"line_end":308,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052566,"byte_end":11052573,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6254},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054927,"byte_end":11054933,"line_start":393,"line_end":393,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Waits for the associated [`Receiver`] handle to close.","sig":null,"attributes":[{"value":"/ Waits for the associated [`Receiver`] handle to close.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052922,"byte_end":11052980,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052985,"byte_end":11052988,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11052993,"byte_end":11053067,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053072,"byte_end":11053106,"line_start":329,"line_end":329,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053111,"byte_end":11053114,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This function is useful when paired with `select!` to abort a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053119,"byte_end":11053184,"line_start":331,"line_end":331,"column_start":5,"column_end":70}},{"value":"/ computation when the receiver is no longer interested in the result.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053189,"byte_end":11053261,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053266,"byte_end":11053269,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053274,"byte_end":11053286,"line_start":334,"line_end":334,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053291,"byte_end":11053294,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Returns a `Future` which must be awaited on.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053299,"byte_end":11053347,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053352,"byte_end":11053355,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053360,"byte_end":11053386,"line_start":338,"line_end":338,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053391,"byte_end":11053421,"line_start":339,"line_end":339,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053426,"byte_end":11053429,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053434,"byte_end":11053448,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053453,"byte_end":11053456,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053461,"byte_end":11053476,"line_start":343,"line_end":343,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053481,"byte_end":11053484,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053489,"byte_end":11053496,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053501,"byte_end":11053530,"line_start":346,"line_end":346,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053535,"byte_end":11053538,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053543,"byte_end":11053561,"line_start":348,"line_end":348,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053566,"byte_end":11053587,"line_start":349,"line_end":349,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053592,"byte_end":11053644,"line_start":350,"line_end":350,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053649,"byte_end":11053652,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053657,"byte_end":11053690,"line_start":352,"line_end":352,"column_start":5,"column_end":38}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053695,"byte_end":11053716,"line_start":353,"line_end":353,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053721,"byte_end":11053732,"line_start":354,"line_end":354,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053737,"byte_end":11053740,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053745,"byte_end":11053771,"line_start":356,"line_end":356,"column_start":5,"column_end":31}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053776,"byte_end":11053817,"line_start":357,"line_end":357,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053822,"byte_end":11053827,"line_start":358,"line_end":358,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053832,"byte_end":11053839,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053844,"byte_end":11053847,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Paired with select","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053852,"byte_end":11053874,"line_start":361,"line_end":361,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053879,"byte_end":11053882,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053887,"byte_end":11053894,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053899,"byte_end":11053928,"line_start":364,"line_end":364,"column_start":5,"column_end":34}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053933,"byte_end":11053971,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053976,"byte_end":11053979,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ async fn compute() -> String {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11053984,"byte_end":11054018,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/     // Complex computation returning a `String`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054023,"byte_end":11054074,"line_start":368,"line_end":368,"column_start":5,"column_end":56}},{"value":"/ # \"hello\".to_string()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054079,"byte_end":11054104,"line_start":369,"line_end":369,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054109,"byte_end":11054114,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054119,"byte_end":11054122,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054127,"byte_end":11054145,"line_start":372,"line_end":372,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054150,"byte_end":11054171,"line_start":373,"line_end":373,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054176,"byte_end":11054222,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054227,"byte_end":11054230,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054235,"byte_end":11054268,"line_start":376,"line_end":376,"column_start":5,"column_end":38}},{"value":"/         tokio::select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054273,"byte_end":11054301,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/             _ = tx.closed() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054306,"byte_end":11054342,"line_start":378,"line_end":378,"column_start":5,"column_end":41}},{"value":"/                 // The receiver dropped, no need to do any further work","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054347,"byte_end":11054422,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054427,"byte_end":11054444,"line_start":380,"line_end":380,"column_start":5,"column_end":22}},{"value":"/             value = compute() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054449,"byte_end":11054487,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/                 // The send can fail if the channel was closed at the exact same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054492,"byte_end":11054576,"line_start":382,"line_end":382,"column_start":5,"column_end":89}},{"value":"/                 // time as when compute() finished, so just ignore the failure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054581,"byte_end":11054664,"line_start":383,"line_end":383,"column_start":5,"column_end":88}},{"value":"/                 let _ = tx.send(value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054669,"byte_end":11054712,"line_start":384,"line_end":384,"column_start":5,"column_end":48}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054717,"byte_end":11054734,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054739,"byte_end":11054752,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054757,"byte_end":11054768,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054773,"byte_end":11054776,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/     // Wait for up to 10 seconds","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054781,"byte_end":11054817,"line_start":389,"line_end":389,"column_start":5,"column_end":41}},{"value":"/     let _ = time::timeout(Duration::from_secs(10), rx).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054822,"byte_end":11054887,"line_start":390,"line_end":390,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054892,"byte_end":11054897,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11054902,"byte_end":11054909,"line_start":392,"line_end":392,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6259},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055803,"byte_end":11055812,"line_start":426,"line_end":426,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the associated [`Receiver`] handle has been dropped.","sig":null,"attributes":[{"value":"/ Returns `true` if the associated [`Receiver`] handle has been dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055044,"byte_end":11055118,"line_start":399,"line_end":399,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055123,"byte_end":11055126,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly or the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055131,"byte_end":11055205,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055210,"byte_end":11055244,"line_start":402,"line_end":402,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055249,"byte_end":11055252,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ If `true` is returned, a call to `send` will always result in an error.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055257,"byte_end":11055332,"line_start":404,"line_end":404,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055337,"byte_end":11055340,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055345,"byte_end":11055371,"line_start":406,"line_end":406,"column_start":5,"column_end":31}},{"value":"/ [`close`]: Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055376,"byte_end":11055406,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055411,"byte_end":11055414,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055419,"byte_end":11055433,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055438,"byte_end":11055441,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055446,"byte_end":11055453,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055458,"byte_end":11055487,"line_start":412,"line_end":412,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055492,"byte_end":11055495,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055500,"byte_end":11055518,"line_start":414,"line_end":414,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055523,"byte_end":11055544,"line_start":415,"line_end":415,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055549,"byte_end":11055591,"line_start":416,"line_end":416,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055596,"byte_end":11055599,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055604,"byte_end":11055637,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055642,"byte_end":11055645,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/     drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055650,"byte_end":11055667,"line_start":420,"line_end":420,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055672,"byte_end":11055675,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055680,"byte_end":11055712,"line_start":422,"line_end":422,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055717,"byte_end":11055769,"line_start":423,"line_end":423,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055774,"byte_end":11055779,"line_start":424,"line_end":424,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055784,"byte_end":11055791,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6260},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057258,"byte_end":11057269,"line_start":473,"line_end":473,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Sender<T>>::poll_closed","value":"pub fn poll_closed(&mut Self, &mut Context) -> Poll<()>","parent":null,"children":[],"decl_id":null,"docs":" Check whether the oneshot channel has been closed, and if not, schedules the\n `Waker` in the provided `Context` to receive a notification when the channel is\n closed.","sig":null,"attributes":[{"value":"/ Check whether the oneshot channel has been closed, and if not, schedules the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11055974,"byte_end":11056054,"line_start":433,"line_end":433,"column_start":5,"column_end":85}},{"value":"/ `Waker` in the provided `Context` to receive a notification when the channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056059,"byte_end":11056142,"line_start":434,"line_end":434,"column_start":5,"column_end":88}},{"value":"/ closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056147,"byte_end":11056158,"line_start":435,"line_end":435,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056163,"byte_end":11056166,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ A [`Receiver`] is closed by either calling [`close`] explicitly, or when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056171,"byte_end":11056251,"line_start":437,"line_end":437,"column_start":5,"column_end":85}},{"value":"/ [`Receiver`] value is dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056256,"byte_end":11056290,"line_start":438,"line_end":438,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056295,"byte_end":11056298,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ Note that on multiple calls to poll, only the `Waker` from the `Context` passed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056303,"byte_end":11056386,"line_start":440,"line_end":440,"column_start":5,"column_end":88}},{"value":"/ to the most recent call will be scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056391,"byte_end":11056457,"line_start":441,"line_end":441,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056462,"byte_end":11056465,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: struct@crate::sync::oneshot::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056470,"byte_end":11056525,"line_start":443,"line_end":443,"column_start":5,"column_end":60}},{"value":"/ [`close`]: fn@crate::sync::oneshot::Receiver::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056530,"byte_end":11056585,"line_start":444,"line_end":444,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056590,"byte_end":11056593,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ # Return value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056598,"byte_end":11056616,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056621,"byte_end":11056624,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ This function returns:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056629,"byte_end":11056655,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056660,"byte_end":11056663,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the channel is still open.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056668,"byte_end":11056720,"line_start":450,"line_end":450,"column_start":5,"column_end":57}},{"value":"/  * `Poll::Ready(())` if the channel is closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056725,"byte_end":11056775,"line_start":451,"line_end":451,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056780,"byte_end":11056783,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056788,"byte_end":11056802,"line_start":453,"line_end":453,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056807,"byte_end":11056810,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056815,"byte_end":11056822,"line_start":455,"line_end":455,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056827,"byte_end":11056856,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056861,"byte_end":11056864,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056869,"byte_end":11056902,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056907,"byte_end":11056910,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056915,"byte_end":11056933,"line_start":460,"line_end":460,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056938,"byte_end":11056959,"line_start":461,"line_end":461,"column_start":5,"column_end":26}},{"value":"/     let (mut tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11056964,"byte_end":11057020,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057025,"byte_end":11057028,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057033,"byte_end":11057066,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/         rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057071,"byte_end":11057094,"line_start":465,"line_end":465,"column_start":5,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057099,"byte_end":11057110,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057115,"byte_end":11057118,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     poll_fn(|cx| tx.poll_closed(cx)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057123,"byte_end":11057170,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057175,"byte_end":11057178,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/     println!(\"the receiver dropped\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057183,"byte_end":11057224,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057229,"byte_end":11057234,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11057239,"byte_end":11057246,"line_start":472,"line_end":472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6266},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060540,"byte_end":11060545,"line_start":590,"line_end":590,"column_start":12,"column_end":17},"name":"close","qualname":"<Receiver<T>>::close","value":"pub fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prevents the associated [`Sender`] handle from sending a value.","sig":null,"attributes":[{"value":"/ Prevents the associated [`Sender`] handle from sending a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058794,"byte_end":11058861,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058866,"byte_end":11058869,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Any `send` operation which happens after calling `close` is guaranteed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058874,"byte_end":11058948,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ to fail. After calling `close`, [`try_recv`] should be called to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058953,"byte_end":11059021,"line_start":534,"line_end":534,"column_start":5,"column_end":73}},{"value":"/ receive a value if one was sent **before** the call to `close`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059026,"byte_end":11059092,"line_start":535,"line_end":535,"column_start":5,"column_end":71}},{"value":"/ completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059097,"byte_end":11059111,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059116,"byte_end":11059119,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ This function is useful to perform a graceful shutdown and ensure that a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059124,"byte_end":11059200,"line_start":538,"line_end":538,"column_start":5,"column_end":81}},{"value":"/ value will not be sent into the channel and never received.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059205,"byte_end":11059268,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059273,"byte_end":11059276,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ `close` is no-op if a message is already received or the channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059281,"byte_end":11059349,"line_start":541,"line_end":541,"column_start":5,"column_end":73}},{"value":"/ is already closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059354,"byte_end":11059376,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059381,"byte_end":11059384,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059389,"byte_end":11059411,"line_start":544,"line_end":544,"column_start":5,"column_end":27}},{"value":"/ [`try_recv`]: Receiver::try_recv","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059416,"byte_end":11059452,"line_start":545,"line_end":545,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059457,"byte_end":11059460,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059465,"byte_end":11059479,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059484,"byte_end":11059487,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Prevent a value from being sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059492,"byte_end":11059527,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059532,"byte_end":11059535,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059540,"byte_end":11059547,"line_start":551,"line_end":551,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059552,"byte_end":11059581,"line_start":552,"line_end":552,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059586,"byte_end":11059636,"line_start":553,"line_end":553,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059641,"byte_end":11059644,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059649,"byte_end":11059667,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059672,"byte_end":11059693,"line_start":556,"line_end":556,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059698,"byte_end":11059744,"line_start":557,"line_end":557,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059749,"byte_end":11059752,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/     assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059757,"byte_end":11059790,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059795,"byte_end":11059798,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059803,"byte_end":11059822,"line_start":561,"line_end":561,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059827,"byte_end":11059830,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059835,"byte_end":11059867,"line_start":563,"line_end":563,"column_start":5,"column_end":37}},{"value":"/     assert!(tx.send(\"never received\").is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059872,"byte_end":11059924,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059929,"byte_end":11059932,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059937,"byte_end":11059966,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11059971,"byte_end":11060014,"line_start":567,"line_end":567,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060019,"byte_end":11060051,"line_start":568,"line_end":568,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060056,"byte_end":11060065,"line_start":569,"line_end":569,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060070,"byte_end":11060075,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060080,"byte_end":11060087,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060092,"byte_end":11060095,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ Receive a value sent **before** calling `close`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060100,"byte_end":11060151,"line_start":573,"line_end":573,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060156,"byte_end":11060159,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060164,"byte_end":11060171,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060176,"byte_end":11060205,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060210,"byte_end":11060213,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060218,"byte_end":11060236,"line_start":578,"line_end":578,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060241,"byte_end":11060262,"line_start":579,"line_end":579,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060267,"byte_end":11060313,"line_start":580,"line_end":580,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060318,"byte_end":11060321,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/     assert!(tx.send(\"will receive\").is_ok());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060326,"byte_end":11060375,"line_start":582,"line_end":582,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060380,"byte_end":11060383,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/     rx.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060388,"byte_end":11060407,"line_start":584,"line_end":584,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060412,"byte_end":11060415,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/     let msg = rx.try_recv().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060420,"byte_end":11060461,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(msg, \"will receive\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060466,"byte_end":11060506,"line_start":587,"line_end":587,"column_start":5,"column_end":45}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060511,"byte_end":11060516,"line_start":588,"line_end":588,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060521,"byte_end":11060528,"line_start":589,"line_end":589,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6267},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062543,"byte_end":11062551,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"try_recv","qualname":"<Receiver<T>>::try_recv","value":"pub fn try_recv(&mut Self) -> Result<T, TryRecvError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to receive a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060658,"byte_end":11060690,"line_start":596,"line_end":596,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060695,"byte_end":11060698,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ If a pending value exists in the channel, it is returned. If no value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060703,"byte_end":11060776,"line_start":598,"line_end":598,"column_start":5,"column_end":78}},{"value":"/ has been sent, the current task **will not** be registered for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060781,"byte_end":11060847,"line_start":599,"line_end":599,"column_start":5,"column_end":71}},{"value":"/ future notification.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060852,"byte_end":11060876,"line_start":600,"line_end":600,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060881,"byte_end":11060884,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is useful to call from outside the context of an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060889,"byte_end":11060955,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/ asynchronous task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060960,"byte_end":11060982,"line_start":603,"line_end":603,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060987,"byte_end":11060990,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Return","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11060995,"byte_end":11061007,"line_start":605,"line_end":605,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061012,"byte_end":11061015,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ - `Ok(T)` if a value is pending in the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061020,"byte_end":11061071,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ - `Err(TryRecvError::Empty)` if no value has been sent yet.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061076,"byte_end":11061139,"line_start":608,"line_end":608,"column_start":5,"column_end":68}},{"value":"/ - `Err(TryRecvError::Closed)` if the sender has dropped without sending","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061144,"byte_end":11061219,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/   a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061224,"byte_end":11061238,"line_start":610,"line_end":610,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061243,"byte_end":11061246,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061251,"byte_end":11061265,"line_start":612,"line_end":612,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061270,"byte_end":11061273,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ `try_recv` before a value is sent, then after.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061278,"byte_end":11061328,"line_start":614,"line_end":614,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061333,"byte_end":11061336,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061341,"byte_end":11061348,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061353,"byte_end":11061382,"line_start":617,"line_end":617,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061387,"byte_end":11061437,"line_start":618,"line_end":618,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061442,"byte_end":11061445,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061450,"byte_end":11061468,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061473,"byte_end":11061494,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061499,"byte_end":11061545,"line_start":622,"line_end":622,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061550,"byte_end":11061553,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061558,"byte_end":11061587,"line_start":624,"line_end":624,"column_start":5,"column_end":34}},{"value":"/         // The channel is currently empty","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061592,"byte_end":11061637,"line_start":625,"line_end":625,"column_start":5,"column_end":50}},{"value":"/         Err(TryRecvError::Empty) => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061642,"byte_end":11061684,"line_start":626,"line_end":626,"column_start":5,"column_end":47}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061689,"byte_end":11061721,"line_start":627,"line_end":627,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061726,"byte_end":11061735,"line_start":628,"line_end":628,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061740,"byte_end":11061743,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/     // Send a value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061748,"byte_end":11061771,"line_start":630,"line_end":630,"column_start":5,"column_end":28}},{"value":"/     tx.send(\"hello\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061776,"byte_end":11061810,"line_start":631,"line_end":631,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061815,"byte_end":11061818,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061823,"byte_end":11061852,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/         Ok(value) => assert_eq!(value, \"hello\"),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061857,"byte_end":11061909,"line_start":634,"line_end":634,"column_start":5,"column_end":57}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061914,"byte_end":11061946,"line_start":635,"line_end":635,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061951,"byte_end":11061960,"line_start":636,"line_end":636,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061965,"byte_end":11061970,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061975,"byte_end":11061982,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061987,"byte_end":11061990,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ `try_recv` when the sender dropped before sending a value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11061995,"byte_end":11062056,"line_start":640,"line_end":640,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062061,"byte_end":11062064,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062069,"byte_end":11062076,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062081,"byte_end":11062110,"line_start":643,"line_end":643,"column_start":5,"column_end":34}},{"value":"/ use tokio::sync::oneshot::error::TryRecvError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062115,"byte_end":11062165,"line_start":644,"line_end":644,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062170,"byte_end":11062173,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062178,"byte_end":11062196,"line_start":646,"line_end":646,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062201,"byte_end":11062222,"line_start":647,"line_end":647,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = oneshot::channel::<()>();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062227,"byte_end":11062279,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062284,"byte_end":11062287,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/     drop(tx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062292,"byte_end":11062309,"line_start":650,"line_end":650,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062314,"byte_end":11062317,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/     match rx.try_recv() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062322,"byte_end":11062351,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/         // The channel will never receive a value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062356,"byte_end":11062410,"line_start":653,"line_end":653,"column_start":5,"column_end":59}},{"value":"/         Err(TryRecvError::Closed) => {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062415,"byte_end":11062458,"line_start":654,"line_end":654,"column_start":5,"column_end":48}},{"value":"/         _ => unreachable!(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062463,"byte_end":11062495,"line_start":655,"line_end":655,"column_start":5,"column_end":37}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062500,"byte_end":11062509,"line_start":656,"line_end":656,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062514,"byte_end":11062519,"line_start":657,"line_end":657,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11062524,"byte_end":11062531,"line_start":658,"line_end":658,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7157},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072118,"byte_end":11072124,"line_start":52,"line_end":52,"column_start":5,"column_end":11},"name":"Closed","qualname":"::sync::batch_semaphore::TryAcquireError::Closed","value":"TryAcquireError::Closed","parent":{"krate":0,"index":7156},"children":[],"decl_id":null,"docs":" The semaphore has been [closed] and cannot issue new permits.","sig":null,"attributes":[{"value":"/ The semaphore has been [closed] and cannot issue new permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11071992,"byte_end":11072057,"line_start":49,"line_end":49,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072062,"byte_end":11072065,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072070,"byte_end":11072113,"line_start":51,"line_end":51,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7159},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072179,"byte_end":11072188,"line_start":55,"line_end":55,"column_start":5,"column_end":14},"name":"NoPermits","qualname":"::sync::batch_semaphore::TryAcquireError::NoPermits","value":"TryAcquireError::NoPermits","parent":{"krate":0,"index":7156},"children":[],"decl_id":null,"docs":" The semaphore has no available permits.\n","sig":null,"attributes":[{"value":"/ The semaphore has no available permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072131,"byte_end":11072174,"line_start":54,"line_end":54,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":7156},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11071970,"byte_end":11071985,"line_start":48,"line_end":48,"column_start":10,"column_end":25},"name":"TryAcquireError","qualname":"::sync::batch_semaphore::TryAcquireError","value":"pub enum TryAcquireError {\n\n    /// The semaphore has been [closed] and cannot issue new permits.\n    ///\n    /// [closed]: crate::sync::Semaphore::close\n    Closed,\n\n    /// The semaphore has no available permits.\n    NoPermits,\n}","parent":null,"children":[{"krate":0,"index":7157},{"krate":0,"index":7159}],"decl_id":null,"docs":" Error returned from the [`Semaphore::try_acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::try_acquire`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11071796,"byte_end":11071860,"line_start":44,"line_end":44,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11071861,"byte_end":11071864,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore::try_acquire`]: crate::sync::Semaphore::try_acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11071865,"byte_end":11071932,"line_start":46,"line_end":46,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7166},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072474,"byte_end":11072486,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"AcquireError","qualname":"::sync::batch_semaphore::AcquireError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned from the [`Semaphore::acquire`] function.","sig":null,"attributes":[{"value":"/ Error returned from the [`Semaphore::acquire`] function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072192,"byte_end":11072252,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072253,"byte_end":11072256,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ An `acquire` operation can only fail if the semaphore has been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072257,"byte_end":11072323,"line_start":59,"line_end":59,"column_start":1,"column_end":67}},{"value":"/ [closed].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072324,"byte_end":11072337,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072338,"byte_end":11072341,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ [closed]: crate::sync::Semaphore::close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072342,"byte_end":11072385,"line_start":62,"line_end":62,"column_start":1,"column_end":44}},{"value":"/ [`Semaphore::acquire`]: crate::sync::Semaphore::acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11072386,"byte_end":11072445,"line_start":63,"line_end":63,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":7171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092212,"byte_end":11092221,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"Semaphore","qualname":"::sync::semaphore::Semaphore","value":"Semaphore {  }","parent":null,"children":[{"krate":0,"index":7172}],"decl_id":null,"docs":" Counting semaphore performing asynchronous permit acquisition.","sig":null,"attributes":[{"value":"/ Counting semaphore performing asynchronous permit acquisition.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11090938,"byte_end":11091004,"line_start":5,"line_end":5,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091005,"byte_end":11091008,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A semaphore maintains a set of permits. Permits are used to synchronize","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091009,"byte_end":11091084,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ access to a shared resource. A semaphore differs from a mutex in that it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091085,"byte_end":11091161,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ can allow more than one concurrent caller to access the shared resource at a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091162,"byte_end":11091242,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091243,"byte_end":11091252,"line_start":10,"line_end":10,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091253,"byte_end":11091256,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ When `acquire` is called and the semaphore has remaining permits, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091257,"byte_end":11091330,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ function immediately returns a permit. However, if no remaining permits are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091331,"byte_end":11091410,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ available, `acquire` (asynchronously) waits until an outstanding permit is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091411,"byte_end":11091489,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ dropped. At this point, the freed permit is assigned to the caller.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091490,"byte_end":11091561,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091562,"byte_end":11091565,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This `Semaphore` is fair, which means that permits are given out in the order","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091566,"byte_end":11091647,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ they were requested. This fairness is also applied when `acquire_many` gets","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091648,"byte_end":11091727,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ involved, so if a call to `acquire_many` at the front of the queue requests","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091728,"byte_end":11091807,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ more permits than currently available, this can prevent a call to `acquire`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091808,"byte_end":11091887,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ from completing, even if the semaphore has enough permits complete the call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091888,"byte_end":11091967,"line_start":21,"line_end":21,"column_start":1,"column_end":80}},{"value":"/ to `acquire`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091968,"byte_end":11091985,"line_start":22,"line_end":22,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091986,"byte_end":11091989,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ To use the `Semaphore` in a poll function, you can use the [`PollSemaphore`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11091990,"byte_end":11092070,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ utility.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092071,"byte_end":11092083,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092084,"byte_end":11092087,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ [`PollSemaphore`]: https://docs.rs/tokio-util/0.6/tokio_util/sync/struct.PollSemaphore.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092088,"byte_end":11092183,"line_start":27,"line_end":27,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":7175},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092470,"byte_end":11092485,"line_start":41,"line_end":41,"column_start":12,"column_end":27},"name":"SemaphorePermit","qualname":"::sync::semaphore::SemaphorePermit","value":"SemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7177},{"krate":0,"index":7178}],"decl_id":null,"docs":" A permit from the semaphore.","sig":null,"attributes":[{"value":"/ A permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092286,"byte_end":11092318,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092319,"byte_end":11092322,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092323,"byte_end":11092374,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092375,"byte_end":11092378,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`acquire`]: crate::sync::Semaphore::acquire()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092379,"byte_end":11092429,"line_start":38,"line_end":38,"column_start":1,"column_end":51}},{"value":"must_use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092430,"byte_end":11092441,"line_start":39,"line_end":39,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7182},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092746,"byte_end":11092766,"line_start":53,"line_end":53,"column_start":12,"column_end":32},"name":"OwnedSemaphorePermit","qualname":"::sync::semaphore::OwnedSemaphorePermit","value":"OwnedSemaphorePermit {  }","parent":null,"children":[{"krate":0,"index":7183},{"krate":0,"index":7184}],"decl_id":null,"docs":" An owned permit from the semaphore.","sig":null,"attributes":[{"value":"/ An owned permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092537,"byte_end":11092576,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092577,"byte_end":11092580,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This type is created by the [`acquire_owned`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092581,"byte_end":11092638,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092639,"byte_end":11092642,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`acquire_owned`]: crate::sync::Semaphore::acquire_owned()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092643,"byte_end":11092705,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"must_use","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11092706,"byte_end":11092717,"line_start":51,"line_end":51,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6417},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093362,"byte_end":11093365,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Semaphore>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new semaphore with the initial number of permits.\n","sig":null,"attributes":[{"value":"/ Creates a new semaphore with the initial number of permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093287,"byte_end":11093350,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6418},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093871,"byte_end":11093888,"line_start":91,"line_end":91,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<Semaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.\n","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093807,"byte_end":11093859,"line_start":90,"line_end":90,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6419},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094135,"byte_end":11094146,"line_start":98,"line_end":98,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<Semaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093958,"byte_end":11094000,"line_start":95,"line_end":95,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094005,"byte_end":11094008,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function will panic if the limit is exceeded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094013,"byte_end":11094123,"line_start":97,"line_end":97,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":6420},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094566,"byte_end":11094573,"line_start":110,"line_end":110,"column_start":18,"column_end":25},"name":"acquire","qualname":"<Semaphore>::acquire","value":"pub async fn acquire<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094209,"byte_end":11094250,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094255,"byte_end":11094258,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094263,"byte_end":11094334,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094339,"byte_end":11094405,"line_start":105,"line_end":105,"column_start":5,"column_end":71}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094410,"byte_end":11094430,"line_start":106,"line_end":106,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094435,"byte_end":11094438,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094443,"byte_end":11094490,"line_start":108,"line_end":108,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094495,"byte_end":11094548,"line_start":109,"line_end":109,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6423},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095127,"byte_end":11095139,"line_start":126,"line_end":126,"column_start":18,"column_end":30},"name":"acquire_many","qualname":"<Semaphore>::acquire_many","value":"pub async fn acquire_many<'_, '_>(&'_ Self, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094766,"byte_end":11094810,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094815,"byte_end":11094818,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094823,"byte_end":11094894,"line_start":120,"line_end":120,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`SemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094899,"byte_end":11094965,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/ acquired permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094970,"byte_end":11094991,"line_start":122,"line_end":122,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11094996,"byte_end":11094999,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095004,"byte_end":11095051,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095056,"byte_end":11095109,"line_start":125,"line_end":125,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6426},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095878,"byte_end":11095889,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"try_acquire","qualname":"<Semaphore>::try_acquire","value":"pub fn try_acquire(&Self) -> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095340,"byte_end":11095389,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095394,"byte_end":11095397,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095402,"byte_end":11095482,"line_start":136,"line_end":136,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095487,"byte_end":11095568,"line_start":137,"line_end":137,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095573,"byte_end":11095646,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095651,"byte_end":11095654,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095659,"byte_end":11095728,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095733,"byte_end":11095808,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11095813,"byte_end":11095866,"line_start":142,"line_end":142,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6427},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096695,"byte_end":11096711,"line_start":162,"line_end":162,"column_start":12,"column_end":28},"name":"try_acquire_many","qualname":"<Semaphore>::try_acquire_many","value":"pub fn try_acquire_many(&Self, u32)\n-> Result<SemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096154,"byte_end":11096206,"line_start":153,"line_end":153,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096211,"byte_end":11096214,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ If the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096219,"byte_end":11096299,"line_start":155,"line_end":155,"column_start":5,"column_end":85}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left. Otherwise,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096304,"byte_end":11096385,"line_start":156,"line_end":156,"column_start":5,"column_end":86}},{"value":"/ this returns a [`SemaphorePermit`] representing the acquired permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096390,"byte_end":11096463,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096468,"byte_end":11096471,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096476,"byte_end":11096545,"line_start":159,"line_end":159,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096550,"byte_end":11096625,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ [`SemaphorePermit`]: crate::sync::SemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096630,"byte_end":11096683,"line_start":161,"line_end":161,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6428},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097461,"byte_end":11097474,"line_start":182,"line_end":182,"column_start":18,"column_end":31},"name":"acquire_owned","qualname":"<Semaphore>::acquire_owned","value":"pub async fn acquire_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11096984,"byte_end":11097025,"line_start":172,"line_end":172,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097030,"byte_end":11097033,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097038,"byte_end":11097106,"line_start":174,"line_end":174,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097111,"byte_end":11097182,"line_start":175,"line_end":175,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097187,"byte_end":11097258,"line_start":176,"line_end":176,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097263,"byte_end":11097283,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097288,"byte_end":11097291,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097296,"byte_end":11097323,"line_start":179,"line_end":179,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097328,"byte_end":11097375,"line_start":180,"line_end":180,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097380,"byte_end":11097443,"line_start":181,"line_end":181,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6431},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098162,"byte_end":11098180,"line_start":200,"line_end":200,"column_start":18,"column_end":36},"name":"acquire_many_owned","qualname":"<Semaphore>::acquire_many_owned","value":"pub async fn acquire_many_owned(Arc<Self>, u32) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Acquires `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Acquires `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097682,"byte_end":11097726,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097731,"byte_end":11097734,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097739,"byte_end":11097807,"line_start":192,"line_end":192,"column_start":5,"column_end":73}},{"value":"/ If the semaphore has been closed, this returns an [`AcquireError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097812,"byte_end":11097883,"line_start":193,"line_end":193,"column_start":5,"column_end":76}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097888,"byte_end":11097959,"line_start":194,"line_end":194,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097964,"byte_end":11097984,"line_start":195,"line_end":195,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097989,"byte_end":11097992,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11097997,"byte_end":11098024,"line_start":197,"line_end":197,"column_start":5,"column_end":32}},{"value":"/ [`AcquireError`]: crate::sync::AcquireError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098029,"byte_end":11098076,"line_start":198,"line_end":198,"column_start":5,"column_end":52}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098081,"byte_end":11098144,"line_start":199,"line_end":199,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6434},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099084,"byte_end":11099101,"line_start":223,"line_end":223,"column_start":12,"column_end":29},"name":"try_acquire_owned","qualname":"<Semaphore>::try_acquire_owned","value":"pub fn try_acquire_owned(Arc<Self>)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098419,"byte_end":11098468,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098473,"byte_end":11098476,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098481,"byte_end":11098552,"line_start":213,"line_end":213,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098557,"byte_end":11098634,"line_start":214,"line_end":214,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098639,"byte_end":11098709,"line_start":215,"line_end":215,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098714,"byte_end":11098785,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098790,"byte_end":11098810,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098815,"byte_end":11098818,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098823,"byte_end":11098850,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098855,"byte_end":11098924,"line_start":220,"line_end":220,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11098929,"byte_end":11099004,"line_start":221,"line_end":221,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099009,"byte_end":11099072,"line_start":222,"line_end":222,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6435},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100050,"byte_end":11100072,"line_start":245,"line_end":245,"column_start":12,"column_end":34},"name":"try_acquire_many_owned","qualname":"<Semaphore>::try_acquire_many_owned","value":"pub fn try_acquire_many_owned(Arc<Self>, u32)\n-> Result<OwnedSemaphorePermit, TryAcquireError>","parent":null,"children":[],"decl_id":null,"docs":" Tries to acquire `n` permits from the semaphore.","sig":null,"attributes":[{"value":"/ Tries to acquire `n` permits from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099382,"byte_end":11099434,"line_start":233,"line_end":233,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099439,"byte_end":11099442,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ The semaphore must be wrapped in an [`Arc`] to call this method. If","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099447,"byte_end":11099518,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"/ the semaphore has been closed, this returns a [`TryAcquireError::Closed`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099523,"byte_end":11099600,"line_start":236,"line_end":236,"column_start":5,"column_end":82}},{"value":"/ and a [`TryAcquireError::NoPermits`] if there are no permits left.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099605,"byte_end":11099675,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ Otherwise, this returns a [`OwnedSemaphorePermit`] representing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099680,"byte_end":11099751,"line_start":238,"line_end":238,"column_start":5,"column_end":76}},{"value":"/ acquired permit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099756,"byte_end":11099776,"line_start":239,"line_end":239,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099781,"byte_end":11099784,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ [`Arc`]: std::sync::Arc","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099789,"byte_end":11099816,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/ [`TryAcquireError::Closed`]: crate::sync::TryAcquireError::Closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099821,"byte_end":11099890,"line_start":242,"line_end":242,"column_start":5,"column_end":74}},{"value":"/ [`TryAcquireError::NoPermits`]: crate::sync::TryAcquireError::NoPermits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099895,"byte_end":11099970,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ [`OwnedSemaphorePermit`]: crate::sync::OwnedSemaphorePermit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11099975,"byte_end":11100038,"line_start":244,"line_end":244,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6436},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101297,"byte_end":11101302,"line_start":287,"line_end":287,"column_start":12,"column_end":17},"name":"close","qualname":"<Semaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100384,"byte_end":11100409,"line_start":258,"line_end":258,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100414,"byte_end":11100417,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This prevents the semaphore from issuing new permits and notifies all pending waiters.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100422,"byte_end":11100512,"line_start":260,"line_end":260,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100517,"byte_end":11100520,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100525,"byte_end":11100539,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100544,"byte_end":11100547,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100552,"byte_end":11100559,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::Semaphore;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100564,"byte_end":11100595,"line_start":265,"line_end":265,"column_start":5,"column_end":36}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100600,"byte_end":11100623,"line_start":266,"line_end":266,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::TryAcquireError;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100628,"byte_end":11100665,"line_start":267,"line_end":267,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100670,"byte_end":11100673,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100678,"byte_end":11100696,"line_start":269,"line_end":269,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100701,"byte_end":11100722,"line_start":270,"line_end":270,"column_start":5,"column_end":26}},{"value":"/     let semaphore = Arc::new(Semaphore::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100727,"byte_end":11100779,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/     let semaphore2 = semaphore.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100784,"byte_end":11100827,"line_start":272,"line_end":272,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100832,"byte_end":11100835,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100840,"byte_end":11100873,"line_start":274,"line_end":274,"column_start":5,"column_end":38}},{"value":"/         let permit = semaphore.acquire_many(2).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100878,"byte_end":11100935,"line_start":275,"line_end":275,"column_start":5,"column_end":62}},{"value":"/         assert!(permit.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100940,"byte_end":11100977,"line_start":276,"line_end":276,"column_start":5,"column_end":42}},{"value":"/         println!(\"waiter received error\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11100982,"byte_end":11101028,"line_start":277,"line_end":277,"column_start":5,"column_end":51}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101033,"byte_end":11101044,"line_start":278,"line_end":278,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101049,"byte_end":11101052,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/     println!(\"closing semaphore\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101057,"byte_end":11101095,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"/     semaphore2.close();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101100,"byte_end":11101127,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101132,"byte_end":11101135,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/     // Cannot obtain more permits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101140,"byte_end":11101177,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/     assert_eq!(semaphore2.try_acquire().err(), Some(TryAcquireError::Closed))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101182,"byte_end":11101263,"line_start":284,"line_end":284,"column_start":5,"column_end":86}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101268,"byte_end":11101273,"line_start":285,"line_end":285,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101278,"byte_end":11101285,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6437},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101407,"byte_end":11101416,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Semaphore>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the semaphore is closed\n","sig":null,"attributes":[{"value":"/ Returns true if the semaphore is closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101352,"byte_end":11101395,"line_start":291,"line_end":291,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":6440},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101685,"byte_end":11101691,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"forget","qualname":"<SemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101510,"byte_end":11101580,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101585,"byte_end":11101654,"line_start":299,"line_end":299,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101659,"byte_end":11101673,"line_start":300,"line_end":300,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":6442},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101946,"byte_end":11101952,"line_start":310,"line_end":310,"column_start":12,"column_end":18},"name":"forget","qualname":"<OwnedSemaphorePermit>::forget","value":"pub fn forget(Self)","parent":null,"children":[],"decl_id":null,"docs":" Forgets the permit **without** releasing it back to the semaphore.\n This can be used to reduce the amount of permits available from a\n semaphore.\n","sig":null,"attributes":[{"value":"/ Forgets the permit **without** releasing it back to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101771,"byte_end":11101841,"line_start":307,"line_end":307,"column_start":5,"column_end":75}},{"value":"/ This can be used to reduce the amount of permits available from a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101846,"byte_end":11101915,"line_start":308,"line_end":308,"column_start":5,"column_end":74}},{"value":"/ semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101920,"byte_end":11101934,"line_start":309,"line_end":309,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":6470},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126462,"byte_end":11126482,"line_start":17,"line_end":17,"column_start":12,"column_end":32},"name":"OwnedRwLockReadGuard","qualname":"::sync::rwlock::owned_read_guard::OwnedRwLockReadGuard","value":"OwnedRwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6473},{"krate":0,"index":6474},{"krate":0,"index":6475}],"decl_id":null,"docs":" Owned RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126171,"byte_end":11126249,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126250,"byte_end":11126262,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126263,"byte_end":11126266,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read_owned`] method on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126267,"byte_end":11126328,"line_start":12,"line_end":12,"column_start":1,"column_end":62}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126329,"byte_end":11126344,"line_start":13,"line_end":13,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126345,"byte_end":11126348,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`read_owned`]: method@crate::sync::RwLock::read_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126349,"byte_end":11126407,"line_start":15,"line_end":15,"column_start":1,"column_end":59}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126408,"byte_end":11126450,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6479},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127713,"byte_end":11127716,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockReadGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockReadGuard<T, V> where\nF: FnOnce(&U) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockReadGuard` for a component of the locked data.\n This operation cannot fail as the `OwnedRwLockReadGuard` passed in\n already locked the data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126784,"byte_end":11126857,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126862,"byte_end":11126932,"line_start":26,"line_end":26,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126937,"byte_end":11126965,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126970,"byte_end":11126973,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126978,"byte_end":11127029,"line_start":29,"line_end":29,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127034,"byte_end":11127109,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127114,"byte_end":11127178,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127183,"byte_end":11127186,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127191,"byte_end":11127205,"line_start":33,"line_end":33,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127210,"byte_end":11127213,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127218,"byte_end":11127225,"line_start":35,"line_end":35,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127230,"byte_end":11127253,"line_start":36,"line_end":36,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127258,"byte_end":11127310,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127315,"byte_end":11127318,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127323,"byte_end":11127371,"line_start":39,"line_end":39,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127376,"byte_end":11127396,"line_start":40,"line_end":40,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127401,"byte_end":11127404,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127409,"byte_end":11127429,"line_start":42,"line_end":42,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127434,"byte_end":11127457,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127462,"byte_end":11127507,"line_start":44,"line_end":44,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127512,"byte_end":11127515,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127520,"byte_end":11127560,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127565,"byte_end":11127624,"line_start":47,"line_end":47,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127629,"byte_end":11127632,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127637,"byte_end":11127663,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127668,"byte_end":11127675,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127680,"byte_end":11127687,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11127692,"byte_end":11127701,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6482},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129233,"byte_end":11129240,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockReadGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockReadGuard<T, V>, Self> where F: FnOnce(&U) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`OwnedRwLockReadGuard`] for a component of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128165,"byte_end":11128239,"line_start":68,"line_end":68,"column_start":5,"column_end":79}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128244,"byte_end":11128314,"line_start":69,"line_end":69,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128319,"byte_end":11128330,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128335,"byte_end":11128338,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockReadGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128343,"byte_end":11128413,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128418,"byte_end":11128446,"line_start":73,"line_end":73,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128451,"byte_end":11128454,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128459,"byte_end":11128518,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockReadGuard::try_map(..)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128523,"byte_end":11128593,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128598,"byte_end":11128662,"line_start":77,"line_end":77,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128667,"byte_end":11128670,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128675,"byte_end":11128689,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128694,"byte_end":11128697,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128702,"byte_end":11128709,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128714,"byte_end":11128737,"line_start":82,"line_end":82,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128742,"byte_end":11128794,"line_start":83,"line_end":83,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128799,"byte_end":11128802,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128807,"byte_end":11128855,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128860,"byte_end":11128880,"line_start":86,"line_end":86,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128885,"byte_end":11128888,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128893,"byte_end":11128913,"line_start":88,"line_end":88,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128918,"byte_end":11128941,"line_start":89,"line_end":89,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128946,"byte_end":11128991,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11128996,"byte_end":11128999,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129004,"byte_end":11129044,"line_start":92,"line_end":92,"column_start":5,"column_end":45}},{"value":"/ let guard = OwnedRwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129049,"byte_end":11129144,"line_start":93,"line_end":93,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129149,"byte_end":11129152,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129157,"byte_end":11129183,"line_start":95,"line_end":95,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129188,"byte_end":11129195,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129200,"byte_end":11129207,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129212,"byte_end":11129221,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6513},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131153,"byte_end":11131174,"line_start":18,"line_end":18,"column_start":12,"column_end":33},"name":"OwnedRwLockWriteGuard","qualname":"::sync::rwlock::owned_write_guard::OwnedRwLockWriteGuard","value":"OwnedRwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6515},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6518}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11130855,"byte_end":11130937,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11130938,"byte_end":11130950,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11130951,"byte_end":11130954,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write_owned`] method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11130955,"byte_end":11131014,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131015,"byte_end":11131033,"line_start":14,"line_end":14,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131034,"byte_end":11131037,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`write_owned`]: method@crate::sync::RwLock::write_owned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131038,"byte_end":11131098,"line_start":16,"line_end":16,"column_start":1,"column_end":61}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131099,"byte_end":11131141,"line_start":17,"line_end":17,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6521},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132532,"byte_end":11132535,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockWriteGuard<T>>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, U> where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new [`OwnedRwLockMappedWriteGuard`] for a component of the locked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131484,"byte_end":11131560,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"/ data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131565,"byte_end":11131574,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131579,"byte_end":11131582,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131587,"byte_end":11131658,"line_start":30,"line_end":30,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131663,"byte_end":11131691,"line_start":31,"line_end":31,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131696,"byte_end":11131699,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131704,"byte_end":11131763,"line_start":33,"line_end":33,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131768,"byte_end":11131843,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131848,"byte_end":11131904,"line_start":35,"line_end":35,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131909,"byte_end":11131912,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131917,"byte_end":11131931,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131936,"byte_end":11131939,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131944,"byte_end":11131951,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131956,"byte_end":11131979,"line_start":40,"line_end":40,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131984,"byte_end":11132037,"line_start":41,"line_end":41,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132042,"byte_end":11132045,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132050,"byte_end":11132098,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132103,"byte_end":11132123,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132128,"byte_end":11132131,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132136,"byte_end":11132156,"line_start":46,"line_end":46,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132161,"byte_end":11132184,"line_start":47,"line_end":47,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132189,"byte_end":11132234,"line_start":48,"line_end":48,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132239,"byte_end":11132242,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132247,"byte_end":11132252,"line_start":50,"line_end":50,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132257,"byte_end":11132294,"line_start":51,"line_end":51,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132299,"byte_end":11132391,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132396,"byte_end":11132416,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132421,"byte_end":11132426,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132431,"byte_end":11132434,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132439,"byte_end":11132482,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132487,"byte_end":11132494,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132499,"byte_end":11132506,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11132511,"byte_end":11132520,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6524},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134351,"byte_end":11134358,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockWriteGuard<T>>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, U>, Self> where F: FnOnce(&mut T) ->\nOption<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`OwnedRwLockMappedWriteGuard`] for a component","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133092,"byte_end":11133167,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133172,"byte_end":11133241,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133246,"byte_end":11133265,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133270,"byte_end":11133273,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockWriteGuard` passed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133278,"byte_end":11133349,"line_start":81,"line_end":81,"column_start":5,"column_end":76}},{"value":"/ already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133354,"byte_end":11133382,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133387,"byte_end":11133390,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133395,"byte_end":11133446,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133451,"byte_end":11133526,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133531,"byte_end":11133600,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133605,"byte_end":11133608,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133613,"byte_end":11133687,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133692,"byte_end":11133695,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133700,"byte_end":11133714,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133719,"byte_end":11133722,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133727,"byte_end":11133734,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133739,"byte_end":11133762,"line_start":93,"line_end":93,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133767,"byte_end":11133820,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133825,"byte_end":11133828,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133833,"byte_end":11133881,"line_start":96,"line_end":96,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133886,"byte_end":11133906,"line_start":97,"line_end":97,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133911,"byte_end":11133914,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133919,"byte_end":11133939,"line_start":99,"line_end":99,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133944,"byte_end":11133967,"line_start":100,"line_end":100,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11133972,"byte_end":11134017,"line_start":101,"line_end":101,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134022,"byte_end":11134025,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134030,"byte_end":11134035,"line_start":103,"line_end":103,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134040,"byte_end":11134098,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134103,"byte_end":11134211,"line_start":105,"line_end":105,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134216,"byte_end":11134235,"line_start":106,"line_end":106,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134240,"byte_end":11134245,"line_start":107,"line_end":107,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134250,"byte_end":11134253,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134258,"byte_end":11134301,"line_start":109,"line_end":109,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134306,"byte_end":11134313,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134318,"byte_end":11134325,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11134330,"byte_end":11134339,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6527},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135365,"byte_end":11135376,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<OwnedRwLockWriteGuard<T>>::into_mapped","value":"pub fn into_mapped(Self) -> OwnedRwLockMappedWriteGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts this `OwnedRwLockWriteGuard` into an\n `OwnedRwLockMappedWriteGuard`. This method can be used to store a\n non-mapped guard in a struct field that expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `OwnedRwLockWriteGuard` into an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135052,"byte_end":11135101,"line_start":136,"line_end":136,"column_start":5,"column_end":54}},{"value":"/ `OwnedRwLockMappedWriteGuard`. This method can be used to store a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135106,"byte_end":11135175,"line_start":137,"line_end":137,"column_start":5,"column_end":74}},{"value":"/ non-mapped guard in a struct field that expects a mapped guard.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135180,"byte_end":11135247,"line_start":138,"line_end":138,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135252,"byte_end":11135255,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `OwnedRwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135260,"byte_end":11135339,"line_start":140,"line_end":140,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135344,"byte_end":11135353,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6529},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136609,"byte_end":11136618,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<OwnedRwLockWriteGuard<T>>::downgrade","value":"pub fn downgrade(Self) -> OwnedRwLockReadGuard<T>","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135469,"byte_end":11135541,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135546,"byte_end":11135615,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135620,"byte_end":11135623,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135628,"byte_end":11135706,"line_start":149,"line_end":149,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135711,"byte_end":11135787,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135792,"byte_end":11135804,"line_start":151,"line_end":151,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135809,"byte_end":11135812,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135817,"byte_end":11135891,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135896,"byte_end":11135913,"line_start":154,"line_end":154,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135918,"byte_end":11135921,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135926,"byte_end":11135940,"line_start":156,"line_end":156,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135945,"byte_end":11135948,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135953,"byte_end":11135960,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11135965,"byte_end":11135995,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136000,"byte_end":11136025,"line_start":160,"line_end":160,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136030,"byte_end":11136035,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136040,"byte_end":11136060,"line_start":162,"line_end":162,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136065,"byte_end":11136088,"line_start":163,"line_end":163,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136093,"byte_end":11136133,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136138,"byte_end":11136141,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ let n = lock.clone().write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136146,"byte_end":11136191,"line_start":166,"line_end":166,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136196,"byte_end":11136199,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136204,"byte_end":11136239,"line_start":168,"line_end":168,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136244,"byte_end":11136286,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write_owned().await = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136291,"byte_end":11136336,"line_start":170,"line_end":170,"column_start":5,"column_end":50}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136341,"byte_end":11136348,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136353,"byte_end":11136356,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136361,"byte_end":11136387,"line_start":173,"line_end":173,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136392,"byte_end":11136437,"line_start":174,"line_end":174,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136442,"byte_end":11136445,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136450,"byte_end":11136462,"line_start":176,"line_end":176,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136467,"byte_end":11136493,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136498,"byte_end":11136573,"line_start":178,"line_end":178,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136578,"byte_end":11136585,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11136590,"byte_end":11136597,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6555},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138612,"byte_end":11138639,"line_start":17,"line_end":17,"column_start":12,"column_end":39},"name":"OwnedRwLockMappedWriteGuard","qualname":"::sync::rwlock::owned_write_guard_mapped::OwnedRwLockMappedWriteGuard","value":"OwnedRwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6558},{"krate":0,"index":6559},{"krate":0,"index":6560},{"krate":0,"index":6561}],"decl_id":null,"docs":" Owned RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ Owned RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138145,"byte_end":11138227,"line_start":8,"line_end":8,"column_start":1,"column_end":83}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138228,"byte_end":11138240,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138241,"byte_end":11138244,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`OwnedRwLockWriteGuard`]. It is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138245,"byte_end":11138325,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ separate type from `OwnedRwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138326,"byte_end":11138405,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138406,"byte_end":11138461,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138462,"byte_end":11138465,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::OwnedRwLockWriteGuard::map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138466,"byte_end":11138527,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ [`OwnedRwLockWriteGuard`]: struct@crate::sync::OwnedRwLockWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138528,"byte_end":11138600,"line_start":16,"line_end":16,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":6565},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140036,"byte_end":11140039,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::map","value":"pub fn map<F, V: ?Sized>(Self, F) -> OwnedRwLockMappedWriteGuard<T, V> where\nF: FnOnce(&mut U) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked\n data.","sig":null,"attributes":[{"value":"/ Make a new `OwnedRwLockMappedWriteGuard` for a component of the locked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138984,"byte_end":11139058,"line_start":26,"line_end":26,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139063,"byte_end":11139072,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139077,"byte_end":11139080,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139085,"byte_end":11139159,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139164,"byte_end":11139195,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139200,"byte_end":11139203,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139208,"byte_end":11139267,"line_start":32,"line_end":32,"column_start":5,"column_end":64}},{"value":"/ `OwnedRwLockWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139272,"byte_end":11139347,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139352,"byte_end":11139408,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139413,"byte_end":11139416,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139421,"byte_end":11139435,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139440,"byte_end":11139443,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139448,"byte_end":11139455,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139460,"byte_end":11139483,"line_start":39,"line_end":39,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139488,"byte_end":11139541,"line_start":40,"line_end":40,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139546,"byte_end":11139549,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139554,"byte_end":11139602,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139607,"byte_end":11139627,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139632,"byte_end":11139635,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139640,"byte_end":11139660,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139665,"byte_end":11139688,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139693,"byte_end":11139738,"line_start":47,"line_end":47,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139743,"byte_end":11139746,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139751,"byte_end":11139756,"line_start":49,"line_end":49,"column_start":5,"column_end":10}},{"value":"/     let lock = Arc::clone(&lock);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139761,"byte_end":11139798,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/     let mut mapped = OwnedRwLockWriteGuard::map(lock.write_owned().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139803,"byte_end":11139895,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139900,"byte_end":11139920,"line_start":52,"line_end":52,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139925,"byte_end":11139930,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139935,"byte_end":11139938,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139943,"byte_end":11139986,"line_start":55,"line_end":55,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11139991,"byte_end":11139998,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140003,"byte_end":11140010,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140015,"byte_end":11140024,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6568},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141777,"byte_end":11141784,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"try_map","qualname":"<OwnedRwLockMappedWriteGuard<T, U>>::try_map","value":"pub fn try_map<F, V: ?Sized>(Self, F)\n-> Result<OwnedRwLockMappedWriteGuard<T, V>, Self> where F: FnOnce(&mut U) ->\nOption<&mut V>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component\n of the locked data. The original guard is returned if the closure\n returns `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new `OwnedRwLockMappedWriteGuard` for a component","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140596,"byte_end":11140668,"line_start":76,"line_end":76,"column_start":5,"column_end":77}},{"value":"/ of the locked data. The original guard is returned if the closure","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140673,"byte_end":11140742,"line_start":77,"line_end":77,"column_start":5,"column_end":74}},{"value":"/ returns `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140747,"byte_end":11140766,"line_start":78,"line_end":78,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140771,"byte_end":11140774,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `OwnedRwLockMappedWriteGuard` passed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140779,"byte_end":11140853,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ in already locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140858,"byte_end":11140889,"line_start":81,"line_end":81,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140894,"byte_end":11140897,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140902,"byte_end":11140953,"line_start":83,"line_end":83,"column_start":5,"column_end":56}},{"value":"/ used as `OwnedRwLockMappedWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11140958,"byte_end":11141044,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141049,"byte_end":11141113,"line_start":85,"line_end":85,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141118,"byte_end":11141121,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141126,"byte_end":11141140,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141145,"byte_end":11141148,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141153,"byte_end":11141160,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141165,"byte_end":11141188,"line_start":90,"line_end":90,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::{RwLock, OwnedRwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141193,"byte_end":11141246,"line_start":91,"line_end":91,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141251,"byte_end":11141254,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141259,"byte_end":11141307,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141312,"byte_end":11141332,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141337,"byte_end":11141340,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141345,"byte_end":11141365,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141370,"byte_end":11141393,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(Foo(1)));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141398,"byte_end":11141443,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141448,"byte_end":11141451,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141456,"byte_end":11141461,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/     let guard = Arc::clone(&lock).write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141466,"byte_end":11141524,"line_start":101,"line_end":101,"column_start":5,"column_end":63}},{"value":"/     let mut guard = OwnedRwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141529,"byte_end":11141637,"line_start":102,"line_end":102,"column_start":5,"column_end":113}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141642,"byte_end":11141661,"line_start":103,"line_end":103,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141666,"byte_end":11141671,"line_start":104,"line_end":104,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141676,"byte_end":11141679,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141684,"byte_end":11141727,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141732,"byte_end":11141739,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141744,"byte_end":11141751,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11141756,"byte_end":11141765,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143831,"byte_end":11143846,"line_start":15,"line_end":15,"column_start":12,"column_end":27},"name":"RwLockReadGuard","qualname":"::sync::rwlock::read_guard::RwLockReadGuard","value":"RwLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":6601},{"krate":0,"index":6602},{"krate":0,"index":6603}],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the shared read access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143564,"byte_end":11143636,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143637,"byte_end":11143649,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143650,"byte_end":11143653,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`read`] method on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143654,"byte_end":11143709,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143710,"byte_end":11143725,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143726,"byte_end":11143729,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`read`]: method@crate::sync::RwLock::read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143730,"byte_end":11143776,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11143777,"byte_end":11143819,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6607},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145205,"byte_end":11145208,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockReadGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockReadGuard where F: FnOnce(&T) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockReadGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockReadGuard` for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144031,"byte_end":11144099,"line_start":22,"line_end":22,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144104,"byte_end":11144107,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144112,"byte_end":11144185,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144190,"byte_end":11144210,"line_start":25,"line_end":25,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144215,"byte_end":11144218,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144223,"byte_end":11144274,"line_start":27,"line_end":27,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockReadGuard::map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144279,"byte_end":11144349,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144354,"byte_end":11144418,"line_start":29,"line_end":29,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144423,"byte_end":11144426,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144431,"byte_end":11144503,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144508,"byte_end":11144534,"line_start":32,"line_end":32,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144539,"byte_end":11144542,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144547,"byte_end":11144656,"line_start":34,"line_end":34,"column_start":5,"column_end":114}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144661,"byte_end":11144724,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144729,"byte_end":11144732,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144737,"byte_end":11144751,"line_start":37,"line_end":37,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144756,"byte_end":11144759,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144764,"byte_end":11144771,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144776,"byte_end":11144823,"line_start":40,"line_end":40,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144828,"byte_end":11144831,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144836,"byte_end":11144884,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144889,"byte_end":11144909,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144914,"byte_end":11144917,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144922,"byte_end":11144942,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144947,"byte_end":11144970,"line_start":46,"line_end":46,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144975,"byte_end":11145010,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145015,"byte_end":11145018,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145023,"byte_end":11145057,"line_start":49,"line_end":49,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::map(guard, |f| &f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145062,"byte_end":11145116,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145121,"byte_end":11145124,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145129,"byte_end":11145155,"line_start":52,"line_end":52,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145160,"byte_end":11145167,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145172,"byte_end":11145179,"line_start":54,"line_end":54,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145184,"byte_end":11145193,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6610},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146903,"byte_end":11146910,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockReadGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockReadGuard, Self> where\nF: FnOnce(&T) -> Option<&U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockReadGuard`] for a component of the\n locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockReadGuard`] for a component of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145586,"byte_end":11145655,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145660,"byte_end":11145730,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145735,"byte_end":11145746,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145751,"byte_end":11145754,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockReadGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145759,"byte_end":11145832,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145837,"byte_end":11145857,"line_start":76,"line_end":76,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145862,"byte_end":11145865,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145870,"byte_end":11145929,"line_start":78,"line_end":78,"column_start":5,"column_end":64}},{"value":"/ `RwLockReadGuard::try_map(..)`. A method would interfere with methods of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11145934,"byte_end":11146014,"line_start":79,"line_end":79,"column_start":5,"column_end":85}},{"value":"/ same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146019,"byte_end":11146068,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146073,"byte_end":11146076,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockReadGuard::try_map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146081,"byte_end":11146157,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146162,"byte_end":11146188,"line_start":83,"line_end":83,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146193,"byte_end":11146196,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ [`RwLockReadGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockReadGuard.html#method.try_map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146201,"byte_end":11146318,"line_start":85,"line_end":85,"column_start":5,"column_end":122}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146323,"byte_end":11146386,"line_start":86,"line_end":86,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146391,"byte_end":11146394,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146399,"byte_end":11146413,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146418,"byte_end":11146421,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146426,"byte_end":11146433,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockReadGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146438,"byte_end":11146485,"line_start":91,"line_end":91,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146490,"byte_end":11146493,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146498,"byte_end":11146546,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146551,"byte_end":11146571,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146576,"byte_end":11146579,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146584,"byte_end":11146604,"line_start":96,"line_end":96,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146609,"byte_end":11146632,"line_start":97,"line_end":97,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146637,"byte_end":11146672,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146677,"byte_end":11146680,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let guard = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146685,"byte_end":11146719,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/ let guard = RwLockReadGuard::try_map(guard, |f| Some(&f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146724,"byte_end":11146814,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146819,"byte_end":11146822,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(1, *guard);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146827,"byte_end":11146853,"line_start":103,"line_end":103,"column_start":5,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146858,"byte_end":11146865,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146870,"byte_end":11146877,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11146882,"byte_end":11146891,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":6637},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148555,"byte_end":11148571,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"RwLockWriteGuard","qualname":"::sync::rwlock::write_guard::RwLockWriteGuard","value":"RwLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148281,"byte_end":11148357,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148358,"byte_end":11148370,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148371,"byte_end":11148374,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This structure is created by the [`write`] method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148375,"byte_end":11148428,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ on [`RwLock`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148429,"byte_end":11148447,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148448,"byte_end":11148451,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [`write`]: method@crate::sync::RwLock::write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148452,"byte_end":11148500,"line_start":15,"line_end":15,"column_start":1,"column_end":49}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148501,"byte_end":11148543,"line_start":16,"line_end":16,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":6647},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150114,"byte_end":11150117,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new [`RwLockMappedWriteGuard`] for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148797,"byte_end":11148874,"line_start":25,"line_end":25,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148879,"byte_end":11148882,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148887,"byte_end":11148961,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148966,"byte_end":11148986,"line_start":28,"line_end":28,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148991,"byte_end":11148994,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148999,"byte_end":11149058,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/ `RwLockWriteGuard::map(..)`. A method would interfere with methods of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149063,"byte_end":11149136,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/ the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149141,"byte_end":11149194,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149199,"byte_end":11149202,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149207,"byte_end":11149280,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149285,"byte_end":11149311,"line_start":35,"line_end":35,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149316,"byte_end":11149319,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149324,"byte_end":11149398,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149403,"byte_end":11149514,"line_start":38,"line_end":38,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149519,"byte_end":11149582,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149587,"byte_end":11149590,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149595,"byte_end":11149609,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149614,"byte_end":11149617,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149622,"byte_end":11149629,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149634,"byte_end":11149682,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149687,"byte_end":11149690,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149695,"byte_end":11149743,"line_start":46,"line_end":46,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149748,"byte_end":11149768,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149773,"byte_end":11149776,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149781,"byte_end":11149801,"line_start":49,"line_end":49,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149806,"byte_end":11149829,"line_start":50,"line_end":50,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149834,"byte_end":11149869,"line_start":51,"line_end":51,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149874,"byte_end":11149877,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149882,"byte_end":11149887,"line_start":53,"line_end":53,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149892,"byte_end":11149973,"line_start":54,"line_end":54,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11149978,"byte_end":11149998,"line_start":55,"line_end":55,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150003,"byte_end":11150008,"line_start":56,"line_end":56,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150013,"byte_end":11150016,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150021,"byte_end":11150064,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150069,"byte_end":11150076,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150081,"byte_end":11150088,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150093,"byte_end":11150102,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6650},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152097,"byte_end":11152104,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make  a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150607,"byte_end":11150680,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150685,"byte_end":11150759,"line_start":80,"line_end":80,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150764,"byte_end":11150775,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150780,"byte_end":11150783,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150788,"byte_end":11150862,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150867,"byte_end":11150887,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150892,"byte_end":11150895,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150900,"byte_end":11150951,"line_start":86,"line_end":86,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockWriteGuard::try_map(...)`. A method would interfere with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11150956,"byte_end":11151031,"line_start":87,"line_end":87,"column_start":5,"column_end":80}},{"value":"/ methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151036,"byte_end":11151100,"line_start":88,"line_end":88,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151105,"byte_end":11151108,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151113,"byte_end":11151186,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151191,"byte_end":11151221,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151226,"byte_end":11151229,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`RwLockMappedWriteGuard`]: struct@crate::sync::RwLockMappedWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151234,"byte_end":11151308,"line_start":93,"line_end":93,"column_start":5,"column_end":79}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151313,"byte_end":11151432,"line_start":94,"line_end":94,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151437,"byte_end":11151500,"line_start":95,"line_end":95,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151505,"byte_end":11151508,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151513,"byte_end":11151527,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151532,"byte_end":11151535,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151540,"byte_end":11151547,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151552,"byte_end":11151600,"line_start":100,"line_end":100,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151605,"byte_end":11151608,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151613,"byte_end":11151661,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151666,"byte_end":11151686,"line_start":103,"line_end":103,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151691,"byte_end":11151694,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151699,"byte_end":11151719,"line_start":105,"line_end":105,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151724,"byte_end":11151747,"line_start":106,"line_end":106,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151752,"byte_end":11151787,"line_start":107,"line_end":107,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151792,"byte_end":11151795,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151800,"byte_end":11151805,"line_start":109,"line_end":109,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151810,"byte_end":11151849,"line_start":110,"line_end":110,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151854,"byte_end":11151957,"line_start":111,"line_end":111,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151962,"byte_end":11151981,"line_start":112,"line_end":112,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151986,"byte_end":11151991,"line_start":113,"line_end":113,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11151996,"byte_end":11151999,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152004,"byte_end":11152047,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152052,"byte_end":11152059,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152064,"byte_end":11152071,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152076,"byte_end":11152085,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153029,"byte_end":11153040,"line_start":148,"line_end":148,"column_start":12,"column_end":23},"name":"into_mapped","qualname":"<RwLockWriteGuard>::into_mapped","value":"pub fn into_mapped(Self) -> RwLockMappedWriteGuard","parent":null,"children":[],"decl_id":null,"docs":" Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This\n method can be used to store a non-mapped guard in a struct field that\n expects a mapped guard.","sig":null,"attributes":[{"value":"/ Converts this `RwLockWriteGuard` into an `RwLockMappedWriteGuard`. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152731,"byte_end":11152806,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ method can be used to store a non-mapped guard in a struct field that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152811,"byte_end":11152884,"line_start":143,"line_end":143,"column_start":5,"column_end":78}},{"value":"/ expects a mapped guard.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152889,"byte_end":11152916,"line_start":144,"line_end":144,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152921,"byte_end":11152924,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to calling `RwLockWriteGuard::map(guard, |me| me)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11152929,"byte_end":11153003,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153008,"byte_end":11153017,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154319,"byte_end":11154328,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<RwLockWriteGuard>::downgrade","value":"pub fn downgrade(Self) -> RwLockReadGuard","parent":null,"children":[],"decl_id":null,"docs":" Atomically downgrades a write lock into a read lock without allowing\n any writers to take exclusive access of the lock in the meantime.","sig":null,"attributes":[{"value":"/ Atomically downgrades a write lock into a read lock without allowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153144,"byte_end":11153216,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ any writers to take exclusive access of the lock in the meantime.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153221,"byte_end":11153290,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153295,"byte_end":11153298,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ **Note:** This won't *necessarily* allow any additional readers to acquire","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153303,"byte_end":11153381,"line_start":155,"line_end":155,"column_start":5,"column_end":83}},{"value":"/ locks, since [`RwLock`] is fair and it is possible that a writer is next","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153386,"byte_end":11153462,"line_start":156,"line_end":156,"column_start":5,"column_end":81}},{"value":"/ in line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153467,"byte_end":11153479,"line_start":157,"line_end":157,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153484,"byte_end":11153487,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153492,"byte_end":11153566,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153571,"byte_end":11153588,"line_start":160,"line_end":160,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153593,"byte_end":11153596,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153601,"byte_end":11153615,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153620,"byte_end":11153623,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153628,"byte_end":11153635,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"/ # use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153640,"byte_end":11153670,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153675,"byte_end":11153700,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153705,"byte_end":11153710,"line_start":167,"line_end":167,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153715,"byte_end":11153735,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153740,"byte_end":11153763,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153768,"byte_end":11153808,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153813,"byte_end":11153816,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let n = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153821,"byte_end":11153852,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153857,"byte_end":11153860,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let cloned_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153865,"byte_end":11153900,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/ let handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153905,"byte_end":11153947,"line_start":175,"line_end":175,"column_start":5,"column_end":47}},{"value":"/     *cloned_lock.write().await = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153952,"byte_end":11153991,"line_start":176,"line_end":176,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11153996,"byte_end":11154003,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154008,"byte_end":11154011,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let n = n.downgrade();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154016,"byte_end":11154042,"line_start":179,"line_end":179,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*n, 1, \"downgrade is atomic\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154047,"byte_end":11154092,"line_start":180,"line_end":180,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154097,"byte_end":11154100,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154105,"byte_end":11154117,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/ handle.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154122,"byte_end":11154148,"line_start":183,"line_end":183,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*lock.read().await, 2, \"second writer obtained write lock\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154153,"byte_end":11154228,"line_start":184,"line_end":184,"column_start":5,"column_end":80}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154233,"byte_end":11154240,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154245,"byte_end":11154252,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154257,"byte_end":11154260,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ [`RwLock`]: struct@crate::sync::RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154265,"byte_end":11154307,"line_start":188,"line_end":188,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6681},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156121,"byte_end":11156143,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"RwLockMappedWriteGuard","qualname":"::sync::rwlock::write_guard_mapped::RwLockMappedWriteGuard","value":"RwLockMappedWriteGuard {  }","parent":null,"children":[{"krate":0,"index":6684},{"krate":0,"index":6685},{"krate":0,"index":6686},{"krate":0,"index":6687}],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.","sig":null,"attributes":[{"value":"/ RAII structure used to release the exclusive write access of a lock when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155685,"byte_end":11155761,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155762,"byte_end":11155774,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155775,"byte_end":11155778,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This structure is created by [mapping] an [`RwLockWriteGuard`]. It is a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155779,"byte_end":11155854,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ separate type from `RwLockWriteGuard` to disallow downgrading a mapped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155855,"byte_end":11155929,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ guard, since doing so can cause undefined behavior.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155930,"byte_end":11155985,"line_start":12,"line_end":12,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155986,"byte_end":11155989,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [mapping]: method@crate::sync::RwLockWriteGuard::map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11155990,"byte_end":11156046,"line_start":14,"line_end":14,"column_start":1,"column_end":57}},{"value":"/ [`RwLockWriteGuard`]: struct@crate::sync::RwLockWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156047,"byte_end":11156109,"line_start":15,"line_end":15,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6691},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157623,"byte_end":11157626,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"map","qualname":"<RwLockMappedWriteGuard>::map","value":"pub fn map<F, U: ?Sized>(Self, F) -> RwLockMappedWriteGuard where\nF: FnOnce(&mut T) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Make a new `RwLockMappedWriteGuard` for a component of the locked data.","sig":null,"attributes":[{"value":"/ Make a new `RwLockMappedWriteGuard` for a component of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156375,"byte_end":11156450,"line_start":24,"line_end":24,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156455,"byte_end":11156458,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156463,"byte_end":11156543,"line_start":26,"line_end":26,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156548,"byte_end":11156568,"line_start":27,"line_end":27,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156573,"byte_end":11156576,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be used as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156581,"byte_end":11156640,"line_start":29,"line_end":29,"column_start":5,"column_end":64}},{"value":"/ `RwLockMappedWriteGuard::map(..)`. A method would interfere with methods","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156645,"byte_end":11156721,"line_start":30,"line_end":30,"column_start":5,"column_end":81}},{"value":"/ of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156726,"byte_end":11156782,"line_start":31,"line_end":31,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156787,"byte_end":11156790,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::map`] from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156795,"byte_end":11156868,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156873,"byte_end":11156899,"line_start":34,"line_end":34,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156904,"byte_end":11156907,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156912,"byte_end":11157023,"line_start":36,"line_end":36,"column_start":5,"column_end":116}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157028,"byte_end":11157091,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157096,"byte_end":11157099,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157104,"byte_end":11157118,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157123,"byte_end":11157126,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157131,"byte_end":11157138,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157143,"byte_end":11157191,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157196,"byte_end":11157199,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157204,"byte_end":11157252,"line_start":44,"line_end":44,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157257,"byte_end":11157277,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157282,"byte_end":11157285,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157290,"byte_end":11157310,"line_start":47,"line_end":47,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157315,"byte_end":11157338,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157343,"byte_end":11157378,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157383,"byte_end":11157386,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157391,"byte_end":11157396,"line_start":51,"line_end":51,"column_start":5,"column_end":10}},{"value":"/     let mut mapped = RwLockWriteGuard::map(lock.write().await, |f| &mut f.0);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157401,"byte_end":11157482,"line_start":52,"line_end":52,"column_start":5,"column_end":86}},{"value":"/     *mapped = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157487,"byte_end":11157507,"line_start":53,"line_end":53,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157512,"byte_end":11157517,"line_start":54,"line_end":54,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157522,"byte_end":11157525,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157530,"byte_end":11157573,"line_start":56,"line_end":56,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157578,"byte_end":11157585,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157590,"byte_end":11157597,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11157602,"byte_end":11157611,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6694},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159538,"byte_end":11159545,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"try_map","qualname":"<RwLockMappedWriteGuard>::try_map","value":"pub fn try_map<F, U: ?Sized>(Self, F) -> Result<RwLockMappedWriteGuard, Self>\nwhere F: FnOnce(&mut T) -> Option<&mut U>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to make a new [`RwLockMappedWriteGuard`] for a component of\n the locked data. The original guard is returned if the closure returns\n `None`.","sig":null,"attributes":[{"value":"/ Attempts to make a new [`RwLockMappedWriteGuard`] for a component of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158116,"byte_end":11158188,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the locked data. The original guard is returned if the closure returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158193,"byte_end":11158267,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158272,"byte_end":11158283,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158288,"byte_end":11158291,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ This operation cannot fail as the `RwLockMappedWriteGuard` passed in already","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158296,"byte_end":11158376,"line_start":81,"line_end":81,"column_start":5,"column_end":85}},{"value":"/ locked the data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158381,"byte_end":11158401,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158406,"byte_end":11158409,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ This is an associated function that needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158414,"byte_end":11158465,"line_start":84,"line_end":84,"column_start":5,"column_end":56}},{"value":"/ used as `RwLockMappedWriteGuard::try_map(...)`. A method would interfere","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158470,"byte_end":11158546,"line_start":85,"line_end":85,"column_start":5,"column_end":81}},{"value":"/ with methods of the same name on the contents of the locked data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158551,"byte_end":11158620,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158625,"byte_end":11158628,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is an asynchronous version of [`RwLockWriteGuard::try_map`] from","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158633,"byte_end":11158706,"line_start":88,"line_end":88,"column_start":5,"column_end":78}},{"value":"/ the [`parking_lot` crate].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158711,"byte_end":11158741,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158746,"byte_end":11158749,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`RwLockWriteGuard::try_map`]: https://docs.rs/lock_api/latest/lock_api/struct.RwLockWriteGuard.html#method.try_map","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158754,"byte_end":11158873,"line_start":91,"line_end":91,"column_start":5,"column_end":124}},{"value":"/ [`parking_lot` crate]: https://crates.io/crates/parking_lot","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158878,"byte_end":11158941,"line_start":92,"line_end":92,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158946,"byte_end":11158949,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158954,"byte_end":11158968,"line_start":94,"line_end":94,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158973,"byte_end":11158976,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158981,"byte_end":11158988,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::{RwLock, RwLockWriteGuard};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11158993,"byte_end":11159041,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159046,"byte_end":11159049,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug, Clone, Copy, PartialEq, Eq)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159054,"byte_end":11159102,"line_start":99,"line_end":99,"column_start":5,"column_end":53}},{"value":"/ struct Foo(u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159107,"byte_end":11159127,"line_start":100,"line_end":100,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159132,"byte_end":11159135,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159140,"byte_end":11159160,"line_start":102,"line_end":102,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159165,"byte_end":11159188,"line_start":103,"line_end":103,"column_start":5,"column_end":28}},{"value":"/ let lock = RwLock::new(Foo(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159193,"byte_end":11159228,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159233,"byte_end":11159236,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159241,"byte_end":11159246,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/     let guard = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159251,"byte_end":11159290,"line_start":107,"line_end":107,"column_start":5,"column_end":44}},{"value":"/     let mut guard = RwLockWriteGuard::try_map(guard, |f| Some(&mut f.0)).expect(\"should not fail\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159295,"byte_end":11159398,"line_start":108,"line_end":108,"column_start":5,"column_end":108}},{"value":"/     *guard = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159403,"byte_end":11159422,"line_start":109,"line_end":109,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159427,"byte_end":11159432,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159437,"byte_end":11159440,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Foo(2), *lock.read().await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159445,"byte_end":11159488,"line_start":112,"line_end":112,"column_start":5,"column_end":48}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159493,"byte_end":11159500,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159505,"byte_end":11159512,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11159517,"byte_end":11159526,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":7187},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105640,"byte_end":11105646,"line_start":88,"line_end":88,"column_start":12,"column_end":18},"name":"RwLock","qualname":"::sync::rwlock::RwLock","value":"RwLock {  }","parent":null,"children":[{"krate":0,"index":7189},{"krate":0,"index":7190},{"krate":0,"index":7191}],"decl_id":null,"docs":" An asynchronous reader-writer lock.","sig":null,"attributes":[{"value":"/ An asynchronous reader-writer lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103109,"byte_end":11103148,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103149,"byte_end":11103152,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type of lock allows a number of readers or at most one writer at any","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103153,"byte_end":11103230,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ point in time. The write portion of this lock typically allows modification","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103231,"byte_end":11103310,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ of the underlying data (exclusive access) and the read portion of this lock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103311,"byte_end":11103390,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ typically allows for read-only access (shared access).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103391,"byte_end":11103449,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103450,"byte_end":11103453,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ In comparison, a [`Mutex`] does not distinguish between readers or writers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103454,"byte_end":11103532,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ that acquire the lock, therefore causing any tasks waiting for the lock to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103533,"byte_end":11103611,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ become available to yield. An `RwLock` will allow any number of readers to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103612,"byte_end":11103690,"line_start":37,"line_end":37,"column_start":1,"column_end":79}},{"value":"/ acquire the lock as long as a writer is not holding the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103691,"byte_end":11103756,"line_start":38,"line_end":38,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103757,"byte_end":11103760,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The priority policy of Tokio's read-write lock is _fair_ (or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103761,"byte_end":11103825,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [_write-preferring_]), in order to ensure that readers cannot starve","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103826,"byte_end":11103898,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/ writers. Fairness is ensured using a first-in, first-out queue for the tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103899,"byte_end":11103979,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/ awaiting the lock; if a task that wishes to acquire the write lock is at the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11103980,"byte_end":11104060,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ head of the queue, read locks will not be given out until the write lock has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104061,"byte_end":11104141,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ been released. This is in contrast to the Rust standard library's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104142,"byte_end":11104211,"line_start":45,"line_end":45,"column_start":1,"column_end":70}},{"value":"/ `std::sync::RwLock`, where the priority policy is dependent on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104212,"byte_end":11104282,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ operating system's implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104283,"byte_end":11104321,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104322,"byte_end":11104325,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The type parameter `T` represents the data that this lock protects. It is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104326,"byte_end":11104403,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ required that `T` satisfies [`Send`] to be shared across threads. The RAII guards","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104404,"byte_end":11104489,"line_start":50,"line_end":50,"column_start":1,"column_end":86}},{"value":"/ returned from the locking methods implement [`Deref`](trait@std::ops::Deref)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104490,"byte_end":11104570,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/ (and [`DerefMut`](trait@std::ops::DerefMut)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104571,"byte_end":11104618,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/ for the `write` methods) to allow access to the content of the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104619,"byte_end":11104691,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104692,"byte_end":11104695,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104696,"byte_end":11104710,"line_start":55,"line_end":55,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104711,"byte_end":11104714,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104715,"byte_end":11104722,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104723,"byte_end":11104751,"line_start":58,"line_end":58,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104752,"byte_end":11104755,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104756,"byte_end":11104774,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104775,"byte_end":11104796,"line_start":61,"line_end":61,"column_start":1,"column_end":22}},{"value":"/     let lock = RwLock::new(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104797,"byte_end":11104831,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104832,"byte_end":11104835,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/     // many reader locks can be held at once","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104836,"byte_end":11104884,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/     {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104885,"byte_end":11104894,"line_start":65,"line_end":65,"column_start":1,"column_end":10}},{"value":"/         let r1 = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104895,"byte_end":11104934,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/         let r2 = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104935,"byte_end":11104974,"line_start":67,"line_end":67,"column_start":1,"column_end":40}},{"value":"/         assert_eq!(*r1, 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11104975,"byte_end":11105006,"line_start":68,"line_end":68,"column_start":1,"column_end":32}},{"value":"/         assert_eq!(*r2, 5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105007,"byte_end":11105038,"line_start":69,"line_end":69,"column_start":1,"column_end":32}},{"value":"/     } // read locks are dropped at this point","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105039,"byte_end":11105088,"line_start":70,"line_end":70,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105089,"byte_end":11105092,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/     // only one write lock may be held, however","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105093,"byte_end":11105144,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/     {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105145,"byte_end":11105154,"line_start":73,"line_end":73,"column_start":1,"column_end":10}},{"value":"/         let mut w = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105155,"byte_end":11105198,"line_start":74,"line_end":74,"column_start":1,"column_end":44}},{"value":"/         *w += 1;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105199,"byte_end":11105219,"line_start":75,"line_end":75,"column_start":1,"column_end":21}},{"value":"/         assert_eq!(*w, 6);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105220,"byte_end":11105250,"line_start":76,"line_end":76,"column_start":1,"column_end":31}},{"value":"/     } // write lock is dropped here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105251,"byte_end":11105290,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105291,"byte_end":11105296,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105297,"byte_end":11105304,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105305,"byte_end":11105308,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: struct@super::Mutex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105309,"byte_end":11105343,"line_start":81,"line_end":81,"column_start":1,"column_end":35}},{"value":"/ [`RwLock`]: struct@RwLock","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105344,"byte_end":11105373,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ [`RwLockReadGuard`]: struct@RwLockReadGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105374,"byte_end":11105421,"line_start":83,"line_end":83,"column_start":1,"column_end":48}},{"value":"/ [`RwLockWriteGuard`]: struct@RwLockWriteGuard","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105422,"byte_end":11105471,"line_start":84,"line_end":84,"column_start":1,"column_end":50}},{"value":"/ [`Send`]: trait@std::marker::Send","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105472,"byte_end":11105509,"line_start":85,"line_end":85,"column_start":1,"column_end":38}},{"value":"/ [_write-preferring_]: https://en.wikipedia.org/wiki/Readers%E2%80%93writer_lock#Priority_policies","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11105510,"byte_end":11105611,"line_start":86,"line_end":86,"column_start":1,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":6757},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109662,"byte_end":11109665,"line_start":200,"line_end":200,"column_start":12,"column_end":15},"name":"new","qualname":"<RwLock<T>>::new","value":"pub fn new(T) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109452,"byte_end":11109515,"line_start":191,"line_end":191,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109520,"byte_end":11109523,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109528,"byte_end":11109542,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109547,"byte_end":11109550,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109555,"byte_end":11109562,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109567,"byte_end":11109595,"line_start":196,"line_end":196,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109600,"byte_end":11109603,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::new(5);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109608,"byte_end":11109638,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109643,"byte_end":11109650,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6758},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110263,"byte_end":11110279,"line_start":225,"line_end":225,"column_start":12,"column_end":28},"name":"with_max_readers","qualname":"<RwLock<T>>::with_max_readers","value":"pub fn with_max_readers(T, u32) -> RwLock<T> where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a new instance of an `RwLock<T>` which is unlocked\n and allows a maximum of `max_reads` concurrent readers.","sig":null,"attributes":[{"value":"/ Creates a new instance of an `RwLock<T>` which is unlocked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109878,"byte_end":11109940,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ and allows a maximum of `max_reads` concurrent readers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109945,"byte_end":11110004,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110009,"byte_end":11110012,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110017,"byte_end":11110031,"line_start":214,"line_end":214,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110036,"byte_end":11110039,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110044,"byte_end":11110051,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110056,"byte_end":11110084,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110089,"byte_end":11110092,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ let lock = RwLock::with_max_readers(5, 1024);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110097,"byte_end":11110146,"line_start":219,"line_end":219,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110151,"byte_end":11110158,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110163,"byte_end":11110166,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110171,"byte_end":11110183,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110188,"byte_end":11110191,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Panics if `max_reads` is more than `u32::MAX >> 3`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11110196,"byte_end":11110251,"line_start":224,"line_end":224,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":6759},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113456,"byte_end":11113460,"line_start":326,"line_end":326,"column_start":18,"column_end":22},"name":"read","qualname":"<RwLock<T>>::read","value":"pub async fn read<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11111986,"byte_end":11112059,"line_start":287,"line_end":287,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112064,"byte_end":11112110,"line_start":288,"line_end":288,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112115,"byte_end":11112118,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112123,"byte_end":11112196,"line_start":290,"line_end":290,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112201,"byte_end":11112276,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112281,"byte_end":11112284,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112289,"byte_end":11112362,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112367,"byte_end":11112436,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112441,"byte_end":11112515,"line_start":295,"line_end":295,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112520,"byte_end":11112593,"line_start":296,"line_end":296,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112598,"byte_end":11112622,"line_start":297,"line_end":297,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112627,"byte_end":11112630,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112635,"byte_end":11112709,"line_start":299,"line_end":299,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112714,"byte_end":11112731,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112736,"byte_end":11112739,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112744,"byte_end":11112758,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112763,"byte_end":11112766,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112771,"byte_end":11112778,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112783,"byte_end":11112806,"line_start":305,"line_end":305,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112811,"byte_end":11112839,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112844,"byte_end":11112847,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112852,"byte_end":11112870,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112875,"byte_end":11112896,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112901,"byte_end":11112945,"line_start":310,"line_end":310,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112950,"byte_end":11112984,"line_start":311,"line_end":311,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112989,"byte_end":11112992,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11112997,"byte_end":11113031,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113036,"byte_end":11113062,"line_start":314,"line_end":314,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113067,"byte_end":11113070,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113075,"byte_end":11113108,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113113,"byte_end":11113183,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113188,"byte_end":11113228,"line_start":318,"line_end":318,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113233,"byte_end":11113263,"line_start":319,"line_end":319,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113268,"byte_end":11113325,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113330,"byte_end":11113333,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113338,"byte_end":11113396,"line_start":322,"line_end":322,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113401,"byte_end":11113417,"line_start":323,"line_end":323,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113422,"byte_end":11113426,"line_start":324,"line_end":324,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113431,"byte_end":11113438,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6763},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115760,"byte_end":11115770,"line_start":384,"line_end":384,"column_start":18,"column_end":28},"name":"read_owned","qualname":"<RwLock<T>>::read_owned","value":"pub async fn read_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with shared read access, causing the current task\n to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with shared read access, causing the current task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113907,"byte_end":11113980,"line_start":339,"line_end":339,"column_start":5,"column_end":78}},{"value":"/ to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11113985,"byte_end":11114031,"line_start":340,"line_end":340,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114036,"byte_end":11114039,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield until there are no writers which hold the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114044,"byte_end":11114117,"line_start":342,"line_end":342,"column_start":5,"column_end":78}},{"value":"/ lock. There may be other readers inside the lock when the task resumes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114122,"byte_end":11114197,"line_start":343,"line_end":343,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114202,"byte_end":11114205,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::read`], except that the returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114210,"byte_end":11114284,"line_start":345,"line_end":345,"column_start":5,"column_end":79}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114289,"byte_end":11114363,"line_start":346,"line_end":346,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114368,"byte_end":11114440,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114445,"byte_end":11114520,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114525,"byte_end":11114568,"line_start":349,"line_end":349,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114573,"byte_end":11114576,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Note that under the priority policy of [`RwLock`], read locks are not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114581,"byte_end":11114654,"line_start":351,"line_end":351,"column_start":5,"column_end":78}},{"value":"/ granted until prior write locks, to prevent starvation. Therefore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114659,"byte_end":11114728,"line_start":352,"line_end":352,"column_start":5,"column_end":74}},{"value":"/ deadlock may occur if a read lock is held by the current task, a write","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114733,"byte_end":11114807,"line_start":353,"line_end":353,"column_start":5,"column_end":79}},{"value":"/ lock attempt is made, and then a subsequent read lock attempt is made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114812,"byte_end":11114885,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ by the current task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114890,"byte_end":11114914,"line_start":355,"line_end":355,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114919,"byte_end":11114922,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop this read access of the `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11114927,"byte_end":11115001,"line_start":357,"line_end":357,"column_start":5,"column_end":79}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115006,"byte_end":11115023,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115028,"byte_end":11115031,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115036,"byte_end":11115050,"line_start":360,"line_end":360,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115055,"byte_end":11115058,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115063,"byte_end":11115070,"line_start":362,"line_end":362,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115075,"byte_end":11115098,"line_start":363,"line_end":363,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115103,"byte_end":11115131,"line_start":364,"line_end":364,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115136,"byte_end":11115139,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115144,"byte_end":11115162,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115167,"byte_end":11115188,"line_start":367,"line_end":367,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115193,"byte_end":11115237,"line_start":368,"line_end":368,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115242,"byte_end":11115276,"line_start":369,"line_end":369,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115281,"byte_end":11115284,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/     let n = lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115289,"byte_end":11115329,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/     assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115334,"byte_end":11115360,"line_start":372,"line_end":372,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115365,"byte_end":11115368,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115373,"byte_end":11115406,"line_start":374,"line_end":374,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115411,"byte_end":11115481,"line_start":375,"line_end":375,"column_start":5,"column_end":75}},{"value":"/         let r = c_lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115486,"byte_end":11115532,"line_start":376,"line_end":376,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*r, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115537,"byte_end":11115567,"line_start":377,"line_end":377,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115572,"byte_end":11115629,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115634,"byte_end":11115637,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard after the spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115642,"byte_end":11115700,"line_start":380,"line_end":380,"column_start":5,"column_end":63}},{"value":"/     drop(n);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115705,"byte_end":11115721,"line_start":381,"line_end":381,"column_start":5,"column_end":21}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115726,"byte_end":11115730,"line_start":382,"line_end":382,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11115735,"byte_end":11115742,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6767},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117259,"byte_end":11117267,"line_start":429,"line_end":429,"column_start":12,"column_end":20},"name":"try_read","qualname":"<RwLock<T>>::try_read","value":"pub fn try_read(&Self) -> Result<RwLockReadGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116240,"byte_end":11116302,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116307,"byte_end":11116310,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116315,"byte_end":11116392,"line_start":399,"line_end":399,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116397,"byte_end":11116468,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116473,"byte_end":11116490,"line_start":401,"line_end":401,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116495,"byte_end":11116498,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116503,"byte_end":11116537,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116542,"byte_end":11116545,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116550,"byte_end":11116564,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116569,"byte_end":11116572,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116577,"byte_end":11116584,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116589,"byte_end":11116612,"line_start":408,"line_end":408,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116617,"byte_end":11116645,"line_start":409,"line_end":409,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116650,"byte_end":11116653,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116658,"byte_end":11116676,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116681,"byte_end":11116702,"line_start":412,"line_end":412,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116707,"byte_end":11116751,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116756,"byte_end":11116790,"line_start":414,"line_end":414,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116795,"byte_end":11116798,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116803,"byte_end":11116844,"line_start":416,"line_end":416,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116849,"byte_end":11116875,"line_start":417,"line_end":417,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116880,"byte_end":11116883,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116888,"byte_end":11116921,"line_start":419,"line_end":419,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11116926,"byte_end":11116996,"line_start":420,"line_end":420,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117001,"byte_end":11117041,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117046,"byte_end":11117076,"line_start":422,"line_end":422,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117081,"byte_end":11117138,"line_start":423,"line_end":423,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117143,"byte_end":11117146,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117151,"byte_end":11117204,"line_start":425,"line_end":425,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117209,"byte_end":11117225,"line_start":426,"line_end":426,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117230,"byte_end":11117235,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117240,"byte_end":11117247,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6768},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119099,"byte_end":11119113,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"try_read_owned","qualname":"<RwLock<T>>::try_read_owned","value":"pub fn try_read_owned(Arc<Self>)\n-> Result<OwnedRwLockReadGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with shared read access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117693,"byte_end":11117755,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117760,"byte_end":11117763,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117768,"byte_end":11117845,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release read access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117850,"byte_end":11117921,"line_start":446,"line_end":446,"column_start":5,"column_end":76}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117926,"byte_end":11117943,"line_start":447,"line_end":447,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117948,"byte_end":11117951,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_read`], except that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11117956,"byte_end":11118025,"line_start":449,"line_end":449,"column_start":5,"column_end":74}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118030,"byte_end":11118103,"line_start":450,"line_end":450,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118108,"byte_end":11118180,"line_start":451,"line_end":451,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118185,"byte_end":11118258,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118263,"byte_end":11118318,"line_start":453,"line_end":453,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118323,"byte_end":11118326,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118331,"byte_end":11118365,"line_start":455,"line_end":455,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118370,"byte_end":11118373,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118378,"byte_end":11118392,"line_start":457,"line_end":457,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118397,"byte_end":11118400,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118405,"byte_end":11118412,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118417,"byte_end":11118440,"line_start":460,"line_end":460,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118445,"byte_end":11118473,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118478,"byte_end":11118481,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118486,"byte_end":11118504,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118509,"byte_end":11118530,"line_start":464,"line_end":464,"column_start":5,"column_end":26}},{"value":"/     let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118535,"byte_end":11118579,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"/     let c_lock = lock.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118584,"byte_end":11118618,"line_start":466,"line_end":466,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118623,"byte_end":11118626,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/     let v = lock.try_read_owned().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118631,"byte_end":11118678,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118683,"byte_end":11118709,"line_start":469,"line_end":469,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118714,"byte_end":11118717,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118722,"byte_end":11118755,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/         // While main has an active read lock, we acquire one too.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118760,"byte_end":11118830,"line_start":472,"line_end":472,"column_start":5,"column_end":75}},{"value":"/         let n = c_lock.read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118835,"byte_end":11118881,"line_start":473,"line_end":473,"column_start":5,"column_end":51}},{"value":"/         assert_eq!(*n, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118886,"byte_end":11118916,"line_start":474,"line_end":474,"column_start":5,"column_end":35}},{"value":"/     }).await.expect(\"The spawned task has panicked\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118921,"byte_end":11118978,"line_start":475,"line_end":475,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118983,"byte_end":11118986,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/     // Drop the guard when spawned task finishes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11118991,"byte_end":11119044,"line_start":477,"line_end":477,"column_start":5,"column_end":58}},{"value":"/     drop(v);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119049,"byte_end":11119065,"line_start":478,"line_end":478,"column_start":5,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119070,"byte_end":11119075,"line_start":479,"line_end":479,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119080,"byte_end":11119087,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6769},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120199,"byte_end":11120204,"line_start":517,"line_end":517,"column_start":18,"column_end":23},"name":"write","qualname":"<RwLock<T>>::write","value":"pub async fn write<'_, '_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119562,"byte_end":11119634,"line_start":495,"line_end":495,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119639,"byte_end":11119690,"line_start":496,"line_end":496,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119695,"byte_end":11119698,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119703,"byte_end":11119775,"line_start":498,"line_end":498,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119780,"byte_end":11119808,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119813,"byte_end":11119816,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119821,"byte_end":11119896,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119901,"byte_end":11119918,"line_start":502,"line_end":502,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119923,"byte_end":11119926,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119931,"byte_end":11119945,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119950,"byte_end":11119953,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119958,"byte_end":11119965,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11119970,"byte_end":11119998,"line_start":507,"line_end":507,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120003,"byte_end":11120006,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120011,"byte_end":11120029,"line_start":509,"line_end":509,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120034,"byte_end":11120055,"line_start":510,"line_end":510,"column_start":5,"column_end":26}},{"value":"/   let lock = RwLock::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120060,"byte_end":11120092,"line_start":511,"line_end":511,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120097,"byte_end":11120100,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120105,"byte_end":11120142,"line_start":513,"line_end":513,"column_start":5,"column_end":42}},{"value":"/   *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120147,"byte_end":11120160,"line_start":514,"line_end":514,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120165,"byte_end":11120169,"line_start":515,"line_end":515,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120174,"byte_end":11120181,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6773},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121751,"byte_end":11121762,"line_start":560,"line_end":560,"column_start":18,"column_end":29},"name":"write_owned","qualname":"<RwLock<T>>::write_owned","value":"pub async fn write_owned(Arc<Self>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Locks this `RwLock` with exclusive write access, causing the current\n task to yield until the lock has been acquired.","sig":null,"attributes":[{"value":"/ Locks this `RwLock` with exclusive write access, causing the current","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120698,"byte_end":11120770,"line_start":531,"line_end":531,"column_start":5,"column_end":77}},{"value":"/ task to yield until the lock has been acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120775,"byte_end":11120826,"line_start":532,"line_end":532,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120831,"byte_end":11120834,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ The calling task will yield while other writers or readers currently","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120839,"byte_end":11120911,"line_start":534,"line_end":534,"column_start":5,"column_end":77}},{"value":"/ have access to the lock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120916,"byte_end":11120944,"line_start":535,"line_end":535,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120949,"byte_end":11120952,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::write`], except that the returned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11120957,"byte_end":11121032,"line_start":537,"line_end":537,"column_start":5,"column_end":80}},{"value":"/ guard references the `RwLock` with an [`Arc`] rather than by borrowing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121037,"byte_end":11121111,"line_start":538,"line_end":538,"column_start":5,"column_end":79}},{"value":"/ it. Therefore, the `RwLock` must be wrapped in an `Arc` to call this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121116,"byte_end":11121188,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/ method, and the guard will live for the `'static` lifetime, as it keeps","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121193,"byte_end":11121268,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121273,"byte_end":11121316,"line_start":541,"line_end":541,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121321,"byte_end":11121324,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns an RAII guard which will drop the write access of this `RwLock`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121329,"byte_end":11121404,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121409,"byte_end":11121426,"line_start":544,"line_end":544,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121431,"byte_end":11121434,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121439,"byte_end":11121453,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121458,"byte_end":11121461,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121466,"byte_end":11121473,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121478,"byte_end":11121501,"line_start":549,"line_end":549,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121506,"byte_end":11121534,"line_start":550,"line_end":550,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121539,"byte_end":11121542,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121547,"byte_end":11121565,"line_start":552,"line_end":552,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121570,"byte_end":11121591,"line_start":553,"line_end":553,"column_start":5,"column_end":26}},{"value":"/   let lock = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121596,"byte_end":11121638,"line_start":554,"line_end":554,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121643,"byte_end":11121646,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/   let mut n = lock.write_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121651,"byte_end":11121694,"line_start":556,"line_end":556,"column_start":5,"column_end":48}},{"value":"/   *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121699,"byte_end":11121712,"line_start":557,"line_end":557,"column_start":5,"column_end":18}},{"value":"/}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121717,"byte_end":11121721,"line_start":558,"line_end":558,"column_start":5,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11121726,"byte_end":11121733,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6777},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122919,"byte_end":11122928,"line_start":597,"line_end":597,"column_start":12,"column_end":21},"name":"try_write","qualname":"<RwLock<T>>::try_write","value":"pub fn try_write(&Self) -> Result<RwLockWriteGuard<, T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122279,"byte_end":11122345,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122350,"byte_end":11122353,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122358,"byte_end":11122435,"line_start":576,"line_end":576,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122440,"byte_end":11122512,"line_start":577,"line_end":577,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122517,"byte_end":11122534,"line_start":578,"line_end":578,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122539,"byte_end":11122542,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122547,"byte_end":11122581,"line_start":580,"line_end":580,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122586,"byte_end":11122589,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122594,"byte_end":11122608,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122613,"byte_end":11122616,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122621,"byte_end":11122628,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122633,"byte_end":11122661,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122666,"byte_end":11122669,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122674,"byte_end":11122692,"line_start":587,"line_end":587,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122697,"byte_end":11122718,"line_start":588,"line_end":588,"column_start":5,"column_end":26}},{"value":"/     let rw = RwLock::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122723,"byte_end":11122755,"line_start":589,"line_end":589,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122760,"byte_end":11122763,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/     let v = rw.read().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122768,"byte_end":11122800,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122805,"byte_end":11122831,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122836,"byte_end":11122839,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122844,"byte_end":11122885,"line_start":594,"line_end":594,"column_start":5,"column_end":46}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122890,"byte_end":11122895,"line_start":595,"line_end":595,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11122900,"byte_end":11122907,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6778},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124480,"byte_end":11124495,"line_start":642,"line_end":642,"column_start":12,"column_end":27},"name":"try_write_owned","qualname":"<RwLock<T>>::try_write_owned","value":"pub fn try_write_owned(Arc<Self>)\n-> Result<OwnedRwLockWriteGuard<T>, TryLockError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this `RwLock` with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this `RwLock` with exclusive write access.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123401,"byte_end":11123467,"line_start":612,"line_end":612,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123472,"byte_end":11123475,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ If the access couldn't be acquired immediately, returns [`TryLockError`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123480,"byte_end":11123557,"line_start":614,"line_end":614,"column_start":5,"column_end":82}},{"value":"/ Otherwise, an RAII guard is returned which will release write access","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123562,"byte_end":11123634,"line_start":615,"line_end":615,"column_start":5,"column_end":77}},{"value":"/ when dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123639,"byte_end":11123656,"line_start":616,"line_end":616,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123661,"byte_end":11123664,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ This method is identical to [`RwLock::try_write`], except that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123669,"byte_end":11123739,"line_start":618,"line_end":618,"column_start":5,"column_end":75}},{"value":"/ returned guard references the `RwLock` with an [`Arc`] rather than by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123744,"byte_end":11123817,"line_start":619,"line_end":619,"column_start":5,"column_end":78}},{"value":"/ borrowing it. Therefore, the `RwLock` must be wrapped in an `Arc` to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123822,"byte_end":11123894,"line_start":620,"line_end":620,"column_start":5,"column_end":77}},{"value":"/ call this method, and the guard will live for the `'static` lifetime,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123899,"byte_end":11123972,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ as it keeps the `RwLock` alive by holding an `Arc`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11123977,"byte_end":11124032,"line_start":622,"line_end":622,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124037,"byte_end":11124040,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ [`TryLockError`]: TryLockError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124045,"byte_end":11124079,"line_start":624,"line_end":624,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124084,"byte_end":11124087,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124092,"byte_end":11124106,"line_start":626,"line_end":626,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124111,"byte_end":11124114,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124119,"byte_end":11124126,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124131,"byte_end":11124154,"line_start":629,"line_end":629,"column_start":5,"column_end":28}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124159,"byte_end":11124187,"line_start":630,"line_end":630,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124192,"byte_end":11124195,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124200,"byte_end":11124218,"line_start":632,"line_end":632,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124223,"byte_end":11124244,"line_start":633,"line_end":633,"column_start":5,"column_end":26}},{"value":"/     let rw = Arc::new(RwLock::new(1));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124249,"byte_end":11124291,"line_start":634,"line_end":634,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124296,"byte_end":11124299,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/     let v = Arc::clone(&rw).read_owned().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124304,"byte_end":11124355,"line_start":636,"line_end":636,"column_start":5,"column_end":56}},{"value":"/     assert_eq!(*v, 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124360,"byte_end":11124386,"line_start":637,"line_end":637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124391,"byte_end":11124394,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/     assert!(rw.try_write_owned().is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124399,"byte_end":11124446,"line_start":639,"line_end":639,"column_start":5,"column_end":52}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124451,"byte_end":11124456,"line_start":640,"line_end":640,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124461,"byte_end":11124468,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6779},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125463,"byte_end":11125470,"line_start":674,"line_end":674,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<RwLock<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11124991,"byte_end":11125046,"line_start":657,"line_end":657,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125051,"byte_end":11125054,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `RwLock` mutably, no actual locking needs to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125059,"byte_end":11125135,"line_start":659,"line_end":659,"column_start":5,"column_end":81}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125140,"byte_end":11125214,"line_start":660,"line_end":660,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125219,"byte_end":11125222,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125227,"byte_end":11125241,"line_start":662,"line_end":662,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125246,"byte_end":11125249,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125254,"byte_end":11125261,"line_start":664,"line_end":664,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::RwLock;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125266,"byte_end":11125294,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125299,"byte_end":11125302,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125307,"byte_end":11125322,"line_start":667,"line_end":667,"column_start":5,"column_end":20}},{"value":"/     let mut lock = RwLock::new(1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125327,"byte_end":11125365,"line_start":668,"line_end":668,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125370,"byte_end":11125373,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/     let n = lock.get_mut();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125378,"byte_end":11125409,"line_start":670,"line_end":670,"column_start":5,"column_end":36}},{"value":"/     *n = 2;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125414,"byte_end":11125429,"line_start":671,"line_end":671,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125434,"byte_end":11125439,"line_start":672,"line_end":672,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125444,"byte_end":11125451,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6780},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125704,"byte_end":11125714,"line_start":682,"line_end":682,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<RwLock<T>>::into_inner","value":"pub fn into_inner(Self) -> T where T: Sized","parent":null,"children":[],"decl_id":null,"docs":" Consumes the lock, returning the underlying data.\n","sig":null,"attributes":[{"value":"/ Consumes the lock, returning the underlying data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125639,"byte_end":11125692,"line_start":681,"line_end":681,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6852},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174790,"byte_end":11174798,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"OnceCell","qualname":"::sync::once_cell::OnceCell","value":"OnceCell {  }","parent":null,"children":[{"krate":0,"index":6854},{"krate":0,"index":6855},{"krate":0,"index":6856}],"decl_id":null,"docs":" A thread-safe cell which can be written to only once.","sig":null,"attributes":[{"value":"/ A thread-safe cell which can be written to only once.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174112,"byte_end":11174169,"line_start":11,"line_end":11,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174170,"byte_end":11174173,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Provides the functionality to either set the value, in case `OnceCell`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174174,"byte_end":11174248,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/ is uninitialized, or get the already initialized value by using an async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174249,"byte_end":11174325,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ function via [`OnceCell::get_or_init`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174326,"byte_end":11174369,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174370,"byte_end":11174373,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174374,"byte_end":11174439,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174440,"byte_end":11174443,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174444,"byte_end":11174458,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174459,"byte_end":11174466,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::OnceCell;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174467,"byte_end":11174497,"line_start":21,"line_end":21,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174498,"byte_end":11174501,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ async fn some_computation() -> u32 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174502,"byte_end":11174542,"line_start":23,"line_end":23,"column_start":1,"column_end":41}},{"value":"/     1 + 1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174543,"byte_end":11174556,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174557,"byte_end":11174562,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174563,"byte_end":11174566,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ static ONCE: OnceCell<u32> = OnceCell::const_new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174567,"byte_end":11174622,"line_start":27,"line_end":27,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174623,"byte_end":11174626,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174627,"byte_end":11174645,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174646,"byte_end":11174667,"line_start":30,"line_end":30,"column_start":1,"column_end":22}},{"value":"/     let result1 = ONCE.get_or_init(some_computation).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174668,"byte_end":11174731,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/     assert_eq!(*result1, 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174732,"byte_end":11174764,"line_start":32,"line_end":32,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174765,"byte_end":11174770,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174771,"byte_end":11174778,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":6877},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175870,"byte_end":11175873,"line_start":82,"line_end":82,"column_start":12,"column_end":15},"name":"new","qualname":"<OnceCell<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized OnceCell instance.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized OnceCell instance.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175808,"byte_end":11175858,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6878},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11176284,"byte_end":11176292,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"new_with","qualname":"<OnceCell<T>>::new_with","value":"pub fn new_with(Option<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new initialized OnceCell instance if `value` is `Some`, otherwise\n has the same functionality as [`OnceCell::new`].","sig":null,"attributes":[{"value":"/ Creates a new initialized OnceCell instance if `value` is `Some`, otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11176074,"byte_end":11176153,"line_start":90,"line_end":90,"column_start":5,"column_end":84}},{"value":"/ has the same functionality as [`OnceCell::new`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11176158,"byte_end":11176210,"line_start":91,"line_end":91,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11176215,"byte_end":11176218,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::new`]: crate::sync::OnceCell::new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11176223,"byte_end":11176272,"line_start":93,"line_end":93,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6879},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11177144,"byte_end":11177155,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"initialized","qualname":"<OnceCell<T>>::initialized","value":"pub fn initialized(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value of the OnceCell is set or not.\n","sig":null,"attributes":[{"value":"/ Whether the value of the OnceCell is set or not.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11177080,"byte_end":11177132,"line_start":119,"line_end":119,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6886},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178097,"byte_end":11178100,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"get","qualname":"<OnceCell<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to get a reference to the value of the OnceCell.","sig":null,"attributes":[{"value":"/ Tries to get a reference to the value of the OnceCell.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11177933,"byte_end":11177991,"line_start":143,"line_end":143,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11177996,"byte_end":11177999,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Returns None if the value of the OnceCell hasn't previously been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178004,"byte_end":11178085,"line_start":145,"line_end":145,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":6887},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178415,"byte_end":11178422,"line_start":157,"line_end":157,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OnceCell<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to return a mutable reference to the value of the cell.","sig":null,"attributes":[{"value":"/ Tries to return a mutable reference to the value of the cell.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178261,"byte_end":11178326,"line_start":154,"line_end":154,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178331,"byte_end":11178334,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns None if the cell hasn't previously been initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178339,"byte_end":11178403,"line_start":156,"line_end":156,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":6888},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11179309,"byte_end":11179312,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"set","qualname":"<OnceCell<T>>::set","value":"pub fn set(&Self, T) -> Result<(), SetError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the OnceCell to the argument value.","sig":null,"attributes":[{"value":"/ Sets the value of the OnceCell to the argument value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178595,"byte_end":11178652,"line_start":165,"line_end":165,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178657,"byte_end":11178660,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the value of the OnceCell was already set prior to this call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178665,"byte_end":11178732,"line_start":167,"line_end":167,"column_start":5,"column_end":72}},{"value":"/ then [`SetError::AlreadyInitializedError`] is returned. If another thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178737,"byte_end":11178814,"line_start":168,"line_end":168,"column_start":5,"column_end":82}},{"value":"/ is initializing the cell while this method is called,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178819,"byte_end":11178876,"line_start":169,"line_end":169,"column_start":5,"column_end":62}},{"value":"/ [`SetError::InitializingError`] is returned. In order to wait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178881,"byte_end":11178946,"line_start":170,"line_end":170,"column_start":5,"column_end":70}},{"value":"/ for an ongoing initialization to finish, call","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11178951,"byte_end":11179000,"line_start":171,"line_end":171,"column_start":5,"column_end":54}},{"value":"/ [`OnceCell::get_or_init`] instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11179005,"byte_end":11179043,"line_start":172,"line_end":172,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11179048,"byte_end":11179051,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ [`SetError::AlreadyInitializedError`]: crate::sync::SetError::AlreadyInitializedError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11179056,"byte_end":11179145,"line_start":174,"line_end":174,"column_start":5,"column_end":94}},{"value":"/ [`SetError::InitializingError`]: crate::sync::SetError::InitializingError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11179150,"byte_end":11179227,"line_start":175,"line_end":175,"column_start":5,"column_end":82}},{"value":"/ ['OnceCell::get_or_init`]: crate::sync::OnceCell::get_or_init","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11179232,"byte_end":11179297,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6889},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180990,"byte_end":11181001,"line_start":214,"line_end":214,"column_start":18,"column_end":29},"name":"get_or_init","qualname":"<OnceCell<T>>::get_or_init","value":"pub async fn get_or_init<F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/ where\nF: FnOnce() -> Fut, Fut: Future<Output = T>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180494,"byte_end":11180573,"line_start":207,"line_end":207,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180578,"byte_end":11180654,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180659,"byte_end":11180734,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180739,"byte_end":11180813,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180818,"byte_end":11180893,"line_start":211,"line_end":211,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180898,"byte_end":11180901,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11180906,"byte_end":11180972,"line_start":213,"line_end":213,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6894},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183881,"byte_end":11183896,"line_start":270,"line_end":270,"column_start":18,"column_end":33},"name":"get_or_try_init","qualname":"<OnceCell<T>>::get_or_try_init","value":"pub async fn get_or_try_init<E, F, Fut, '_, '_>(&'_ Self, F) -> /*impl Trait*/\nwhere F: FnOnce() -> Fut, Fut: Future<Output = Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Tries to initialize the value of the OnceCell using the async function `f`.\n If the value of the OnceCell was already initialized prior to this call,\n a reference to that initialized value is returned. If some other thread\n initiated the initialization prior to this call and the initialization\n hasn't completed, this call waits until the initialization is finished.\n If the function argument `f` returns an error, `get_or_try_init`\n returns that error, otherwise the result of `f` will be stored in the cell.","sig":null,"attributes":[{"value":"/ Tries to initialize the value of the OnceCell using the async function `f`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183228,"byte_end":11183307,"line_start":261,"line_end":261,"column_start":5,"column_end":84}},{"value":"/ If the value of the OnceCell was already initialized prior to this call,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183312,"byte_end":11183388,"line_start":262,"line_end":262,"column_start":5,"column_end":81}},{"value":"/ a reference to that initialized value is returned. If some other thread","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183393,"byte_end":11183468,"line_start":263,"line_end":263,"column_start":5,"column_end":80}},{"value":"/ initiated the initialization prior to this call and the initialization","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183473,"byte_end":11183547,"line_start":264,"line_end":264,"column_start":5,"column_end":79}},{"value":"/ hasn't completed, this call waits until the initialization is finished.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183552,"byte_end":11183627,"line_start":265,"line_end":265,"column_start":5,"column_end":80}},{"value":"/ If the function argument `f` returns an error, `get_or_try_init`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183632,"byte_end":11183700,"line_start":266,"line_end":266,"column_start":5,"column_end":73}},{"value":"/ returns that error, otherwise the result of `f` will be stored in the cell.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183705,"byte_end":11183784,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183789,"byte_end":11183792,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This will deadlock if `f` tries to initialize the cell itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11183797,"byte_end":11183863,"line_start":269,"line_end":269,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":6900},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186540,"byte_end":11186550,"line_start":325,"line_end":325,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<OnceCell<T>>::into_inner","value":"pub fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Moves the value out of the cell, destroying the cell in the process.","sig":null,"attributes":[{"value":"/ Moves the value out of the cell, destroying the cell in the process.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186395,"byte_end":11186467,"line_start":322,"line_end":322,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186472,"byte_end":11186475,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186480,"byte_end":11186528,"line_start":324,"line_end":324,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6902},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187023,"byte_end":11187027,"line_start":338,"line_end":338,"column_start":12,"column_end":16},"name":"take","qualname":"<OnceCell<T>>::take","value":"pub fn take(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the current value, leaving the cell uninitialized.","sig":null,"attributes":[{"value":"/ Takes ownership of the current value, leaving the cell uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186877,"byte_end":11186950,"line_start":335,"line_end":335,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186955,"byte_end":11186958,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the cell is uninitialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11186963,"byte_end":11187011,"line_start":337,"line_end":337,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7197},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188051,"byte_end":11188074,"line_start":364,"line_end":364,"column_start":5,"column_end":28},"name":"AlreadyInitializedError","qualname":"::sync::once_cell::SetError::AlreadyInitializedError","value":"SetError::AlreadyInitializedError(T)","parent":{"krate":0,"index":7195},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187896,"byte_end":11187984,"line_start":361,"line_end":361,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187989,"byte_end":11187992,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187997,"byte_end":11188046,"line_start":363,"line_end":363,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7200},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188286,"byte_end":11188303,"line_start":370,"line_end":370,"column_start":5,"column_end":22},"name":"InitializingError","qualname":"::sync::once_cell::SetError::InitializingError","value":"SetError::InitializingError(T)","parent":{"krate":0,"index":7195},"children":[],"decl_id":null,"docs":" Error resulting from [`OnceCell::set`] calls when the cell is currently being\n inintialized during the calls to that method.","sig":null,"attributes":[{"value":"/ Error resulting from [`OnceCell::set`] calls when the cell is currently being","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188084,"byte_end":11188165,"line_start":366,"line_end":366,"column_start":5,"column_end":86}},{"value":"/ inintialized during the calls to that method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188170,"byte_end":11188219,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188224,"byte_end":11188227,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188232,"byte_end":11188281,"line_start":369,"line_end":369,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":7195},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187878,"byte_end":11187886,"line_start":360,"line_end":360,"column_start":10,"column_end":18},"name":"SetError","qualname":"::sync::once_cell::SetError","value":"pub enum SetError<T> {\n\n    /// Error resulting from [`OnceCell::set`] calls if the cell was previously initialized.\n    ///\n    /// [`OnceCell::set`]: crate::sync::OnceCell::set\n    AlreadyInitializedError(T),\n\n    /// Error resulting from [`OnceCell::set`] calls when the cell is currently being\n    /// inintialized during the calls to that method.\n    ///\n    /// [`OnceCell::set`]: crate::sync::OnceCell::set\n    InitializingError(T),\n}","parent":null,"children":[{"krate":0,"index":7197},{"krate":0,"index":7200}],"decl_id":null,"docs":" Errors that can be returned from [`OnceCell::set`]","sig":null,"attributes":[{"value":"/ Errors that can be returned from [`OnceCell::set`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187732,"byte_end":11187786,"line_start":356,"line_end":356,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187787,"byte_end":11187790,"line_start":357,"line_end":357,"column_start":1,"column_end":4}},{"value":"/ [`OnceCell::set`]: crate::sync::OnceCell::set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187791,"byte_end":11187840,"line_start":358,"line_end":358,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6914},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188767,"byte_end":11188786,"line_start":386,"line_end":386,"column_start":12,"column_end":31},"name":"is_already_init_err","qualname":"<SetError<T>>::is_already_init_err","value":"pub fn is_already_init_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::AlreadyInitializedError`.\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::AlreadyInitializedError`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188693,"byte_end":11188755,"line_start":385,"line_end":385,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":6915},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11189024,"byte_end":11189043,"line_start":394,"line_end":394,"column_start":12,"column_end":31},"name":"is_initializing_err","qualname":"<SetError<T>>::is_initializing_err","value":"pub fn is_initializing_err(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether `SetError` is `SetError::InitializingError`\n","sig":null,"attributes":[{"value":"/ Whether `SetError` is `SetError::InitializingError`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188957,"byte_end":11189012,"line_start":393,"line_end":393,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":6919},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"watch","qualname":"::sync::watch","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922},{"krate":0,"index":6923},{"krate":0,"index":14307},{"krate":0,"index":6924},{"krate":0,"index":14309},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6927},{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":7212},{"krate":0,"index":7216},{"krate":0,"index":7219},{"krate":0,"index":7222},{"krate":0,"index":7225},{"krate":0,"index":7229},{"krate":0,"index":7233},{"krate":0,"index":7240},{"krate":0,"index":6930},{"krate":0,"index":6940},{"krate":0,"index":6941},{"krate":0,"index":6943},{"krate":0,"index":6950},{"krate":0,"index":6952},{"krate":0,"index":6955},{"krate":0,"index":6958},{"krate":0,"index":6966},{"krate":0,"index":6969}],"decl_id":null,"docs":" A single-producer, multi-consumer channel that only retains the *last* sent\n value.","sig":null,"attributes":[{"value":"cfg(feature = \"sync\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23025,"byte_end":23049,"line_start":247,"line_end":247,"column_start":13,"column_end":37}},{"value":"/ A single-producer, multi-consumer channel that only retains the *last* sent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189284,"byte_end":11189363,"line_start":3,"line_end":3,"column_start":1,"column_end":80}},{"value":"/ value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189364,"byte_end":11189374,"line_start":4,"line_end":4,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189375,"byte_end":11189378,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This channel is useful for watching for changes to a value from multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189379,"byte_end":11189455,"line_start":6,"line_end":6,"column_start":1,"column_end":77}},{"value":"/ points in the code base, for example, changes to configuration values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189456,"byte_end":11189530,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189531,"byte_end":11189534,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189535,"byte_end":11189546,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189547,"byte_end":11189550,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`channel`] returns a [`Sender`] / [`Receiver`] pair. These are the producer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189551,"byte_end":11189631,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ and sender halves of the channel. The channel is created with an initial","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189632,"byte_end":11189708,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ value. The **latest** value stored in the channel is accessed with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189709,"byte_end":11189779,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`Receiver::borrow()`]. Awaiting [`Receiver::changed()`] waits for a new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189780,"byte_end":11189856,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ value to sent by the [`Sender`] half.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189857,"byte_end":11189898,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189899,"byte_end":11189902,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189903,"byte_end":11189917,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189918,"byte_end":11189921,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189922,"byte_end":11189929,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189930,"byte_end":11189957,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189958,"byte_end":11189961,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11189962,"byte_end":11190026,"line_start":22,"line_end":22,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190027,"byte_end":11190078,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190079,"byte_end":11190082,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190083,"byte_end":11190116,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190117,"byte_end":11190163,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190164,"byte_end":11190222,"line_start":27,"line_end":27,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190223,"byte_end":11190236,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190237,"byte_end":11190248,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190249,"byte_end":11190252,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190253,"byte_end":11190279,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190280,"byte_end":11190292,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190293,"byte_end":11190300,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190301,"byte_end":11190308,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190309,"byte_end":11190312,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Closing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190313,"byte_end":11190326,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190327,"byte_end":11190330,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Sender::is_closed`] and [`Sender::closed`] allow the producer to detect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190331,"byte_end":11190408,"line_start":38,"line_end":38,"column_start":1,"column_end":78}},{"value":"/ when all [`Receiver`] handles have been dropped. This indicates that there","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190409,"byte_end":11190487,"line_start":39,"line_end":39,"column_start":1,"column_end":79}},{"value":"/ is no further interest in the values being produced and work can be stopped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190488,"byte_end":11190568,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190569,"byte_end":11190572,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Thread safety","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190573,"byte_end":11190592,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190593,"byte_end":11190596,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Both [`Sender`] and [`Receiver`] are thread safe. They can be moved to other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190597,"byte_end":11190677,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ threads and can be used in a concurrent environment. Clones of [`Receiver`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190678,"byte_end":11190757,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ handles may be moved to separate threads and also used concurrently.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190758,"byte_end":11190830,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190831,"byte_end":11190834,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: crate::sync::watch::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190835,"byte_end":11190877,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/ [`Receiver`]: crate::sync::watch::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190878,"byte_end":11190924,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"/ [`Receiver::changed()`]: crate::sync::watch::Receiver::changed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190925,"byte_end":11190991,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ [`Receiver::borrow()`]: crate::sync::watch::Receiver::borrow","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11190992,"byte_end":11191056,"line_start":51,"line_end":51,"column_start":1,"column_end":65}},{"value":"/ [`channel`]: crate::sync::watch::channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191057,"byte_end":11191101,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`Sender::is_closed`]: crate::sync::watch::Sender::is_closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191102,"byte_end":11191166,"line_start":53,"line_end":53,"column_start":1,"column_end":65}},{"value":"/ [`Sender::closed`]: crate::sync::watch::Sender::closed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191167,"byte_end":11191225,"line_start":54,"line_end":54,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191797,"byte_end":11191805,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"Receiver","qualname":"::sync::watch::Receiver","value":"Receiver {  }","parent":null,"children":[{"krate":0,"index":7214},{"krate":0,"index":7215}],"decl_id":null,"docs":" Receives values from the associated [`Sender`](struct@Sender).","sig":null,"attributes":[{"value":"/ Receives values from the associated [`Sender`](struct@Sender).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191435,"byte_end":11191501,"line_start":63,"line_end":63,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191502,"byte_end":11191505,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191506,"byte_end":11191572,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191573,"byte_end":11191576,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ To turn this receiver into a `Stream`, you can use the [`WatchStream`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191577,"byte_end":11191651,"line_start":67,"line_end":67,"column_start":1,"column_end":75}},{"value":"/ wrapper.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191652,"byte_end":11191664,"line_start":68,"line_end":68,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191665,"byte_end":11191668,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`WatchStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.WatchStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191669,"byte_end":11191768,"line_start":70,"line_end":70,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":7219},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192094,"byte_end":11192100,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Sender","qualname":"::sync::watch::Sender","value":"Sender {  }","parent":null,"children":[{"krate":0,"index":7221}],"decl_id":null,"docs":" Sends values to the associated [`Receiver`](struct@Receiver).","sig":null,"attributes":[{"value":"/ Sends values to the associated [`Receiver`](struct@Receiver).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191929,"byte_end":11191994,"line_start":80,"line_end":80,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191995,"byte_end":11191998,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Instances are created by the [`channel`](fn@channel) function.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11191999,"byte_end":11192065,"line_start":82,"line_end":82,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7225},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192420,"byte_end":11192423,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"Ref","qualname":"::sync::watch::Ref","value":"Ref {  }","parent":null,"children":[{"krate":0,"index":7228}],"decl_id":null,"docs":" Returns a reference to the inner value","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192137,"byte_end":11192179,"line_start":88,"line_end":88,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192180,"byte_end":11192183,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Outstanding borrows hold a read lock on the inner value. This means that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192184,"byte_end":11192260,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ long lived borrows could cause the produce half to block. It is recommended","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192261,"byte_end":11192340,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ to keep the borrow as short lived as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11192341,"byte_end":11192391,"line_start":92,"line_end":92,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":6930},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193000,"byte_end":11193005,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"error","qualname":"::sync::watch::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","parent":null,"children":[{"krate":0,"index":6931},{"krate":0,"index":7243},{"krate":0,"index":7246},{"krate":0,"index":6932},{"krate":0,"index":6935},{"krate":0,"index":7249},{"krate":0,"index":7252},{"krate":0,"index":6937},{"krate":0,"index":6939}],"decl_id":null,"docs":" Watch error types\n","sig":null,"attributes":[{"value":"/ Watch error types","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193012,"byte_end":11193033,"line_start":120,"line_end":120,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":7243},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193141,"byte_end":11193150,"line_start":126,"line_end":126,"column_start":16,"column_end":25},"name":"SendError","qualname":"::sync::watch::error::SendError","value":"SendError {  }","parent":null,"children":[{"krate":0,"index":7245}],"decl_id":null,"docs":" Error produced when sending a value fails.\n","sig":null,"attributes":[{"value":"/ Error produced when sending a value fails.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193058,"byte_end":11193104,"line_start":124,"line_end":124,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7249},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193571,"byte_end":11193580,"line_start":142,"line_end":142,"column_start":16,"column_end":25},"name":"RecvError","qualname":"::sync::watch::error::RecvError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error produced when receiving a change notification.\n","sig":null,"attributes":[{"value":"/ Error produced when receiving a change notification.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193478,"byte_end":11193534,"line_start":140,"line_end":140,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":6941},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194635,"byte_end":11194642,"line_start":184,"line_end":184,"column_start":8,"column_end":15},"name":"channel","qualname":"::sync::watch::channel","value":"pub fn channel<T>(T) -> (Sender<T>, Receiver<T>)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watch channel, returning the \"send\" and \"receive\" handles.","sig":null,"attributes":[{"value":"/ Creates a new watch channel, returning the \"send\" and \"receive\" handles.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193872,"byte_end":11193948,"line_start":157,"line_end":157,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193949,"byte_end":11193952,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ All values sent by [`Sender`] will become visible to the [`Receiver`] handles.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193953,"byte_end":11194035,"line_start":159,"line_end":159,"column_start":1,"column_end":83}},{"value":"/ Only the last value sent is made available to the [`Receiver`] half. All","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194036,"byte_end":11194112,"line_start":160,"line_end":160,"column_start":1,"column_end":77}},{"value":"/ intermediate values are dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194113,"byte_end":11194149,"line_start":161,"line_end":161,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194150,"byte_end":11194153,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194154,"byte_end":11194168,"line_start":163,"line_end":163,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194169,"byte_end":11194172,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194173,"byte_end":11194180,"line_start":165,"line_end":165,"column_start":1,"column_end":8}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194181,"byte_end":11194208,"line_start":166,"line_end":166,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194209,"byte_end":11194212,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194213,"byte_end":11194277,"line_start":168,"line_end":168,"column_start":1,"column_end":65}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194278,"byte_end":11194329,"line_start":169,"line_end":169,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194330,"byte_end":11194333,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194334,"byte_end":11194367,"line_start":171,"line_end":171,"column_start":1,"column_end":34}},{"value":"/         while rx.changed().await.is_ok() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194368,"byte_end":11194414,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/             println!(\"received = {:?}\", *rx.borrow());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194415,"byte_end":11194473,"line_start":173,"line_end":173,"column_start":1,"column_end":59}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194474,"byte_end":11194487,"line_start":174,"line_end":174,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194488,"byte_end":11194499,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194500,"byte_end":11194503,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/     tx.send(\"world\")?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194504,"byte_end":11194530,"line_start":177,"line_end":177,"column_start":1,"column_end":27}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194531,"byte_end":11194543,"line_start":178,"line_end":178,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194544,"byte_end":11194551,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194552,"byte_end":11194559,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194560,"byte_end":11194563,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194564,"byte_end":11194593,"line_start":182,"line_end":182,"column_start":1,"column_end":30}},{"value":"/ [`Receiver`]: struct@Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11194594,"byte_end":11194627,"line_start":183,"line_end":183,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":6946},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195794,"byte_end":11195800,"line_start":225,"line_end":225,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Receiver<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195332,"byte_end":11195387,"line_start":211,"line_end":211,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195392,"byte_end":11195395,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195400,"byte_end":11195476,"line_start":213,"line_end":213,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195481,"byte_end":11195557,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195562,"byte_end":11195593,"line_start":215,"line_end":215,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195598,"byte_end":11195601,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195606,"byte_end":11195620,"line_start":217,"line_end":217,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195625,"byte_end":11195628,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195633,"byte_end":11195640,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195645,"byte_end":11195672,"line_start":220,"line_end":220,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195677,"byte_end":11195680,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ let (_, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195685,"byte_end":11195727,"line_start":222,"line_end":222,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*rx.borrow(), \"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195732,"byte_end":11195770,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195775,"byte_end":11195782,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6947},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196726,"byte_end":11196733,"line_start":258,"line_end":258,"column_start":18,"column_end":25},"name":"changed","qualname":"<Receiver<T>>::changed","value":"pub async fn changed<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for a change notification","sig":null,"attributes":[{"value":"/ Wait for a change notification","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195912,"byte_end":11195946,"line_start":230,"line_end":230,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195951,"byte_end":11195954,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Returns when a new value has been sent by the [`Sender`] since the last","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195959,"byte_end":11196034,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ time `changed()` was called. When the `Sender` half is dropped, `Err` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196039,"byte_end":11196115,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196120,"byte_end":11196133,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196138,"byte_end":11196141,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ [`Sender`]: struct@Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196146,"byte_end":11196175,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196180,"byte_end":11196183,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196188,"byte_end":11196202,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196207,"byte_end":11196210,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196215,"byte_end":11196222,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196227,"byte_end":11196254,"line_start":241,"line_end":241,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196259,"byte_end":11196262,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196267,"byte_end":11196285,"line_start":243,"line_end":243,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196290,"byte_end":11196311,"line_start":244,"line_end":244,"column_start":5,"column_end":26}},{"value":"/     let (tx, mut rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196316,"byte_end":11196367,"line_start":245,"line_end":245,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196372,"byte_end":11196375,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196380,"byte_end":11196413,"line_start":247,"line_end":247,"column_start":5,"column_end":38}},{"value":"/         tx.send(\"goodbye\").unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196418,"byte_end":11196458,"line_start":248,"line_end":248,"column_start":5,"column_end":45}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196463,"byte_end":11196474,"line_start":249,"line_end":249,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196479,"byte_end":11196482,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/     assert!(rx.changed().await.is_ok());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196487,"byte_end":11196531,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/     assert_eq!(*rx.borrow(), \"goodbye\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196536,"byte_end":11196580,"line_start":252,"line_end":252,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196585,"byte_end":11196588,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/     // The `tx` handle has been dropped","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196593,"byte_end":11196636,"line_start":254,"line_end":254,"column_start":5,"column_end":48}},{"value":"/     assert!(rx.changed().await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196641,"byte_end":11196686,"line_start":255,"line_end":255,"column_start":5,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196691,"byte_end":11196696,"line_start":256,"line_end":256,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11196701,"byte_end":11196708,"line_start":257,"line_end":257,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6960},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198709,"byte_end":11198713,"line_start":325,"line_end":325,"column_start":12,"column_end":16},"name":"send","qualname":"<Sender<T>>::send","value":"pub fn send(&Self, T) -> Result<(), error::SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends a new value via the channel, notifying all receivers.\n","sig":null,"attributes":[{"value":"/ Sends a new value via the channel, notifying all receivers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198634,"byte_end":11198697,"line_start":324,"line_end":324,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":6961},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199740,"byte_end":11199746,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"borrow","qualname":"<Sender<T>>::borrow","value":"pub fn borrow(&Self) -> Ref<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the most recently sent value","sig":null,"attributes":[{"value":"/ Returns a reference to the most recently sent value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199278,"byte_end":11199333,"line_start":342,"line_end":342,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199338,"byte_end":11199341,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Outstanding borrows hold a read lock. This means that long lived borrows","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199346,"byte_end":11199422,"line_start":344,"line_end":344,"column_start":5,"column_end":81}},{"value":"/ could cause the send half to block. It is recommended to keep the borrow","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199427,"byte_end":11199503,"line_start":345,"line_end":345,"column_start":5,"column_end":81}},{"value":"/ as short lived as possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199508,"byte_end":11199539,"line_start":346,"line_end":346,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199544,"byte_end":11199547,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199552,"byte_end":11199566,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199571,"byte_end":11199574,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199579,"byte_end":11199586,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199591,"byte_end":11199618,"line_start":351,"line_end":351,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199623,"byte_end":11199626,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let (tx, _) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199631,"byte_end":11199673,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*tx.borrow(), \"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199678,"byte_end":11199716,"line_start":354,"line_end":354,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199721,"byte_end":11199728,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6962},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200174,"byte_end":11200183,"line_start":373,"line_end":373,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<Sender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if the channel has been closed. This happens when all receivers\n have dropped.","sig":null,"attributes":[{"value":"/ Checks if the channel has been closed. This happens when all receivers","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199858,"byte_end":11199932,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ have dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199937,"byte_end":11199954,"line_start":362,"line_end":362,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199959,"byte_end":11199962,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199967,"byte_end":11199981,"line_start":364,"line_end":364,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199986,"byte_end":11199989,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11199994,"byte_end":11200001,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/ let (tx, rx) = tokio::sync::watch::channel(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200006,"byte_end":11200057,"line_start":367,"line_end":367,"column_start":5,"column_end":56}},{"value":"/ assert!(!tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200062,"byte_end":11200091,"line_start":368,"line_end":368,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200096,"byte_end":11200099,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200104,"byte_end":11200117,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/ assert!(tx.is_closed());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200122,"byte_end":11200150,"line_start":371,"line_end":371,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200155,"byte_end":11200162,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6963},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200927,"byte_end":11200933,"line_start":401,"line_end":401,"column_start":18,"column_end":24},"name":"closed","qualname":"<Sender<T>>::closed","value":"pub async fn closed<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when all receivers have dropped.","sig":null,"attributes":[{"value":"/ Completes when all receivers have dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200264,"byte_end":11200310,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200315,"byte_end":11200318,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This allows the producer to get notified when interest in the produced","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200323,"byte_end":11200397,"line_start":379,"line_end":379,"column_start":5,"column_end":79}},{"value":"/ values is canceled and immediately stop doing work.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200402,"byte_end":11200457,"line_start":380,"line_end":380,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200462,"byte_end":11200465,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200470,"byte_end":11200484,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200489,"byte_end":11200492,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200497,"byte_end":11200504,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ use tokio::sync::watch;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200509,"byte_end":11200536,"line_start":385,"line_end":385,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200541,"byte_end":11200544,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200549,"byte_end":11200567,"line_start":387,"line_end":387,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200572,"byte_end":11200593,"line_start":388,"line_end":388,"column_start":5,"column_end":26}},{"value":"/     let (tx, rx) = watch::channel(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200598,"byte_end":11200645,"line_start":389,"line_end":389,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200650,"byte_end":11200653,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200658,"byte_end":11200691,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/         // use `rx`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200696,"byte_end":11200719,"line_start":392,"line_end":392,"column_start":5,"column_end":28}},{"value":"/         drop(rx);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200724,"byte_end":11200745,"line_start":393,"line_end":393,"column_start":5,"column_end":26}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200750,"byte_end":11200761,"line_start":394,"line_end":394,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200766,"byte_end":11200769,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/     // Waits for `rx` to drop","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200774,"byte_end":11200807,"line_start":396,"line_end":396,"column_start":5,"column_end":38}},{"value":"/     tx.closed().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200812,"byte_end":11200838,"line_start":397,"line_end":397,"column_start":5,"column_end":31}},{"value":"/     println!(\"the `rx` handles dropped\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200843,"byte_end":11200887,"line_start":398,"line_end":398,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200892,"byte_end":11200897,"line_start":399,"line_end":399,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11200902,"byte_end":11200909,"line_start":400,"line_end":400,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":620},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":7254},{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7257},{"krate":0,"index":7259},{"krate":0,"index":7260},{"krate":0,"index":7265},{"krate":0,"index":7452},{"krate":0,"index":7266},{"krate":0,"index":7272},{"krate":0,"index":7273},{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7355},{"krate":0,"index":7356},{"krate":0,"index":7428},{"krate":0,"index":7429},{"krate":0,"index":7441},{"krate":0,"index":7442},{"krate":0,"index":7443}],"decl_id":null,"docs":" Asynchronous green-threads.","sig":null,"attributes":[{"value":"/ Asynchronous green-threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":125996,"byte_end":126027,"line_start":1,"line_end":1,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126028,"byte_end":126031,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## What are Tasks?","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126032,"byte_end":126054,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126055,"byte_end":126058,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A _task_ is a light weight, non-blocking unit of execution. A task is similar","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126059,"byte_end":126140,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ to an OS thread, but rather than being managed by the OS scheduler, they are","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126141,"byte_end":126221,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ managed by the [Tokio runtime][rt]. Another name for this general pattern is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126222,"byte_end":126302,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ [green threads]. If you are familiar with [Go's goroutines], [Kotlin's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126303,"byte_end":126377,"line_start":8,"line_end":8,"column_start":1,"column_end":75}},{"value":"/ coroutines], or [Erlang's processes], you can think of Tokio's tasks as","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126378,"byte_end":126453,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/ something similar.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126454,"byte_end":126476,"line_start":10,"line_end":10,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126477,"byte_end":126480,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Key points about tasks include:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126481,"byte_end":126516,"line_start":12,"line_end":12,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126517,"byte_end":126520,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **light weight**. Because tasks are scheduled by the Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126521,"byte_end":126595,"line_start":14,"line_end":14,"column_start":1,"column_end":75}},{"value":"/   runtime rather than the operating system, creating new tasks or switching","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126596,"byte_end":126675,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/   between tasks does not require a context switch and has fairly low","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126676,"byte_end":126748,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/   overhead. Creating, running, and destroying large numbers of tasks is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126749,"byte_end":126824,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/   quite cheap, especially compared to OS threads.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126825,"byte_end":126878,"line_start":18,"line_end":18,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126879,"byte_end":126882,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * Tasks are scheduled **cooperatively**. Most operating systems implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126883,"byte_end":126960,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/   _preemptive multitasking_. This is a scheduling technique where the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":126961,"byte_end":127034,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/   operating system allows each thread to run for a period of time, and then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127035,"byte_end":127114,"line_start":22,"line_end":22,"column_start":1,"column_end":80}},{"value":"/   _preempts_ it, temporarily pausing that thread and switching to another.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127115,"byte_end":127193,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/   Tasks, on the other hand, implement _cooperative multitasking_. In","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127194,"byte_end":127266,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/   cooperative multitasking, a task is allowed to run until it _yields_,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127267,"byte_end":127342,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/   indicating to the Tokio runtime's scheduler that it cannot currently","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127343,"byte_end":127417,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/   continue executing. When a task yields, the Tokio runtime switches to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127418,"byte_end":127493,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/   executing the next task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127494,"byte_end":127524,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127525,"byte_end":127528,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Tasks are **non-blocking**. Typically, when an OS thread performs I/O or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127529,"byte_end":127607,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/   must synchronize with another thread, it _blocks_, allowing the OS to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127608,"byte_end":127683,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/   schedule another thread. When a task cannot continue executing, it must","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127684,"byte_end":127761,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/   yield instead, allowing the Tokio runtime to schedule another task. Tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127762,"byte_end":127841,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/   should generally not perform system calls or other operations that could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127842,"byte_end":127920,"line_start":34,"line_end":34,"column_start":1,"column_end":79}},{"value":"/   block a thread, as this would prevent other tasks running on the same","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127921,"byte_end":127996,"line_start":35,"line_end":35,"column_start":1,"column_end":76}},{"value":"/   thread from executing as well. Instead, this module provides APIs for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":127997,"byte_end":128072,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/   running blocking operations in an asynchronous context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128073,"byte_end":128134,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128135,"byte_end":128138,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [rt]: crate::runtime","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128139,"byte_end":128163,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ [green threads]: https://en.wikipedia.org/wiki/Green_threads","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128164,"byte_end":128228,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ [Go's goroutines]: https://tour.golang.org/concurrency/1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128229,"byte_end":128289,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ [Kotlin's coroutines]: https://kotlinlang.org/docs/reference/coroutines-overview.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128290,"byte_end":128379,"line_start":42,"line_end":42,"column_start":1,"column_end":90}},{"value":"/ [Erlang's processes]: http://erlang.org/doc/getting_started/conc_prog.html#processes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128380,"byte_end":128468,"line_start":43,"line_end":43,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128469,"byte_end":128472,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ## Working with Tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128473,"byte_end":128498,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128499,"byte_end":128502,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This module provides the following APIs for working with tasks:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128503,"byte_end":128570,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128571,"byte_end":128574,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ### Spawning","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128575,"byte_end":128591,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128592,"byte_end":128595,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Perhaps the most important function in this module is [`task::spawn`]. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128596,"byte_end":128675,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ function can be thought of as an async equivalent to the standard library's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128676,"byte_end":128755,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ [`thread::spawn`][`std::thread::spawn`]. It takes an `async` block or other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128756,"byte_end":128835,"line_start":53,"line_end":53,"column_start":1,"column_end":80}},{"value":"/ [future], and creates a new task to run that work concurrently:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128836,"byte_end":128903,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128904,"byte_end":128907,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128908,"byte_end":128915,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128916,"byte_end":128936,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128937,"byte_end":128940,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ # async fn doc() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128941,"byte_end":128963,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/ task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128964,"byte_end":128987,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/     // perform some work here...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":128988,"byte_end":129024,"line_start":61,"line_end":61,"column_start":1,"column_end":37}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129025,"byte_end":129032,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129033,"byte_end":129040,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129041,"byte_end":129048,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129049,"byte_end":129052,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Like [`std::thread::spawn`], `task::spawn` returns a [`JoinHandle`] struct.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129053,"byte_end":129132,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ A `JoinHandle` is itself a future which may be used to await the output of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129133,"byte_end":129211,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ the spawned task. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129212,"byte_end":129246,"line_start":68,"line_end":68,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129247,"byte_end":129250,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129251,"byte_end":129258,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129259,"byte_end":129279,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129280,"byte_end":129283,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129284,"byte_end":129364,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129365,"byte_end":129399,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129400,"byte_end":129414,"line_start":75,"line_end":75,"column_start":1,"column_end":15}},{"value":"/     \"hello world!\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129415,"byte_end":129437,"line_start":76,"line_end":76,"column_start":1,"column_end":23}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129438,"byte_end":129445,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129446,"byte_end":129449,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129450,"byte_end":129460,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129461,"byte_end":129464,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ // Await the result of the spawned task.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129465,"byte_end":129509,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129510,"byte_end":129539,"line_start":82,"line_end":82,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"hello world!\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129540,"byte_end":129579,"line_start":83,"line_end":83,"column_start":1,"column_end":40}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129580,"byte_end":129592,"line_start":84,"line_end":84,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129593,"byte_end":129600,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129601,"byte_end":129608,"line_start":86,"line_end":86,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129609,"byte_end":129612,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Again, like `std::thread`'s [`JoinHandle` type][thread_join], if the spawned","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129613,"byte_end":129693,"line_start":88,"line_end":88,"column_start":1,"column_end":81}},{"value":"/ task panics, awaiting its `JoinHandle` will return a [`JoinError`]`. For","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129694,"byte_end":129770,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129771,"byte_end":129783,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129784,"byte_end":129787,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129788,"byte_end":129795,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129796,"byte_end":129816,"line_start":93,"line_end":93,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129817,"byte_end":129820,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129821,"byte_end":129859,"line_start":95,"line_end":95,"column_start":1,"column_end":39}},{"value":"/ let join = task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129860,"byte_end":129894,"line_start":96,"line_end":96,"column_start":1,"column_end":35}},{"value":"/     panic!(\"something bad happened!\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129895,"byte_end":129936,"line_start":97,"line_end":97,"column_start":1,"column_end":42}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129937,"byte_end":129944,"line_start":98,"line_end":98,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129945,"byte_end":129948,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // The returned result indicates that the task failed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":129949,"byte_end":130007,"line_start":100,"line_end":100,"column_start":1,"column_end":59}},{"value":"/ assert!(join.await.is_err());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130008,"byte_end":130041,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130042,"byte_end":130049,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130050,"byte_end":130057,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130058,"byte_end":130061,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ `spawn`, `JoinHandle`, and `JoinError` are present when the \"rt\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130062,"byte_end":130130,"line_start":105,"line_end":105,"column_start":1,"column_end":69}},{"value":"/ feature flag is enabled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130131,"byte_end":130159,"line_start":106,"line_end":106,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130160,"byte_end":130163,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn`]: crate::task::spawn()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130164,"byte_end":130205,"line_start":108,"line_end":108,"column_start":1,"column_end":42}},{"value":"/ [future]: std::future::Future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130206,"byte_end":130239,"line_start":109,"line_end":109,"column_start":1,"column_end":34}},{"value":"/ [`std::thread::spawn`]: std::thread::spawn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130240,"byte_end":130286,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/ [`JoinHandle`]: crate::task::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130287,"byte_end":130330,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/ [thread_join]: std::thread::JoinHandle","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130331,"byte_end":130373,"line_start":112,"line_end":112,"column_start":1,"column_end":43}},{"value":"/ [`JoinError`]: crate::task::JoinError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130374,"byte_end":130415,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130416,"byte_end":130419,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ### Blocking and Yielding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130420,"byte_end":130449,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130450,"byte_end":130453,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ As we discussed above, code running in asynchronous tasks should not perform","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130454,"byte_end":130534,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/ operations that can block. A blocking operation performed in a task running","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130535,"byte_end":130614,"line_start":118,"line_end":118,"column_start":1,"column_end":80}},{"value":"/ on a thread that is also running other tasks would block the entire thread,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130615,"byte_end":130694,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ preventing other tasks from running.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130695,"byte_end":130735,"line_start":120,"line_end":120,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130736,"byte_end":130739,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Instead, Tokio provides two APIs for running blocking operations in an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130740,"byte_end":130814,"line_start":122,"line_end":122,"column_start":1,"column_end":75}},{"value":"/ asynchronous context: [`task::spawn_blocking`] and [`task::block_in_place`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130815,"byte_end":130895,"line_start":123,"line_end":123,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130896,"byte_end":130899,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ Be aware that if you call a non-async method from async code, that non-async","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130900,"byte_end":130980,"line_start":125,"line_end":125,"column_start":1,"column_end":81}},{"value":"/ method is still inside the asynchronous context, so you should also avoid","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":130981,"byte_end":131058,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ blocking operations there. This includes destructors of objects destroyed in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131059,"byte_end":131139,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/ async code.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131140,"byte_end":131155,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131156,"byte_end":131159,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ #### spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131160,"byte_end":131183,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131184,"byte_end":131187,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ The `task::spawn_blocking` function is similar to the `task::spawn` function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131188,"byte_end":131268,"line_start":132,"line_end":132,"column_start":1,"column_end":81}},{"value":"/ discussed in the previous section, but rather than spawning an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131269,"byte_end":131335,"line_start":133,"line_end":133,"column_start":1,"column_end":67}},{"value":"/ _non-blocking_ future on the Tokio runtime, it instead spawns a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131336,"byte_end":131403,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/ _blocking_ function on a dedicated thread pool for blocking tasks. For","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131404,"byte_end":131478,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131479,"byte_end":131491,"line_start":136,"line_end":136,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131492,"byte_end":131495,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131496,"byte_end":131503,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131504,"byte_end":131524,"line_start":139,"line_end":139,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131525,"byte_end":131528,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131529,"byte_end":131552,"line_start":141,"line_end":141,"column_start":1,"column_end":24}},{"value":"/ task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131553,"byte_end":131582,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131583,"byte_end":131645,"line_start":143,"line_end":143,"column_start":1,"column_end":63}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131646,"byte_end":131653,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131654,"byte_end":131661,"line_start":145,"line_end":145,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131662,"byte_end":131669,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131670,"byte_end":131673,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Just like `task::spawn`, `task::spawn_blocking` returns a `JoinHandle`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131674,"byte_end":131748,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ which we can use to await the result of the blocking operation:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131749,"byte_end":131816,"line_start":149,"line_end":149,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131817,"byte_end":131820,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131821,"byte_end":131832,"line_start":151,"line_end":151,"column_start":1,"column_end":12}},{"value":"/ # use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131833,"byte_end":131855,"line_start":152,"line_end":152,"column_start":1,"column_end":23}},{"value":"/ # async fn docs() -> Result<(), Box<dyn std::error::Error>>{","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131856,"byte_end":131920,"line_start":153,"line_end":153,"column_start":1,"column_end":65}},{"value":"/ let join = task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131921,"byte_end":131961,"line_start":154,"line_end":154,"column_start":1,"column_end":41}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":131962,"byte_end":132024,"line_start":155,"line_end":155,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132025,"byte_end":132053,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132054,"byte_end":132061,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132062,"byte_end":132065,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ let result = join.await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132066,"byte_end":132095,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132096,"byte_end":132141,"line_start":160,"line_end":160,"column_start":1,"column_end":46}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132142,"byte_end":132154,"line_start":161,"line_end":161,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132155,"byte_end":132162,"line_start":162,"line_end":162,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132163,"byte_end":132170,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132171,"byte_end":132174,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### block_in_place","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132175,"byte_end":132198,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132199,"byte_end":132202,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ When using the [multi-threaded runtime][rt-multi-thread], the [`task::block_in_place`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132203,"byte_end":132293,"line_start":167,"line_end":167,"column_start":1,"column_end":91}},{"value":"/ function is also available. Like `task::spawn_blocking`, this function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132294,"byte_end":132368,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"/ allows running a blocking operation from an asynchronous context. Unlike","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132369,"byte_end":132445,"line_start":169,"line_end":169,"column_start":1,"column_end":77}},{"value":"/ `spawn_blocking`, however, `block_in_place` works by transitioning the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132446,"byte_end":132520,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/ _current_ worker thread to a blocking thread, moving other tasks running on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132521,"byte_end":132600,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/ that thread to another worker thread. This can improve performance by avoiding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132601,"byte_end":132683,"line_start":172,"line_end":172,"column_start":1,"column_end":83}},{"value":"/ context switches.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132684,"byte_end":132705,"line_start":173,"line_end":173,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132706,"byte_end":132709,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132710,"byte_end":132726,"line_start":175,"line_end":175,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132727,"byte_end":132730,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132731,"byte_end":132738,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132739,"byte_end":132759,"line_start":178,"line_end":178,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132760,"byte_end":132763,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ # async fn docs() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132764,"byte_end":132787,"line_start":180,"line_end":180,"column_start":1,"column_end":24}},{"value":"/ let result = task::block_in_place(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132788,"byte_end":132830,"line_start":181,"line_end":181,"column_start":1,"column_end":43}},{"value":"/     // do some compute-heavy work or call synchronous code","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132831,"byte_end":132893,"line_start":182,"line_end":182,"column_start":1,"column_end":63}},{"value":"/     \"blocking completed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132894,"byte_end":132922,"line_start":183,"line_end":183,"column_start":1,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132923,"byte_end":132930,"line_start":184,"line_end":184,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132931,"byte_end":132934,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(result, \"blocking completed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132935,"byte_end":132980,"line_start":186,"line_end":186,"column_start":1,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132981,"byte_end":132988,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132989,"byte_end":132996,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":132997,"byte_end":133000,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ #### yield_now","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133001,"byte_end":133019,"line_start":190,"line_end":190,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133020,"byte_end":133023,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ In addition, this module provides a [`task::yield_now`] async function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133024,"byte_end":133098,"line_start":192,"line_end":192,"column_start":1,"column_end":75}},{"value":"/ that is analogous to the standard library's [`thread::yield_now`]. Calling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133099,"byte_end":133177,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ and `await`ing this function will cause the current task to yield to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133178,"byte_end":133254,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ Tokio runtime's scheduler, allowing other tasks to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133255,"byte_end":133312,"line_start":195,"line_end":195,"column_start":1,"column_end":58}},{"value":"/ scheduled. Eventually, the yielding task will be polled again, allowing it","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133313,"byte_end":133391,"line_start":196,"line_end":196,"column_start":1,"column_end":79}},{"value":"/ to execute. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133392,"byte_end":133420,"line_start":197,"line_end":197,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133421,"byte_end":133424,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133425,"byte_end":133436,"line_start":199,"line_end":199,"column_start":1,"column_end":12}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133437,"byte_end":133457,"line_start":200,"line_end":200,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133458,"byte_end":133461,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # #[tokio::main] async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133462,"byte_end":133500,"line_start":202,"line_end":202,"column_start":1,"column_end":39}},{"value":"/ async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133501,"byte_end":133512,"line_start":203,"line_end":203,"column_start":1,"column_end":12}},{"value":"/     task::spawn(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133513,"byte_end":133540,"line_start":204,"line_end":204,"column_start":1,"column_end":28}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133541,"byte_end":133559,"line_start":205,"line_end":205,"column_start":1,"column_end":19}},{"value":"/         println!(\"spawned task done!\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133560,"byte_end":133602,"line_start":206,"line_end":206,"column_start":1,"column_end":43}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133603,"byte_end":133614,"line_start":207,"line_end":207,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133615,"byte_end":133618,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/     // Yield, allowing the newly-spawned task to execute first.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133619,"byte_end":133686,"line_start":209,"line_end":209,"column_start":1,"column_end":68}},{"value":"/     task::yield_now().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133687,"byte_end":133719,"line_start":210,"line_end":210,"column_start":1,"column_end":33}},{"value":"/     println!(\"main task done!\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133720,"byte_end":133756,"line_start":211,"line_end":211,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133757,"byte_end":133762,"line_start":212,"line_end":212,"column_start":1,"column_end":6}},{"value":"/ # .await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133763,"byte_end":133776,"line_start":213,"line_end":213,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133777,"byte_end":133784,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133785,"byte_end":133792,"line_start":215,"line_end":215,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133793,"byte_end":133796,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ### Cooperative scheduling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133797,"byte_end":133827,"line_start":217,"line_end":217,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133828,"byte_end":133831,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ A single call to [`poll`] on a top-level task may potentially do a lot of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133832,"byte_end":133909,"line_start":219,"line_end":219,"column_start":1,"column_end":78}},{"value":"/ work before it returns `Poll::Pending`. If a task runs for a long period of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133910,"byte_end":133989,"line_start":220,"line_end":220,"column_start":1,"column_end":80}},{"value":"/ time without yielding back to the executor, it can starve other tasks","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":133990,"byte_end":134063,"line_start":221,"line_end":221,"column_start":1,"column_end":74}},{"value":"/ waiting on that executor to execute them, or drive underlying resources.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134064,"byte_end":134140,"line_start":222,"line_end":222,"column_start":1,"column_end":77}},{"value":"/ Since Rust does not have a runtime, it is difficult to forcibly preempt a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134141,"byte_end":134218,"line_start":223,"line_end":223,"column_start":1,"column_end":78}},{"value":"/ long-running task. Instead, this module provides an opt-in mechanism for","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134219,"byte_end":134295,"line_start":224,"line_end":224,"column_start":1,"column_end":77}},{"value":"/ futures to collaborate with the executor to avoid starvation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134296,"byte_end":134361,"line_start":225,"line_end":225,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134362,"byte_end":134365,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Consider a future like this one:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134366,"byte_end":134402,"line_start":227,"line_end":227,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134403,"byte_end":134406,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134407,"byte_end":134414,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ # use tokio_stream::{Stream, StreamExt};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134415,"byte_end":134459,"line_start":230,"line_end":230,"column_start":1,"column_end":45}},{"value":"/ async fn drop_all<I: Stream + Unpin>(mut input: I) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134460,"byte_end":134516,"line_start":231,"line_end":231,"column_start":1,"column_end":57}},{"value":"/     while let Some(_) = input.next().await {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134517,"byte_end":134566,"line_start":232,"line_end":232,"column_start":1,"column_end":50}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134567,"byte_end":134572,"line_start":233,"line_end":233,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134573,"byte_end":134580,"line_start":234,"line_end":234,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134581,"byte_end":134584,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ It may look harmless, but consider what happens under heavy load if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134585,"byte_end":134660,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/ input stream is _always_ ready. If we spawn `drop_all`, the task will never","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134661,"byte_end":134740,"line_start":237,"line_end":237,"column_start":1,"column_end":80}},{"value":"/ yield, and will starve other tasks and resources on the same executor.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134741,"byte_end":134815,"line_start":238,"line_end":238,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134816,"byte_end":134819,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To account for this, Tokio has explicit yield points in a number of library","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134820,"byte_end":134899,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ functions, which force tasks to return to the executor periodically.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134900,"byte_end":134972,"line_start":241,"line_end":241,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134973,"byte_end":134976,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134977,"byte_end":134980,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ #### unconstrained","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":134981,"byte_end":135003,"line_start":244,"line_end":244,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135004,"byte_end":135007,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ If necessary, [`task::unconstrained`] lets you opt out a future of Tokio's cooperative","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135008,"byte_end":135098,"line_start":246,"line_end":246,"column_start":1,"column_end":91}},{"value":"/ scheduling. When a future is wrapped with `unconstrained`, it will never be forced to yield to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135099,"byte_end":135197,"line_start":247,"line_end":247,"column_start":1,"column_end":99}},{"value":"/ Tokio. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135198,"byte_end":135221,"line_start":248,"line_end":248,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135222,"byte_end":135225,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135226,"byte_end":135233,"line_start":250,"line_end":250,"column_start":1,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135234,"byte_end":135254,"line_start":251,"line_end":251,"column_start":1,"column_end":21}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135255,"byte_end":135278,"line_start":252,"line_end":252,"column_start":1,"column_end":24}},{"value":"/ use tokio::{task, sync::mpsc};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135279,"byte_end":135313,"line_start":253,"line_end":253,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135314,"byte_end":135317,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ let fut = async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135318,"byte_end":135339,"line_start":255,"line_end":255,"column_start":1,"column_end":22}},{"value":"/     let (tx, mut rx) = mpsc::unbounded_channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135340,"byte_end":135393,"line_start":256,"line_end":256,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135394,"byte_end":135397,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/     for i in 0..1000 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135398,"byte_end":135424,"line_start":258,"line_end":258,"column_start":1,"column_end":27}},{"value":"/         let _ = tx.send(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135425,"byte_end":135457,"line_start":259,"line_end":259,"column_start":1,"column_end":33}},{"value":"/         // This will always be ready. If coop was in effect, this code would be forced to yield","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135458,"byte_end":135557,"line_start":260,"line_end":260,"column_start":1,"column_end":100}},{"value":"/         // periodically. However, if left unconstrained, then this code will never yield.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135558,"byte_end":135651,"line_start":261,"line_end":261,"column_start":1,"column_end":94}},{"value":"/         rx.recv().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135652,"byte_end":135680,"line_start":262,"line_end":262,"column_start":1,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135681,"byte_end":135690,"line_start":263,"line_end":263,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135691,"byte_end":135697,"line_start":264,"line_end":264,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135698,"byte_end":135701,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ task::unconstrained(fut).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135702,"byte_end":135737,"line_start":266,"line_end":266,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135738,"byte_end":135745,"line_start":267,"line_end":267,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135746,"byte_end":135753,"line_start":268,"line_end":268,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135754,"byte_end":135757,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ [`task::spawn_blocking`]: crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135758,"byte_end":135815,"line_start":270,"line_end":270,"column_start":1,"column_end":58}},{"value":"/ [`task::block_in_place`]: crate::task::block_in_place","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135816,"byte_end":135873,"line_start":271,"line_end":271,"column_start":1,"column_end":58}},{"value":"/ [rt-multi-thread]: ../runtime/index.html#threaded-scheduler","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135874,"byte_end":135937,"line_start":272,"line_end":272,"column_start":1,"column_end":64}},{"value":"/ [`task::yield_now`]: crate::task::yield_now()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135938,"byte_end":135987,"line_start":273,"line_end":273,"column_start":1,"column_end":50}},{"value":"/ [`thread::yield_now`]: std::thread::yield_now","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":135988,"byte_end":136037,"line_start":274,"line_end":274,"column_start":1,"column_end":50}},{"value":"/ [`task::unconstrained`]: crate::task::unconstrained()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136038,"byte_end":136095,"line_start":275,"line_end":275,"column_start":1,"column_end":58}},{"value":"/ [`poll`]: method@std::future::Future::poll","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/mod.rs","byte_start":136096,"byte_end":136142,"line_start":276,"line_end":276,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":7444},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/blocking.rs","byte_start":11206864,"byte_end":11206878,"line_start":73,"line_end":73,"column_start":12,"column_end":26},"name":"block_in_place","qualname":"::task::blocking::block_in_place","value":"pub fn block_in_place<F, R>(F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided blocking function on the current thread without\n blocking the executor.","sig":null,"attributes":[{"value":"cfg(feature = \"rt-multi-thread\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23644,"byte_end":23679,"line_start":279,"line_end":279,"column_start":13,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7447},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/blocking.rs","byte_start":11209812,"byte_end":11209826,"line_start":136,"line_end":136,"column_start":12,"column_end":26},"name":"spawn_blocking","qualname":"::task::blocking::spawn_blocking","value":"pub fn spawn_blocking<F, R>(F) -> JoinHandle<R> where F: FnOnce() -> R +\nSend + 'static, R: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Runs the provided closure on a thread where blocking is acceptable.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/blocking.rs","byte_start":11209786,"byte_end":11209798,"line_start":135,"line_end":135,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7450},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/spawn.rs","byte_start":11213713,"byte_end":11213718,"line_start":127,"line_end":127,"column_start":12,"column_end":17},"name":"spawn","qualname":"::task::spawn::spawn","value":"pub fn spawn<T>(T) -> JoinHandle<T::Output> where T: Future + Send + 'static,\nT::Output: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new asynchronous task, returning a\n [`JoinHandle`](super::JoinHandle) for it.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/spawn.rs","byte_start":11213687,"byte_end":11213699,"line_start":126,"line_end":126,"column_start":36,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":7453},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/yield_now.rs","byte_start":11214692,"byte_end":11214701,"line_start":16,"line_end":16,"column_start":18,"column_end":27},"name":"yield_now","qualname":"::task::yield_now::yield_now","value":"pub async fn yield_now() -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Yields execution back to the Tokio runtime.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"must_use = \"yield_now does nothing unless polled/`await`-ed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/yield_now.rs","byte_start":11214611,"byte_end":11214674,"line_start":15,"line_end":15,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7461},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11222807,"byte_end":11222815,"line_start":213,"line_end":213,"column_start":16,"column_end":24},"name":"LocalSet","qualname":"::task::local::LocalSet","value":"LocalSet {  }","parent":null,"children":[{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464}],"decl_id":null,"docs":" A set of tasks which are executed on the same thread.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":7470},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11224909,"byte_end":11224920,"line_start":295,"line_end":295,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"::task::local::spawn_local","value":"pub fn spawn_local<F>(F) -> JoinHandle<F::Output> where F: Future + 'static,\nF::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` future on the local task set.","sig":null,"attributes":[{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":23332,"byte_end":23354,"line_start":263,"line_end":263,"column_start":13,"column_end":35}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11224883,"byte_end":11224895,"line_start":294,"line_end":294,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7308},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11225817,"byte_end":11225820,"line_start":325,"line_end":325,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalSet>::new","value":"pub fn new() -> LocalSet","parent":null,"children":[],"decl_id":null,"docs":" Returns a new local task set.\n","sig":null,"attributes":[{"value":"/ Returns a new local task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11225772,"byte_end":11225805,"line_start":324,"line_end":324,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7309},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227575,"byte_end":11227586,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"spawn_local","qualname":"<LocalSet>::spawn_local","value":"pub fn spawn_local<F>(&Self, F) -> JoinHandle<F::Output> where F: Future +\n'static, F::Output: 'static","parent":null,"children":[],"decl_id":null,"docs":" Spawns a `!Send` task onto the local task set.","sig":null,"attributes":[{"value":"/ Spawns a `!Send` task onto the local task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226362,"byte_end":11226412,"line_start":342,"line_end":342,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226417,"byte_end":11226420,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This task is guaranteed to be run on the current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226425,"byte_end":11226485,"line_start":344,"line_end":344,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226490,"byte_end":11226493,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Unlike the free function [`spawn_local`], this method may be used to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226498,"byte_end":11226570,"line_start":346,"line_end":346,"column_start":5,"column_end":77}},{"value":"/ spawn local tasks when the task set is _not_ running. For example:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226575,"byte_end":11226645,"line_start":347,"line_end":347,"column_start":5,"column_end":75}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226650,"byte_end":11226661,"line_start":348,"line_end":348,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226666,"byte_end":11226686,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226691,"byte_end":11226694,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226699,"byte_end":11226717,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226722,"byte_end":11226743,"line_start":352,"line_end":352,"column_start":5,"column_end":26}},{"value":"/     let local = task::LocalSet::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226748,"byte_end":11226790,"line_start":353,"line_end":353,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226795,"byte_end":11226798,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/     // Spawn a future on the local set. This future will be run when","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226803,"byte_end":11226875,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/     // we call `run_until` to drive the task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226880,"byte_end":11226933,"line_start":356,"line_end":356,"column_start":5,"column_end":58}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226938,"byte_end":11226971,"line_start":357,"line_end":357,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226976,"byte_end":11226993,"line_start":358,"line_end":358,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11226998,"byte_end":11227009,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227014,"byte_end":11227017,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/     // Run the local task set.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227022,"byte_end":11227056,"line_start":361,"line_end":361,"column_start":5,"column_end":39}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227061,"byte_end":11227097,"line_start":362,"line_end":362,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227102,"byte_end":11227120,"line_start":363,"line_end":363,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227125,"byte_end":11227142,"line_start":364,"line_end":364,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227147,"byte_end":11227150,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/     // When `run` finishes, we can spawn _more_ futures, which will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227155,"byte_end":11227226,"line_start":366,"line_end":366,"column_start":5,"column_end":76}},{"value":"/     // run in subsequent calls to `run_until`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227231,"byte_end":11227281,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/     local.spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227286,"byte_end":11227319,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/        // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227324,"byte_end":11227341,"line_start":369,"line_end":369,"column_start":5,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227346,"byte_end":11227357,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227362,"byte_end":11227365,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/     local.run_until(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227370,"byte_end":11227406,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227411,"byte_end":11227429,"line_start":373,"line_end":373,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227434,"byte_end":11227451,"line_start":374,"line_end":374,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227456,"byte_end":11227461,"line_start":375,"line_end":375,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227466,"byte_end":11227473,"line_start":376,"line_end":376,"column_start":5,"column_end":12}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227478,"byte_end":11227513,"line_start":377,"line_end":377,"column_start":5,"column_end":40}},{"value":"track_caller","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227549,"byte_end":11227561,"line_start":378,"line_end":378,"column_start":36,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":7311},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230426,"byte_end":11230434,"line_start":455,"line_end":455,"column_start":12,"column_end":20},"name":"block_on","qualname":"<LocalSet>::block_on","value":"pub fn block_on<F>(&Self, &crate::runtime::Runtime, F) -> F::Output where\nF: Future","parent":null,"children":[],"decl_id":null,"docs":" Runs a future to completion on the provided runtime, driving any local\n futures spawned on this task set on the current thread.","sig":null,"attributes":[{"value":"/ Runs a future to completion on the provided runtime, driving any local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11227971,"byte_end":11228045,"line_start":391,"line_end":391,"column_start":5,"column_end":79}},{"value":"/ futures spawned on this task set on the current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228050,"byte_end":11228109,"line_start":392,"line_end":392,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228114,"byte_end":11228117,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This runs the given future on the runtime, blocking until it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228122,"byte_end":11228189,"line_start":394,"line_end":394,"column_start":5,"column_end":72}},{"value":"/ complete, and yielding its resolved result. Any tasks or timers which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228194,"byte_end":11228267,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ the future spawns internally will be executed on the runtime. The future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228272,"byte_end":11228348,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/ may also call [`spawn_local`] to spawn_local additional local futures on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228353,"byte_end":11228433,"line_start":397,"line_end":397,"column_start":5,"column_end":85}},{"value":"/ current thread.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228438,"byte_end":11228457,"line_start":398,"line_end":398,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228462,"byte_end":11228465,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ This method should not be called from an asynchronous context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228470,"byte_end":11228536,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228541,"byte_end":11228544,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228549,"byte_end":11228561,"line_start":402,"line_end":402,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228566,"byte_end":11228569,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This function panics if the executor is at capacity, if the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228574,"byte_end":11228646,"line_start":404,"line_end":404,"column_start":5,"column_end":77}},{"value":"/ future panics, or if called within an asynchronous execution context.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228651,"byte_end":11228724,"line_start":405,"line_end":405,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228729,"byte_end":11228732,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Notes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228737,"byte_end":11228748,"line_start":407,"line_end":407,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228753,"byte_end":11228756,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Since this function internally calls [`Runtime::block_on`], and drives","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228761,"byte_end":11228835,"line_start":409,"line_end":409,"column_start":5,"column_end":79}},{"value":"/ futures in the local task set inside that call to `block_on`, the local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228840,"byte_end":11228915,"line_start":410,"line_end":410,"column_start":5,"column_end":80}},{"value":"/ futures may not use [in-place blocking]. If a blocking call needs to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11228920,"byte_end":11228995,"line_start":411,"line_end":411,"column_start":5,"column_end":80}},{"value":"/ issued from a local task, the [`spawn_blocking`] API may be used instead.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229000,"byte_end":11229077,"line_start":412,"line_end":412,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229082,"byte_end":11229085,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ For example, this will panic:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229090,"byte_end":11229123,"line_start":414,"line_end":414,"column_start":5,"column_end":38}},{"value":"/ ```should_panic","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229128,"byte_end":11229147,"line_start":415,"line_end":415,"column_start":5,"column_end":24}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229152,"byte_end":11229184,"line_start":416,"line_end":416,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229189,"byte_end":11229209,"line_start":417,"line_end":417,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229214,"byte_end":11229217,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229222,"byte_end":11229260,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229265,"byte_end":11229303,"line_start":420,"line_end":420,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229308,"byte_end":11229339,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229344,"byte_end":11229388,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::block_in_place(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229393,"byte_end":11229452,"line_start":423,"line_end":423,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229457,"byte_end":11229479,"line_start":424,"line_end":424,"column_start":5,"column_end":27}},{"value":"/         });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229484,"byte_end":11229499,"line_start":425,"line_end":425,"column_start":5,"column_end":20}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229504,"byte_end":11229522,"line_start":426,"line_end":426,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229527,"byte_end":11229538,"line_start":427,"line_end":427,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229543,"byte_end":11229571,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229576,"byte_end":11229582,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229587,"byte_end":11229594,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ This, however, will not panic:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229599,"byte_end":11229633,"line_start":431,"line_end":431,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229638,"byte_end":11229645,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"/ use tokio::runtime::Runtime;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229650,"byte_end":11229682,"line_start":433,"line_end":433,"column_start":5,"column_end":37}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229687,"byte_end":11229707,"line_start":434,"line_end":434,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229712,"byte_end":11229715,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ let rt  = Runtime::new().unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229720,"byte_end":11229758,"line_start":436,"line_end":436,"column_start":5,"column_end":43}},{"value":"/ let local = task::LocalSet::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229763,"byte_end":11229801,"line_start":437,"line_end":437,"column_start":5,"column_end":43}},{"value":"/ local.block_on(&rt, async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229806,"byte_end":11229837,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/     let join = task::spawn_local(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229842,"byte_end":11229886,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/         let blocking_result = task::spawn_blocking(|| {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229891,"byte_end":11229950,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/             // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229955,"byte_end":11229977,"line_start":441,"line_end":441,"column_start":5,"column_end":27}},{"value":"/         }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11229982,"byte_end":11230003,"line_start":442,"line_end":442,"column_start":5,"column_end":26}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230008,"byte_end":11230026,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230031,"byte_end":11230042,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/     join.await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230047,"byte_end":11230075,"line_start":445,"line_end":445,"column_start":5,"column_end":33}},{"value":"/ })","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230080,"byte_end":11230086,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230091,"byte_end":11230098,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230103,"byte_end":11230106,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230111,"byte_end":11230146,"line_start":449,"line_end":449,"column_start":5,"column_end":40}},{"value":"/ [`Runtime::block_on`]: method@crate::runtime::Runtime::block_on","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230151,"byte_end":11230218,"line_start":450,"line_end":450,"column_start":5,"column_end":72}},{"value":"/ [in-place blocking]: fn@crate::task::block_in_place","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230223,"byte_end":11230278,"line_start":451,"line_end":451,"column_start":5,"column_end":60}},{"value":"/ [`spawn_blocking`]: fn@crate::task::spawn_blocking","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230283,"byte_end":11230337,"line_start":452,"line_end":452,"column_start":5,"column_end":59}},{"value":"cfg(feature = \"rt\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230342,"byte_end":11230364,"line_start":453,"line_end":453,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":7313},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231681,"byte_end":11231690,"line_start":490,"line_end":490,"column_start":18,"column_end":27},"name":"run_until","qualname":"<LocalSet>::run_until","value":"pub async fn run_until<F, '_>(&'_ Self, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Run a future to completion on the local set, returning its output.","sig":null,"attributes":[{"value":"/ Run a future to completion on the local set, returning its output.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230589,"byte_end":11230659,"line_start":462,"line_end":462,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230664,"byte_end":11230667,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This returns a future that runs the given future with a local set,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230672,"byte_end":11230742,"line_start":464,"line_end":464,"column_start":5,"column_end":75}},{"value":"/ allowing it to call [`spawn_local`] to spawn additional `!Send` futures.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230747,"byte_end":11230823,"line_start":465,"line_end":465,"column_start":5,"column_end":81}},{"value":"/ Any local futures spawned on the local set will be driven in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230828,"byte_end":11230896,"line_start":466,"line_end":466,"column_start":5,"column_end":73}},{"value":"/ background until the future passed to `run_until` completes. When the future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230901,"byte_end":11230981,"line_start":467,"line_end":467,"column_start":5,"column_end":85}},{"value":"/ passed to `run` finishes, any local futures which have not completed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11230986,"byte_end":11231058,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ will remain on the local set, and will be driven on subsequent calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231063,"byte_end":11231138,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ `run_until` or when [awaiting the local set] itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231143,"byte_end":11231199,"line_start":470,"line_end":470,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231204,"byte_end":11231207,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231212,"byte_end":11231226,"line_start":472,"line_end":472,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231231,"byte_end":11231234,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231239,"byte_end":11231250,"line_start":474,"line_end":474,"column_start":5,"column_end":16}},{"value":"/ use tokio::task;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231255,"byte_end":11231275,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231280,"byte_end":11231283,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231288,"byte_end":11231306,"line_start":477,"line_end":477,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231311,"byte_end":11231332,"line_start":478,"line_end":478,"column_start":5,"column_end":26}},{"value":"/     task::LocalSet::new().run_until(async {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231337,"byte_end":11231384,"line_start":479,"line_end":479,"column_start":5,"column_end":52}},{"value":"/         task::spawn_local(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231389,"byte_end":11231431,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/             // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231436,"byte_end":11231458,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/         }).await.unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231463,"byte_end":11231493,"line_start":482,"line_end":482,"column_start":5,"column_end":35}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231498,"byte_end":11231516,"line_start":483,"line_end":483,"column_start":5,"column_end":23}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231521,"byte_end":11231538,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231543,"byte_end":11231548,"line_start":485,"line_end":485,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231553,"byte_end":11231560,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231565,"byte_end":11231568,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ [`spawn_local`]: fn@spawn_local","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231573,"byte_end":11231608,"line_start":488,"line_end":488,"column_start":5,"column_end":40}},{"value":"/ [awaiting the local set]: #awaiting-a-localset","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11231613,"byte_end":11231663,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":7370},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240687,"byte_end":11240695,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"LocalKey","qualname":"::task::task_local::LocalKey","value":"LocalKey { inner }","parent":null,"children":[{"krate":0,"index":7372}],"decl_id":null,"docs":" A key for task-local data.","sig":null,"attributes":[{"value":"/ A key for task-local data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11239808,"byte_end":11239838,"line_start":63,"line_end":63,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11239839,"byte_end":11239842,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This type is generated by the `task_local!` macro.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11239843,"byte_end":11239897,"line_start":65,"line_end":65,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11239898,"byte_end":11239901,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Unlike [`std::thread::LocalKey`], `tokio::task::LocalKey` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11239902,"byte_end":11239968,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/ _not_ lazily initialize the value on first access. Instead, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11239969,"byte_end":11240036,"line_start":68,"line_end":68,"column_start":1,"column_end":68}},{"value":"/ value is first initialized when the future containing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240037,"byte_end":11240094,"line_start":69,"line_end":69,"column_start":1,"column_end":58}},{"value":"/ the task-local is first polled by a futures executor, like Tokio.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240095,"byte_end":11240164,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240165,"byte_end":11240168,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240169,"byte_end":11240183,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240184,"byte_end":11240187,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240188,"byte_end":11240195,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240196,"byte_end":11240218,"line_start":75,"line_end":75,"column_start":1,"column_end":23}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240219,"byte_end":11240243,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240244,"byte_end":11240271,"line_start":77,"line_end":77,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240272,"byte_end":11240277,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240278,"byte_end":11240281,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240282,"byte_end":11240314,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 1);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240315,"byte_end":11240351,"line_start":81,"line_end":81,"column_start":1,"column_end":37}},{"value":"/ }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240352,"byte_end":11240365,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240366,"byte_end":11240369,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ NUMBER.scope(2, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240370,"byte_end":11240402,"line_start":84,"line_end":84,"column_start":1,"column_end":33}},{"value":"/     assert_eq!(NUMBER.get(), 2);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240403,"byte_end":11240439,"line_start":85,"line_end":85,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240440,"byte_end":11240443,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/     NUMBER.scope(3, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240444,"byte_end":11240480,"line_start":87,"line_end":87,"column_start":1,"column_end":37}},{"value":"/         assert_eq!(NUMBER.get(), 3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240481,"byte_end":11240521,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/     }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240522,"byte_end":11240539,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240540,"byte_end":11240553,"line_start":90,"line_end":90,"column_start":1,"column_end":14}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240554,"byte_end":11240561,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240562,"byte_end":11240569,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ [`std::thread::LocalKey`]: struct@std::thread::LocalKey","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240570,"byte_end":11240629,"line_start":93,"line_end":93,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":7372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240737,"byte_end":11240742,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"name":"inner","qualname":"::task::task_local::LocalKey::inner","value":"std::thread::LocalKey<std::cell::RefCell<std::option::Option<T>>>","parent":{"krate":0,"index":7370},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7375},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241270,"byte_end":11241275,"line_start":118,"line_end":118,"column_start":18,"column_end":23},"name":"scope","qualname":"<LocalKey<T>>::scope","value":"pub async fn scope<F>(&'static Self, T, F) -> /*impl Trait*/ where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the future `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the future `F`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240820,"byte_end":11240884,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240889,"byte_end":11240892,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240897,"byte_end":11240958,"line_start":103,"line_end":103,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240963,"byte_end":11240966,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240971,"byte_end":11240987,"line_start":105,"line_end":105,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240992,"byte_end":11240995,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241000,"byte_end":11241007,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241012,"byte_end":11241034,"line_start":108,"line_end":108,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241039,"byte_end":11241063,"line_start":109,"line_end":109,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241068,"byte_end":11241095,"line_start":110,"line_end":110,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241100,"byte_end":11241105,"line_start":111,"line_end":111,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241110,"byte_end":11241113,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ NUMBER.scope(1, async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241118,"byte_end":11241150,"line_start":113,"line_end":113,"column_start":5,"column_end":37}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241155,"byte_end":11241210,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ }).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241215,"byte_end":11241228,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241233,"byte_end":11241240,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241245,"byte_end":11241252,"line_start":117,"line_end":117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7379},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241936,"byte_end":11241946,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"sync_scope","qualname":"<LocalKey<T>>::sync_scope","value":"pub fn sync_scope<F, R>(&'static Self, T, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Sets a value `T` as the task-local value for the closure `F`.","sig":null,"attributes":[{"value":"/ Sets a value `T` as the task-local value for the closure `F`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241500,"byte_end":11241565,"line_start":130,"line_end":130,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241570,"byte_end":11241573,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ On completion of `scope`, the task-local will be dropped.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241578,"byte_end":11241639,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241644,"byte_end":11241647,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ### Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241652,"byte_end":11241668,"line_start":134,"line_end":134,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241673,"byte_end":11241676,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241681,"byte_end":11241688,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241693,"byte_end":11241715,"line_start":137,"line_end":137,"column_start":5,"column_end":27}},{"value":"/ tokio::task_local! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241720,"byte_end":11241744,"line_start":138,"line_end":138,"column_start":5,"column_end":29}},{"value":"/     static NUMBER: u32;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241749,"byte_end":11241776,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241781,"byte_end":11241786,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241791,"byte_end":11241794,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ NUMBER.sync_scope(1, || {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241799,"byte_end":11241828,"line_start":142,"line_end":142,"column_start":5,"column_end":34}},{"value":"/     println!(\"task local value: {}\", NUMBER.get());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241833,"byte_end":11241888,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/ });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241893,"byte_end":11241900,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241905,"byte_end":11241912,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11241917,"byte_end":11241924,"line_start":146,"line_end":146,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242473,"byte_end":11242477,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"with","qualname":"<LocalKey<T>>::with","value":"pub fn with<F, R>(&'static Self, F) -> R where F: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242224,"byte_end":11242290,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242295,"byte_end":11242298,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242303,"byte_end":11242315,"line_start":161,"line_end":161,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242320,"byte_end":11242323,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This function will panic if not called within the context","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242328,"byte_end":11242389,"line_start":163,"line_end":163,"column_start":5,"column_end":66}},{"value":"/ of a future containing a task-local with the corresponding key.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242394,"byte_end":11242461,"line_start":164,"line_end":164,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242965,"byte_end":11242973,"line_start":180,"line_end":180,"column_start":12,"column_end":20},"name":"try_with","qualname":"<LocalKey<T>>::try_with","value":"pub fn try_with<F, R>(&'static Self, F) -> Result<R, AccessError> where\nF: FnOnce(&T) -> R","parent":null,"children":[],"decl_id":null,"docs":" Accesses the current task-local and runs the provided closure.","sig":null,"attributes":[{"value":"/ Accesses the current task-local and runs the provided closure.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242718,"byte_end":11242784,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242789,"byte_end":11242792,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If the task-local with the associated key is not present, this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242797,"byte_end":11242863,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ method will return an `AccessError`. For a panicking variant,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242868,"byte_end":11242933,"line_start":178,"line_end":178,"column_start":5,"column_end":70}},{"value":"/ see `with`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11242938,"byte_end":11242953,"line_start":179,"line_end":179,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7392},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243433,"byte_end":11243436,"line_start":197,"line_end":197,"column_start":12,"column_end":15},"name":"get","qualname":"<LocalKey<T>>::get","value":"pub fn get(&'static Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of the task-local value\n if the task-local value implements `Copy`.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the task-local value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243328,"byte_end":11243370,"line_start":195,"line_end":195,"column_start":5,"column_end":47}},{"value":"/ if the task-local value implements `Copy`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243375,"byte_end":11243421,"line_start":196,"line_end":196,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":7473},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245097,"byte_end":11245108,"line_start":261,"line_end":261,"column_start":12,"column_end":23},"name":"AccessError","qualname":"::task::task_local::AccessError","value":"AccessError {  }","parent":null,"children":[{"krate":0,"index":7474}],"decl_id":null,"docs":" An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).\n","sig":null,"attributes":[{"value":"/ An error returned by [`LocalKey::try_with`](method@LocalKey::try_with).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244972,"byte_end":11245047,"line_start":259,"line_end":259,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":8380},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11245798,"byte_end":11245811,"line_start":10,"line_end":10,"column_start":16,"column_end":29},"name":"Unconstrained","qualname":"::task::unconstrained::Unconstrained","value":"Unconstrained {  }","parent":null,"children":[{"krate":0,"index":8382}],"decl_id":null,"docs":" Future for the [`unconstrained`](unconstrained) method.\n","sig":null,"attributes":[{"value":"must_use = \"Unconstrained does nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":7439},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11246725,"byte_end":11246738,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"unconstrained","qualname":"::task::unconstrained::unconstrained","value":"pub fn unconstrained<F>(F) -> Unconstrained<F>","parent":null,"children":[],"decl_id":null,"docs":" Turn off cooperative scheduling for a future. The future will never be forced to yield by\n Tokio. Using this exposes your service to starvation if the unconstrained future never yields\n otherwise.","sig":null,"attributes":[{"value":"/ Turn off cooperative scheduling for a future. The future will never be forced to yield by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11246382,"byte_end":11246475,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/ Tokio. Using this exposes your service to starvation if the unconstrained future never yields","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11246476,"byte_end":11246573,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ otherwise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11246574,"byte_end":11246588,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11246589,"byte_end":11246592,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ See also the usage example in the [task module](index.html#unconstrained).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11246593,"byte_end":11246671,"line_start":41,"line_end":41,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":7488},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":7489},{"krate":0,"index":7490},{"krate":0,"index":7491},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7754},{"krate":0,"index":7778},{"krate":0,"index":7815},{"krate":0,"index":7816},{"krate":0,"index":7837},{"krate":0,"index":7838},{"krate":0,"index":7839},{"krate":0,"index":7840},{"krate":0,"index":7841},{"krate":0,"index":7868},{"krate":0,"index":7869},{"krate":0,"index":7870},{"krate":0,"index":7871},{"krate":0,"index":7872}],"decl_id":null,"docs":" Utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/cfg.rs","byte_start":24331,"byte_end":24355,"line_start":311,"line_end":311,"column_start":13,"column_end":37}},{"value":"/ Utilities for tracking time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11246805,"byte_end":11246837,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11246838,"byte_end":11246841,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides a number of types for executing code after a set period","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11246842,"byte_end":11246922,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ of time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11246923,"byte_end":11246935,"line_start":4,"line_end":4,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11246936,"byte_end":11246939,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `Sleep` is a future that does no work and completes at a specific `Instant`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11246940,"byte_end":11247021,"line_start":6,"line_end":6,"column_start":1,"column_end":82}},{"value":"/   in time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247022,"byte_end":11247036,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247037,"byte_end":11247040,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ * `Interval` is a stream yielding a value at a fixed period. It is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247041,"byte_end":11247111,"line_start":9,"line_end":9,"column_start":1,"column_end":71}},{"value":"/   initialized with a `Duration` and repeatedly yields each time the duration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247112,"byte_end":11247192,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/   elapses.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247193,"byte_end":11247207,"line_start":11,"line_end":11,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247208,"byte_end":11247211,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * `Timeout`: Wraps a future or stream, setting an upper bound to the amount","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247212,"byte_end":11247291,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/   of time it is allowed to execute. If the future or stream does not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247292,"byte_end":11247364,"line_start":14,"line_end":14,"column_start":1,"column_end":73}},{"value":"/   complete in time, then it is canceled and an error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247365,"byte_end":11247434,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247435,"byte_end":11247438,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ These types are sufficient for handling a large number of scenarios","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247439,"byte_end":11247510,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ involving time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247511,"byte_end":11247530,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247531,"byte_end":11247534,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ These types must be used from within the context of the `Runtime`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247535,"byte_end":11247605,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247606,"byte_end":11247609,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247610,"byte_end":11247624,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247625,"byte_end":11247628,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247629,"byte_end":11247675,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247676,"byte_end":11247679,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247680,"byte_end":11247687,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247688,"byte_end":11247716,"line_start":27,"line_end":27,"column_start":1,"column_end":29}},{"value":"/ use tokio::time::sleep;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247717,"byte_end":11247744,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247745,"byte_end":11247748,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247749,"byte_end":11247767,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247768,"byte_end":11247789,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247790,"byte_end":11247838,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247839,"byte_end":11247879,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247880,"byte_end":11247885,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247886,"byte_end":11247893,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247894,"byte_end":11247897,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Require that an operation takes no more than 1s.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247898,"byte_end":11247950,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247951,"byte_end":11247954,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247955,"byte_end":11247962,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{timeout, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11247963,"byte_end":11248004,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248005,"byte_end":11248008,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ async fn long_future() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248009,"byte_end":11248037,"line_start":42,"line_end":42,"column_start":1,"column_end":29}},{"value":"/     // do work here","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248038,"byte_end":11248061,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248062,"byte_end":11248067,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248068,"byte_end":11248071,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248072,"byte_end":11248094,"line_start":46,"line_end":46,"column_start":1,"column_end":23}},{"value":"/ let res = timeout(Duration::from_secs(1), long_future()).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248095,"byte_end":11248162,"line_start":47,"line_end":47,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248163,"byte_end":11248166,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ if res.is_err() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248167,"byte_end":11248188,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/     println!(\"operation timed out\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248189,"byte_end":11248229,"line_start":50,"line_end":50,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248230,"byte_end":11248235,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248236,"byte_end":11248243,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248244,"byte_end":11248251,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248252,"byte_end":11248255,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A simple example using [`interval`] to execute a task every two seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248256,"byte_end":11248332,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248333,"byte_end":11248336,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The difference between [`interval`] and [`sleep`] is that an [`interval`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248337,"byte_end":11248414,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248415,"byte_end":11248490,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248491,"byte_end":11248567,"line_start":59,"line_end":59,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248568,"byte_end":11248629,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248630,"byte_end":11248633,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248634,"byte_end":11248708,"line_start":62,"line_end":62,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248709,"byte_end":11248779,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248780,"byte_end":11248792,"line_start":64,"line_end":64,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248793,"byte_end":11248796,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248797,"byte_end":11248804,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248805,"byte_end":11248825,"line_start":67,"line_end":67,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248826,"byte_end":11248829,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248830,"byte_end":11248871,"line_start":69,"line_end":69,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248872,"byte_end":11248898,"line_start":70,"line_end":70,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248899,"byte_end":11248954,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248955,"byte_end":11248960,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248961,"byte_end":11248964,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248965,"byte_end":11248983,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11248984,"byte_end":11249005,"line_start":75,"line_end":75,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249006,"byte_end":11249078,"line_start":76,"line_end":76,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249079,"byte_end":11249103,"line_start":77,"line_end":77,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249104,"byte_end":11249138,"line_start":78,"line_end":78,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249139,"byte_end":11249184,"line_start":79,"line_end":79,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249185,"byte_end":11249194,"line_start":80,"line_end":80,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249195,"byte_end":11249200,"line_start":81,"line_end":81,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249201,"byte_end":11249208,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249209,"byte_end":11249212,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249213,"byte_end":11249248,"line_start":84,"line_end":84,"column_start":1,"column_end":36}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249249,"byte_end":11249290,"line_start":85,"line_end":85,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":7668},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317688,"byte_end":11317699,"line_start":21,"line_end":21,"column_start":8,"column_end":19},"name":"sleep_until","qualname":"::time::driver::sleep::sleep_until","value":"pub fn sleep_until(Instant) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `deadline` is reached.","sig":null,"attributes":[{"value":"/ Waits until `deadline` is reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317223,"byte_end":11317261,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317262,"byte_end":11317265,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317266,"byte_end":11317346,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317347,"byte_end":11317424,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317425,"byte_end":11317460,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317461,"byte_end":11317464,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317465,"byte_end":11317483,"line_start":15,"line_end":15,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317484,"byte_end":11317487,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317488,"byte_end":11317573,"line_start":17,"line_end":17,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317574,"byte_end":11317603,"line_start":18,"line_end":18,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":7669},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318828,"byte_end":11318833,"line_start":60,"line_end":60,"column_start":8,"column_end":13},"name":"sleep","qualname":"::time::driver::sleep::sleep","value":"pub fn sleep(Duration) -> Sleep","parent":null,"children":[],"decl_id":null,"docs":" Waits until `duration` has elapsed.","sig":null,"attributes":[{"value":"/ Waits until `duration` has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317766,"byte_end":11317805,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317806,"byte_end":11317809,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Equivalent to `sleep_until(Instant::now() + duration)`. An asynchronous","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317810,"byte_end":11317885,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ analog to `std::thread::sleep`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317886,"byte_end":11317921,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317922,"byte_end":11317925,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ No work is performed while awaiting on the sleep future to complete. `Sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11317926,"byte_end":11318006,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ operates at millisecond granularity and should not be used for tasks that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318007,"byte_end":11318084,"line_start":31,"line_end":31,"column_start":1,"column_end":78}},{"value":"/ require high-resolution timers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318085,"byte_end":11318120,"line_start":32,"line_end":32,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318121,"byte_end":11318124,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ To run something regularly on a schedule, see [`interval`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318125,"byte_end":11318188,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318189,"byte_end":11318192,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The maximum duration for a sleep is 68719476734 milliseconds (approximately 2.2 years).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318193,"byte_end":11318284,"line_start":36,"line_end":36,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318285,"byte_end":11318288,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Cancellation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318289,"byte_end":11318307,"line_start":38,"line_end":38,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318308,"byte_end":11318311,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Canceling a sleep instance is done by dropping the returned future. No additional","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318312,"byte_end":11318397,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/ cleanup work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318398,"byte_end":11318427,"line_start":41,"line_end":41,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318428,"byte_end":11318431,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318432,"byte_end":11318446,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318447,"byte_end":11318450,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ Wait 100ms and print \"100 ms have elapsed\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318451,"byte_end":11318498,"line_start":45,"line_end":45,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318499,"byte_end":11318502,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318503,"byte_end":11318510,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{sleep, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318511,"byte_end":11318550,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318551,"byte_end":11318554,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318555,"byte_end":11318573,"line_start":50,"line_end":50,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318574,"byte_end":11318595,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     sleep(Duration::from_millis(100)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318596,"byte_end":11318644,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/     println!(\"100 ms have elapsed\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318645,"byte_end":11318685,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318686,"byte_end":11318691,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318692,"byte_end":11318699,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318700,"byte_end":11318703,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`interval`]: crate::time::interval()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11318704,"byte_end":11318745,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":8352},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11321981,"byte_end":11321986,"line_start":159,"line_end":159,"column_start":16,"column_end":21},"name":"Sleep","qualname":"::time::driver::sleep::Sleep","value":"Sleep {  }","parent":null,"children":[{"krate":0,"index":8353},{"krate":0,"index":8354}],"decl_id":null,"docs":" Future returned by [`sleep`](sleep) and [`sleep_until`](sleep_until).","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7673},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322530,"byte_end":11322538,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Sleep>::deadline","value":"pub fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the instant at which the future will complete.\n","sig":null,"attributes":[{"value":"/ Returns the instant at which the future will complete.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322460,"byte_end":11322518,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":7674},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322733,"byte_end":11322743,"line_start":188,"line_end":188,"column_start":12,"column_end":22},"name":"is_elapsed","qualname":"<Sleep>::is_elapsed","value":"pub fn is_elapsed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `Sleep` has elapsed.","sig":null,"attributes":[{"value":"/ Returns `true` if `Sleep` has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322592,"byte_end":11322634,"line_start":185,"line_end":185,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322639,"byte_end":11322642,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ A `Sleep` instance is elapsed when the requested duration has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322647,"byte_end":11322721,"line_start":187,"line_end":187,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7675},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323742,"byte_end":11323747,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"reset","qualname":"<Sleep>::reset","value":"pub fn reset(Pin<&mut Self>, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Sleep` instance to a new deadline.","sig":null,"attributes":[{"value":"/ Resets the `Sleep` instance to a new deadline.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322804,"byte_end":11322854,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322859,"byte_end":11322862,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Calling this function allows changing the instant at which the `Sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322867,"byte_end":11322941,"line_start":194,"line_end":194,"column_start":5,"column_end":79}},{"value":"/ future completes without having to create new associated state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322946,"byte_end":11323013,"line_start":195,"line_end":195,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323018,"byte_end":11323021,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This function can be called both before and after the future has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323026,"byte_end":11323094,"line_start":197,"line_end":197,"column_start":5,"column_end":73}},{"value":"/ completed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323099,"byte_end":11323113,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323118,"byte_end":11323121,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ To call this method, you will usually combine the call with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323126,"byte_end":11323189,"line_start":200,"line_end":200,"column_start":5,"column_end":68}},{"value":"/ [`Pin::as_mut`], which lets you call the method without consuming the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323194,"byte_end":11323267,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ `Sleep` itself.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323272,"byte_end":11323291,"line_start":202,"line_end":202,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323296,"byte_end":11323299,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323304,"byte_end":11323317,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323322,"byte_end":11323325,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323330,"byte_end":11323337,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323342,"byte_end":11323383,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323388,"byte_end":11323391,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323396,"byte_end":11323443,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ # async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323448,"byte_end":11323471,"line_start":210,"line_end":210,"column_start":5,"column_end":28}},{"value":"/ let sleep = tokio::time::sleep(Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323476,"byte_end":11323538,"line_start":211,"line_end":211,"column_start":5,"column_end":67}},{"value":"/ tokio::pin!(sleep);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323543,"byte_end":11323566,"line_start":212,"line_end":212,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323571,"byte_end":11323574,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ sleep.as_mut().reset(Instant::now() + Duration::from_millis(20));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323579,"byte_end":11323648,"line_start":214,"line_end":214,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323653,"byte_end":11323660,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323665,"byte_end":11323672,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323677,"byte_end":11323680,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ [`Pin::as_mut`]: fn@std::pin::Pin::as_mut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11323685,"byte_end":11323730,"line_start":218,"line_end":218,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":7754},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::time::error","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","parent":null,"children":[{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7949},{"krate":0,"index":7955},{"krate":0,"index":7954},{"krate":0,"index":7952},{"krate":0,"index":7957},{"krate":0,"index":7976},{"krate":0,"index":7974},{"krate":0,"index":7973},{"krate":0,"index":7970},{"krate":0,"index":7971},{"krate":0,"index":7967},{"krate":0,"index":7968},{"krate":0,"index":7758},{"krate":0,"index":7978},{"krate":0,"index":7985},{"krate":0,"index":7981},{"krate":0,"index":7982},{"krate":0,"index":7987},{"krate":0,"index":7990},{"krate":0,"index":7760},{"krate":0,"index":7767},{"krate":0,"index":7768},{"krate":0,"index":7771},{"krate":0,"index":7773},{"krate":0,"index":7775},{"krate":0,"index":7776}],"decl_id":null,"docs":" Time error types.\n","sig":null,"attributes":[{"value":"/ Time error types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325036,"byte_end":11325057,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":7949},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326244,"byte_end":11326249,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Error","qualname":"::time::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Errors encountered by the timer implementation.","sig":null,"attributes":[{"value":"/ Errors encountered by the timer implementation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325109,"byte_end":11325160,"line_start":7,"line_end":7,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325161,"byte_end":11325164,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two different errors that can occur:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325165,"byte_end":11325226,"line_start":9,"line_end":9,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325227,"byte_end":11325230,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ * `shutdown` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325231,"byte_end":11325305,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/   instance has been dropped. In this case, the operation will never be able","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325306,"byte_end":11325385,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/   to complete and the `shutdown` error is returned. This is a permanent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325386,"byte_end":11325461,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/   error, i.e., once this error is observed, timer operations will never","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325462,"byte_end":11325537,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/   succeed in the future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325538,"byte_end":11325566,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325567,"byte_end":11325570,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * `at_capacity` occurs when a timer operation is attempted, but the timer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325571,"byte_end":11325648,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/   instance is currently handling its maximum number of outstanding sleep instances.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325649,"byte_end":11325736,"line_start":18,"line_end":18,"column_start":1,"column_end":88}},{"value":"/   In this case, the operation is not able to be performed at the current","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325737,"byte_end":11325813,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/   moment, and `at_capacity` is returned. This is a transient error, i.e., at","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325814,"byte_end":11325894,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/   some point in the future, if the operation is attempted again, it might","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325895,"byte_end":11325972,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/   succeed. Callers that observe this error should attempt to [shed load]. One","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11325973,"byte_end":11326054,"line_start":22,"line_end":22,"column_start":1,"column_end":82}},{"value":"/   way to do this would be dropping the future that issued the timer operation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326055,"byte_end":11326137,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326138,"byte_end":11326141,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [shed load]: https://en.wikipedia.org/wiki/Load_Shedding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326142,"byte_end":11326202,"line_start":25,"line_end":25,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":7978},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326553,"byte_end":11326560,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Elapsed","qualname":"::time::error::Elapsed","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by `Timeout`.\n","sig":null,"attributes":[{"value":"/ Error returned by `Timeout`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326481,"byte_end":11326513,"line_start":43,"line_end":43,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7761},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326737,"byte_end":11326745,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<Error>::shutdown","value":"pub fn shutdown() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a shutdown timer.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a shutdown timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326674,"byte_end":11326725,"line_start":55,"line_end":55,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":7762},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326877,"byte_end":11326888,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<Error>::is_shutdown","value":"pub fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being shutdown.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being shutdown.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326794,"byte_end":11326865,"line_start":60,"line_end":60,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":7763},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327024,"byte_end":11327035,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"at_capacity","qualname":"<Error>::at_capacity","value":"pub fn at_capacity() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Creates an error representing a timer at capacity.\n","sig":null,"attributes":[{"value":"/ Creates an error representing a timer at capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326958,"byte_end":11327012,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7764},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327172,"byte_end":11327186,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"is_at_capacity","qualname":"<Error>::is_at_capacity","value":"pub fn is_at_capacity(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being at capacity.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being at capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327086,"byte_end":11327160,"line_start":70,"line_end":70,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":7765},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327325,"byte_end":11327332,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"invalid","qualname":"<Error>::invalid","value":"pub fn invalid() -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an error representing a misconfigured timer.\n","sig":null,"attributes":[{"value":"/ Create an error representing a misconfigured timer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327258,"byte_end":11327313,"line_start":75,"line_end":75,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":7766},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327468,"byte_end":11327478,"line_start":81,"line_end":81,"column_start":12,"column_end":22},"name":"is_invalid","qualname":"<Error>::is_invalid","value":"pub fn is_invalid(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the error was caused by the timer being misconfigured.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the error was caused by the timer being misconfigured.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327380,"byte_end":11327456,"line_start":80,"line_end":80,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":7992},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329856,"byte_end":11329863,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Instant","qualname":"::time::instant::Instant","value":"Instant {  }","parent":null,"children":[{"krate":0,"index":7993}],"decl_id":null,"docs":" A measurement of a monotonically nondecreasing clock.\n Opaque and useful only with `Duration`.","sig":null,"attributes":[{"value":"/ A measurement of a monotonically nondecreasing clock.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328565,"byte_end":11328622,"line_start":7,"line_end":7,"column_start":1,"column_end":58}},{"value":"/ Opaque and useful only with `Duration`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328623,"byte_end":11328666,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328667,"byte_end":11328670,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328671,"byte_end":11328748,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ instant when created, and are often useful for tasks such as measuring","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328749,"byte_end":11328823,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ benchmarks or timing how long an operation takes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328824,"byte_end":11328877,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328878,"byte_end":11328881,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328882,"byte_end":11328960,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ words, each tick of the underlying clock may not be the same length (e.g.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11328961,"byte_end":11329038,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ some seconds may be longer than others). An instant may jump forwards or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329039,"byte_end":11329115,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ experience time dilation (slow down or speed up), but it will never go","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329116,"byte_end":11329190,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ backwards.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329191,"byte_end":11329205,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329206,"byte_end":11329209,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329210,"byte_end":11329290,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ no method to get \"the number of seconds\" from an instant. Instead, it only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329291,"byte_end":11329369,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ allows measuring the duration between two instants (or comparing two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329370,"byte_end":11329442,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ instants).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329443,"byte_end":11329457,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329458,"byte_end":11329461,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The size of an `Instant` struct may vary depending on the target operating","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329462,"byte_end":11329540,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ system.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329541,"byte_end":11329552,"line_start":26,"line_end":26,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329553,"byte_end":11329556,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329557,"byte_end":11329567,"line_start":28,"line_end":28,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329568,"byte_end":11329571,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ This type wraps the inner `std` variant and is used to align the Tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329572,"byte_end":11329646,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ clock for uses of `now()`. This can be useful for testing where you can","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329647,"byte_end":11329722,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ take advantage of `time::pause()` and `time::advance()`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329723,"byte_end":11329783,"line_start":32,"line_end":32,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7783},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330110,"byte_end":11330113,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"pub fn now() -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns an instant corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an instant corresponding to \"now\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329917,"byte_end":11329963,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329968,"byte_end":11329971,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329976,"byte_end":11329990,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329995,"byte_end":11329998,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330003,"byte_end":11330010,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::Instant;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330015,"byte_end":11330044,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330049,"byte_end":11330052,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330057,"byte_end":11330086,"line_start":46,"line_end":46,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330091,"byte_end":11330098,"line_start":47,"line_end":47,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7784},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330239,"byte_end":11330247,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Instant>::from_std","value":"pub fn from_std(std::time::Instant) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Create a `tokio::time::Instant` from a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Create a `tokio::time::Instant` from a `std::time::Instant`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330163,"byte_end":11330227,"line_start":52,"line_end":52,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":7786},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330730,"byte_end":11330738,"line_start":66,"line_end":66,"column_start":12,"column_end":20},"name":"into_std","qualname":"<Instant>::into_std","value":"pub fn into_std(Self) -> std::time::Instant","parent":null,"children":[],"decl_id":null,"docs":" Convert the value into a `std::time::Instant`.\n","sig":null,"attributes":[{"value":"/ Convert the value into a `std::time::Instant`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330668,"byte_end":11330718,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":7787},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330982,"byte_end":11330996,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"duration_since","qualname":"<Instant>::duration_since","value":"pub fn duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330797,"byte_end":11330869,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330874,"byte_end":11330877,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330882,"byte_end":11330894,"line_start":72,"line_end":72,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330899,"byte_end":11330902,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This function will panic if `earlier` is later than `self`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11330907,"byte_end":11330970,"line_start":74,"line_end":74,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7788},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331679,"byte_end":11331701,"line_start":96,"line_end":96,"column_start":12,"column_end":34},"name":"checked_duration_since","qualname":"<Instant>::checked_duration_since","value":"pub fn checked_duration_since(&Self, Instant) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n None if that instant is later than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331092,"byte_end":11331167,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ None if that instant is later than this one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331172,"byte_end":11331220,"line_start":80,"line_end":80,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331225,"byte_end":11331228,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331233,"byte_end":11331247,"line_start":82,"line_end":82,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331252,"byte_end":11331255,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331260,"byte_end":11331267,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331272,"byte_end":11331320,"line_start":85,"line_end":85,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331325,"byte_end":11331328,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331333,"byte_end":11331351,"line_start":87,"line_end":87,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331356,"byte_end":11331377,"line_start":88,"line_end":88,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331382,"byte_end":11331415,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331420,"byte_end":11331461,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331466,"byte_end":11331503,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.checked_duration_since(now));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331508,"byte_end":11331570,"line_start":92,"line_end":92,"column_start":5,"column_end":67}},{"value":"/     println!(\"{:?}\", now.checked_duration_since(new_now)); // None","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331575,"byte_end":11331645,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331650,"byte_end":11331655,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331660,"byte_end":11331667,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7789},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332416,"byte_end":11332441,"line_start":117,"line_end":117,"column_start":12,"column_end":37},"name":"saturating_duration_since","qualname":"<Instant>::saturating_duration_since","value":"pub fn saturating_duration_since(&Self, Instant) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed from another instant to this one, or\n zero duration if that instant is earlier than this one.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed from another instant to this one, or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331813,"byte_end":11331888,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/ zero duration if that instant is earlier than this one.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331893,"byte_end":11331952,"line_start":101,"line_end":101,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331957,"byte_end":11331960,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331965,"byte_end":11331979,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331984,"byte_end":11331987,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11331992,"byte_end":11331999,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332004,"byte_end":11332052,"line_start":106,"line_end":106,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332057,"byte_end":11332060,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332065,"byte_end":11332083,"line_start":108,"line_end":108,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332088,"byte_end":11332109,"line_start":109,"line_end":109,"column_start":5,"column_end":26}},{"value":"/     let now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332114,"byte_end":11332147,"line_start":110,"line_end":110,"column_start":5,"column_end":38}},{"value":"/     sleep(Duration::new(1, 0)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332152,"byte_end":11332193,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/     let new_now = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332198,"byte_end":11332235,"line_start":112,"line_end":112,"column_start":5,"column_end":42}},{"value":"/     println!(\"{:?}\", new_now.saturating_duration_since(now));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332240,"byte_end":11332305,"line_start":113,"line_end":113,"column_start":5,"column_end":70}},{"value":"/     println!(\"{:?}\", now.saturating_duration_since(new_now)); // 0ns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332310,"byte_end":11332382,"line_start":114,"line_end":114,"column_start":5,"column_end":77}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332387,"byte_end":11332392,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332397,"byte_end":11332404,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7790},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333204,"byte_end":11333211,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"pub fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332548,"byte_end":11332618,"line_start":121,"line_end":121,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332623,"byte_end":11332626,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332631,"byte_end":11332643,"line_start":123,"line_end":123,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332648,"byte_end":11332651,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This function may panic if the current time is earlier than this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332656,"byte_end":11332724,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ instant, which is something that can happen if an `Instant` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332729,"byte_end":11332795,"line_start":126,"line_end":126,"column_start":5,"column_end":71}},{"value":"/ produced synthetically.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332800,"byte_end":11332827,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332832,"byte_end":11332835,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332840,"byte_end":11332854,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332859,"byte_end":11332862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332867,"byte_end":11332874,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"/ use tokio::time::{Duration, Instant, sleep};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332879,"byte_end":11332927,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332932,"byte_end":11332935,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332940,"byte_end":11332958,"line_start":134,"line_end":134,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332963,"byte_end":11332984,"line_start":135,"line_end":135,"column_start":5,"column_end":26}},{"value":"/     let instant = Instant::now();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11332989,"byte_end":11333026,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/     let three_secs = Duration::from_secs(3);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333031,"byte_end":11333079,"line_start":137,"line_end":137,"column_start":5,"column_end":53}},{"value":"/     sleep(three_secs).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333084,"byte_end":11333116,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/     assert!(instant.elapsed() >= three_secs);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333121,"byte_end":11333170,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333175,"byte_end":11333180,"line_start":140,"line_end":140,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333185,"byte_end":11333192,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7791},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333492,"byte_end":11333503,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"pub fn checked_add(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333275,"byte_end":11333350,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333355,"byte_end":11333426,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333431,"byte_end":11333480,"line_start":148,"line_end":148,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":7792},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333842,"byte_end":11333853,"line_start":156,"line_end":156,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"pub fn checked_sub(&Self, Duration) -> Option<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be\n represented as `Instant` (which means it's inside the bounds of the\n underlying data structure), `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333625,"byte_end":11333700,"line_start":153,"line_end":153,"column_start":5,"column_end":80}},{"value":"/ represented as `Instant` (which means it's inside the bounds of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333705,"byte_end":11333776,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ underlying data structure), `None` otherwise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11333781,"byte_end":11333830,"line_start":155,"line_end":155,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":7828},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337297,"byte_end":11337305,"line_start":67,"line_end":67,"column_start":8,"column_end":16},"name":"interval","qualname":"::time::interval::interval","value":"pub fn interval(Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `duration`. The first\n tick completes immediately.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `duration`. The first","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335575,"byte_end":11335652,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ tick completes immediately.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335653,"byte_end":11335684,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335685,"byte_end":11335688,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335689,"byte_end":11335769,"line_start":11,"line_end":11,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335770,"byte_end":11335809,"line_start":12,"line_end":12,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335810,"byte_end":11335813,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This function is equivalent to `interval_at(Instant::now(), period)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335814,"byte_end":11335887,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335888,"byte_end":11335891,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335892,"byte_end":11335904,"line_start":16,"line_end":16,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335905,"byte_end":11335908,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335909,"byte_end":11335954,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335955,"byte_end":11335958,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335959,"byte_end":11335973,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335974,"byte_end":11335977,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335978,"byte_end":11335985,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{self, Duration};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11335986,"byte_end":11336024,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336025,"byte_end":11336028,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336029,"byte_end":11336047,"line_start":25,"line_end":25,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336048,"byte_end":11336069,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336070,"byte_end":11336139,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336140,"byte_end":11336143,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336144,"byte_end":11336174,"line_start":29,"line_end":29,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336175,"byte_end":11336205,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336206,"byte_end":11336236,"line_start":31,"line_end":31,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336237,"byte_end":11336240,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336241,"byte_end":11336284,"line_start":33,"line_end":33,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336285,"byte_end":11336290,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336291,"byte_end":11336298,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336299,"byte_end":11336302,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A simple example using `interval` to execute a task every two seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336303,"byte_end":11336377,"line_start":37,"line_end":37,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336378,"byte_end":11336381,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The difference between `interval` and [`sleep`] is that an `interval`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336382,"byte_end":11336455,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ measures the time since the last tick, which means that `.tick().await`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336456,"byte_end":11336531,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/ may wait for a shorter time than the duration specified for the interval","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336532,"byte_end":11336608,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ if some time has passed between calls to `.tick().await`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336609,"byte_end":11336670,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336671,"byte_end":11336674,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ If the tick in the example below was replaced with [`sleep`], the task","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336675,"byte_end":11336749,"line_start":44,"line_end":44,"column_start":1,"column_end":75}},{"value":"/ would only be executed once every three seconds, and not every two","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336750,"byte_end":11336820,"line_start":45,"line_end":45,"column_start":1,"column_end":71}},{"value":"/ seconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336821,"byte_end":11336833,"line_start":46,"line_end":46,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336834,"byte_end":11336837,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336838,"byte_end":11336845,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336846,"byte_end":11336866,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336867,"byte_end":11336870,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ async fn task_that_takes_a_second() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336871,"byte_end":11336912,"line_start":51,"line_end":51,"column_start":1,"column_end":42}},{"value":"/     println!(\"hello\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336913,"byte_end":11336939,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/     time::sleep(time::Duration::from_secs(1)).await","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336940,"byte_end":11336995,"line_start":53,"line_end":53,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11336996,"byte_end":11337001,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337002,"byte_end":11337005,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337006,"byte_end":11337024,"line_start":56,"line_end":56,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337025,"byte_end":11337046,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/     let mut interval = time::interval(time::Duration::from_secs(2));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337047,"byte_end":11337119,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/     for _i in 0..5 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337120,"byte_end":11337144,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/         interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337145,"byte_end":11337179,"line_start":60,"line_end":60,"column_start":1,"column_end":35}},{"value":"/         task_that_takes_a_second().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337180,"byte_end":11337225,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337226,"byte_end":11337235,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337236,"byte_end":11337241,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337242,"byte_end":11337249,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337250,"byte_end":11337253,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ [`sleep`]: crate::time::sleep()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337254,"byte_end":11337289,"line_start":66,"line_end":66,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":7829},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338194,"byte_end":11338205,"line_start":100,"line_end":100,"column_start":8,"column_end":19},"name":"interval_at","qualname":"::time::interval::interval_at","value":"pub fn interval_at(Instant, Duration) -> Interval","parent":null,"children":[],"decl_id":null,"docs":" Creates new `Interval` that yields with interval of `period` with the\n first tick completing at `start`.","sig":null,"attributes":[{"value":"/ Creates new `Interval` that yields with interval of `period` with the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337455,"byte_end":11337528,"line_start":73,"line_end":73,"column_start":1,"column_end":74}},{"value":"/ first tick completing at `start`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337529,"byte_end":11337566,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337567,"byte_end":11337570,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ An interval will tick indefinitely. At any time, the `Interval` value can be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337571,"byte_end":11337651,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ dropped. This cancels the interval.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337652,"byte_end":11337691,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337692,"byte_end":11337695,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337696,"byte_end":11337708,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337709,"byte_end":11337712,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This function panics if `period` is zero.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337713,"byte_end":11337758,"line_start":81,"line_end":81,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337759,"byte_end":11337762,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337763,"byte_end":11337777,"line_start":83,"line_end":83,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337778,"byte_end":11337781,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337782,"byte_end":11337789,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio::time::{interval_at, Duration, Instant};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337790,"byte_end":11337844,"line_start":86,"line_end":86,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337845,"byte_end":11337848,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337849,"byte_end":11337867,"line_start":88,"line_end":88,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337868,"byte_end":11337889,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/     let start = Instant::now() + Duration::from_millis(50);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337890,"byte_end":11337953,"line_start":90,"line_end":90,"column_start":1,"column_end":64}},{"value":"/     let mut interval = interval_at(start, Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11337954,"byte_end":11338027,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338028,"byte_end":11338031,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338032,"byte_end":11338062,"line_start":93,"line_end":93,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338063,"byte_end":11338093,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338094,"byte_end":11338124,"line_start":95,"line_end":95,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338125,"byte_end":11338128,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     // approximately 70ms have elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338129,"byte_end":11338172,"line_start":97,"line_end":97,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338173,"byte_end":11338178,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338179,"byte_end":11338186,"line_start":99,"line_end":99,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8015},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338960,"byte_end":11338968,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"Interval","qualname":"::time::interval::Interval","value":"Interval {  }","parent":null,"children":[{"krate":0,"index":8016},{"krate":0,"index":8017}],"decl_id":null,"docs":" Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","sig":null,"attributes":[{"value":"/ Interval returned by [`interval`](interval) and [`interval_at`](interval_at).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338413,"byte_end":11338494,"line_start":109,"line_end":109,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338495,"byte_end":11338498,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This type allows you to wait on a sequence of instants with a certain","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338499,"byte_end":11338572,"line_start":111,"line_end":111,"column_start":1,"column_end":74}},{"value":"/ duration between each instant. Unlike calling [`sleep`](crate::time::sleep)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338573,"byte_end":11338652,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ in a loop, this lets you count the time spent between the calls to `sleep`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338653,"byte_end":11338731,"line_start":113,"line_end":113,"column_start":1,"column_end":79}},{"value":"/ as well.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338732,"byte_end":11338744,"line_start":114,"line_end":114,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338745,"byte_end":11338748,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ An `Interval` can be turned into a `Stream` with [`IntervalStream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338749,"byte_end":11338821,"line_start":116,"line_end":116,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338822,"byte_end":11338825,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ [`IntervalStream`]: https://docs.rs/tokio-stream/0.1/tokio_stream/wrappers/struct.IntervalStream.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11338826,"byte_end":11338931,"line_start":118,"line_end":118,"column_start":1,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7831},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339701,"byte_end":11339705,"line_start":149,"line_end":149,"column_start":18,"column_end":22},"name":"tick","qualname":"<Interval>::tick","value":"pub async fn tick<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Completes when the next instant in the interval has been reached.","sig":null,"attributes":[{"value":"/ Completes when the next instant in the interval has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339179,"byte_end":11339248,"line_start":129,"line_end":129,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339253,"byte_end":11339256,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339261,"byte_end":11339275,"line_start":131,"line_end":131,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339280,"byte_end":11339283,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339288,"byte_end":11339295,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ use tokio::time;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339300,"byte_end":11339320,"line_start":134,"line_end":134,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339325,"byte_end":11339328,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339333,"byte_end":11339361,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339366,"byte_end":11339369,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339374,"byte_end":11339392,"line_start":138,"line_end":138,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339397,"byte_end":11339418,"line_start":139,"line_end":139,"column_start":5,"column_end":26}},{"value":"/     let mut interval = time::interval(Duration::from_millis(10));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339423,"byte_end":11339492,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339497,"byte_end":11339500,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339505,"byte_end":11339535,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339540,"byte_end":11339570,"line_start":143,"line_end":143,"column_start":5,"column_end":35}},{"value":"/     interval.tick().await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339575,"byte_end":11339605,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339610,"byte_end":11339613,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/     // approximately 20ms have elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339618,"byte_end":11339661,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339666,"byte_end":11339671,"line_start":147,"line_end":147,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339676,"byte_end":11339683,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7835},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340381,"byte_end":11340390,"line_start":164,"line_end":164,"column_start":12,"column_end":21},"name":"poll_tick","qualname":"<Interval>::poll_tick","value":"pub fn poll_tick(&mut Self, &mut Context) -> Poll<Instant>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next instant in the interval to be reached.","sig":null,"attributes":[{"value":"/ Poll for the next instant in the interval to be reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339788,"byte_end":11339848,"line_start":153,"line_end":153,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339853,"byte_end":11339856,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339861,"byte_end":11339909,"line_start":155,"line_end":155,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339914,"byte_end":11339917,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/  * `Poll::Pending` if the next instant has not yet been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339922,"byte_end":11339990,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/  * `Poll::Ready(instant)` if the next instant has been reached.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339995,"byte_end":11340062,"line_start":158,"line_end":158,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340067,"byte_end":11340070,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340075,"byte_end":11340150,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the instant has elapsed. Note that on multiple","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340155,"byte_end":11340230,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ calls to `poll_tick`, only the `Waker` from the `Context` passed to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340235,"byte_end":11340310,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ most recent call is scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340315,"byte_end":11340369,"line_start":163,"line_end":163,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":7836},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340937,"byte_end":11340943,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"period","qualname":"<Interval>::period","value":"pub fn period(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the period of the interval.\n","sig":null,"attributes":[{"value":"/ Returns the period of the interval.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11340886,"byte_end":11340925,"line_start":180,"line_end":180,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":7854},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342347,"byte_end":11342354,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"timeout","qualname":"::time::timeout::timeout","value":"pub fn timeout<T>(Duration, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified duration has elapsed.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified duration has elapsed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341332,"byte_end":11341409,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341410,"byte_end":11341413,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the duration has elapsed, then the completed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341414,"byte_end":11341493,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ value is returned. Otherwise, an error is returned and the future is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341494,"byte_end":11341566,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ canceled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341567,"byte_end":11341580,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341581,"byte_end":11341584,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341585,"byte_end":11341602,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341603,"byte_end":11341606,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341607,"byte_end":11341685,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341686,"byte_end":11341716,"line_start":23,"line_end":23,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341717,"byte_end":11341720,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341721,"byte_end":11341801,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341802,"byte_end":11341829,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341830,"byte_end":11341833,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341834,"byte_end":11341848,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341849,"byte_end":11341852,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341853,"byte_end":11341913,"line_start":30,"line_end":30,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341914,"byte_end":11341917,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341918,"byte_end":11341929,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::timeout;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341930,"byte_end":11341959,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341960,"byte_end":11341989,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341990,"byte_end":11341993,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11341994,"byte_end":11342022,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342023,"byte_end":11342026,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342027,"byte_end":11342049,"line_start":38,"line_end":38,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342050,"byte_end":11342088,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342089,"byte_end":11342116,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342117,"byte_end":11342120,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342121,"byte_end":11342194,"line_start":42,"line_end":42,"column_start":1,"column_end":74}},{"value":"/ if let Err(_) = timeout(Duration::from_millis(10), rx).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342195,"byte_end":11342261,"line_start":43,"line_end":43,"column_start":1,"column_end":67}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342262,"byte_end":11342317,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342318,"byte_end":11342323,"line_start":45,"line_end":45,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342324,"byte_end":11342331,"line_start":46,"line_end":46,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342332,"byte_end":11342339,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":7856},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343693,"byte_end":11343703,"line_start":94,"line_end":94,"column_start":8,"column_end":18},"name":"timeout_at","qualname":"::time::timeout::timeout_at","value":"pub fn timeout_at<T>(Instant, T) -> Timeout<T> where T: Future","parent":null,"children":[],"decl_id":null,"docs":" Require a `Future` to complete before the specified instant in time.","sig":null,"attributes":[{"value":"/ Require a `Future` to complete before the specified instant in time.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342662,"byte_end":11342734,"line_start":60,"line_end":60,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342735,"byte_end":11342738,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If the future completes before the instant is reached, then the completed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342739,"byte_end":11342816,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ value is returned. Otherwise, an error is returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342817,"byte_end":11342872,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342873,"byte_end":11342876,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Cancelation","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342877,"byte_end":11342894,"line_start":65,"line_end":65,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342895,"byte_end":11342898,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Cancelling a timeout is done by dropping the future. No additional cleanup","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342899,"byte_end":11342977,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"/ or other work is required.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11342978,"byte_end":11343008,"line_start":68,"line_end":68,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343009,"byte_end":11343012,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ The original future may be obtained by calling [`Timeout::into_inner`]. This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343013,"byte_end":11343093,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ consumes the `Timeout`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343094,"byte_end":11343121,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343122,"byte_end":11343125,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343126,"byte_end":11343140,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343141,"byte_end":11343144,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Create a new `Timeout` set to expire in 10 milliseconds.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343145,"byte_end":11343205,"line_start":75,"line_end":75,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343206,"byte_end":11343209,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343210,"byte_end":11343221,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ use tokio::time::{Instant, timeout_at};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343222,"byte_end":11343265,"line_start":78,"line_end":78,"column_start":1,"column_end":44}},{"value":"/ use tokio::sync::oneshot;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343266,"byte_end":11343295,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343296,"byte_end":11343299,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343300,"byte_end":11343328,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343329,"byte_end":11343332,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ # async fn dox() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343333,"byte_end":11343355,"line_start":83,"line_end":83,"column_start":1,"column_end":23}},{"value":"/ let (tx, rx) = oneshot::channel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343356,"byte_end":11343394,"line_start":84,"line_end":84,"column_start":1,"column_end":39}},{"value":"/ # tx.send(()).unwrap();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343395,"byte_end":11343422,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343423,"byte_end":11343426,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // Wrap the future with a `Timeout` set to expire 10 milliseconds into the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343427,"byte_end":11343505,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ // future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343506,"byte_end":11343520,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/ if let Err(_) = timeout_at(Instant::now() + Duration::from_millis(10), rx).await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343521,"byte_end":11343607,"line_start":89,"line_end":89,"column_start":1,"column_end":87}},{"value":"/     println!(\"did not receive value within 10 ms\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343608,"byte_end":11343663,"line_start":90,"line_end":90,"column_start":1,"column_end":56}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343664,"byte_end":11343669,"line_start":91,"line_end":91,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343670,"byte_end":11343677,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11343678,"byte_end":11343685,"line_start":93,"line_end":93,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8314},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344078,"byte_end":11344085,"line_start":110,"line_end":110,"column_start":16,"column_end":23},"name":"Timeout","qualname":"::time::timeout::Timeout","value":"Timeout {  }","parent":null,"children":[{"krate":0,"index":8316},{"krate":0,"index":8317}],"decl_id":null,"docs":" Future returned by [`timeout`](timeout) and [`timeout_at`](timeout_at).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.6/src/lib.rs","byte_start":11605322,"byte_end":11605331,"line_start":335,"line_end":335,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7861},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344381,"byte_end":11344388,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Timeout<T>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this timeout.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344308,"byte_end":11344369,"line_start":123,"line_end":123,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7862},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344516,"byte_end":11344523,"line_start":129,"line_end":129,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Timeout<T>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this timeout.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this timeout.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344435,"byte_end":11344504,"line_start":128,"line_end":128,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":7863},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344652,"byte_end":11344662,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Timeout<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this timeout, returning the underlying value.\n","sig":null,"attributes":[{"value":"/ Consumes this timeout, returning the underlying value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344582,"byte_end":11344640,"line_start":133,"line_end":133,"column_start":5,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":643},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":139057,"byte_end":139063,"line_start":47,"line_end":47,"column_start":10,"column_end":16},"name":"Handle","qualname":"::util::linked_list::Link::Handle","value":"type Handle;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Handle to the list entry.","sig":null,"attributes":[{"value":"/ Handle to the list entry.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":138966,"byte_end":138995,"line_start":44,"line_end":44,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":139000,"byte_end":139003,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This is usually a pointer-ish type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":139008,"byte_end":139047,"line_start":46,"line_end":46,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":139093,"byte_end":139099,"line_start":50,"line_end":50,"column_start":10,"column_end":16},"name":"Target","qualname":"::util::linked_list::Link::Target","value":"type Target;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Node type\n","sig":null,"attributes":[{"value":"/ Node type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":139070,"byte_end":139083,"line_start":49,"line_end":49,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":699},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16395,"byte_end":16401,"line_start":443,"line_end":443,"column_start":9,"column_end":15},"name":"stream","qualname":"::stream","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","parent":null,"children":[],"decl_id":null,"docs":" Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0\n release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]\n crate.","sig":null,"attributes":[{"value":"/ Due to the `Stream` trait's inclusion in `std` landing later than Tokio's 1.0","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14899,"byte_end":14980,"line_start":406,"line_end":406,"column_start":1,"column_end":82}},{"value":"/ release, most of the Tokio stream utilities have been moved into the [`tokio-stream`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14981,"byte_end":15070,"line_start":407,"line_end":407,"column_start":1,"column_end":90}},{"value":"/ crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15071,"byte_end":15081,"line_start":408,"line_end":408,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15082,"byte_end":15085,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"/ # Why was `Stream` not included in Tokio 1.0?","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15086,"byte_end":15135,"line_start":410,"line_end":410,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15136,"byte_end":15139,"line_start":411,"line_end":411,"column_start":1,"column_end":4}},{"value":"/ Originally, we had planned to ship Tokio 1.0 with a stable `Stream` type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15140,"byte_end":15216,"line_start":412,"line_end":412,"column_start":1,"column_end":77}},{"value":"/ but unfortunately the [RFC] had not been merged in time for `Stream` to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15217,"byte_end":15292,"line_start":413,"line_end":413,"column_start":1,"column_end":76}},{"value":"/ reach `std` on a stable compiler in time for the 1.0 release of Tokio. For","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15293,"byte_end":15371,"line_start":414,"line_end":414,"column_start":1,"column_end":79}},{"value":"/ this reason, the team has decided to move all `Stream` based utilities to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15372,"byte_end":15449,"line_start":415,"line_end":415,"column_start":1,"column_end":78}},{"value":"/ the [`tokio-stream`] crate. While this is not ideal, once `Stream` has made","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15450,"byte_end":15529,"line_start":416,"line_end":416,"column_start":1,"column_end":80}},{"value":"/ it into the standard library and the MSRV period has passed, we will implement","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15530,"byte_end":15612,"line_start":417,"line_end":417,"column_start":1,"column_end":83}},{"value":"/ stream for our different types.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15613,"byte_end":15648,"line_start":418,"line_end":418,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15649,"byte_end":15652,"line_start":419,"line_end":419,"column_start":1,"column_end":4}},{"value":"/ While this may seem unfortunate, not all is lost as you can get much of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15653,"byte_end":15732,"line_start":420,"line_end":420,"column_start":1,"column_end":80}},{"value":"/ `Stream` support with `async/await` and `while let` loops. It is also possible","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15733,"byte_end":15815,"line_start":421,"line_end":421,"column_start":1,"column_end":83}},{"value":"/ to create a `impl Stream` from `async fn` using the [`async-stream`] crate.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15816,"byte_end":15895,"line_start":422,"line_end":422,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15896,"byte_end":15899,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ [`tokio-stream`]: https://docs.rs/tokio-stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15900,"byte_end":15950,"line_start":424,"line_end":424,"column_start":1,"column_end":51}},{"value":"/ [`async-stream`]: https://docs.rs/async-stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":15951,"byte_end":16001,"line_start":425,"line_end":425,"column_start":1,"column_end":51}},{"value":"/ [RFC]: https://github.com/rust-lang/rfcs/pull/2996","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16002,"byte_end":16056,"line_start":426,"line_end":426,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16057,"byte_end":16060,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16061,"byte_end":16074,"line_start":428,"line_end":428,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16075,"byte_end":16078,"line_start":429,"line_end":429,"column_start":1,"column_end":4}},{"value":"/ Convert a [`sync::mpsc::Receiver`] to an `impl Stream`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16079,"byte_end":16138,"line_start":430,"line_end":430,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16139,"byte_end":16142,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16143,"byte_end":16161,"line_start":432,"line_end":432,"column_start":1,"column_end":19}},{"value":"/ use tokio::sync::mpsc;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16162,"byte_end":16188,"line_start":433,"line_end":433,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16189,"byte_end":16192,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ let (tx, mut rx) = mpsc::channel::<usize>(16);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16193,"byte_end":16243,"line_start":435,"line_end":435,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16244,"byte_end":16247,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ let stream = async_stream::stream! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16248,"byte_end":16288,"line_start":437,"line_end":437,"column_start":1,"column_end":41}},{"value":"/     while let Some(item) = rx.recv().await {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16289,"byte_end":16337,"line_start":438,"line_end":438,"column_start":1,"column_end":49}},{"value":"/         yield item;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16338,"byte_end":16361,"line_start":439,"line_end":439,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16362,"byte_end":16371,"line_start":440,"line_end":440,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16372,"byte_end":16378,"line_start":441,"line_end":441,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":16379,"byte_end":16386,"line_start":442,"line_end":442,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/scoped_tls.rs","byte_start":30770,"byte_end":30779,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/scoped_tls.rs","byte_start":30795,"byte_end":30804,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/scoped_tls.rs","byte_start":31154,"byte_end":31159,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/poll_fn.rs","byte_start":32786,"byte_end":32792,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/poll_fn.rs","byte_start":33006,"byte_end":33012,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/poll_fn.rs","byte_start":33154,"byte_end":33160,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112419,"byte_end":10112424,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112451,"byte_end":10112456,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":46017,"byte_end":46020,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":46180,"byte_end":46183,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":46812,"byte_end":46818,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49885,"byte_end":49888,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":50031,"byte_end":50034,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":50703,"byte_end":50709,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53703,"byte_end":53706,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53849,"byte_end":53852,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":54243,"byte_end":54249,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":63719,"byte_end":63722,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":63870,"byte_end":63873,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":64750,"byte_end":64753,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":65551,"byte_end":65557,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":66360,"byte_end":66366,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":67172,"byte_end":67178,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":67979,"byte_end":67985,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70026,"byte_end":70033,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":79011,"byte_end":79018,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123522,"byte_end":10123530,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125671,"byte_end":10125679,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125822,"byte_end":10125830,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125958,"byte_end":10125966,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126551,"byte_end":10126556,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10130973,"byte_end":10130978,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10131722,"byte_end":10131727,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10131888,"byte_end":10131893,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10132021,"byte_end":10132026,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":802}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10132180,"byte_end":10132185,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10132332,"byte_end":10132337,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10134922,"byte_end":10134934,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10134959,"byte_end":10134971,"line_start":54,"line_end":54,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10135015,"byte_end":10135027,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10140455,"byte_end":10140467,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10141066,"byte_end":10141078,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10144584,"byte_end":10144595,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10144855,"byte_end":10144866,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10145046,"byte_end":10145057,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153240,"byte_end":10153251,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153340,"byte_end":10153351,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153376,"byte_end":10153387,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153421,"byte_end":10153432,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10154355,"byte_end":10154361,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10154856,"byte_end":10154865,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10159539,"byte_end":10159548,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10159913,"byte_end":10159922,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10159955,"byte_end":10159964,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10116094,"byte_end":10116100,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":942}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10118906,"byte_end":10118912,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":945}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10119027,"byte_end":10119032,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10119476,"byte_end":10119482,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10119881,"byte_end":10119887,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10120037,"byte_end":10120043,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10120874,"byte_end":10120880,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10121697,"byte_end":10121703,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10121781,"byte_end":10121787,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10121922,"byte_end":10121927,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10122884,"byte_end":10122893,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10163187,"byte_end":10163198,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10165960,"byte_end":10165971,"line_start":142,"line_end":142,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10167514,"byte_end":10167525,"line_start":189,"line_end":189,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10167668,"byte_end":10167679,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10167851,"byte_end":10167862,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175075,"byte_end":10175082,"line_start":168,"line_end":168,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1216},{"krate":0,"index":1220},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187050,"byte_end":10187057,"line_start":462,"line_end":462,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187211,"byte_end":10187218,"line_start":468,"line_end":468,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187429,"byte_end":10187436,"line_start":476,"line_end":476,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187536,"byte_end":10187553,"line_start":482,"line_end":482,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190101,"byte_end":10190121,"line_start":545,"line_end":545,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10192631,"byte_end":10192648,"line_start":606,"line_end":606,"column_start":60,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10192905,"byte_end":10192925,"line_start":614,"line_end":614,"column_start":60,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10194967,"byte_end":10194975,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195892,"byte_end":10195901,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10196151,"byte_end":10196159,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10196454,"byte_end":10196463,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1309},{"krate":0,"index":1310},{"krate":0,"index":1311}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197142,"byte_end":10197147,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197603,"byte_end":10197608,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197861,"byte_end":10197866,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197989,"byte_end":10197997,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198034,"byte_end":10198043,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198080,"byte_end":10198088,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198125,"byte_end":10198134,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198177,"byte_end":10198185,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1331}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198353,"byte_end":10198362,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/seek.rs","byte_start":10199319,"byte_end":10199323,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10211453,"byte_end":10211454,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10250781,"byte_end":10250782,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_seek_ext.rs","byte_start":10253247,"byte_end":10253248,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10291852,"byte_end":10291853,"line_start":1101,"line_end":1101,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293297,"byte_end":10293306,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10295204,"byte_end":10295213,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1541}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10296023,"byte_end":10296032,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10298225,"byte_end":10298234,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10302274,"byte_end":10302283,"line_start":262,"line_end":262,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10302794,"byte_end":10302803,"line_start":280,"line_end":280,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304292,"byte_end":10304301,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10306138,"byte_end":10306147,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10306289,"byte_end":10306298,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10307178,"byte_end":10307187,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10307717,"byte_end":10307726,"line_start":139,"line_end":139,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10307981,"byte_end":10307990,"line_start":149,"line_end":149,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10309989,"byte_end":10309998,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1626},{"krate":0,"index":1627},{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312317,"byte_end":10312326,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10313619,"byte_end":10313628,"line_start":160,"line_end":160,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1636},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10315169,"byte_end":10315178,"line_start":203,"line_end":203,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10315432,"byte_end":10315441,"line_start":213,"line_end":213,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1643},{"krate":0,"index":1644}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10315728,"byte_end":10315737,"line_start":223,"line_end":223,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10316915,"byte_end":10316920,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10318060,"byte_end":10318065,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1674}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10318344,"byte_end":10318349,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10318935,"byte_end":10318940,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy.rs","byte_start":10320067,"byte_end":10320077,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy.rs","byte_start":10323674,"byte_end":10323678,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10325258,"byte_end":10325275,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_buf.rs","byte_start":10329761,"byte_end":10329768,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10332035,"byte_end":10332040,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10332254,"byte_end":10332259,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1780},{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10332492,"byte_end":10332497,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/flush.rs","byte_start":10333624,"byte_end":10333629,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1801},{"krate":0,"index":1802}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10334960,"byte_end":10334965,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1817},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336217,"byte_end":10336222,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340980,"byte_end":10340992,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1847}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10341536,"byte_end":10341548,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10342246,"byte_end":10342258,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10342454,"byte_end":10342458,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10343160,"byte_end":10343164,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10344030,"byte_end":10344034,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read.rs","byte_start":10346221,"byte_end":10346225,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_buf.rs","byte_start":10347359,"byte_end":10347366,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_exact.rs","byte_start":10349747,"byte_end":10349756,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1928},{"krate":0,"index":1929}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_line.rs","byte_start":10358813,"byte_end":10358821,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1969},{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_to_end.rs","byte_start":10362474,"byte_end":10362483,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1997},{"krate":0,"index":1998}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10362878,"byte_end":10362881,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10363170,"byte_end":10363173,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10363873,"byte_end":10363891,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10364071,"byte_end":10364089,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_to_string.rs","byte_start":10369441,"byte_end":10369453,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_until.rs","byte_start":10371757,"byte_end":10371766,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/repeat.rs","byte_start":10373344,"byte_end":10373350,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/shutdown.rs","byte_start":10374729,"byte_end":10374737,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/sink.rs","byte_start":10376377,"byte_end":10376381,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/sink.rs","byte_start":10376891,"byte_end":10376895,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378052,"byte_end":10378057,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378796,"byte_end":10378801,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381099,"byte_end":10381103,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382731,"byte_end":10382735,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2163}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10383379,"byte_end":10383383,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write.rs","byte_start":10385182,"byte_end":10385187,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_vectored.rs","byte_start":10386352,"byte_end":10386365,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2205}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_all.rs","byte_start":10387414,"byte_end":10387422,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_buf.rs","byte_start":10388907,"byte_end":10388915,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2242},{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_all_buf.rs","byte_start":10390242,"byte_end":10390253,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82086,"byte_end":82096,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82136,"byte_end":82146,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82448,"byte_end":82460,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82500,"byte_end":82512,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82809,"byte_end":82821,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82861,"byte_end":82873,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87204,"byte_end":87210,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87254,"byte_end":87260,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2811}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88813,"byte_end":88823,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":89462,"byte_end":89471,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398201,"byte_end":10398212,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2870},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2888},{"krate":0,"index":2889},{"krate":0,"index":2890},{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407987,"byte_end":10407998,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2893},{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10408324,"byte_end":10408335,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10408541,"byte_end":10408552,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412075,"byte_end":10412084,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2915},{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2919},{"krate":0,"index":2920},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424724,"byte_end":10424733,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424868,"byte_end":10424877,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424987,"byte_end":10424996,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2936}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10425351,"byte_end":10425360,"line_start":515,"line_end":515,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2938}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427822,"byte_end":10427830,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2954},{"krate":0,"index":2955}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430633,"byte_end":10430641,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430857,"byte_end":10430866,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10431783,"byte_end":10431791,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10431885,"byte_end":10431894,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434780,"byte_end":10434792,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434995,"byte_end":10435007,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435017,"byte_end":10435030,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2997},{"krate":0,"index":2998},{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438212,"byte_end":10438225,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438426,"byte_end":10438440,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3006},{"krate":0,"index":3007}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10439123,"byte_end":10439137,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10439301,"byte_end":10439315,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10440362,"byte_end":10440375,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10440471,"byte_end":10440485,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3019}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443015,"byte_end":10443024,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3082},{"krate":0,"index":3085},{"krate":0,"index":3087},{"krate":0,"index":3090},{"krate":0,"index":3308},{"krate":0,"index":3093},{"krate":0,"index":3096},{"krate":0,"index":3098},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10481622,"byte_end":10481631,"line_start":1181,"line_end":1181,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3126},{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10481989,"byte_end":10481998,"line_start":1195,"line_end":1195,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10482208,"byte_end":10482217,"line_start":1205,"line_end":1205,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10483043,"byte_end":10483052,"line_start":1238,"line_end":1238,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10483256,"byte_end":10483265,"line_start":1249,"line_end":1249,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488424,"byte_end":10488433,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3205},{"krate":0,"index":3209},{"krate":0,"index":3210},{"krate":0,"index":3316},{"krate":0,"index":3319},{"krate":0,"index":3212},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3220},{"krate":0,"index":3224},{"krate":0,"index":3228},{"krate":0,"index":3229},{"krate":0,"index":3231},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247},{"krate":0,"index":3248},{"krate":0,"index":3249},{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532508,"byte_end":10532517,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3252},{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532842,"byte_end":10532851,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3255}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10533060,"byte_end":10533069,"line_start":1420,"line_end":1420,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537136,"byte_end":10537148,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3357},{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3364},{"krate":0,"index":3365},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3381},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3383},{"krate":0,"index":3388},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575381,"byte_end":10575393,"line_start":1252,"line_end":1252,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3407}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575737,"byte_end":10575749,"line_start":1264,"line_end":1264,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3409}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575864,"byte_end":10575876,"line_start":1270,"line_end":1270,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577629,"byte_end":10577641,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3441},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581833,"byte_end":10581845,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3447},{"krate":0,"index":3448}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10582180,"byte_end":10582192,"line_start":169,"line_end":169,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10582307,"byte_end":10582319,"line_start":175,"line_end":175,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3452}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10584100,"byte_end":10584108,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3467}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10584324,"byte_end":10584333,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3473}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10585119,"byte_end":10585127,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10585223,"byte_end":10585232,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3477}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588147,"byte_end":10588159,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3500}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588362,"byte_end":10588374,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588384,"byte_end":10588397,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588813,"byte_end":10588826,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3505}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589027,"byte_end":10589041,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589739,"byte_end":10589753,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589917,"byte_end":10589931,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3516}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10590975,"byte_end":10590988,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10591086,"byte_end":10591100,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591321,"byte_end":10591331,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3532},{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591883,"byte_end":10591893,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593375,"byte_end":10593385,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3711},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3611},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3616}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620828,"byte_end":10620838,"line_start":773,"line_end":773,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3618},{"krate":0,"index":3619}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10621151,"byte_end":10621161,"line_start":785,"line_end":785,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3621}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10621371,"byte_end":10621381,"line_start":795,"line_end":795,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3627}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10622146,"byte_end":10622156,"line_start":826,"line_end":826,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10623419,"byte_end":10623429,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3633}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10623544,"byte_end":10623554,"line_start":870,"line_end":870,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3635}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10623941,"byte_end":10623946,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3645}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93225,"byte_end":93234,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93408,"byte_end":93417,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93564,"byte_end":93573,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93686,"byte_end":93695,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94039,"byte_end":94048,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94073,"byte_end":94082,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94092,"byte_end":94101,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94593,"byte_end":94602,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94887,"byte_end":94896,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95237,"byte_end":95246,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95271,"byte_end":95280,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95290,"byte_end":95299,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95484,"byte_end":95493,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95778,"byte_end":95787,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98298,"byte_end":98306,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98331,"byte_end":98339,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98349,"byte_end":98357,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98538,"byte_end":98546,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98830,"byte_end":98838,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99178,"byte_end":99189,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99214,"byte_end":99225,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99235,"byte_end":99246,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99935,"byte_end":99946,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":100236,"byte_end":100247,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":100411,"byte_end":100422,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/mutex.rs","byte_start":100753,"byte_end":100758,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/unsafe_cell.rs","byte_start":101436,"byte_end":101446,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/either.rs","byte_start":10629854,"byte_end":10629860,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/either.rs","byte_start":10630817,"byte_end":10630823,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3775}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/either.rs","byte_start":10631037,"byte_end":10631043,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3779}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":106638,"byte_end":106648,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":106913,"byte_end":106923,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":107449,"byte_end":107454,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":112219,"byte_end":112229,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":112338,"byte_end":112350,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":112705,"byte_end":112721,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":113984,"byte_end":114000,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":114595,"byte_end":114607,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":114787,"byte_end":114792,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":105685,"byte_end":105688,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":105777,"byte_end":105780,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10651536,"byte_end":10651548,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3814}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10653299,"byte_end":10653304,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4330}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10654494,"byte_end":10654515,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4339}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10655231,"byte_end":10655236,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":4344},{"krate":0,"index":4347}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10656876,"byte_end":10656881,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10657011,"byte_end":10657016,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3820}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10664838,"byte_end":10664844,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10664869,"byte_end":10664875,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10665234,"byte_end":10665238,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3881}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10666125,"byte_end":10666134,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3884},{"krate":0,"index":3887},{"krate":0,"index":3889},{"krate":0,"index":3891},{"krate":0,"index":3893},{"krate":0,"index":3895}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10669288,"byte_end":10669297,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3900},{"krate":0,"index":3903},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3910}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10671986,"byte_end":10671992,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4356},{"krate":0,"index":4358}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10672348,"byte_end":10672355,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3913},{"krate":0,"index":3915},{"krate":0,"index":3917}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673286,"byte_end":10673295,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3933},{"krate":0,"index":3934},{"krate":0,"index":3935},{"krate":0,"index":3936},{"krate":0,"index":3937},{"krate":0,"index":3938}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676021,"byte_end":10676030,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3940}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676273,"byte_end":10676282,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3942}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676559,"byte_end":10676568,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676602,"byte_end":10676607,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10677360,"byte_end":10677367,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3977},{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10678022,"byte_end":10678029,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994},{"krate":0,"index":3995}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10683402,"byte_end":10683415,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4010},{"krate":0,"index":4011},{"krate":0,"index":4012}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10690396,"byte_end":10690401,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4042}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695874,"byte_end":10695884,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695921,"byte_end":10695931,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695947,"byte_end":10695957,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4059},{"krate":0,"index":4060}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697192,"byte_end":10697202,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697229,"byte_end":10697239,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4065},{"krate":0,"index":4066}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10698465,"byte_end":10698475,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4069}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10698741,"byte_end":10698751,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/raw.rs","byte_start":10699998,"byte_end":10700005,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4098},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4103},{"krate":0,"index":4104},{"krate":0,"index":4105},{"krate":0,"index":4106},{"krate":0,"index":4107}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/raw.rs","byte_start":10701536,"byte_end":10701543,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4109}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/raw.rs","byte_start":10701633,"byte_end":10701640,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10704322,"byte_end":10704327,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4151},{"krate":0,"index":4152},{"krate":0,"index":4153},{"krate":0,"index":4155},{"krate":0,"index":4157},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4164},{"krate":0,"index":4168},{"krate":0,"index":4170},{"krate":0,"index":4172},{"krate":0,"index":4174},{"krate":0,"index":4177},{"krate":0,"index":4178}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10713183,"byte_end":10713191,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4183},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4186},{"krate":0,"index":4187},{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193},{"krate":0,"index":4194},{"krate":0,"index":4195},{"krate":0,"index":4196},{"krate":0,"index":4197},{"krate":0,"index":4198},{"krate":0,"index":4199}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10715068,"byte_end":10715073,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10715232,"byte_end":10715240,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4203}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/waker.rs","byte_start":10717058,"byte_end":10717066,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4229},{"krate":0,"index":4230}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/stack.rs","byte_start":10718814,"byte_end":10718827,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/stack.rs","byte_start":10719985,"byte_end":10719989,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4403},{"krate":0,"index":4404}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/stack.rs","byte_start":10720389,"byte_end":10720393,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4408}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658011,"byte_end":10658015,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658046,"byte_end":10658050,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658187,"byte_end":10658195,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658236,"byte_end":10658244,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660231,"byte_end":10660235,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4278},{"krate":0,"index":4279}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660536,"byte_end":10660544,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660795,"byte_end":10660799,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4423}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660992,"byte_end":10661000,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4426}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661131,"byte_end":10661135,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4282}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661304,"byte_end":10661312,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4285},{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661598,"byte_end":10661602,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4289}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661842,"byte_end":10661846,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4292}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661998,"byte_end":10662006,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4295}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10662222,"byte_end":10662226,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4298},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":4301},{"krate":0,"index":4302}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10723121,"byte_end":10723126,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10723949,"byte_end":10723963,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":4495},{"krate":0,"index":4496},{"krate":0,"index":4497},{"krate":0,"index":4500}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10726248,"byte_end":10726253,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10730533,"byte_end":10730538,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4521}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10731231,"byte_end":10731245,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4525}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10732795,"byte_end":10732809,"line_start":372,"line_end":372,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4529}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10732975,"byte_end":10732982,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4531},{"krate":0,"index":4533},{"krate":0,"index":4534},{"krate":0,"index":4535}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10733649,"byte_end":10733656,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4537}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10733824,"byte_end":10733827,"line_start":415,"line_end":415,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4541},{"krate":0,"index":4543}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10735237,"byte_end":10735243,"line_start":455,"line_end":455,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4546},{"krate":0,"index":4547}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10735750,"byte_end":10735760,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4555}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10736035,"byte_end":10736045,"line_start":485,"line_end":485,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4559}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10740530,"byte_end":10740542,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":4617},{"krate":0,"index":4618},{"krate":0,"index":4619}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10743098,"byte_end":10743110,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4623}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10743196,"byte_end":10743208,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4625}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10743369,"byte_end":10743376,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4627},{"krate":0,"index":4628}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10745808,"byte_end":10745813,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4631}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10749052,"byte_end":10749059,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4633}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/schedule.rs","byte_start":10749562,"byte_end":10749574,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4645},{"krate":0,"index":4646},{"krate":0,"index":4647}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/shutdown.rs","byte_start":10750447,"byte_end":10750455,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":4654}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/task.rs","byte_start":10752204,"byte_end":10752216,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4667}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/task.rs","byte_start":10752442,"byte_end":10752454,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/task.rs","byte_start":10752484,"byte_end":10752496,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4673},{"krate":0,"index":4674}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755690,"byte_end":10755697,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4709},{"krate":0,"index":4710},{"krate":0,"index":4711},{"krate":0,"index":4713},{"krate":0,"index":4714},{"krate":0,"index":4715},{"krate":0,"index":4716},{"krate":0,"index":4719},{"krate":0,"index":4721},{"krate":0,"index":4722},{"krate":0,"index":4724},{"krate":0,"index":4726},{"krate":0,"index":4727},{"krate":0,"index":4728},{"krate":0,"index":4729}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10767327,"byte_end":10767334,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4840}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10767896,"byte_end":10767903,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4842}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10769146,"byte_end":10769153,"line_start":539,"line_end":539,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4844}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10770591,"byte_end":10770598,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4734}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/context.rs","byte_start":10772990,"byte_end":10773000,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4746}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/driver.rs","byte_start":10777513,"byte_end":10777519,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4765}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/driver.rs","byte_start":10778103,"byte_end":10778109,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4767},{"krate":0,"index":4768},{"krate":0,"index":4769},{"krate":0,"index":4770},{"krate":0,"index":4771},{"krate":0,"index":4772}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779916,"byte_end":10779922,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4790},{"krate":0,"index":4791},{"krate":0,"index":4792},{"krate":0,"index":4793},{"krate":0,"index":4795},{"krate":0,"index":4798},{"krate":0,"index":4800}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788675,"byte_end":10788690,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4805}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788838,"byte_end":10788853,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4807}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788993,"byte_end":10789008,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/spawner.rs","byte_start":10789393,"byte_end":10789400,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4814}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/spawner.rs","byte_start":10789642,"byte_end":10789649,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":4920}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10791243,"byte_end":10791249,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4953}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10791712,"byte_end":10791718,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":4955}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10792034,"byte_end":10792040,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4957},{"krate":0,"index":4958},{"krate":0,"index":4959},{"krate":0,"index":4960},{"krate":0,"index":4961},{"krate":0,"index":4963}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10792759,"byte_end":10792767,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4965}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10792836,"byte_end":10792841,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4969},{"krate":0,"index":4970},{"krate":0,"index":4971},{"krate":0,"index":4972},{"krate":0,"index":4973}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800049,"byte_end":10800054,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800085,"byte_end":10800090,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800121,"byte_end":10800127,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800158,"byte_end":10800164,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10801023,"byte_end":10801028,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5033},{"krate":0,"index":5038}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10807609,"byte_end":10807614,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5042},{"krate":0,"index":5043},{"krate":0,"index":5045}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10812782,"byte_end":10812787,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5050}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10812883,"byte_end":10812888,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5053}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10813047,"byte_end":10813052,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5056}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10813240,"byte_end":10813246,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5059},{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063},{"krate":0,"index":5064},{"krate":0,"index":5065},{"krate":0,"index":5066}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10816707,"byte_end":10816713,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5069}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10820672,"byte_end":10820682,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10820719,"byte_end":10820729,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10820745,"byte_end":10820755,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5089},{"krate":0,"index":5090},{"krate":0,"index":5091},{"krate":0,"index":5092}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10821509,"byte_end":10821519,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10822325,"byte_end":10822329,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5116},{"krate":0,"index":5117},{"krate":0,"index":5118},{"krate":0,"index":5119},{"krate":0,"index":5120},{"krate":0,"index":5121},{"krate":0,"index":5122},{"krate":0,"index":5123}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10826167,"byte_end":10826172,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5126},{"krate":0,"index":5127},{"krate":0,"index":5128},{"krate":0,"index":5129},{"krate":0,"index":5130},{"krate":0,"index":5131},{"krate":0,"index":5132}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10827650,"byte_end":10827655,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5134}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10827828,"byte_end":10827833,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5138}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10833628,"byte_end":10833633,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5205}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10836964,"byte_end":10836970,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5211}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10837745,"byte_end":10837752,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5216},{"krate":0,"index":5217},{"krate":0,"index":5219},{"krate":0,"index":5220},{"krate":0,"index":5221}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10842039,"byte_end":10842043,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5227},{"krate":0,"index":5229},{"krate":0,"index":5230},{"krate":0,"index":5231},{"krate":0,"index":5232},{"krate":0,"index":5233},{"krate":0,"index":5234},{"krate":0,"index":5235},{"krate":0,"index":5236},{"krate":0,"index":5237}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10847154,"byte_end":10847160,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5240},{"krate":0,"index":5241},{"krate":0,"index":5242}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10847600,"byte_end":10847603,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5244},{"krate":0,"index":5246},{"krate":0,"index":5255},{"krate":0,"index":5256}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10850907,"byte_end":10850913,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":5258},{"krate":0,"index":5260},{"krate":0,"index":5261},{"krate":0,"index":5262},{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265},{"krate":0,"index":5266},{"krate":0,"index":5267}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10818719,"byte_end":10818729,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5280},{"krate":0,"index":5281},{"krate":0,"index":5282}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10819663,"byte_end":10819673,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5285}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10819812,"byte_end":10819822,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5287}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10819925,"byte_end":10819932,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5289},{"krate":0,"index":5291}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10820353,"byte_end":10820360,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5293}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10641096,"byte_end":10641103,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5315},{"krate":0,"index":5316},{"krate":0,"index":5317},{"krate":0,"index":5319},{"krate":0,"index":5322},{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":118445,"byte_end":118451,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":119223,"byte_end":119229,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5355}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":120098,"byte_end":120108,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":121079,"byte_end":121095,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5370}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":121227,"byte_end":121243,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5372}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":122983,"byte_end":122989,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5377},{"krate":0,"index":5378}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872395,"byte_end":10872402,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":5384},{"krate":0,"index":5385}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875667,"byte_end":10875684,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5389}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883115,"byte_end":10883124,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5426}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883300,"byte_end":10883309,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883957,"byte_end":10883966,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5430}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884271,"byte_end":10884280,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885203,"byte_end":10885215,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5433}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885593,"byte_end":10885605,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887568,"byte_end":10887572,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887617,"byte_end":10887621,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890395,"byte_end":10890401,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890438,"byte_end":10890444,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890482,"byte_end":10890490,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890527,"byte_end":10890535,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890551,"byte_end":10890557,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5486},{"krate":0,"index":5488},{"krate":0,"index":5489},{"krate":0,"index":5490}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896167,"byte_end":10896171,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":5496}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896563,"byte_end":10896569,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5499}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896749,"byte_end":10896755,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5502}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896909,"byte_end":10896917,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5505}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901780,"byte_end":10901788,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5509},{"krate":0,"index":5512}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905964,"byte_end":10905972,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5515}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10906598,"byte_end":10906602,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5519},{"krate":0,"index":5520}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10907381,"byte_end":10907385,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5524},{"krate":0,"index":5525}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10908046,"byte_end":10908050,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5529}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10908798,"byte_end":10908804,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5533},{"krate":0,"index":5534},{"krate":0,"index":5535},{"krate":0,"index":5536},{"krate":0,"index":5537}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909219,"byte_end":10909225,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5540}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909369,"byte_end":10909377,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5543}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909512,"byte_end":10909521,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5547}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909694,"byte_end":10909703,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5552}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/block.rs","byte_start":10916598,"byte_end":10916603,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5602},{"krate":0,"index":5603},{"krate":0,"index":5604},{"krate":0,"index":5605},{"krate":0,"index":5607},{"krate":0,"index":5609},{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5613},{"krate":0,"index":5614},{"krate":0,"index":5615},{"krate":0,"index":5617},{"krate":0,"index":5618},{"krate":0,"index":5620}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/block.rs","byte_start":10926702,"byte_end":10926708,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/block.rs","byte_start":10927190,"byte_end":10927196,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5629},{"krate":0,"index":5630}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931241,"byte_end":10931249,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":5661},{"krate":0,"index":5662},{"krate":0,"index":5667},{"krate":0,"index":5668},{"krate":0,"index":5669}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937584,"byte_end":10937592,"line_start":304,"line_end":304,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5672}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937788,"byte_end":10937796,"line_start":312,"line_end":312,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937812,"byte_end":10937818,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5677},{"krate":0,"index":5678},{"krate":0,"index":5681},{"krate":0,"index":5684},{"krate":0,"index":5685},{"krate":0,"index":5688},{"krate":0,"index":5689},{"krate":0,"index":5690},{"krate":0,"index":5693},{"krate":0,"index":5696},{"krate":0,"index":5699},{"krate":0,"index":5700},{"krate":0,"index":5701},{"krate":0,"index":5702}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958181,"byte_end":10958187,"line_start":904,"line_end":904,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5705}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958319,"byte_end":10958325,"line_start":912,"line_end":912,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5708}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958537,"byte_end":10958543,"line_start":922,"line_end":922,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5711}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959793,"byte_end":10959799,"line_start":965,"line_end":965,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5715}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960266,"byte_end":10960272,"line_start":982,"line_end":982,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5719}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960488,"byte_end":10960499,"line_start":992,"line_end":992,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":5722},{"krate":0,"index":5724}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10963281,"byte_end":10963292,"line_start":1079,"line_end":1079,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5729}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10963955,"byte_end":10963966,"line_start":1102,"line_end":1102,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5733}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10964628,"byte_end":10964630,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5765}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10964923,"byte_end":10964925,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5773}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10965862,"byte_end":10965866,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5791}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10966499,"byte_end":10966507,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10966773,"byte_end":10966777,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10966826,"byte_end":10966830,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10967337,"byte_end":10967339,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5811},{"krate":0,"index":5812},{"krate":0,"index":5813},{"krate":0,"index":5814},{"krate":0,"index":5815}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10967949,"byte_end":10967951,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5819},{"krate":0,"index":5820}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10968501,"byte_end":10968503,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5826}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10968842,"byte_end":10968844,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5830}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10969167,"byte_end":10969169,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5834},{"krate":0,"index":5835},{"krate":0,"index":5837}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10971724,"byte_end":10971726,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5844}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10972138,"byte_end":10972142,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":5850}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10972327,"byte_end":10972331,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5854}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10973332,"byte_end":10973343,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5867},{"krate":0,"index":5868},{"krate":0,"index":5869},{"krate":0,"index":5870}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10975084,"byte_end":10975086,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5899},{"krate":0,"index":5900},{"krate":0,"index":5901},{"krate":0,"index":5903}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10980799,"byte_end":10980801,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5906}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10981078,"byte_end":10981080,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":5909},{"krate":0,"index":5910},{"krate":0,"index":5911},{"krate":0,"index":5912}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10984479,"byte_end":10984481,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985139,"byte_end":10985154,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5929}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985295,"byte_end":10985310,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5932}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985983,"byte_end":10986000,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5938}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986999,"byte_end":10987016,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990314,"byte_end":10990329,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5962},{"krate":0,"index":5965},{"krate":0,"index":5966}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994507,"byte_end":10994516,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5976}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994676,"byte_end":10994685,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995171,"byte_end":10995183,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995216,"byte_end":10995228,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5983}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995568,"byte_end":10995580,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5986}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995809,"byte_end":10995818,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5988}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995948,"byte_end":10995957,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996461,"byte_end":10996477,"line_start":83,"line_end":83,"column_start":35,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996514,"byte_end":10996530,"line_start":85,"line_end":85,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7056}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003886,"byte_end":11003891,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003945,"byte_end":11003950,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004004,"byte_end":11004014,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004079,"byte_end":11004094,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004159,"byte_end":11004175,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004242,"byte_end":11004258,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004939,"byte_end":11004951,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6035}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005088,"byte_end":11005100,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005908,"byte_end":11005913,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6039},{"krate":0,"index":6040},{"krate":0,"index":6043},{"krate":0,"index":6046},{"krate":0,"index":6050},{"krate":0,"index":6051},{"krate":0,"index":6052},{"krate":0,"index":6053}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011666,"byte_end":11011671,"line_start":438,"line_end":438,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6056}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011755,"byte_end":11011760,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6059}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011884,"byte_end":11011889,"line_start":453,"line_end":453,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6062}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012279,"byte_end":11012289,"line_start":469,"line_end":469,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6066},{"krate":0,"index":6069}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015224,"byte_end":11015234,"line_start":566,"line_end":566,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6074}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015335,"byte_end":11015345,"line_start":572,"line_end":572,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6077},{"krate":0,"index":6078}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015492,"byte_end":11015502,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6081}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015659,"byte_end":11015669,"line_start":585,"line_end":585,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6084}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015835,"byte_end":11015845,"line_start":591,"line_end":591,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6087}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016023,"byte_end":11016038,"line_start":599,"line_end":599,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6090}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016135,"byte_end":11016150,"line_start":605,"line_end":605,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6093},{"krate":0,"index":6094}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016293,"byte_end":11016308,"line_start":612,"line_end":612,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6097}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016461,"byte_end":11016476,"line_start":618,"line_end":618,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6100}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016638,"byte_end":11016653,"line_start":624,"line_end":624,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6103}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016823,"byte_end":11016839,"line_start":632,"line_end":632,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6110}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018677,"byte_end":11018693,"line_start":684,"line_end":684,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6116}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018793,"byte_end":11018809,"line_start":690,"line_end":690,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6120},{"krate":0,"index":6121}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018952,"byte_end":11018968,"line_start":697,"line_end":697,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6125}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11019121,"byte_end":11019137,"line_start":703,"line_end":703,"column_start":49,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6129}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11019307,"byte_end":11019323,"line_start":709,"line_end":709,"column_start":53,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6133}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11024190,"byte_end":11024198,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11024231,"byte_end":11024239,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025188,"byte_end":11025194,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6173},{"krate":0,"index":6174},{"krate":0,"index":6175},{"krate":0,"index":6176}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11033721,"byte_end":11033727,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6180}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11035637,"byte_end":11035645,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6183}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11036158,"byte_end":11036166,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6185},{"krate":0,"index":6186}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11041862,"byte_end":11041870,"line_start":672,"line_end":672,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6189}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11043733,"byte_end":11043739,"line_start":718,"line_end":718,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6192},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6195},{"krate":0,"index":6196}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047892,"byte_end":11047901,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6222}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048063,"byte_end":11048072,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048141,"byte_end":11048153,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6225}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048452,"byte_end":11048464,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048958,"byte_end":11048962,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":6238},{"krate":0,"index":6240},{"krate":0,"index":6244},{"krate":0,"index":6246}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050998,"byte_end":11051004,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6252},{"krate":0,"index":6254},{"krate":0,"index":6259},{"krate":0,"index":6260}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058631,"byte_end":11058637,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6263}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058776,"byte_end":11058784,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6266},{"krate":0,"index":6267}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11063291,"byte_end":11063299,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6270}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11063446,"byte_end":11063454,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":6273},{"krate":0,"index":6274}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11063917,"byte_end":11063922,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":6277},{"krate":0,"index":6278},{"krate":0,"index":6279},{"krate":0,"index":6280}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067028,"byte_end":11067033,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067070,"byte_end":11067075,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067176,"byte_end":11067181,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6290}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067558,"byte_end":11067563,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6293}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067958,"byte_end":11067963,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6303},{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6312}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11069676,"byte_end":11069681,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6314}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11073740,"byte_end":11073749,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6355},{"krate":0,"index":6356},{"krate":0,"index":6357},{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6370}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11084829,"byte_end":11084838,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6374}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11085037,"byte_end":11085043,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":6376},{"krate":0,"index":6377}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11085909,"byte_end":11085916,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6379},{"krate":0,"index":6380}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11086594,"byte_end":11086601,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6383},{"krate":0,"index":6384}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11087400,"byte_end":11087407,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":6388}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088657,"byte_end":11088664,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088711,"byte_end":11088723,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6391}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088816,"byte_end":11088828,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6393}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088972,"byte_end":11088984,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089031,"byte_end":11089046,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":6396},{"krate":0,"index":6397}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089564,"byte_end":11089579,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089865,"byte_end":11089880,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089973,"byte_end":11089979,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6402},{"krate":0,"index":6403},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6406}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093271,"byte_end":11093280,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6418},{"krate":0,"index":6419},{"krate":0,"index":6420},{"krate":0,"index":6423},{"krate":0,"index":6426},{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6431},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6436},{"krate":0,"index":6437}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101484,"byte_end":11101499,"line_start":297,"line_end":297,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6440}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101744,"byte_end":11101764,"line_start":306,"line_end":306,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6442}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11102018,"byte_end":11102033,"line_start":315,"line_end":315,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6445}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11102141,"byte_end":11102161,"line_start":321,"line_end":321,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6447}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126751,"byte_end":11126771,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6482}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129843,"byte_end":11129863,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6488},{"krate":0,"index":6489}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11130004,"byte_end":11130024,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6493}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11130210,"byte_end":11130230,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6497}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11130412,"byte_end":11130432,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6501}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131453,"byte_end":11131474,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6521},{"krate":0,"index":6524},{"krate":0,"index":6527},{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137145,"byte_end":11137166,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137296,"byte_end":11137317,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6536}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137438,"byte_end":11137459,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6539}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137631,"byte_end":11137652,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6542}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137820,"byte_end":11137841,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6545}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138944,"byte_end":11138971,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6565},{"krate":0,"index":6568}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11142518,"byte_end":11142545,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6574},{"krate":0,"index":6575}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11142689,"byte_end":11142716,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6579}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11142851,"byte_end":11142878,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6583}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11143064,"byte_end":11143091,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":6587}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11143273,"byte_end":11143300,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6591}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144002,"byte_end":11144017,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6607},{"krate":0,"index":6610}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147431,"byte_end":11147446,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6615},{"krate":0,"index":6616}],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147581,"byte_end":11147596,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6620}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147776,"byte_end":11147791,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147967,"byte_end":11147982,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6628}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148767,"byte_end":11148783,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6647},{"krate":0,"index":6650},{"krate":0,"index":6653},{"krate":0,"index":6655}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154781,"byte_end":11154797,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6659}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154931,"byte_end":11154947,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6662}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11155076,"byte_end":11155092,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6666}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11155272,"byte_end":11155288,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6670}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11155464,"byte_end":11155480,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6674}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156339,"byte_end":11156361,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6691},{"krate":0,"index":6694}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160201,"byte_end":11160223,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6699},{"krate":0,"index":6700}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160357,"byte_end":11160379,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6703}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160508,"byte_end":11160530,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6707}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160710,"byte_end":11160732,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6711}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160908,"byte_end":11160930,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6715}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107608,"byte_end":11107614,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107668,"byte_end":11107674,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107908,"byte_end":11107923,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107981,"byte_end":11107996,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108203,"byte_end":11108223,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108318,"byte_end":11108338,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108437,"byte_end":11108453,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108518,"byte_end":11108539,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108600,"byte_end":11108622,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108690,"byte_end":11108717,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109064,"byte_end":11109080,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109145,"byte_end":11109166,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109227,"byte_end":11109249,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109317,"byte_end":11109344,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109436,"byte_end":11109442,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6757},{"krate":0,"index":6758},{"krate":0,"index":6759},{"krate":0,"index":6763},{"krate":0,"index":6767},{"krate":0,"index":6768},{"krate":0,"index":6769},{"krate":0,"index":6773},{"krate":0,"index":6777},{"krate":0,"index":6778},{"krate":0,"index":6779},{"krate":0,"index":6780}],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125817,"byte_end":11125823,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6783}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125915,"byte_end":11125921,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6786}],"docs":"","sig":null,"attributes":[]},{"id":612,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11167209,"byte_end":11167220,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6813},{"krate":0,"index":6814},{"krate":0,"index":6815},{"krate":0,"index":6820},{"krate":0,"index":6821}],"docs":"","sig":null,"attributes":[]},{"id":613,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173242,"byte_end":11173253,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6824}],"docs":"","sig":null,"attributes":[]},{"id":614,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173339,"byte_end":11173350,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6826}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173483,"byte_end":11173494,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173519,"byte_end":11173530,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173626,"byte_end":11173631,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6833},{"krate":0,"index":6834}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174919,"byte_end":11174927,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6859}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175035,"byte_end":11175043,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6862}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175248,"byte_end":11175256,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6865}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175389,"byte_end":11175397,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6868}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175513,"byte_end":11175521,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175546,"byte_end":11175554,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6873}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175790,"byte_end":11175798,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6877},{"krate":0,"index":6878},{"krate":0,"index":6879},{"krate":0,"index":6880},{"krate":0,"index":6882},{"krate":0,"index":6884},{"krate":0,"index":6886},{"krate":0,"index":6887},{"krate":0,"index":6888},{"krate":0,"index":6889},{"krate":0,"index":6894},{"krate":0,"index":6900},{"krate":0,"index":6902}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187491,"byte_end":11187499,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187716,"byte_end":11187724,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188336,"byte_end":11188344,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6909}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188651,"byte_end":11188659,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188675,"byte_end":11188683,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6914},{"krate":0,"index":6915}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193268,"byte_end":11193277,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6934}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193457,"byte_end":11193466,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193659,"byte_end":11193668,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6938}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193830,"byte_end":11193839,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195045,"byte_end":11195053,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6945},{"krate":0,"index":6946},{"krate":0,"index":6947}],"docs":"","sig":null,"attributes":[]},{"id":635,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198048,"byte_end":11198056,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6954}],"docs":"","sig":null,"attributes":[]},{"id":636,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198240,"byte_end":11198248,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6957}],"docs":"","sig":null,"attributes":[]},{"id":637,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198618,"byte_end":11198624,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6960},{"krate":0,"index":6961},{"krate":0,"index":6962},{"krate":0,"index":6963}],"docs":"","sig":null,"attributes":[]},{"id":638,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11201461,"byte_end":11201467,"line_start":422,"line_end":422,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6968}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11201657,"byte_end":11201660,"line_start":431,"line_end":431,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6971},{"krate":0,"index":6972}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/yield_now.rs","byte_start":11214827,"byte_end":11214835,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7459},{"krate":0,"index":7460}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11225757,"byte_end":11225765,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7308},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7313},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7322}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11233758,"byte_end":11233766,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7326}],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11233905,"byte_end":11233913,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7328},{"krate":0,"index":7329}],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11234878,"byte_end":11234886,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7332}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11234967,"byte_end":11234975,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7334}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11235842,"byte_end":11235850,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7338},{"krate":0,"index":7339}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11236735,"byte_end":11236741,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7343},{"krate":0,"index":7345}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11237292,"byte_end":11237295,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7347},{"krate":0,"index":7349},{"krate":0,"index":7352}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240802,"byte_end":11240810,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7375},{"krate":0,"index":7379},{"krate":0,"index":7383},{"krate":0,"index":7386}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243310,"byte_end":11243318,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7392}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243526,"byte_end":11243534,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7396}],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243836,"byte_end":11243851,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7400}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244128,"byte_end":11244133,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7411}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244674,"byte_end":11244689,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7417},{"krate":0,"index":7418}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244966,"byte_end":11244967,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245152,"byte_end":11245163,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7424}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245307,"byte_end":11245318,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7426}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245465,"byte_end":11245476,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11245878,"byte_end":11245891,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":7438},{"krate":0,"index":7485}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/clock.rs","byte_start":11250316,"byte_end":11250321,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7878},{"krate":0,"index":7879},{"krate":0,"index":7880},{"krate":0,"index":7881}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11275216,"byte_end":11275225,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7518}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11275309,"byte_end":11275318,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":7520}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11275464,"byte_end":11275473,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7522},{"krate":0,"index":7523},{"krate":0,"index":7524},{"krate":0,"index":7525},{"krate":0,"index":7526},{"krate":0,"index":7528},{"krate":0,"index":7529},{"krate":0,"index":7531},{"krate":0,"index":7532},{"krate":0,"index":7533}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11282491,"byte_end":11282501,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11282526,"byte_end":11282536,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11283977,"byte_end":11283988,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7538},{"krate":0,"index":7539},{"krate":0,"index":7540},{"krate":0,"index":7541},{"krate":0,"index":7542},{"krate":0,"index":7543},{"krate":0,"index":7544},{"krate":0,"index":7545},{"krate":0,"index":7546}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11287511,"byte_end":11287528,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7552}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11287829,"byte_end":11287846,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":7554}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288085,"byte_end":11288096,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288121,"byte_end":11288132,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288171,"byte_end":11288182,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7560},{"krate":0,"index":7561},{"krate":0,"index":7562}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288700,"byte_end":11288710,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7564},{"krate":0,"index":7565},{"krate":0,"index":7566},{"krate":0,"index":7567},{"krate":0,"index":7568},{"krate":0,"index":7569}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11291711,"byte_end":11291722,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7571},{"krate":0,"index":7572},{"krate":0,"index":7573},{"krate":0,"index":7574},{"krate":0,"index":7575},{"krate":0,"index":7576}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11294113,"byte_end":11294123,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7578}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/handle.rs","byte_start":11294612,"byte_end":11294618,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7589},{"krate":0,"index":7590},{"krate":0,"index":7591},{"krate":0,"index":7592}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/handle.rs","byte_start":11295286,"byte_end":11295292,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7920}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/handle.rs","byte_start":11297336,"byte_end":11297342,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7594}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/wheel/level.rs","byte_start":11309940,"byte_end":11309945,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7616},{"krate":0,"index":7618},{"krate":0,"index":7619},{"krate":0,"index":7620},{"krate":0,"index":7621},{"krate":0,"index":7622}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/wheel/level.rs","byte_start":11316013,"byte_end":11316018,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7624}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/wheel/mod.rs","byte_start":11298963,"byte_end":11298968,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7636},{"krate":0,"index":7637},{"krate":0,"index":7638},{"krate":0,"index":7639},{"krate":0,"index":7640},{"krate":0,"index":7642},{"krate":0,"index":7644},{"krate":0,"index":7645},{"krate":0,"index":7647},{"krate":0,"index":7648},{"krate":0,"index":7649},{"krate":0,"index":7650},{"krate":0,"index":7651}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322152,"byte_end":11322157,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7671},{"krate":0,"index":7672},{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675},{"krate":0,"index":7676}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11324260,"byte_end":11324265,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":7679},{"krate":0,"index":7680}],"docs":"","sig":null,"attributes":[]},{"id":683,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11259546,"byte_end":11259555,"line_start":103,"line_end":103,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7702},{"krate":0,"index":7703},{"krate":0,"index":7704},{"krate":0,"index":7706},{"krate":0,"index":7707}],"docs":"","sig":null,"attributes":[]},{"id":684,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11261191,"byte_end":11261197,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7719},{"krate":0,"index":7720},{"krate":0,"index":7721}],"docs":"","sig":null,"attributes":[]},{"id":685,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11264216,"byte_end":11264222,"line_start":253,"line_end":253,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":7725},{"krate":0,"index":7726},{"krate":0,"index":7730},{"krate":0,"index":7731}],"docs":"","sig":null,"attributes":[]},{"id":686,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11268942,"byte_end":11268948,"line_start":386,"line_end":386,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7735},{"krate":0,"index":7736},{"krate":0,"index":7737},{"krate":0,"index":7738},{"krate":0,"index":7739},{"krate":0,"index":7740}],"docs":"","sig":null,"attributes":[]},{"id":687,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11269661,"byte_end":11269667,"line_start":420,"line_end":420,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":7743}],"docs":"","sig":null,"attributes":[]},{"id":688,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11269793,"byte_end":11269798,"line_start":431,"line_end":431,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7745},{"krate":0,"index":7746},{"krate":0,"index":7747}],"docs":"","sig":null,"attributes":[]},{"id":689,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11270511,"byte_end":11270516,"line_start":456,"line_end":456,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7749}],"docs":"","sig":null,"attributes":[]},{"id":690,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326416,"byte_end":11326421,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7759}],"docs":"","sig":null,"attributes":[]},{"id":691,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326662,"byte_end":11326667,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":7761},{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764},{"krate":0,"index":7765},{"krate":0,"index":7766}],"docs":"","sig":null,"attributes":[]},{"id":692,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327567,"byte_end":11327572,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":693,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327599,"byte_end":11327604,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7769}],"docs":"","sig":null,"attributes":[]},{"id":694,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328066,"byte_end":11328073,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7772}],"docs":"","sig":null,"attributes":[]},{"id":695,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328161,"byte_end":11328168,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7774}],"docs":"","sig":null,"attributes":[]},{"id":696,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328312,"byte_end":11328319,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":697,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328356,"byte_end":11328361,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7777}],"docs":"","sig":null,"attributes":[]},{"id":698,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329903,"byte_end":11329910,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":7783},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":7786},{"krate":0,"index":7787},{"krate":0,"index":7788},{"krate":0,"index":7789},{"krate":0,"index":7790},{"krate":0,"index":7791},{"krate":0,"index":7792}],"docs":"","sig":null,"attributes":[]},{"id":699,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334007,"byte_end":11334014,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7794}],"docs":"","sig":null,"attributes":[]},{"id":700,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334143,"byte_end":11334150,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7796}],"docs":"","sig":null,"attributes":[]},{"id":701,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334265,"byte_end":11334272,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7798},{"krate":0,"index":7799}],"docs":"","sig":null,"attributes":[]},{"id":702,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334437,"byte_end":11334444,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7801}],"docs":"","sig":null,"attributes":[]},{"id":703,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334549,"byte_end":11334556,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7803},{"krate":0,"index":7804}],"docs":"","sig":null,"attributes":[]},{"id":704,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334697,"byte_end":11334704,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":7806},{"krate":0,"index":7807}],"docs":"","sig":null,"attributes":[]},{"id":705,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334865,"byte_end":11334872,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7809}],"docs":"","sig":null,"attributes":[]},{"id":706,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334979,"byte_end":11334986,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7811}],"docs":"","sig":null,"attributes":[]},{"id":707,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339164,"byte_end":11339172,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":7831},{"krate":0,"index":7835},{"krate":0,"index":7836}],"docs":"","sig":null,"attributes":[]},{"id":708,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344178,"byte_end":11344185,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":7860},{"krate":0,"index":7861},{"krate":0,"index":7862},{"krate":0,"index":7863}],"docs":"","sig":null,"attributes":[]},{"id":709,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344723,"byte_end":11344730,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867}],"docs":"","sig":null,"attributes":[]},{"id":710,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/bit.rs","byte_start":11345375,"byte_end":11345379,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":8023},{"krate":0,"index":8024},{"krate":0,"index":8025},{"krate":0,"index":8026},{"krate":0,"index":8027},{"krate":0,"index":8028},{"krate":0,"index":8029}],"docs":"","sig":null,"attributes":[]},{"id":711,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/bit.rs","byte_start":11346807,"byte_end":11346811,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8031}],"docs":"","sig":null,"attributes":[]},{"id":712,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11351961,"byte_end":11351965,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":713,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352002,"byte_end":11352006,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":714,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352043,"byte_end":11352053,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":715,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352090,"byte_end":11352100,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":716,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352137,"byte_end":11352140,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":717,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352177,"byte_end":11352180,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":718,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352796,"byte_end":11352800,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8105},{"krate":0,"index":8106},{"krate":0,"index":8107},{"krate":0,"index":8108},{"krate":0,"index":8110}],"docs":"","sig":null,"attributes":[]},{"id":719,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11358395,"byte_end":11358399,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8113}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11358538,"byte_end":11358547,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8116}],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359114,"byte_end":11359123,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8119}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359281,"byte_end":11359284,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8122},{"krate":0,"index":8123}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359546,"byte_end":11359549,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8126}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359816,"byte_end":11359819,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":8129}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359940,"byte_end":11359944,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8132}],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11362451,"byte_end":11362455,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8136},{"krate":0,"index":8137}],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11362799,"byte_end":11362803,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8140}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11363151,"byte_end":11363155,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8143}],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11363517,"byte_end":11363527,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8146},{"krate":0,"index":8147}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11364464,"byte_end":11364474,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8150}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11364617,"byte_end":11364622,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8153}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11365505,"byte_end":11365509,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8157}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11366069,"byte_end":11366074,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8160}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11366400,"byte_end":11366407,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":8162},{"krate":0,"index":8163},{"krate":0,"index":8164}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":138393,"byte_end":138403,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":138473,"byte_end":138483,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141061,"byte_end":141069,"line_start":100,"line_end":100,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141106,"byte_end":141114,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141165,"byte_end":141175,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141410,"byte_end":141420,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":144426,"byte_end":144436,"line_start":210,"line_end":210,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":144793,"byte_end":144803,"line_start":225,"line_end":225,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":675}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":144990,"byte_end":145000,"line_start":232,"line_end":232,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":145277,"byte_end":145287,"line_start":246,"line_end":246,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8199}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":145520,"byte_end":145524,"line_start":255,"line_end":255,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8203},{"krate":0,"index":8204}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":146178,"byte_end":146188,"line_start":278,"line_end":278,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8214}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":146557,"byte_end":146568,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8220},{"krate":0,"index":8221}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":147248,"byte_end":147256,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":749,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":148839,"byte_end":148847,"line_start":366,"line_end":366,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":750,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/rand.rs","byte_start":159371,"byte_end":159379,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":751,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/wake.rs","byte_start":11374010,"byte_end":11374018,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8240},{"krate":0,"index":8241}],"docs":"","sig":null,"attributes":[]},{"id":752,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376106,"byte_end":11376113,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":753,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376150,"byte_end":11376157,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":754,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376195,"byte_end":11376204,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":755,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376390,"byte_end":11376397,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":8294},{"krate":0,"index":8295}],"docs":"","sig":null,"attributes":[]},{"id":756,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11377031,"byte_end":11377040,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8298},{"krate":0,"index":8299}],"docs":"","sig":null,"attributes":[]},{"id":757,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11377172,"byte_end":11377181,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8302}],"docs":"","sig":null,"attributes":[]},{"id":758,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11377303,"byte_end":11377312,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8305}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14285,"byte_end":14291,"line_start":350,"line_end":350,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/mod.rs","byte_start":17961,"byte_end":17968,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":76}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14344,"byte_end":14346,"line_start":358,"line_end":358,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":105}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14356,"byte_end":14359,"line_start":359,"line_end":359,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80358,"byte_end":80361,"line_start":34,"line_end":34,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":2851}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/mod.rs","byte_start":80548,"byte_end":80552,"line_start":44,"line_end":44,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":3324}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/mod.rs","byte_start":10533665,"byte_end":10533673,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3325}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14524,"byte_end":14531,"line_start":372,"line_end":372,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":3806}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14762,"byte_end":14766,"line_start":389,"line_end":389,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5379}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869536,"byte_end":10869545,"line_start":434,"line_end":434,"column_start":13,"column_end":22},"ref_id":{"krate":0,"index":5393}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869560,"byte_end":10869564,"line_start":436,"line_end":436,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":5556}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/mod.rs","byte_start":10913998,"byte_end":10914003,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5971}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10869740,"byte_end":10869747,"line_start":444,"line_end":444,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":6200}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mod.rs","byte_start":10870486,"byte_end":10870491,"line_start":467,"line_end":467,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":6919}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14811,"byte_end":14815,"line_start":395,"line_end":395,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":620}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/lib.rs","byte_start":14879,"byte_end":14883,"line_start":401,"line_end":401,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":7488}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/mod.rs","byte_start":11249510,"byte_end":11249515,"line_start":97,"line_end":97,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":7754}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/scoped_tls.rs","byte_start":30770,"byte_end":30779,"line_start":30,"line_end":30,"column_start":25,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":54},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/scoped_tls.rs","byte_start":30795,"byte_end":30804,"line_start":32,"line_end":32,"column_start":9,"column_end":18},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":54},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/macros/scoped_tls.rs","byte_start":31154,"byte_end":31159,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":65},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/poll_fn.rs","byte_start":32786,"byte_end":32792,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/poll_fn.rs","byte_start":33006,"byte_end":33012,"line_start":25,"line_end":25,"column_start":24,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/poll_fn.rs","byte_start":33154,"byte_end":33160,"line_start":31,"line_end":31,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":88},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112419,"byte_end":10112424,"line_start":13,"line_end":13,"column_start":19,"column_end":24},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/future/ready.rs","byte_start":10112451,"byte_end":10112456,"line_start":15,"line_end":15,"column_start":20,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":718},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":43558,"byte_end":43567,"line_start":23,"line_end":23,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":142},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":46017,"byte_end":46020,"line_start":77,"line_end":77,"column_start":57,"column_end":60},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":46180,"byte_end":46183,"line_start":85,"line_end":85,"column_start":26,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_buf_read.rs","byte_start":46812,"byte_end":46818,"line_start":109,"line_end":109,"column_start":51,"column_end":57},"kind":{"Impl":{"id":10}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":49885,"byte_end":49888,"line_start":72,"line_end":72,"column_start":51,"column_end":54},"kind":{"Impl":{"id":11}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":50031,"byte_end":50034,"line_start":80,"line_end":80,"column_start":23,"column_end":26},"kind":{"Impl":{"id":12}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_read.rs","byte_start":50703,"byte_end":50709,"line_start":108,"line_end":108,"column_start":48,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53703,"byte_end":53706,"line_start":61,"line_end":61,"column_start":51,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":53849,"byte_end":53852,"line_start":69,"line_end":69,"column_start":23,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_seek.rs","byte_start":54243,"byte_end":54249,"line_start":83,"line_end":83,"column_start":48,"column_end":54},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":63719,"byte_end":63722,"line_start":213,"line_end":213,"column_start":53,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":63870,"byte_end":63873,"line_start":221,"line_end":221,"column_start":24,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":2,"index":34796},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":64750,"byte_end":64753,"line_start":255,"line_end":255,"column_start":21,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":65551,"byte_end":65557,"line_start":286,"line_end":286,"column_start":25,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":66360,"byte_end":66366,"line_start":316,"line_end":316,"column_start":25,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":67172,"byte_end":67178,"line_start":346,"line_end":346,"column_start":25,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_write.rs","byte_start":67979,"byte_end":67985,"line_start":376,"line_end":376,"column_start":25,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":7158},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":70026,"byte_end":70033,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/read_buf.rs","byte_start":79011,"byte_end":79018,"line_start":277,"line_end":277,"column_start":21,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10123522,"byte_end":10123530,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125671,"byte_end":10125679,"line_start":92,"line_end":92,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":2207}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125822,"byte_end":10125830,"line_start":101,"line_end":101,"column_start":27,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/interest.rs","byte_start":10125958,"byte_end":10125966,"line_start":108,"line_end":108,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1000},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10126551,"byte_end":10126556,"line_start":18,"line_end":18,"column_start":6,"column_end":11},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10130973,"byte_end":10130978,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10131722,"byte_end":10131727,"line_start":196,"line_end":196,"column_start":28,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":2207}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10131888,"byte_end":10131893,"line_start":205,"line_end":205,"column_start":34,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":2233}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10132021,"byte_end":10132026,"line_start":212,"line_end":212,"column_start":29,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":2202}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10132180,"byte_end":10132185,"line_start":221,"line_end":221,"column_start":26,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/ready.rs","byte_start":10132332,"byte_end":10132337,"line_start":230,"line_end":230,"column_start":21,"column_end":26},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10134922,"byte_end":10134934,"line_start":53,"line_end":53,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10134959,"byte_end":10134971,"line_start":54,"line_end":54,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10135015,"byte_end":10135027,"line_start":58,"line_end":58,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10140455,"byte_end":10140467,"line_start":211,"line_end":211,"column_start":15,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1034},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/registration.rs","byte_start":10141066,"byte_end":10141078,"line_start":229,"line_end":229,"column_start":10,"column_end":22},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1034},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10144584,"byte_end":10144595,"line_start":104,"line_end":104,"column_start":16,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1059},"to":{"krate":0,"index":8059}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10144855,"byte_end":10144866,"line_start":115,"line_end":115,"column_start":18,"column_end":29},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1059},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10145046,"byte_end":10145057,"line_start":124,"line_end":124,"column_start":6,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153240,"byte_end":10153251,"line_start":366,"line_end":366,"column_start":15,"column_end":26},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1059},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153340,"byte_end":10153351,"line_start":372,"line_end":372,"column_start":22,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1059},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153376,"byte_end":10153387,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1059},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10153421,"byte_end":10153432,"line_start":376,"line_end":376,"column_start":10,"column_end":21},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1059},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10154355,"byte_end":10154361,"line_start":401,"line_end":401,"column_start":39,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1086},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10154856,"byte_end":10154865,"line_start":420,"line_end":420,"column_start":21,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10159539,"byte_end":10159548,"line_start":529,"line_end":529,"column_start":19,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10159913,"byte_end":10159922,"line_start":542,"line_end":542,"column_start":26,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/scheduled_io.rs","byte_start":10159955,"byte_end":10159964,"line_start":543,"line_end":543,"column_start":26,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10116094,"byte_end":10116100,"line_start":111,"line_end":111,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10118906,"byte_end":10118912,"line_start":203,"line_end":203,"column_start":15,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":910},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10119027,"byte_end":10119032,"line_start":209,"line_end":209,"column_start":15,"column_end":20},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":919},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10119476,"byte_end":10119482,"line_start":224,"line_end":224,"column_start":15,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":910},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10119881,"byte_end":10119887,"line_start":245,"line_end":245,"column_start":21,"column_end":27},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":910},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10120037,"byte_end":10120043,"line_start":254,"line_end":254,"column_start":10,"column_end":16},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10120874,"byte_end":10120880,"line_start":281,"line_end":281,"column_start":6,"column_end":12},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10121697,"byte_end":10121703,"line_start":302,"line_end":302,"column_start":17,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1113},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10121781,"byte_end":10121787,"line_start":308,"line_end":308,"column_start":21,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1113},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10121922,"byte_end":10121927,"line_start":316,"line_end":316,"column_start":6,"column_end":11},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":919},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/driver/mod.rs","byte_start":10122884,"byte_end":10122893,"line_start":346,"line_end":346,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10163187,"byte_end":10163198,"line_start":70,"line_end":70,"column_start":17,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10165960,"byte_end":10165971,"line_start":142,"line_end":142,"column_start":21,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10167514,"byte_end":10167525,"line_start":189,"line_end":189,"column_start":27,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10167668,"byte_end":10167679,"line_start":197,"line_end":197,"column_start":45,"column_end":56},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/poll_evented.rs","byte_start":10167851,"byte_end":10167862,"line_start":203,"line_end":203,"column_start":26,"column_end":37},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1138},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10175075,"byte_end":10175082,"line_start":168,"line_end":168,"column_start":18,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1174},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187050,"byte_end":10187057,"line_start":462,"line_end":462,"column_start":30,"column_end":37},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187211,"byte_end":10187218,"line_start":468,"line_end":468,"column_start":56,"column_end":63},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187429,"byte_end":10187436,"line_start":476,"line_end":476,"column_start":27,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1174},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10187536,"byte_end":10187553,"line_start":482,"line_end":482,"column_start":26,"column_end":43},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10190101,"byte_end":10190121,"line_start":545,"line_end":545,"column_start":26,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10192631,"byte_end":10192648,"line_start":606,"line_end":606,"column_start":60,"column_end":77},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/async_fd.rs","byte_start":10192905,"byte_end":10192925,"line_start":614,"line_end":614,"column_start":60,"column_end":80},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10194967,"byte_end":10194975,"line_start":62,"line_end":62,"column_start":9,"column_end":17},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10195892,"byte_end":10195901,"line_start":92,"line_end":92,"column_start":9,"column_end":18},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1383},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10196151,"byte_end":10196159,"line_start":100,"line_end":100,"column_start":34,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1380},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10196454,"byte_end":10196463,"line_start":111,"line_end":111,"column_start":36,"column_end":45},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1383},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197142,"byte_end":10197147,"line_start":132,"line_end":132,"column_start":9,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197603,"byte_end":10197608,"line_start":151,"line_end":151,"column_start":9,"column_end":14},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197861,"byte_end":10197866,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1293},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10197989,"byte_end":10197997,"line_start":165,"line_end":165,"column_start":31,"column_end":39},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198034,"byte_end":10198043,"line_start":166,"line_end":166,"column_start":31,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198080,"byte_end":10198088,"line_start":167,"line_end":167,"column_start":31,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198125,"byte_end":10198134,"line_start":168,"line_end":168,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198177,"byte_end":10198185,"line_start":170,"line_end":170,"column_start":36,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/split.rs","byte_start":10198353,"byte_end":10198362,"line_start":176,"line_end":176,"column_start":36,"column_end":45},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1383},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/seek.rs","byte_start":10199319,"byte_end":10199323,"line_start":34,"line_end":34,"column_start":20,"column_end":24},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11355},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10202334,"byte_end":10202346,"line_start":11,"line_end":11,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":114},"to":{"krate":0,"index":2279}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_buf_read_ext.rs","byte_start":10211453,"byte_end":10211454,"line_start":259,"line_end":259,"column_start":52,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1403},"to":{"krate":0,"index":2279}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10213375,"byte_end":10213384,"line_start":61,"line_end":61,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":142},"to":{"krate":0,"index":2287}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_read_ext.rs","byte_start":10250781,"byte_end":10250782,"line_start":1115,"line_end":1115,"column_start":46,"column_end":47},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1450},"to":{"krate":0,"index":2287}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_seek_ext.rs","byte_start":10251707,"byte_end":10251716,"line_start":33,"line_end":33,"column_start":29,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":167},"to":{"krate":0,"index":2338}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_seek_ext.rs","byte_start":10253247,"byte_end":10253248,"line_start":83,"line_end":83,"column_start":46,"column_end":47},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1459},"to":{"krate":0,"index":2338}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10255358,"byte_end":10255368,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":"SuperTrait","from":{"krate":0,"index":193},"to":{"krate":0,"index":2342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/async_write_ext.rs","byte_start":10291852,"byte_end":10291853,"line_start":1101,"line_end":1101,"column_start":48,"column_end":49},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1507},"to":{"krate":0,"index":2342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10293297,"byte_end":10293306,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10295204,"byte_end":10295213,"line_start":100,"line_end":100,"column_start":34,"column_end":43},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11299},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10296023,"byte_end":10296032,"line_start":122,"line_end":122,"column_start":37,"column_end":46},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11299},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10298225,"byte_end":10298234,"line_start":176,"line_end":176,"column_start":46,"column_end":55},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11299},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10302274,"byte_end":10302283,"line_start":262,"line_end":262,"column_start":48,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11299},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_reader.rs","byte_start":10302794,"byte_end":10302803,"line_start":280,"line_end":280,"column_start":36,"column_end":45},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11299},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10304292,"byte_end":10304301,"line_start":25,"line_end":25,"column_start":34,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10306138,"byte_end":10306147,"line_start":81,"line_end":81,"column_start":45,"column_end":54},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11268},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10306289,"byte_end":10306298,"line_start":87,"line_end":87,"column_start":45,"column_end":54},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11268},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10307178,"byte_end":10307187,"line_start":121,"line_end":121,"column_start":49,"column_end":58},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11268},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10307717,"byte_end":10307726,"line_start":139,"line_end":139,"column_start":48,"column_end":57},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11268},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_stream.rs","byte_start":10307981,"byte_end":10307990,"line_start":149,"line_end":149,"column_start":51,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11268},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10309989,"byte_end":10309998,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10312317,"byte_end":10312326,"line_start":118,"line_end":118,"column_start":36,"column_end":45},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11218},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10313619,"byte_end":10313628,"line_start":160,"line_end":160,"column_start":47,"column_end":56},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11218},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10315169,"byte_end":10315178,"line_start":203,"line_end":203,"column_start":47,"column_end":56},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11218},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10315432,"byte_end":10315441,"line_start":213,"line_end":213,"column_start":53,"column_end":62},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11218},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/buf_writer.rs","byte_start":10315728,"byte_end":10315737,"line_start":223,"line_end":223,"column_start":36,"column_end":45},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11218},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10316915,"byte_end":10316920,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10318060,"byte_end":10318065,"line_start":69,"line_end":69,"column_start":27,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11169},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10318344,"byte_end":10318349,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11169},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/chain.rs","byte_start":10318935,"byte_end":10318940,"line_start":107,"line_end":107,"column_start":29,"column_end":34},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11169},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy.rs","byte_start":10320067,"byte_end":10320077,"line_start":17,"line_end":17,"column_start":6,"column_end":16},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy.rs","byte_start":10323674,"byte_end":10323678,"line_start":136,"line_end":136,"column_start":23,"column_end":27},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2431},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_bidirectional.rs","byte_start":10325258,"byte_end":10325275,"line_start":52,"line_end":52,"column_start":27,"column_end":44},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1727},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/copy_buf.rs","byte_start":10329761,"byte_end":10329768,"line_start":67,"line_end":67,"column_start":23,"column_end":30},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2455},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10332035,"byte_end":10332040,"line_start":49,"line_end":49,"column_start":20,"column_end":25},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2467},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10332254,"byte_end":10332259,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2467},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/empty.rs","byte_start":10332492,"byte_end":10332497,"line_start":70,"line_end":70,"column_start":21,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2467},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/flush.rs","byte_start":10333624,"byte_end":10333629,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11127},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10334960,"byte_end":10334965,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/lines.rs","byte_start":10336217,"byte_end":10336222,"line_start":90,"line_end":90,"column_start":9,"column_end":14},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10340980,"byte_end":10340992,"line_start":101,"line_end":101,"column_start":20,"column_end":32},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2470},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10341536,"byte_end":10341548,"line_start":117,"line_end":117,"column_start":21,"column_end":33},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2470},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10342246,"byte_end":10342258,"line_start":144,"line_end":144,"column_start":15,"column_end":27},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2470},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10342454,"byte_end":10342458,"line_start":154,"line_end":154,"column_start":6,"column_end":10},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10343160,"byte_end":10343164,"line_start":182,"line_end":182,"column_start":20,"column_end":24},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/mem.rs","byte_start":10344030,"byte_end":10344034,"line_start":209,"line_end":209,"column_start":21,"column_end":25},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2475},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read.rs","byte_start":10346221,"byte_end":10346225,"line_start":43,"line_end":43,"column_start":20,"column_end":24},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11026},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_buf.rs","byte_start":10347359,"byte_end":10347366,"line_start":35,"line_end":35,"column_start":23,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10966},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_exact.rs","byte_start":10349747,"byte_end":10349756,"line_start":47,"line_end":47,"column_start":20,"column_end":29},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":10911},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_line.rs","byte_start":10358813,"byte_end":10358821,"line_start":111,"line_end":111,"column_start":51,"column_end":59},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":9992},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_to_end.rs","byte_start":10362474,"byte_end":10362483,"line_start":101,"line_end":101,"column_start":20,"column_end":29},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9935},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10362878,"byte_end":10362881,"line_start":7,"line_end":7,"column_start":21,"column_end":24},"kind":{"Impl":{"id":139}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":2003}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10363118,"byte_end":10363123,"line_start":13,"line_end":13,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1991},"to":{"krate":0,"index":2006}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10363144,"byte_end":10363150,"line_start":13,"line_end":13,"column_start":51,"column_end":57},"kind":"SuperTrait","from":{"krate":0,"index":2003},"to":{"krate":0,"index":2006}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10363170,"byte_end":10363173,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":5,"index":5357},"to":{"krate":0,"index":2006}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10363873,"byte_end":10363891,"line_start":34,"line_end":34,"column_start":6,"column_end":24},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/vec_with_initialized.rs","byte_start":10364071,"byte_end":10364089,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_to_string.rs","byte_start":10369441,"byte_end":10369453,"line_start":67,"line_end":67,"column_start":20,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":9874},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/read_until.rs","byte_start":10371757,"byte_end":10371766,"line_start":72,"line_end":72,"column_start":51,"column_end":60},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":9813},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/repeat.rs","byte_start":10373344,"byte_end":10373350,"line_start":49,"line_end":49,"column_start":20,"column_end":26},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2635},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/shutdown.rs","byte_start":10374729,"byte_end":10374737,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":9764},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/sink.rs","byte_start":10376377,"byte_end":10376381,"line_start":52,"line_end":52,"column_start":21,"column_end":25},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2639},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/sink.rs","byte_start":10376891,"byte_end":10376895,"line_start":73,"line_end":73,"column_start":21,"column_end":25},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378052,"byte_end":10378057,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":9714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/split.rs","byte_start":10378796,"byte_end":10378801,"line_start":68,"line_end":68,"column_start":9,"column_end":14},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":9714},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10381099,"byte_end":10381103,"line_start":28,"line_end":28,"column_start":20,"column_end":24},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":9674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10382731,"byte_end":10382735,"line_start":77,"line_end":77,"column_start":34,"column_end":38},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":9674},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/take.rs","byte_start":10383379,"byte_end":10383383,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":9674},"to":{"krate":0,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write.rs","byte_start":10385182,"byte_end":10385187,"line_start":36,"line_end":36,"column_start":20,"column_end":25},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":9623},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_vectored.rs","byte_start":10386352,"byte_end":10386365,"line_start":37,"line_end":37,"column_start":20,"column_end":33},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":9563},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_all.rs","byte_start":10387414,"byte_end":10387422,"line_start":34,"line_end":34,"column_start":20,"column_end":28},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":9508},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_buf.rs","byte_start":10388907,"byte_end":10388915,"line_start":37,"line_end":37,"column_start":23,"column_end":31},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":9448},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/io/util/write_all_buf.rs","byte_start":10390242,"byte_end":10390253,"line_start":37,"line_end":37,"column_start":23,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":9386},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":81416,"byte_end":81433,"line_start":20,"line_end":20,"column_start":34,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":342},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82086,"byte_end":82096,"line_start":51,"line_end":51,"column_start":24,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":1,"index":7308},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82136,"byte_end":82146,"line_start":53,"line_end":53,"column_start":36,"column_end":46},"kind":{"Impl":{"id":160}},"from":{"krate":1,"index":7308},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82448,"byte_end":82460,"line_start":65,"line_end":65,"column_start":24,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":1,"index":7336},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82500,"byte_end":82512,"line_start":67,"line_end":67,"column_start":36,"column_end":48},"kind":{"Impl":{"id":162}},"from":{"krate":1,"index":7336},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82809,"byte_end":82821,"line_start":78,"line_end":78,"column_start":24,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":1,"index":7339},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":82861,"byte_end":82873,"line_start":80,"line_end":80,"column_start":36,"column_end":48},"kind":{"Impl":{"id":164}},"from":{"krate":1,"index":7339},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87204,"byte_end":87210,"line_start":226,"line_end":226,"column_start":28,"column_end":34},"kind":{"Impl":{"id":167}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":293}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":87254,"byte_end":87260,"line_start":228,"line_end":228,"column_start":40,"column_end":46},"kind":{"Impl":{"id":168}},"from":{"krate":5,"index":5852},"to":{"krate":0,"index":342}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":88813,"byte_end":88823,"line_start":283,"line_end":283,"column_start":25,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2826},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/addr.rs","byte_start":89462,"byte_end":89471,"line_start":301,"line_end":301,"column_start":27,"column_end":36},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2840},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10398201,"byte_end":10398212,"line_start":57,"line_end":57,"column_start":6,"column_end":17},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10407987,"byte_end":10407998,"line_start":350,"line_end":350,"column_start":36,"column_end":47},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3272},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10408324,"byte_end":10408335,"line_start":362,"line_end":362,"column_start":21,"column_end":32},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3272},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/listener.rs","byte_start":10408541,"byte_end":10408552,"line_start":373,"line_end":373,"column_start":22,"column_end":33},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3272},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10412075,"byte_end":10412084,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424724,"byte_end":10424733,"line_start":487,"line_end":487,"column_start":21,"column_end":30},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3274},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424868,"byte_end":10424877,"line_start":494,"line_end":494,"column_start":18,"column_end":27},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3274},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10424987,"byte_end":10424996,"line_start":501,"line_end":501,"column_start":20,"column_end":29},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3274},"to":{"krate":1,"index":8903}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/socket.rs","byte_start":10425351,"byte_end":10425360,"line_start":515,"line_end":515,"column_start":20,"column_end":29},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3274},"to":{"krate":1,"index":8905}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10427822,"byte_end":10427830,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430633,"byte_end":10430641,"line_start":139,"line_end":139,"column_start":20,"column_end":28},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3276},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10430857,"byte_end":10430866,"line_start":149,"line_end":149,"column_start":21,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3283},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10431783,"byte_end":10431791,"line_start":182,"line_end":182,"column_start":27,"column_end":35},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3276},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split.rs","byte_start":10431885,"byte_end":10431894,"line_start":188,"line_end":188,"column_start":27,"column_end":36},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":3283},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434780,"byte_end":10434792,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3299},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10434995,"byte_end":10435007,"line_start":95,"line_end":95,"column_start":16,"column_end":28},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3299},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10435017,"byte_end":10435030,"line_start":97,"line_end":97,"column_start":6,"column_end":19},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438212,"byte_end":10438225,"line_start":194,"line_end":194,"column_start":20,"column_end":33},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3290},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10438426,"byte_end":10438440,"line_start":204,"line_end":204,"column_start":6,"column_end":20},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10439123,"byte_end":10439137,"line_start":223,"line_end":223,"column_start":15,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":3294},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10439301,"byte_end":10439315,"line_start":231,"line_end":231,"column_start":21,"column_end":35},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":3294},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10440362,"byte_end":10440375,"line_start":268,"line_end":268,"column_start":27,"column_end":40},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3290},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/split_owned.rs","byte_start":10440471,"byte_end":10440485,"line_start":274,"line_end":274,"column_start":27,"column_end":41},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3294},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10443015,"byte_end":10443024,"line_start":72,"line_end":72,"column_start":6,"column_end":15},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10481622,"byte_end":10481631,"line_start":1181,"line_end":1181,"column_start":39,"column_end":48},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10481989,"byte_end":10481998,"line_start":1195,"line_end":1195,"column_start":20,"column_end":29},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3306},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10482208,"byte_end":10482217,"line_start":1205,"line_end":1205,"column_start":21,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3306},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10483043,"byte_end":10483052,"line_start":1238,"line_end":1238,"column_start":21,"column_end":30},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":3306},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/tcp/stream.rs","byte_start":10483256,"byte_end":10483265,"line_start":1249,"line_end":1249,"column_start":22,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3306},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10488424,"byte_end":10488433,"line_start":127,"line_end":127,"column_start":6,"column_end":15},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532508,"byte_end":10532517,"line_start":1397,"line_end":1397,"column_start":39,"column_end":48},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3313},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10532842,"byte_end":10532851,"line_start":1409,"line_end":1409,"column_start":21,"column_end":30},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3313},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/udp.rs","byte_start":10533060,"byte_end":10533069,"line_start":1420,"line_end":1420,"column_start":22,"column_end":31},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3313},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10537136,"byte_end":10537148,"line_start":98,"line_end":98,"column_start":6,"column_end":18},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":3666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575381,"byte_end":10575393,"line_start":1252,"line_end":1252,"column_start":52,"column_end":64},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3666},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575737,"byte_end":10575749,"line_start":1264,"line_end":1264,"column_start":21,"column_end":33},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3666},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/datagram/socket.rs","byte_start":10575864,"byte_end":10575876,"line_start":1270,"line_end":1270,"column_start":18,"column_end":30},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3666},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10577629,"byte_end":10577641,"line_start":52,"line_end":52,"column_start":6,"column_end":18},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3676},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10581833,"byte_end":10581845,"line_start":157,"line_end":157,"column_start":52,"column_end":64},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3676},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10582180,"byte_end":10582192,"line_start":169,"line_end":169,"column_start":21,"column_end":33},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3676},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/listener.rs","byte_start":10582307,"byte_end":10582319,"line_start":175,"line_end":175,"column_start":18,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3676},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10584100,"byte_end":10584108,"line_start":50,"line_end":50,"column_start":20,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3679},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10584324,"byte_end":10584333,"line_start":60,"line_end":60,"column_start":21,"column_end":30},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3686},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10585119,"byte_end":10585127,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":3679},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split.rs","byte_start":10585223,"byte_end":10585232,"line_start":96,"line_end":96,"column_start":28,"column_end":37},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3686},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588147,"byte_end":10588159,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3702},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588362,"byte_end":10588374,"line_start":94,"line_end":94,"column_start":16,"column_end":28},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3702},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588384,"byte_end":10588397,"line_start":96,"line_end":96,"column_start":6,"column_end":19},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10588813,"byte_end":10588826,"line_start":107,"line_end":107,"column_start":20,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3693},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589027,"byte_end":10589041,"line_start":117,"line_end":117,"column_start":6,"column_end":20},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":3697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589739,"byte_end":10589753,"line_start":136,"line_end":136,"column_start":15,"column_end":29},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10589917,"byte_end":10589931,"line_start":144,"line_end":144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3697},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10590975,"byte_end":10590988,"line_start":181,"line_end":181,"column_start":28,"column_end":41},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/split_owned.rs","byte_start":10591086,"byte_end":10591100,"line_start":187,"line_end":187,"column_start":28,"column_end":42},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3697},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591321,"byte_end":10591331,"line_start":7,"line_end":7,"column_start":6,"column_end":16},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/socketaddr.rs","byte_start":10591883,"byte_end":10591893,"line_start":27,"line_end":27,"column_start":21,"column_end":31},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3528},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10593375,"byte_end":10593385,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10620828,"byte_end":10620838,"line_start":773,"line_end":773,"column_start":35,"column_end":45},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":2004}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10621151,"byte_end":10621161,"line_start":785,"line_end":785,"column_start":20,"column_end":30},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3709},"to":{"krate":0,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10621371,"byte_end":10621381,"line_start":795,"line_end":795,"column_start":21,"column_end":31},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3709},"to":{"krate":0,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10622146,"byte_end":10622156,"line_start":826,"line_end":826,"column_start":6,"column_end":16},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10623419,"byte_end":10623429,"line_start":864,"line_end":864,"column_start":21,"column_end":31},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3709},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/stream.rs","byte_start":10623544,"byte_end":10623554,"line_start":870,"line_end":870,"column_start":18,"column_end":28},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3709},"to":{"krate":1,"index":8901}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/net/unix/ucred.rs","byte_start":10623941,"byte_end":10623946,"line_start":14,"line_end":14,"column_start":6,"column_end":11},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93225,"byte_end":93234,"line_start":9,"line_end":9,"column_start":9,"column_end":18},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":357},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93408,"byte_end":93417,"line_start":16,"line_end":16,"column_start":19,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93564,"byte_end":93573,"line_start":24,"line_end":24,"column_start":22,"column_end":31},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_ptr.rs","byte_start":93686,"byte_end":93695,"line_start":30,"line_end":30,"column_start":24,"column_end":33},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":357},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94039,"byte_end":94048,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94073,"byte_end":94082,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94092,"byte_end":94101,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94593,"byte_end":94602,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u16.rs","byte_start":94887,"byte_end":94896,"line_start":40,"line_end":40,"column_start":21,"column_end":30},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":377},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95237,"byte_end":95246,"line_start":10,"line_end":10,"column_start":22,"column_end":31},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95271,"byte_end":95280,"line_start":11,"line_end":11,"column_start":22,"column_end":31},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95290,"byte_end":95299,"line_start":13,"line_end":13,"column_start":6,"column_end":15},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95484,"byte_end":95493,"line_start":20,"line_end":20,"column_start":16,"column_end":25},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u32.rs","byte_start":95778,"byte_end":95787,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98298,"byte_end":98306,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98331,"byte_end":98339,"line_start":11,"line_end":11,"column_start":22,"column_end":30},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98349,"byte_end":98357,"line_start":13,"line_end":13,"column_start":6,"column_end":14},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98538,"byte_end":98546,"line_start":20,"line_end":20,"column_start":16,"column_end":24},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_u8.rs","byte_start":98830,"byte_end":98838,"line_start":30,"line_end":30,"column_start":21,"column_end":29},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":412},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99178,"byte_end":99189,"line_start":10,"line_end":10,"column_start":22,"column_end":33},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99214,"byte_end":99225,"line_start":11,"line_end":11,"column_start":22,"column_end":33},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99235,"byte_end":99246,"line_start":13,"line_end":13,"column_start":6,"column_end":17},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":99935,"byte_end":99946,"line_start":35,"line_end":35,"column_start":21,"column_end":32},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":100236,"byte_end":100247,"line_start":45,"line_end":45,"column_start":24,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/atomic_usize.rs","byte_start":100411,"byte_end":100422,"line_start":52,"line_end":52,"column_start":21,"column_end":32},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/mutex.rs","byte_start":100753,"byte_end":100758,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/loom/std/unsafe_cell.rs","byte_start":101436,"byte_end":101446,"line_start":4,"line_end":4,"column_start":9,"column_end":19},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/either.rs","byte_start":10629854,"byte_end":10629860,"line_start":13,"line_end":13,"column_start":21,"column_end":27},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3754},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/either.rs","byte_start":10630817,"byte_end":10630823,"line_start":50,"line_end":50,"column_start":23,"column_end":29},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3754},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/either.rs","byte_start":10631037,"byte_end":10631043,"line_start":63,"line_end":63,"column_start":27,"column_end":33},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3754},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":106638,"byte_end":106648,"line_start":40,"line_end":40,"column_start":6,"column_end":16},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3780},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":106913,"byte_end":106923,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3780},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":107449,"byte_end":107454,"line_start":78,"line_end":78,"column_start":6,"column_end":11},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":112219,"byte_end":112229,"line_start":203,"line_end":203,"column_start":18,"column_end":28},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3780},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":112338,"byte_end":112350,"line_start":211,"line_end":211,"column_start":17,"column_end":29},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":112705,"byte_end":112721,"line_start":229,"line_end":229,"column_start":6,"column_end":22},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":113984,"byte_end":114000,"line_start":272,"line_end":272,"column_start":15,"column_end":31},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3800},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":114595,"byte_end":114607,"line_start":295,"line_end":295,"column_start":6,"column_end":18},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/thread.rs","byte_start":114787,"byte_end":114792,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":105205,"byte_end":105209,"line_start":93,"line_end":93,"column_start":26,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":105212,"byte_end":105216,"line_start":93,"line_end":93,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":105685,"byte_end":105688,"line_start":107,"line_end":107,"column_start":17,"column_end":20},"kind":{"Impl":{"id":274}},"from":{"krate":5,"index":105},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/park/mod.rs","byte_start":105777,"byte_end":105780,"line_start":113,"line_end":113,"column_start":17,"column_end":20},"kind":{"Impl":{"id":275}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10651536,"byte_end":10651548,"line_start":14,"line_end":14,"column_start":6,"column_end":18},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":4304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10653299,"byte_end":10653304,"line_start":72,"line_end":72,"column_start":23,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4326},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10654494,"byte_end":10654515,"line_start":114,"line_end":114,"column_start":19,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":4335},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10655231,"byte_end":10655236,"line_start":141,"line_end":141,"column_start":10,"column_end":15},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10656876,"byte_end":10656881,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/enter.rs","byte_start":10657011,"byte_end":10657016,"line_start":198,"line_end":198,"column_start":15,"column_end":20},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3815},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10664838,"byte_end":10664844,"line_start":76,"line_end":76,"column_start":22,"column_end":28},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3858},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10664869,"byte_end":10664875,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3858},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10665234,"byte_end":10665238,"line_start":92,"line_end":92,"column_start":30,"column_end":34},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3841},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10666125,"byte_end":10666134,"line_start":119,"line_end":119,"column_start":19,"column_end":28},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10669288,"byte_end":10669297,"line_start":205,"line_end":205,"column_start":17,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10671986,"byte_end":10671992,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/core.rs","byte_start":10672348,"byte_end":10672355,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10673286,"byte_end":10673295,"line_start":18,"line_end":18,"column_start":6,"column_end":15},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":4360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676021,"byte_end":10676030,"line_start":115,"line_end":115,"column_start":23,"column_end":32},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4360},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676273,"byte_end":10676282,"line_start":124,"line_end":124,"column_start":21,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4360},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676559,"byte_end":10676568,"line_start":133,"line_end":133,"column_start":28,"column_end":37},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4360},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/error.rs","byte_start":10676602,"byte_end":10676607,"line_start":135,"line_end":135,"column_start":30,"column_end":35},"kind":{"Impl":{"id":293}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10677360,"byte_end":10677367,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10678022,"byte_end":10678029,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10683402,"byte_end":10683415,"line_start":209,"line_end":209,"column_start":13,"column_end":26},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/harness.rs","byte_start":10690396,"byte_end":10690401,"line_start":414,"line_end":414,"column_start":38,"column_end":43},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4036},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695874,"byte_end":10695884,"line_start":150,"line_end":150,"column_start":31,"column_end":41},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695921,"byte_end":10695931,"line_start":151,"line_end":151,"column_start":31,"column_end":41},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10695947,"byte_end":10695957,"line_start":153,"line_end":153,"column_start":9,"column_end":19},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":4362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697192,"byte_end":10697202,"line_start":200,"line_end":200,"column_start":19,"column_end":29},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10697229,"byte_end":10697239,"line_start":202,"line_end":202,"column_start":20,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10698465,"byte_end":10698475,"line_start":241,"line_end":241,"column_start":18,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/join.rs","byte_start":10698741,"byte_end":10698751,"line_start":253,"line_end":253,"column_start":24,"column_end":34},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4362},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/raw.rs","byte_start":10699998,"byte_end":10700005,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":4086},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/raw.rs","byte_start":10701536,"byte_end":10701543,"line_start":94,"line_end":94,"column_start":16,"column_end":23},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":4086},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/raw.rs","byte_start":10701633,"byte_end":10701640,"line_start":100,"line_end":100,"column_start":15,"column_end":22},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":4086},"to":{"krate":2,"index":2091}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10704322,"byte_end":10704327,"line_start":62,"line_end":62,"column_start":6,"column_end":11},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10713183,"byte_end":10713191,"line_start":344,"line_end":344,"column_start":6,"column_end":14},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10715068,"byte_end":10715073,"line_start":427,"line_end":427,"column_start":21,"column_end":26},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4135},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/state.rs","byte_start":10715232,"byte_end":10715240,"line_start":434,"line_end":434,"column_start":21,"column_end":29},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4366},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/waker.rs","byte_start":10717058,"byte_end":10717066,"line_start":39,"line_end":39,"column_start":24,"column_end":32},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4219},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/stack.rs","byte_start":10718814,"byte_end":10718827,"line_start":15,"line_end":15,"column_start":18,"column_end":31},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/stack.rs","byte_start":10719985,"byte_end":10719989,"line_start":55,"line_end":55,"column_start":39,"column_end":43},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4396},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/stack.rs","byte_start":10720389,"byte_end":10720393,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4396},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658011,"byte_end":10658015,"line_start":43,"line_end":43,"column_start":25,"column_end":29},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4253},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658046,"byte_end":10658050,"line_start":44,"line_end":44,"column_start":25,"column_end":29},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4253},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658187,"byte_end":10658195,"line_start":50,"line_end":50,"column_start":35,"column_end":43},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4261},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658236,"byte_end":10658244,"line_start":51,"line_end":51,"column_start":35,"column_end":43},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4261},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658369,"byte_end":10658373,"line_start":56,"line_end":56,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":4271}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10658376,"byte_end":10658381,"line_start":56,"line_end":56,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2086},"to":{"krate":0,"index":4271}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660231,"byte_end":10660235,"line_start":122,"line_end":122,"column_start":18,"column_end":22},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660536,"byte_end":10660544,"line_start":136,"line_end":136,"column_start":22,"column_end":30},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":4261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660795,"byte_end":10660799,"line_start":146,"line_end":146,"column_start":22,"column_end":26},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":4253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10660992,"byte_end":10661000,"line_start":154,"line_end":154,"column_start":22,"column_end":30},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661131,"byte_end":10661135,"line_start":161,"line_end":161,"column_start":19,"column_end":23},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661304,"byte_end":10661312,"line_start":168,"line_end":168,"column_start":19,"column_end":27},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":4261},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661598,"byte_end":10661602,"line_start":181,"line_end":181,"column_start":27,"column_end":31},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":4253},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661842,"byte_end":10661846,"line_start":191,"line_end":191,"column_start":24,"column_end":28},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4253},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10661998,"byte_end":10662006,"line_start":197,"line_end":197,"column_start":24,"column_end":32},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4261},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/task/mod.rs","byte_start":10662222,"byte_end":10662226,"line_start":206,"line_end":206,"column_start":38,"column_end":42},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4253},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10723121,"byte_end":10723126,"line_start":83,"line_end":83,"column_start":22,"column_end":27},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4475},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10723949,"byte_end":10723963,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10726248,"byte_end":10726253,"line_start":199,"line_end":199,"column_start":15,"column_end":20},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10730533,"byte_end":10730538,"line_start":302,"line_end":302,"column_start":28,"column_end":33},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4514},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10731231,"byte_end":10731245,"line_start":326,"line_end":326,"column_start":24,"column_end":38},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10732795,"byte_end":10732809,"line_start":372,"line_end":372,"column_start":30,"column_end":44},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":4461},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10732975,"byte_end":10732982,"line_start":380,"line_end":380,"column_start":6,"column_end":13},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":4816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10733649,"byte_end":10733656,"line_start":407,"line_end":407,"column_start":21,"column_end":28},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4816},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10733824,"byte_end":10733827,"line_start":415,"line_end":415,"column_start":19,"column_end":22},"kind":{"Impl":{"id":338}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4271}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10735237,"byte_end":10735243,"line_start":455,"line_end":455,"column_start":15,"column_end":21},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":4483},"to":{"krate":0,"index":8236}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10735750,"byte_end":10735760,"line_start":477,"line_end":477,"column_start":15,"column_end":25},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":4548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/basic_scheduler.rs","byte_start":10736035,"byte_end":10736045,"line_start":485,"line_end":485,"column_start":24,"column_end":34},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4548},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10740530,"byte_end":10740542,"line_start":103,"line_end":103,"column_start":6,"column_end":18},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10743098,"byte_end":10743110,"line_start":173,"line_end":173,"column_start":15,"column_end":27},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4586},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10743196,"byte_end":10743208,"line_start":179,"line_end":179,"column_start":21,"column_end":33},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4586},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10743369,"byte_end":10743376,"line_start":187,"line_end":187,"column_start":6,"column_end":13},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4825},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10745808,"byte_end":10745813,"line_start":265,"line_end":265,"column_start":6,"column_end":11},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/pool.rs","byte_start":10749052,"byte_end":10749059,"line_start":361,"line_end":361,"column_start":21,"column_end":28},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4825},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/schedule.rs","byte_start":10749562,"byte_end":10749574,"line_start":11,"line_end":11,"column_start":25,"column_end":37},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4642},"to":{"krate":0,"index":4271}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/shutdown.rs","byte_start":10750447,"byte_end":10750455,"line_start":29,"line_end":29,"column_start":6,"column_end":14},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/task.rs","byte_start":10752204,"byte_end":10752216,"line_start":10,"line_end":10,"column_start":9,"column_end":21},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/task.rs","byte_start":10752442,"byte_end":10752454,"line_start":18,"line_end":18,"column_start":19,"column_end":31},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/blocking/task.rs","byte_start":10752484,"byte_end":10752496,"line_start":20,"line_end":20,"column_start":23,"column_end":35},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":4662},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10755690,"byte_end":10755697,"line_start":85,"line_end":85,"column_start":6,"column_end":13},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10767327,"byte_end":10767334,"line_start":467,"line_end":467,"column_start":10,"column_end":17},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10767896,"byte_end":10767903,"line_start":491,"line_end":491,"column_start":10,"column_end":17},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10769146,"byte_end":10769153,"line_start":539,"line_end":539,"column_start":10,"column_end":17},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":4690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/builder.rs","byte_start":10770591,"byte_end":10770598,"line_start":579,"line_end":579,"column_start":21,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":4690},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/context.rs","byte_start":10772990,"byte_end":10773000,"line_start":67,"line_end":67,"column_start":15,"column_end":25},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":4861},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/driver.rs","byte_start":10777513,"byte_end":10777519,"line_start":168,"line_end":168,"column_start":6,"column_end":12},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":4882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/driver.rs","byte_start":10778103,"byte_end":10778109,"line_start":189,"line_end":189,"column_start":15,"column_end":21},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":4882},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10779916,"byte_end":10779922,"line_start":48,"line_end":48,"column_start":6,"column_end":12},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":4886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788675,"byte_end":10788690,"line_start":297,"line_end":297,"column_start":21,"column_end":36},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":4801},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788838,"byte_end":10788853,"line_start":303,"line_end":303,"column_start":23,"column_end":38},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":4801},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/handle.rs","byte_start":10788993,"byte_end":10789008,"line_start":309,"line_end":309,"column_start":23,"column_end":38},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":4801},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/spawner.rs","byte_start":10789393,"byte_end":10789400,"line_start":20,"line_end":20,"column_start":6,"column_end":13},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":4908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/spawner.rs","byte_start":10789642,"byte_end":10789649,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":4908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10791243,"byte_end":10791249,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":4936},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10791712,"byte_end":10791718,"line_start":69,"line_end":69,"column_start":16,"column_end":22},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":4936},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10792034,"byte_end":10792040,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":4936},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10792759,"byte_end":10792767,"line_start":113,"line_end":113,"column_start":17,"column_end":25},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":4938},"to":{"krate":0,"index":591}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/park.rs","byte_start":10792836,"byte_end":10792841,"line_start":119,"line_end":119,"column_start":6,"column_end":11},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":4940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800049,"byte_end":10800054,"line_start":66,"line_end":66,"column_start":25,"column_end":30},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5007},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800085,"byte_end":10800090,"line_start":67,"line_end":67,"column_start":25,"column_end":30},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5007},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800121,"byte_end":10800127,"line_start":68,"line_end":68,"column_start":25,"column_end":31},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5002},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10800158,"byte_end":10800164,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5002},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10801023,"byte_end":10801028,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":4995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10807609,"byte_end":10807614,"line_start":295,"line_end":295,"column_start":9,"column_end":14},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":4998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10812782,"byte_end":10812787,"line_start":445,"line_end":445,"column_start":19,"column_end":24},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":4998},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10812883,"byte_end":10812888,"line_start":451,"line_end":451,"column_start":18,"column_end":23},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":4995},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10813047,"byte_end":10813052,"line_start":459,"line_end":459,"column_start":9,"column_end":14},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":5007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10813240,"byte_end":10813246,"line_start":468,"line_end":468,"column_start":18,"column_end":24},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":5002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/queue.rs","byte_start":10816707,"byte_end":10816713,"line_start":599,"line_end":599,"column_start":27,"column_end":33},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":5002},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10820672,"byte_end":10820682,"line_start":10,"line_end":10,"column_start":31,"column_end":41},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":5080},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10820719,"byte_end":10820729,"line_start":11,"line_end":11,"column_start":31,"column_end":41},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":5080},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10820745,"byte_end":10820755,"line_start":13,"line_end":13,"column_start":9,"column_end":19},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":5080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/atomic_cell.rs","byte_start":10821509,"byte_end":10821519,"line_start":46,"line_end":46,"column_start":18,"column_end":28},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":5080},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10822325,"byte_end":10822329,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":5108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10826167,"byte_end":10826172,"line_start":141,"line_end":141,"column_start":6,"column_end":11},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":5295},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10827650,"byte_end":10827655,"line_start":193,"line_end":193,"column_start":22,"column_end":27},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/idle.rs","byte_start":10827828,"byte_end":10827833,"line_start":205,"line_end":205,"column_start":21,"column_end":26},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":5295},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10833628,"byte_end":10833633,"line_start":184,"line_end":184,"column_start":19,"column_end":24},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":5201},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10836964,"byte_end":10836970,"line_start":276,"line_end":276,"column_start":6,"column_end":12},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":5191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10837745,"byte_end":10837752,"line_start":307,"line_end":307,"column_start":6,"column_end":13},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":5188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10842039,"byte_end":10842043,"line_start":440,"line_end":440,"column_start":6,"column_end":10},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":5170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10847154,"byte_end":10847160,"line_start":605,"line_end":605,"column_start":6,"column_end":12},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":5166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10847600,"byte_end":10847603,"line_start":621,"line_end":621,"column_start":25,"column_end":28},"kind":{"Impl":{"id":397}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4271}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/worker.rs","byte_start":10850907,"byte_end":10850913,"line_start":720,"line_end":720,"column_start":6,"column_end":12},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":5179},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10818719,"byte_end":10818729,"line_start":45,"line_end":45,"column_start":6,"column_end":16},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":5277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10819663,"byte_end":10819673,"line_start":75,"line_end":75,"column_start":21,"column_end":31},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":5277},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10819812,"byte_end":10819822,"line_start":81,"line_end":81,"column_start":15,"column_end":25},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":5277},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10819925,"byte_end":10819932,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":5306},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/thread_pool/mod.rs","byte_start":10820353,"byte_end":10820360,"line_start":106,"line_end":106,"column_start":21,"column_end":28},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":5306},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/runtime/mod.rs","byte_start":10641096,"byte_end":10641103,"line_start":289,"line_end":289,"column_start":10,"column_end":17},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":5327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":118445,"byte_end":118451,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":119223,"byte_end":119229,"line_start":65,"line_end":65,"column_start":10,"column_end":16},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":120098,"byte_end":120108,"line_start":93,"line_end":93,"column_start":23,"column_end":33},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":612},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":121079,"byte_end":121095,"line_start":141,"line_end":141,"column_start":10,"column_end":26},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":5366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":121227,"byte_end":121243,"line_start":147,"line_end":147,"column_start":19,"column_end":35},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":5366},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/coop.rs","byte_start":122983,"byte_end":122989,"line_start":188,"line_end":188,"column_start":10,"column_end":16},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":5346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10872395,"byte_end":10872402,"line_start":54,"line_end":54,"column_start":6,"column_end":13},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":6973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/barrier.rs","byte_start":10875667,"byte_end":10875684,"line_start":136,"line_end":136,"column_start":6,"column_end":23},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883115,"byte_end":10883124,"line_start":221,"line_end":221,"column_start":30,"column_end":39},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6992},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883300,"byte_end":10883309,"line_start":227,"line_end":227,"column_start":47,"column_end":56},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6992},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10883957,"byte_end":10883966,"line_start":246,"line_end":246,"column_start":27,"column_end":36},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6999},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10884271,"byte_end":10884280,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6999},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885203,"byte_end":10885215,"line_start":281,"line_end":281,"column_start":27,"column_end":39},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":7011},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10885593,"byte_end":10885605,"line_start":291,"line_end":291,"column_start":32,"column_end":44},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":7011},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887568,"byte_end":10887572,"line_start":377,"line_end":377,"column_start":35,"column_end":39},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10887617,"byte_end":10887621,"line_start":378,"line_end":378,"column_start":35,"column_end":39},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890395,"byte_end":10890401,"line_start":468,"line_end":468,"column_start":31,"column_end":37},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":5415},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890438,"byte_end":10890444,"line_start":469,"line_end":469,"column_start":31,"column_end":37},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":5415},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890482,"byte_end":10890490,"line_start":471,"line_end":471,"column_start":31,"column_end":39},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890527,"byte_end":10890535,"line_start":472,"line_end":472,"column_start":31,"column_end":39},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10890551,"byte_end":10890557,"line_start":474,"line_end":474,"column_start":9,"column_end":15},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":5415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896167,"byte_end":10896171,"line_start":661,"line_end":661,"column_start":6,"column_end":10},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":5442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896563,"byte_end":10896569,"line_start":676,"line_end":676,"column_start":19,"column_end":25},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":5415},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896749,"byte_end":10896755,"line_start":685,"line_end":685,"column_start":18,"column_end":24},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":5415},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10896909,"byte_end":10896917,"line_start":693,"line_end":693,"column_start":9,"column_end":17},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":5418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10901780,"byte_end":10901788,"line_start":811,"line_end":811,"column_start":16,"column_end":24},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":5418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10905964,"byte_end":10905972,"line_start":928,"line_end":928,"column_start":18,"column_end":26},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10906598,"byte_end":10906602,"line_start":951,"line_end":951,"column_start":13,"column_end":17},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":5462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10907381,"byte_end":10907385,"line_start":977,"line_end":977,"column_start":24,"column_end":28},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10908046,"byte_end":10908050,"line_start":997,"line_end":997,"column_start":22,"column_end":26},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":5462},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10908798,"byte_end":10908804,"line_start":1023,"line_end":1023,"column_start":35,"column_end":41},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":5453},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909219,"byte_end":10909225,"line_start":1040,"line_end":1040,"column_start":24,"column_end":30},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":5415},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909369,"byte_end":10909377,"line_start":1046,"line_end":1046,"column_start":24,"column_end":32},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":5418},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909512,"byte_end":10909521,"line_start":1052,"line_end":1052,"column_start":13,"column_end":22},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":5458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/broadcast.rs","byte_start":10909694,"byte_end":10909703,"line_start":1061,"line_end":1061,"column_start":22,"column_end":31},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":5458},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/block.rs","byte_start":10916598,"byte_end":10916603,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":5573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/block.rs","byte_start":10926702,"byte_end":10926708,"line_start":364,"line_end":364,"column_start":9,"column_end":15},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":5587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/block.rs","byte_start":10927190,"byte_end":10927196,"line_start":381,"line_end":381,"column_start":31,"column_end":37},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":5587},"to":{"krate":2,"index":2362}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10931241,"byte_end":10931249,"line_start":123,"line_end":123,"column_start":9,"column_end":17},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":5653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937584,"byte_end":10937592,"line_start":304,"line_end":304,"column_start":24,"column_end":32},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":5653},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937788,"byte_end":10937796,"line_start":312,"line_end":312,"column_start":19,"column_end":27},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":5653},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10937812,"byte_end":10937818,"line_start":314,"line_end":314,"column_start":9,"column_end":15},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":5643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958181,"byte_end":10958187,"line_start":904,"line_end":904,"column_start":19,"column_end":25},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":5643},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958319,"byte_end":10958325,"line_start":912,"line_end":912,"column_start":24,"column_end":30},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":5643},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10958537,"byte_end":10958543,"line_start":922,"line_end":922,"column_start":9,"column_end":15},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":5646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10959793,"byte_end":10959799,"line_start":965,"line_end":965,"column_start":18,"column_end":24},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":5646},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960266,"byte_end":10960272,"line_start":982,"line_end":982,"column_start":24,"column_end":30},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":5646},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10960488,"byte_end":10960499,"line_start":992,"line_end":992,"column_start":9,"column_end":20},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":5650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10963281,"byte_end":10963292,"line_start":1079,"line_end":1079,"column_start":18,"column_end":29},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":5650},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/bounded.rs","byte_start":10963955,"byte_end":10963966,"line_start":1102,"line_end":1102,"column_start":24,"column_end":35},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":5650},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10964628,"byte_end":10964630,"line_start":19,"line_end":19,"column_start":39,"column_end":41},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10964923,"byte_end":10964925,"line_start":30,"line_end":30,"column_start":51,"column_end":53},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":5766},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10965862,"byte_end":10965866,"line_start":68,"line_end":68,"column_start":27,"column_end":31},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":5779},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10966499,"byte_end":10966507,"line_start":92,"line_end":92,"column_start":24,"column_end":32},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":5792},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10966773,"byte_end":10966777,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":5779},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10966826,"byte_end":10966830,"line_start":102,"line_end":102,"column_start":40,"column_end":44},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":5779},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10967337,"byte_end":10967339,"line_start":124,"line_end":124,"column_start":12,"column_end":14},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":5758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10967949,"byte_end":10967951,"line_start":149,"line_end":149,"column_start":23,"column_end":25},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":5758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10968501,"byte_end":10968503,"line_start":167,"line_end":167,"column_start":22,"column_end":24},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10968842,"byte_end":10968844,"line_start":179,"line_end":179,"column_start":21,"column_end":23},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":5758},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10969167,"byte_end":10969169,"line_start":195,"line_end":195,"column_start":23,"column_end":25},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":5766},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10971724,"byte_end":10971726,"line_start":268,"line_end":268,"column_start":32,"column_end":34},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":5766},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10972138,"byte_end":10972142,"line_start":286,"line_end":286,"column_start":12,"column_end":16},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":5779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10972327,"byte_end":10972331,"line_start":296,"line_end":296,"column_start":21,"column_end":25},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":5779},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/chan.rs","byte_start":10973332,"byte_end":10973343,"line_start":336,"line_end":336,"column_start":20,"column_end":31},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":427},"to":{"krate":0,"index":5774}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10975084,"byte_end":10975086,"line_start":54,"line_end":54,"column_start":9,"column_end":11},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":5886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10980799,"byte_end":10980801,"line_start":211,"line_end":211,"column_start":24,"column_end":26},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":5886},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10981078,"byte_end":10981080,"line_start":220,"line_end":220,"column_start":9,"column_end":11},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":5890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/list.rs","byte_start":10984479,"byte_end":10984481,"line_start":331,"line_end":331,"column_start":24,"column_end":26},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":5890},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985139,"byte_end":10985154,"line_start":16,"line_end":16,"column_start":19,"column_end":34},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985295,"byte_end":10985310,"line_start":24,"line_end":24,"column_start":24,"column_end":39},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":5924},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10985983,"byte_end":10986000,"line_start":45,"line_end":45,"column_start":24,"column_end":41},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":5933},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10986999,"byte_end":10987016,"line_start":75,"line_end":75,"column_start":9,"column_end":26},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":5933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/unbounded.rs","byte_start":10990314,"byte_end":10990329,"line_start":183,"line_end":183,"column_start":9,"column_end":24},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":5924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994507,"byte_end":10994516,"line_start":10,"line_end":10,"column_start":26,"column_end":35},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7029},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10994676,"byte_end":10994685,"line_start":16,"line_end":16,"column_start":43,"column_end":52},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7029},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995171,"byte_end":10995183,"line_start":33,"line_end":33,"column_start":31,"column_end":43},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7036},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995216,"byte_end":10995228,"line_start":35,"line_end":35,"column_start":26,"column_end":38},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995568,"byte_end":10995580,"line_start":48,"line_end":48,"column_start":32,"column_end":44},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7036},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995809,"byte_end":10995818,"line_start":60,"line_end":60,"column_start":23,"column_end":32},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7047},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10995948,"byte_end":10995957,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":7047},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996461,"byte_end":10996477,"line_start":83,"line_end":83,"column_start":35,"column_end":51},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7057},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mpsc/error.rs","byte_start":10996514,"byte_end":10996530,"line_start":85,"line_end":85,"column_start":30,"column_end":46},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7057},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003886,"byte_end":11003891,"line_start":179,"line_end":179,"column_start":25,"column_end":30},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11003945,"byte_end":11003950,"line_start":180,"line_end":180,"column_start":25,"column_end":30},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004004,"byte_end":11004014,"line_start":181,"line_end":181,"column_start":25,"column_end":35},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":6007},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004079,"byte_end":11004094,"line_start":182,"line_end":182,"column_start":25,"column_end":40},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004159,"byte_end":11004175,"line_start":183,"line_end":183,"column_start":29,"column_end":45},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004242,"byte_end":11004258,"line_start":184,"line_end":184,"column_start":29,"column_end":45},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11004939,"byte_end":11004951,"line_start":203,"line_end":203,"column_start":23,"column_end":35},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7068},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005088,"byte_end":11005100,"line_start":209,"line_end":209,"column_start":16,"column_end":28},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7068},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11005908,"byte_end":11005913,"line_start":235,"line_end":235,"column_start":17,"column_end":22},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":6003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011666,"byte_end":11011671,"line_start":438,"line_end":438,"column_start":21,"column_end":26},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011755,"byte_end":11011760,"line_start":444,"line_end":444,"column_start":21,"column_end":26},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11011884,"byte_end":11011889,"line_start":453,"line_end":453,"column_start":29,"column_end":34},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":6003},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11012279,"byte_end":11012289,"line_start":469,"line_end":469,"column_start":21,"column_end":31},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":6007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015224,"byte_end":11015234,"line_start":566,"line_end":566,"column_start":26,"column_end":36},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":6007},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015335,"byte_end":11015345,"line_start":572,"line_end":572,"column_start":27,"column_end":37},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":6007},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015492,"byte_end":11015502,"line_start":579,"line_end":579,"column_start":30,"column_end":40},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":6007},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015659,"byte_end":11015669,"line_start":585,"line_end":585,"column_start":45,"column_end":55},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":6007},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11015835,"byte_end":11015845,"line_start":591,"line_end":591,"column_start":49,"column_end":59},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":6007},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016023,"byte_end":11016038,"line_start":599,"line_end":599,"column_start":26,"column_end":41},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016135,"byte_end":11016150,"line_start":605,"line_end":605,"column_start":27,"column_end":42},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016293,"byte_end":11016308,"line_start":612,"line_end":612,"column_start":30,"column_end":45},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016461,"byte_end":11016476,"line_start":618,"line_end":618,"column_start":45,"column_end":60},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016638,"byte_end":11016653,"line_start":624,"line_end":624,"column_start":49,"column_end":64},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":6011},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11016823,"byte_end":11016839,"line_start":632,"line_end":632,"column_start":21,"column_end":37},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":6014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018677,"byte_end":11018693,"line_start":684,"line_end":684,"column_start":30,"column_end":46},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018793,"byte_end":11018809,"line_start":690,"line_end":690,"column_start":31,"column_end":47},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11018952,"byte_end":11018968,"line_start":697,"line_end":697,"column_start":34,"column_end":50},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11019121,"byte_end":11019137,"line_start":703,"line_end":703,"column_start":49,"column_end":65},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/mutex.rs","byte_start":11019307,"byte_end":11019323,"line_start":709,"line_end":709,"column_start":53,"column_end":69},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":6014},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11024190,"byte_end":11024198,"line_start":156,"line_end":156,"column_start":26,"column_end":34},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7095},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11024231,"byte_end":11024239,"line_start":157,"line_end":157,"column_start":26,"column_end":34},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7095},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11025188,"byte_end":11025194,"line_start":199,"line_end":199,"column_start":6,"column_end":12},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11033721,"byte_end":11033727,"line_start":459,"line_end":459,"column_start":18,"column_end":24},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":7073},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11035637,"byte_end":11035645,"line_start":514,"line_end":514,"column_start":6,"column_end":14},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":7095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11036158,"byte_end":11036166,"line_start":530,"line_end":530,"column_start":17,"column_end":25},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7095},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11041862,"byte_end":11041870,"line_start":672,"line_end":672,"column_start":15,"column_end":23},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7095},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/notify.rs","byte_start":11043733,"byte_end":11043739,"line_start":718,"line_end":718,"column_start":35,"column_end":41},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7088},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11047892,"byte_end":11047901,"line_start":149,"line_end":149,"column_start":27,"column_end":36},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7125},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048063,"byte_end":11048072,"line_start":155,"line_end":155,"column_start":32,"column_end":41},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7125},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048141,"byte_end":11048153,"line_start":159,"line_end":159,"column_start":27,"column_end":39},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7137},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048452,"byte_end":11048464,"line_start":168,"line_end":168,"column_start":32,"column_end":44},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7137},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11048958,"byte_end":11048962,"line_start":190,"line_end":190,"column_start":6,"column_end":10},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":6234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11050998,"byte_end":11051004,"line_start":269,"line_end":269,"column_start":9,"column_end":15},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":7113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058631,"byte_end":11058637,"line_start":522,"line_end":522,"column_start":18,"column_end":24},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":7113},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11058776,"byte_end":11058784,"line_start":530,"line_end":530,"column_start":9,"column_end":17},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":7119},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11063291,"byte_end":11063299,"line_start":683,"line_end":683,"column_start":18,"column_end":26},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7119},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11063446,"byte_end":11063454,"line_start":691,"line_end":691,"column_start":20,"column_end":28},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7119},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11063917,"byte_end":11063922,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":6228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067028,"byte_end":11067033,"line_start":805,"line_end":805,"column_start":31,"column_end":36},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067070,"byte_end":11067075,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067176,"byte_end":11067181,"line_start":812,"line_end":812,"column_start":18,"column_end":23},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067558,"byte_end":11067563,"line_start":830,"line_end":830,"column_start":36,"column_end":41},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":6228},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11067958,"byte_end":11067963,"line_start":845,"line_end":845,"column_start":6,"column_end":11},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":7150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/oneshot.rs","byte_start":11069676,"byte_end":11069681,"line_start":911,"line_end":911,"column_start":21,"column_end":26},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":7150},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11073740,"byte_end":11073749,"line_start":107,"line_end":107,"column_start":6,"column_end":15},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":6337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11084829,"byte_end":11084838,"line_start":398,"line_end":398,"column_start":21,"column_end":30},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":6337},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11085037,"byte_end":11085043,"line_start":406,"line_end":406,"column_start":6,"column_end":12},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":6349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11085909,"byte_end":11085916,"line_start":435,"line_end":435,"column_start":17,"column_end":24},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":6343},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11086594,"byte_end":11086601,"line_start":459,"line_end":459,"column_start":10,"column_end":17},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":6343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11087400,"byte_end":11087407,"line_start":489,"line_end":489,"column_start":15,"column_end":22},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":6343},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088657,"byte_end":11088664,"line_start":519,"line_end":519,"column_start":22,"column_end":29},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":6343},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088711,"byte_end":11088723,"line_start":523,"line_end":523,"column_start":6,"column_end":18},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":7166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088816,"byte_end":11088828,"line_start":529,"line_end":529,"column_start":23,"column_end":35},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":7166},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11088972,"byte_end":11088984,"line_start":535,"line_end":535,"column_start":28,"column_end":40},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7166},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089031,"byte_end":11089046,"line_start":539,"line_end":539,"column_start":6,"column_end":21},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089564,"byte_end":11089579,"line_start":554,"line_end":554,"column_start":23,"column_end":38},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7156},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089865,"byte_end":11089880,"line_start":563,"line_end":563,"column_start":28,"column_end":43},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":7156},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/batch_semaphore.rs","byte_start":11089973,"byte_end":11089979,"line_start":568,"line_end":568,"column_start":35,"column_end":41},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":6349},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11093271,"byte_end":11093280,"line_start":73,"line_end":73,"column_start":6,"column_end":15},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":7171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101484,"byte_end":11101499,"line_start":297,"line_end":297,"column_start":10,"column_end":25},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":7175},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11101744,"byte_end":11101764,"line_start":306,"line_end":306,"column_start":6,"column_end":26},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":7182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11102018,"byte_end":11102033,"line_start":315,"line_end":315,"column_start":19,"column_end":34},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7175},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/semaphore.rs","byte_start":11102141,"byte_end":11102161,"line_start":321,"line_end":321,"column_start":15,"column_end":35},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7182},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11126751,"byte_end":11126771,"line_start":24,"line_end":24,"column_start":28,"column_end":48},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":6470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11129843,"byte_end":11129863,"line_start":118,"line_end":118,"column_start":43,"column_end":63},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11130004,"byte_end":11130024,"line_start":126,"line_end":126,"column_start":43,"column_end":63},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11130210,"byte_end":11130230,"line_start":135,"line_end":135,"column_start":45,"column_end":65},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_read_guard.rs","byte_start":11130412,"byte_end":11130432,"line_start":144,"line_end":144,"column_start":37,"column_end":57},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11131453,"byte_end":11131474,"line_start":26,"line_end":26,"column_start":17,"column_end":38},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":6513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137145,"byte_end":11137166,"line_start":197,"line_end":197,"column_start":32,"column_end":53},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137296,"byte_end":11137317,"line_start":205,"line_end":205,"column_start":35,"column_end":56},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137438,"byte_end":11137459,"line_start":211,"line_end":211,"column_start":32,"column_end":53},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137631,"byte_end":11137652,"line_start":220,"line_end":220,"column_start":34,"column_end":55},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard.rs","byte_start":11137820,"byte_end":11137841,"line_start":229,"line_end":229,"column_start":26,"column_end":47},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11138944,"byte_end":11138971,"line_start":25,"line_end":25,"column_start":28,"column_end":55},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":6555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11142518,"byte_end":11142545,"line_start":134,"line_end":134,"column_start":43,"column_end":70},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11142689,"byte_end":11142716,"line_start":142,"line_end":142,"column_start":46,"column_end":73},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11142851,"byte_end":11142878,"line_start":148,"line_end":148,"column_start":43,"column_end":70},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11143064,"byte_end":11143091,"line_start":157,"line_end":157,"column_start":45,"column_end":72},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/owned_write_guard_mapped.rs","byte_start":11143273,"byte_end":11143300,"line_start":166,"line_end":166,"column_start":37,"column_end":64},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11144002,"byte_end":11144017,"line_start":21,"line_end":21,"column_start":21,"column_end":36},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":6598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147431,"byte_end":11147446,"line_start":126,"line_end":126,"column_start":32,"column_end":47},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147581,"byte_end":11147596,"line_start":134,"line_end":134,"column_start":36,"column_end":51},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147776,"byte_end":11147791,"line_start":143,"line_end":143,"column_start":38,"column_end":53},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/read_guard.rs","byte_start":11147967,"byte_end":11147982,"line_start":152,"line_end":152,"column_start":30,"column_end":45},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11148767,"byte_end":11148783,"line_start":24,"line_end":24,"column_start":21,"column_end":37},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":6637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154781,"byte_end":11154797,"line_start":204,"line_end":204,"column_start":32,"column_end":48},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11154931,"byte_end":11154947,"line_start":212,"line_end":212,"column_start":35,"column_end":51},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11155076,"byte_end":11155092,"line_start":218,"line_end":218,"column_start":36,"column_end":52},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11155272,"byte_end":11155288,"line_start":227,"line_end":227,"column_start":38,"column_end":54},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard.rs","byte_start":11155464,"byte_end":11155480,"line_start":236,"line_end":236,"column_start":30,"column_end":46},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11156339,"byte_end":11156361,"line_start":23,"line_end":23,"column_start":21,"column_end":43},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":6681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160201,"byte_end":11160223,"line_start":140,"line_end":140,"column_start":32,"column_end":54},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160357,"byte_end":11160379,"line_start":148,"line_end":148,"column_start":35,"column_end":57},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160508,"byte_end":11160530,"line_start":154,"line_end":154,"column_start":36,"column_end":58},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160710,"byte_end":11160732,"line_start":163,"line_end":163,"column_start":38,"column_end":60},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock/write_guard_mapped.rs","byte_start":11160908,"byte_end":11160930,"line_start":172,"line_end":172,"column_start":30,"column_end":52},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107608,"byte_end":11107614,"line_start":146,"line_end":146,"column_start":25,"column_end":31},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107668,"byte_end":11107674,"line_start":147,"line_end":147,"column_start":25,"column_end":31},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107908,"byte_end":11107923,"line_start":151,"line_end":151,"column_start":25,"column_end":40},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11107981,"byte_end":11107996,"line_start":152,"line_end":152,"column_start":25,"column_end":40},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":6598},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108203,"byte_end":11108223,"line_start":155,"line_end":155,"column_start":28,"column_end":48},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108318,"byte_end":11108338,"line_start":161,"line_end":161,"column_start":28,"column_end":48},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":6470},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108437,"byte_end":11108453,"line_start":167,"line_end":167,"column_start":25,"column_end":41},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108518,"byte_end":11108539,"line_start":168,"line_end":168,"column_start":25,"column_end":46},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108600,"byte_end":11108622,"line_start":169,"line_end":169,"column_start":25,"column_end":47},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11108690,"byte_end":11108717,"line_start":170,"line_end":170,"column_start":28,"column_end":55},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109064,"byte_end":11109080,"line_start":180,"line_end":180,"column_start":25,"column_end":41},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":6637},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109145,"byte_end":11109166,"line_start":181,"line_end":181,"column_start":25,"column_end":46},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":6513},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109227,"byte_end":11109249,"line_start":182,"line_end":182,"column_start":25,"column_end":47},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":6681},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109317,"byte_end":11109344,"line_start":183,"line_end":183,"column_start":28,"column_end":55},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":6555},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11109436,"byte_end":11109442,"line_start":190,"line_end":190,"column_start":17,"column_end":23},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":7187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125817,"byte_end":11125823,"line_start":690,"line_end":690,"column_start":21,"column_end":27},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/rwlock.rs","byte_start":11125915,"byte_end":11125921,"line_start":696,"line_end":696,"column_start":29,"column_end":35},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":7187},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11167209,"byte_end":11167220,"line_start":135,"line_end":135,"column_start":6,"column_end":17},"kind":{"Impl":{"id":612}},"from":{"krate":0,"index":6806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173242,"byte_end":11173253,"line_start":285,"line_end":285,"column_start":18,"column_end":29},"kind":{"Impl":{"id":613}},"from":{"krate":0,"index":6806},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173339,"byte_end":11173350,"line_start":291,"line_end":291,"column_start":21,"column_end":32},"kind":{"Impl":{"id":614}},"from":{"krate":0,"index":6806},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173483,"byte_end":11173494,"line_start":297,"line_end":297,"column_start":22,"column_end":33},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":6806},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173519,"byte_end":11173530,"line_start":298,"line_end":298,"column_start":22,"column_end":33},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":6806},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/task/atomic_waker.rs","byte_start":11173626,"byte_end":11173631,"line_start":305,"line_end":305,"column_start":19,"column_end":24},"kind":{"Impl":{"id":617}},"from":{"krate":2,"index":9763},"to":{"krate":0,"index":6829}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11174919,"byte_end":11174927,"line_start":41,"line_end":41,"column_start":21,"column_end":29},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175035,"byte_end":11175043,"line_start":47,"line_end":47,"column_start":36,"column_end":44},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175248,"byte_end":11175256,"line_start":55,"line_end":55,"column_start":26,"column_end":34},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175389,"byte_end":11175397,"line_start":61,"line_end":61,"column_start":34,"column_end":42},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":1798}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175513,"byte_end":11175521,"line_start":67,"line_end":67,"column_start":20,"column_end":28},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":1803}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175546,"byte_end":11175554,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11175790,"byte_end":11175798,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":6852},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187491,"byte_end":11187499,"line_start":349,"line_end":349,"column_start":38,"column_end":46},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11187716,"byte_end":11187724,"line_start":354,"line_end":354,"column_start":31,"column_end":39},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":6852},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188336,"byte_end":11188344,"line_start":373,"line_end":373,"column_start":26,"column_end":34},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":7195},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188651,"byte_end":11188659,"line_start":382,"line_end":382,"column_start":31,"column_end":39},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":7195},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/once_cell.rs","byte_start":11188675,"byte_end":11188683,"line_start":384,"line_end":384,"column_start":9,"column_end":17},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":7195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193268,"byte_end":11193277,"line_start":132,"line_end":132,"column_start":42,"column_end":51},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":7243},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193457,"byte_end":11193466,"line_start":138,"line_end":138,"column_start":47,"column_end":56},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":7243},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193659,"byte_end":11193668,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":7249},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11193830,"byte_end":11193839,"line_start":152,"line_end":152,"column_start":32,"column_end":41},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":7249},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11195045,"byte_end":11195053,"line_start":202,"line_end":202,"column_start":9,"column_end":17},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":7212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198048,"byte_end":11198056,"line_start":303,"line_end":303,"column_start":19,"column_end":27},"kind":{"Impl":{"id":635}},"from":{"krate":0,"index":7212},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198240,"byte_end":11198248,"line_start":312,"line_end":312,"column_start":18,"column_end":26},"kind":{"Impl":{"id":636}},"from":{"krate":0,"index":7212},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11198618,"byte_end":11198624,"line_start":323,"line_end":323,"column_start":9,"column_end":15},"kind":{"Impl":{"id":637}},"from":{"krate":0,"index":7219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11201461,"byte_end":11201467,"line_start":422,"line_end":422,"column_start":18,"column_end":24},"kind":{"Impl":{"id":638}},"from":{"krate":0,"index":7219},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/sync/watch.rs","byte_start":11201657,"byte_end":11201660,"line_start":431,"line_end":431,"column_start":24,"column_end":27},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":7225},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/yield_now.rs","byte_start":11214827,"byte_end":11214835,"line_start":22,"line_end":22,"column_start":25,"column_end":33},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":7456},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11225757,"byte_end":11225765,"line_start":323,"line_end":323,"column_start":6,"column_end":14},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":7461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11233758,"byte_end":11233766,"line_start":552,"line_end":552,"column_start":21,"column_end":29},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11233905,"byte_end":11233913,"line_start":558,"line_end":558,"column_start":17,"column_end":25},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11234878,"byte_end":11234886,"line_start":582,"line_end":582,"column_start":18,"column_end":26},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11234967,"byte_end":11234975,"line_start":588,"line_end":588,"column_start":15,"column_end":23},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":7461},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11235842,"byte_end":11235850,"line_start":618,"line_end":618,"column_start":28,"column_end":36},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":8469},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11236735,"byte_end":11236741,"line_start":649,"line_end":649,"column_start":6,"column_end":12},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":7301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/local.rs","byte_start":11237292,"byte_end":11237295,"line_start":668,"line_end":668,"column_start":25,"column_end":28},"kind":{"Impl":{"id":648}},"from":{"krate":5,"index":4522},"to":{"krate":0,"index":4271}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11240802,"byte_end":11240810,"line_start":100,"line_end":100,"column_start":18,"column_end":26},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":7370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243310,"byte_end":11243318,"line_start":194,"line_end":194,"column_start":25,"column_end":33},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":7370},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243526,"byte_end":11243534,"line_start":202,"line_end":202,"column_start":33,"column_end":41},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":7370},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11243836,"byte_end":11243851,"line_start":217,"line_end":217,"column_start":21,"column_end":36},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":8413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244128,"byte_end":11244133,"line_start":225,"line_end":225,"column_start":26,"column_end":31},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":7403},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244674,"byte_end":11244689,"line_start":247,"line_end":247,"column_start":40,"column_end":55},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8413},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11244966,"byte_end":11244967,"line_start":257,"line_end":257,"column_start":37,"column_end":38},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":7422},"to":{"krate":0,"index":7420}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245152,"byte_end":11245163,"line_start":265,"line_end":265,"column_start":21,"column_end":32},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":7473},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245307,"byte_end":11245318,"line_start":271,"line_end":271,"column_start":23,"column_end":34},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":7473},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/task_local.rs","byte_start":11245465,"byte_end":11245476,"line_start":277,"line_end":277,"column_start":16,"column_end":27},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":7473},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/task/unconstrained.rs","byte_start":11245878,"byte_end":11245891,"line_start":16,"line_end":16,"column_start":20,"column_end":33},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":8380},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/clock.rs","byte_start":11250316,"byte_end":11250321,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":7882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11275216,"byte_end":11275225,"line_start":99,"line_end":99,"column_start":18,"column_end":27},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11275309,"byte_end":11275318,"line_start":105,"line_end":105,"column_start":26,"column_end":35},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":7513},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11275464,"byte_end":11275473,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":7513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11282491,"byte_end":11282501,"line_start":302,"line_end":302,"column_start":22,"column_end":32},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":7887},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11282526,"byte_end":11282536,"line_start":303,"line_end":303,"column_start":22,"column_end":32},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":7887},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11283977,"byte_end":11283988,"line_start":339,"line_end":339,"column_start":6,"column_end":17},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":7898},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11287511,"byte_end":11287528,"line_start":437,"line_end":437,"column_start":26,"column_end":43},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":7547},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11287829,"byte_end":11287846,"line_start":446,"line_end":446,"column_start":6,"column_end":23},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":7547},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288085,"byte_end":11288096,"line_start":456,"line_end":456,"column_start":22,"column_end":33},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":7898},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288121,"byte_end":11288132,"line_start":457,"line_end":457,"column_start":22,"column_end":33},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":7898},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288171,"byte_end":11288182,"line_start":459,"line_end":459,"column_start":35,"column_end":46},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":7898},"to":{"krate":0,"index":642}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11288700,"byte_end":11288710,"line_start":481,"line_end":481,"column_start":6,"column_end":16},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":7887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11291711,"byte_end":11291722,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":7894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/entry.rs","byte_start":11294113,"byte_end":11294123,"line_start":620,"line_end":620,"column_start":15,"column_end":25},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":7887},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/handle.rs","byte_start":11294612,"byte_end":11294618,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":7914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/handle.rs","byte_start":11295286,"byte_end":11295292,"line_start":36,"line_end":36,"column_start":10,"column_end":16},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":7914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/handle.rs","byte_start":11297336,"byte_end":11297342,"line_start":84,"line_end":84,"column_start":21,"column_end":27},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":7914},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/wheel/level.rs","byte_start":11309940,"byte_end":11309945,"line_start":42,"line_end":42,"column_start":6,"column_end":11},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":7609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/wheel/level.rs","byte_start":11316013,"byte_end":11316018,"line_start":233,"line_end":233,"column_start":21,"column_end":26},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":7609},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/wheel/mod.rs","byte_start":11298963,"byte_end":11298968,"line_start":52,"line_end":52,"column_start":6,"column_end":11},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":7927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11322152,"byte_end":11322157,"line_start":168,"line_end":168,"column_start":6,"column_end":11},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":8352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/sleep.rs","byte_start":11324260,"byte_end":11324265,"line_start":238,"line_end":238,"column_start":17,"column_end":22},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":8352},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11259546,"byte_end":11259555,"line_start":103,"line_end":103,"column_start":6,"column_end":15},"kind":{"Impl":{"id":683}},"from":{"krate":0,"index":7942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11261191,"byte_end":11261197,"line_start":164,"line_end":164,"column_start":9,"column_end":15},"kind":{"Impl":{"id":684}},"from":{"krate":0,"index":7934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11264216,"byte_end":11264222,"line_start":253,"line_end":253,"column_start":6,"column_end":12},"kind":{"Impl":{"id":685}},"from":{"krate":0,"index":7914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11268942,"byte_end":11268948,"line_start":386,"line_end":386,"column_start":18,"column_end":24},"kind":{"Impl":{"id":686}},"from":{"krate":0,"index":7934},"to":{"krate":0,"index":584}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11269661,"byte_end":11269667,"line_start":420,"line_end":420,"column_start":18,"column_end":24},"kind":{"Impl":{"id":687}},"from":{"krate":0,"index":7934},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11269793,"byte_end":11269798,"line_start":431,"line_end":431,"column_start":6,"column_end":11},"kind":{"Impl":{"id":688}},"from":{"krate":0,"index":7708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/driver/mod.rs","byte_start":11270511,"byte_end":11270516,"line_start":456,"line_end":456,"column_start":21,"column_end":26},"kind":{"Impl":{"id":689}},"from":{"krate":0,"index":7708},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326416,"byte_end":11326421,"line_start":37,"line_end":37,"column_start":21,"column_end":26},"kind":{"Impl":{"id":690}},"from":{"krate":0,"index":7949},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11326662,"byte_end":11326667,"line_start":54,"line_end":54,"column_start":6,"column_end":11},"kind":{"Impl":{"id":691}},"from":{"krate":0,"index":7949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327567,"byte_end":11327572,"line_start":86,"line_end":86,"column_start":23,"column_end":28},"kind":{"Impl":{"id":692}},"from":{"krate":0,"index":7949},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11327599,"byte_end":11327604,"line_start":88,"line_end":88,"column_start":23,"column_end":28},"kind":{"Impl":{"id":693}},"from":{"krate":0,"index":7949},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328066,"byte_end":11328073,"line_start":102,"line_end":102,"column_start":6,"column_end":13},"kind":{"Impl":{"id":694}},"from":{"krate":0,"index":7978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328161,"byte_end":11328168,"line_start":108,"line_end":108,"column_start":23,"column_end":30},"kind":{"Impl":{"id":695}},"from":{"krate":0,"index":7978},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328312,"byte_end":11328319,"line_start":114,"line_end":114,"column_start":28,"column_end":35},"kind":{"Impl":{"id":696}},"from":{"krate":0,"index":7978},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/error.rs","byte_start":11328356,"byte_end":11328361,"line_start":116,"line_end":116,"column_start":33,"column_end":38},"kind":{"Impl":{"id":697}},"from":{"krate":1,"index":2782},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11329903,"byte_end":11329910,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":698}},"from":{"krate":0,"index":7992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334007,"byte_end":11334014,"line_start":161,"line_end":161,"column_start":35,"column_end":42},"kind":{"Impl":{"id":699}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334143,"byte_end":11334150,"line_start":167,"line_end":167,"column_start":35,"column_end":42},"kind":{"Impl":{"id":700}},"from":{"krate":1,"index":8306},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334265,"byte_end":11334272,"line_start":173,"line_end":173,"column_start":29,"column_end":36},"kind":{"Impl":{"id":701}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":2146}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334437,"byte_end":11334444,"line_start":181,"line_end":181,"column_start":35,"column_end":42},"kind":{"Impl":{"id":702}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":2177}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334549,"byte_end":11334556,"line_start":187,"line_end":187,"column_start":19,"column_end":26},"kind":{"Impl":{"id":703}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334697,"byte_end":11334704,"line_start":195,"line_end":195,"column_start":29,"column_end":36},"kind":{"Impl":{"id":704}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":2151}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334865,"byte_end":11334872,"line_start":203,"line_end":203,"column_start":35,"column_end":42},"kind":{"Impl":{"id":705}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/instant.rs","byte_start":11334979,"byte_end":11334986,"line_start":209,"line_end":209,"column_start":21,"column_end":28},"kind":{"Impl":{"id":706}},"from":{"krate":0,"index":7992},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/interval.rs","byte_start":11339164,"byte_end":11339172,"line_start":128,"line_end":128,"column_start":6,"column_end":14},"kind":{"Impl":{"id":707}},"from":{"krate":0,"index":8015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344178,"byte_end":11344185,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"kind":{"Impl":{"id":708}},"from":{"krate":0,"index":8314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/time/timeout.rs","byte_start":11344723,"byte_end":11344730,"line_start":139,"line_end":139,"column_start":20,"column_end":27},"kind":{"Impl":{"id":709}},"from":{"krate":0,"index":8314},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/bit.rs","byte_start":11345375,"byte_end":11345379,"line_start":9,"line_end":9,"column_start":6,"column_end":10},"kind":{"Impl":{"id":710}},"from":{"krate":0,"index":8167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/bit.rs","byte_start":11346807,"byte_end":11346811,"line_start":53,"line_end":53,"column_start":21,"column_end":25},"kind":{"Impl":{"id":711}},"from":{"krate":0,"index":8167},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11350754,"byte_end":11350761,"line_start":87,"line_end":87,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2069},"to":{"krate":0,"index":8059}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11351961,"byte_end":11351965,"line_start":142,"line_end":142,"column_start":31,"column_end":35},"kind":{"Impl":{"id":712}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352002,"byte_end":11352006,"line_start":143,"line_end":143,"column_start":31,"column_end":35},"kind":{"Impl":{"id":713}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352043,"byte_end":11352053,"line_start":144,"line_end":144,"column_start":31,"column_end":41},"kind":{"Impl":{"id":714}},"from":{"krate":0,"index":8074},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352090,"byte_end":11352100,"line_start":145,"line_end":145,"column_start":31,"column_end":41},"kind":{"Impl":{"id":715}},"from":{"krate":0,"index":8074},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352137,"byte_end":11352140,"line_start":146,"line_end":146,"column_start":31,"column_end":34},"kind":{"Impl":{"id":716}},"from":{"krate":0,"index":8061},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352177,"byte_end":11352180,"line_start":147,"line_end":147,"column_start":31,"column_end":34},"kind":{"Impl":{"id":717}},"from":{"krate":0,"index":8061},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11352796,"byte_end":11352800,"line_start":173,"line_end":173,"column_start":9,"column_end":13},"kind":{"Impl":{"id":718}},"from":{"krate":0,"index":8049},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11358395,"byte_end":11358399,"line_start":321,"line_end":321,"column_start":24,"column_end":28},"kind":{"Impl":{"id":719}},"from":{"krate":0,"index":8049},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11358538,"byte_end":11358547,"line_start":327,"line_end":327,"column_start":16,"column_end":25},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":8055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359114,"byte_end":11359123,"line_start":346,"line_end":346,"column_start":24,"column_end":33},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":8055},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359281,"byte_end":11359284,"line_start":352,"line_end":352,"column_start":24,"column_end":27},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":8061},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359546,"byte_end":11359549,"line_start":362,"line_end":362,"column_start":18,"column_end":21},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":8061},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359816,"byte_end":11359819,"line_start":370,"line_end":370,"column_start":36,"column_end":39},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":8061},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11359940,"byte_end":11359944,"line_start":376,"line_end":376,"column_start":16,"column_end":20},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":8067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11362451,"byte_end":11362455,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":8067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11362799,"byte_end":11362803,"line_start":464,"line_end":464,"column_start":21,"column_end":25},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11363151,"byte_end":11363155,"line_start":480,"line_end":480,"column_start":9,"column_end":13},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":8067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11363517,"byte_end":11363527,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":8074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11364464,"byte_end":11364474,"line_start":524,"line_end":524,"column_start":21,"column_end":31},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":8074},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11364617,"byte_end":11364622,"line_start":533,"line_end":533,"column_start":9,"column_end":14},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":8078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11365505,"byte_end":11365509,"line_start":563,"line_end":563,"column_start":16,"column_end":20},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":8095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11366069,"byte_end":11366074,"line_start":578,"line_end":578,"column_start":9,"column_end":14},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":8099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/slab.rs","byte_start":11366400,"byte_end":11366407,"line_start":588,"line_end":588,"column_start":6,"column_end":13},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":8177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":138393,"byte_end":138403,"line_start":30,"line_end":30,"column_start":31,"column_end":41},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":138473,"byte_end":138483,"line_start":31,"line_end":31,"column_start":31,"column_end":41},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141061,"byte_end":141069,"line_start":100,"line_end":100,"column_start":31,"column_end":39},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141106,"byte_end":141114,"line_start":101,"line_end":101,"column_start":31,"column_end":39},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141165,"byte_end":141175,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":141410,"byte_end":141420,"line_start":116,"line_end":116,"column_start":15,"column_end":25},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":144426,"byte_end":144436,"line_start":210,"line_end":210,"column_start":30,"column_end":40},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":144793,"byte_end":144803,"line_start":225,"line_end":225,"column_start":15,"column_end":25},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":144990,"byte_end":145000,"line_start":232,"line_end":232,"column_start":27,"column_end":37},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":632},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":145277,"byte_end":145287,"line_start":246,"line_end":246,"column_start":19,"column_end":29},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":145520,"byte_end":145524,"line_start":255,"line_end":255,"column_start":36,"column_end":40},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":8192},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":146178,"byte_end":146188,"line_start":278,"line_end":278,"column_start":19,"column_end":29},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":146557,"byte_end":146568,"line_start":292,"line_end":292,"column_start":33,"column_end":44},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":8205},"to":{"krate":2,"index":5625}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":147248,"byte_end":147256,"line_start":317,"line_end":317,"column_start":9,"column_end":17},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/linked_list.rs","byte_start":148839,"byte_end":148847,"line_start":366,"line_end":366,"column_start":24,"column_end":32},"kind":{"Impl":{"id":749}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/rand.rs","byte_start":159371,"byte_end":159379,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":750}},"from":{"krate":0,"index":8222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/wake.rs","byte_start":11373688,"byte_end":11373692,"line_start":8,"line_end":8,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2081},"to":{"krate":0,"index":8236}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/wake.rs","byte_start":11373695,"byte_end":11373699,"line_start":8,"line_end":8,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2093},"to":{"krate":0,"index":8236}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/wake.rs","byte_start":11374010,"byte_end":11374018,"line_start":23,"line_end":23,"column_start":16,"column_end":24},"kind":{"Impl":{"id":751}},"from":{"krate":0,"index":8260},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376106,"byte_end":11376113,"line_start":18,"line_end":18,"column_start":31,"column_end":38},"kind":{"Impl":{"id":752}},"from":{"krate":0,"index":8276},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376150,"byte_end":11376157,"line_start":19,"line_end":19,"column_start":31,"column_end":38},"kind":{"Impl":{"id":753}},"from":{"krate":0,"index":8276},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376195,"byte_end":11376204,"line_start":21,"line_end":21,"column_start":31,"column_end":40},"kind":{"Impl":{"id":754}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11376390,"byte_end":11376397,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"kind":{"Impl":{"id":755}},"from":{"krate":0,"index":8276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11377031,"byte_end":11377040,"line_start":62,"line_end":62,"column_start":19,"column_end":28},"kind":{"Impl":{"id":756}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11377172,"byte_end":11377181,"line_start":70,"line_end":70,"column_start":22,"column_end":31},"kind":{"Impl":{"id":757}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.6.1/src/util/try_lock.rs","byte_start":11377303,"byte_end":11377312,"line_start":76,"line_end":76,"column_start":18,"column_end":27},"kind":{"Impl":{"id":758}},"from":{"krate":0,"index":8280},"to":{"krate":2,"index":2305}}]}