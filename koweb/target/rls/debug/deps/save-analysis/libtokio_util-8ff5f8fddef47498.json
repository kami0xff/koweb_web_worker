{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7","program":"/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=8ff5f8fddef47498","-C","extra-filename=-8ff5f8fddef47498","--out-dir","/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps","-L","dependency=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps","--extern","bytes=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libbytes-dd52596db22c8f26.rmeta","--extern","futures_core=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libfutures_core-bd808c1718c9988e.rmeta","--extern","futures_sink=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libfutures_sink-c696bbb22b8d4d60.rmeta","--extern","log=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/liblog-2365e26d4f630e64.rmeta","--extern","pin_project_lite=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libpin_project_lite-42d82ba4e3590262.rmeta","--extern","tokio=/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libtokio-46dda805cd55117a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kami/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kami/Programing/wasm/koweb_web_worker/koweb/target/rls/debug/deps/libtokio_util-8ff5f8fddef47498.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[6464080672102199268,6512580193139625664]},"crate_root":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src","external_crates":[{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8363989277313806732,13723635736355452392]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5755871685339259462,14524450630327408145]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6095990061662150844,17257511342173735843]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13534664360101634333,15955848543282431589]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2576337310504802494,7533979301291365915]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5114841071718684731,1147767992231475921]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14891534813972024149,13771932312545804845]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[904103305253144465,12292134317329413205]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[16314738562439622889,10306027504818249940]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15843431334828571128,5286674190927770495]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17405625562201081622,10275716470817790619]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[11445955052790897216,5818918092474945162]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[14649202847011715524,6782578055671422766]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[7180995537586922820,7051902941398327739]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[9612987991627917998,10712864082221106628]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[17826240478786457486,5527832178130695808]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6600453779972510942,5977101663316138555]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":18,"id":{"name":"futures_core","disambiguator":[12473945594977338609,8761349039756584384]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":19,"id":{"name":"futures_sink","disambiguator":[10712861737114058298,7811803431419533322]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":20,"id":{"name":"tokio","disambiguator":[3721237899876036197,607595675229307118]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":21,"id":{"name":"mio","disambiguator":[910854200205516501,7753637629945052070]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","num":22,"id":{"name":"log","disambiguator":[16637856329360640333,18342046342193457292]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":23,"id":{"name":"cfg_if","disambiguator":[1155024563974712189,5296233732488635092]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":24,"id":{"name":"libc","disambiguator":[10838411454354704470,9796936838107296501]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","num":25,"id":{"name":"pin_project_lite","disambiguator":[6242653208481502721,5903162098939332941]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","num":26,"id":{"name":"bytes","disambiguator":[17308212729600630810,29069590626767026]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":27,"id":{"name":"memchr","disambiguator":[13808587907274931623,1320653678005444489]}},{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","num":28,"id":{"name":"num_cpus","disambiguator":[11623831850522552374,3978732364635803789]}}],"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":773},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739092,"byte_end":11739102,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739141,"byte_end":11739148,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739187,"byte_end":11739194,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1118},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739356,"byte_end":11739362,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739364,"byte_end":11739375,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1077},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739423,"byte_end":11739433,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":1036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739482,"byte_end":11739493,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739555,"byte_end":11739575,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":644},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739577,"byte_end":11739602,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":846},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739651,"byte_end":11739661,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":880},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739663,"byte_end":11739678,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":888},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739743,"byte_end":11739760,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":932},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739762,"byte_end":11739784,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":346}},{"kind":"Use","ref_id":{"krate":0,"index":27},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6701,"byte_end":6718,"line_start":4,"line_end":4,"column_start":30,"column_end":47},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6720,"byte_end":6745,"line_start":4,"line_end":4,"column_start":49,"column_end":74},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":1011},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6808,"byte_end":6818,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6865,"byte_end":6878,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":12}},{"kind":"Use","ref_id":{"krate":0,"index":241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6921,"byte_end":6938,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":12}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":5369,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":346},{"krate":0,"index":12},{"krate":0,"index":274},{"krate":0,"index":321}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":356,"byte_end":393,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":394,"byte_end":397,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":398,"byte_end":455,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":456,"byte_end":520,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":521,"byte_end":596,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":597,"byte_end":600,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":601,"byte_end":637,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":346},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/cfg.rs","byte_start":5445,"byte_end":5470,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11728820,"byte_end":11728873,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11728874,"byte_end":11728877,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11728878,"byte_end":11728953,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11728954,"byte_end":11729019,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729020,"byte_end":11729023,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729024,"byte_end":11729104,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729105,"byte_end":11729180,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729181,"byte_end":11729229,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729230,"byte_end":11729233,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729234,"byte_end":11729257,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729258,"byte_end":11729261,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729262,"byte_end":11729341,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729342,"byte_end":11729421,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729422,"byte_end":11729493,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729494,"byte_end":11729564,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729565,"byte_end":11729643,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729644,"byte_end":11729720,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729721,"byte_end":11729754,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729755,"byte_end":11729758,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729759,"byte_end":11729839,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729840,"byte_end":11729920,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729921,"byte_end":11729971,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729972,"byte_end":11729975,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11729976,"byte_end":11730027,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730028,"byte_end":11730077,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730078,"byte_end":11730129,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730130,"byte_end":11730133,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730134,"byte_end":11730199,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730200,"byte_end":11730203,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730204,"byte_end":11730281,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730282,"byte_end":11730323,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730324,"byte_end":11730327,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730328,"byte_end":11730408,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730409,"byte_end":11730488,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730489,"byte_end":11730567,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730568,"byte_end":11730647,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730648,"byte_end":11730662,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730663,"byte_end":11730666,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730667,"byte_end":11730746,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730747,"byte_end":11730826,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730827,"byte_end":11730844,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730845,"byte_end":11730848,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730849,"byte_end":11730926,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11730927,"byte_end":11731006,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731007,"byte_end":11731084,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731085,"byte_end":11731155,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731156,"byte_end":11731205,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731206,"byte_end":11731209,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731210,"byte_end":11731223,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731224,"byte_end":11731256,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731257,"byte_end":11731324,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731325,"byte_end":11731439,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731440,"byte_end":11731477,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731478,"byte_end":11731539,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731540,"byte_end":11731589,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731590,"byte_end":11731593,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731594,"byte_end":11731635,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731636,"byte_end":11731646,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731647,"byte_end":11731731,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731732,"byte_end":11731788,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731789,"byte_end":11731792,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731793,"byte_end":11731814,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731815,"byte_end":11731882,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731883,"byte_end":11731911,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731912,"byte_end":11731925,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731926,"byte_end":11731944,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731945,"byte_end":11731954,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731955,"byte_end":11731958,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11731959,"byte_end":11732018,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732019,"byte_end":11732043,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732044,"byte_end":11732053,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732054,"byte_end":11732059,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732060,"byte_end":11732068,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732069,"byte_end":11732076,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732077,"byte_end":11732151,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732152,"byte_end":11732155,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732156,"byte_end":11732178,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732179,"byte_end":11732182,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732183,"byte_end":11732260,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732261,"byte_end":11732337,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732338,"byte_end":11732417,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732418,"byte_end":11732472,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732473,"byte_end":11732476,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732477,"byte_end":11732521,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732522,"byte_end":11732529,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732530,"byte_end":11732565,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732566,"byte_end":11732597,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732598,"byte_end":11732601,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732602,"byte_end":11732631,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732632,"byte_end":11732635,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732636,"byte_end":11732675,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732676,"byte_end":11732679,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732680,"byte_end":11732718,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732719,"byte_end":11732746,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732747,"byte_end":11732783,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732784,"byte_end":11732787,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732788,"byte_end":11732806,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732807,"byte_end":11732829,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732830,"byte_end":11732860,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732861,"byte_end":11732915,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732916,"byte_end":11732946,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11732947,"byte_end":11733004,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733005,"byte_end":11733037,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733038,"byte_end":11733051,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733052,"byte_end":11733055,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733056,"byte_end":11733090,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733091,"byte_end":11733135,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733136,"byte_end":11733188,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733189,"byte_end":11733256,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733257,"byte_end":11733260,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733261,"byte_end":11733335,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733336,"byte_end":11733402,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733403,"byte_end":11733432,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733433,"byte_end":11733480,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733481,"byte_end":11733533,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733534,"byte_end":11733605,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733606,"byte_end":11733625,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733626,"byte_end":11733639,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733640,"byte_end":11733643,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733644,"byte_end":11733683,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733684,"byte_end":11733739,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733740,"byte_end":11733758,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733759,"byte_end":11733835,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733836,"byte_end":11733902,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733903,"byte_end":11733955,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733956,"byte_end":11733959,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11733960,"byte_end":11734040,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734041,"byte_end":11734066,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734067,"byte_end":11734099,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734100,"byte_end":11734113,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734114,"byte_end":11734117,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734118,"byte_end":11734190,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734191,"byte_end":11734217,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734218,"byte_end":11734269,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734270,"byte_end":11734306,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734307,"byte_end":11734310,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734311,"byte_end":11734389,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734390,"byte_end":11734433,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734434,"byte_end":11734481,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734482,"byte_end":11734518,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734519,"byte_end":11734563,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734564,"byte_end":11734620,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734621,"byte_end":11734669,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734670,"byte_end":11734692,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734693,"byte_end":11734711,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734712,"byte_end":11734725,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734726,"byte_end":11734735,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734736,"byte_end":11734741,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734742,"byte_end":11734749,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734750,"byte_end":11734753,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734754,"byte_end":11734777,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734778,"byte_end":11734781,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734782,"byte_end":11734860,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734861,"byte_end":11734934,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11734935,"byte_end":11735011,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735012,"byte_end":11735092,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735093,"byte_end":11735109,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735110,"byte_end":11735113,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735114,"byte_end":11735194,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735195,"byte_end":11735274,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735275,"byte_end":11735355,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735356,"byte_end":11735428,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735429,"byte_end":11735432,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735433,"byte_end":11735510,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735511,"byte_end":11735589,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735590,"byte_end":11735663,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735664,"byte_end":11735730,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735731,"byte_end":11735734,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735735,"byte_end":11735748,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735749,"byte_end":11735782,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735783,"byte_end":11735817,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735818,"byte_end":11735855,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735856,"byte_end":11735923,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735924,"byte_end":11735959,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11735960,"byte_end":11736021,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736022,"byte_end":11736068,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736069,"byte_end":11736130,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736131,"byte_end":11736134,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736135,"byte_end":11736163,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736164,"byte_end":11736167,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736168,"byte_end":11736209,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736210,"byte_end":11736220,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736221,"byte_end":11736245,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736246,"byte_end":11736320,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736321,"byte_end":11736363,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736364,"byte_end":11736378,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736379,"byte_end":11736436,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736437,"byte_end":11736486,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736487,"byte_end":11736501,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736502,"byte_end":11736539,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736540,"byte_end":11736591,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736592,"byte_end":11736638,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736639,"byte_end":11736669,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736670,"byte_end":11736684,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736685,"byte_end":11736694,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736695,"byte_end":11736700,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736701,"byte_end":11736708,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736709,"byte_end":11736716,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736717,"byte_end":11736792,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736793,"byte_end":11736866,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736867,"byte_end":11736909,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736910,"byte_end":11736913,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736914,"byte_end":11736936,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736937,"byte_end":11736940,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11736941,"byte_end":11737018,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737019,"byte_end":11737095,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737096,"byte_end":11737172,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737173,"byte_end":11737196,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737197,"byte_end":11737200,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737201,"byte_end":11737246,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737247,"byte_end":11737254,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737255,"byte_end":11737290,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737291,"byte_end":11737315,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737316,"byte_end":11737319,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737320,"byte_end":11737349,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737350,"byte_end":11737353,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737354,"byte_end":11737393,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737394,"byte_end":11737397,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737398,"byte_end":11737444,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737445,"byte_end":11737481,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737482,"byte_end":11737485,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737486,"byte_end":11737577,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737578,"byte_end":11737652,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737653,"byte_end":11737675,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737676,"byte_end":11737709,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737710,"byte_end":11737757,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737758,"byte_end":11737810,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737811,"byte_end":11737886,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737887,"byte_end":11737906,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737907,"byte_end":11737920,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737921,"byte_end":11737924,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737925,"byte_end":11737977,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11737978,"byte_end":11738055,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738056,"byte_end":11738120,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738121,"byte_end":11738124,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738125,"byte_end":11738168,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738169,"byte_end":11738209,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738210,"byte_end":11738213,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738214,"byte_end":11738271,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738272,"byte_end":11738318,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738319,"byte_end":11738370,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738371,"byte_end":11738389,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738390,"byte_end":11738399,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738400,"byte_end":11738405,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738406,"byte_end":11738413,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738414,"byte_end":11738417,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738418,"byte_end":11738457,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738458,"byte_end":11738499,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738500,"byte_end":11738536,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738537,"byte_end":11738569,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738570,"byte_end":11738666,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738667,"byte_end":11738718,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738719,"byte_end":11738772,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738773,"byte_end":11738816,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738817,"byte_end":11738861,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738862,"byte_end":11738910,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738911,"byte_end":11738959,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11738960,"byte_end":11739006,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739007,"byte_end":11739046,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":773},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741070,"byte_end":11741080,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11739913,"byte_end":11739998,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11739999,"byte_end":11740002,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740003,"byte_end":11740041,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740042,"byte_end":11740080,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740081,"byte_end":11740084,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740085,"byte_end":11740098,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740099,"byte_end":11740102,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740103,"byte_end":11740184,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740185,"byte_end":11740188,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740189,"byte_end":11740228,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740229,"byte_end":11740262,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740263,"byte_end":11740292,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740293,"byte_end":11740296,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740297,"byte_end":11740304,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740305,"byte_end":11740323,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740324,"byte_end":11740354,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740355,"byte_end":11740379,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740380,"byte_end":11740387,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740388,"byte_end":11740417,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740418,"byte_end":11740470,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740471,"byte_end":11740474,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740475,"byte_end":11740493,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740494,"byte_end":11740511,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740512,"byte_end":11740592,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740593,"byte_end":11740627,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740628,"byte_end":11740681,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740682,"byte_end":11740693,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740694,"byte_end":11740701,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740702,"byte_end":11740707,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740708,"byte_end":11740755,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740756,"byte_end":11740809,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740810,"byte_end":11740868,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740869,"byte_end":11740948,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740949,"byte_end":11740961,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740962,"byte_end":11740969,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740970,"byte_end":11740977,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11740978,"byte_end":11740981,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741182,"byte_end":11741185,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741109,"byte_end":11741170,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":372},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743185,"byte_end":11743192,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11741900,"byte_end":11741935,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11741936,"byte_end":11741939,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11741940,"byte_end":11742009,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742010,"byte_end":11742089,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742090,"byte_end":11742162,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742163,"byte_end":11742187,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742188,"byte_end":11742191,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742192,"byte_end":11742260,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742261,"byte_end":11742338,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742339,"byte_end":11742400,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742401,"byte_end":11742404,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742405,"byte_end":11742466,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742467,"byte_end":11742529,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742530,"byte_end":11742533,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742534,"byte_end":11742597,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742598,"byte_end":11742661,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742662,"byte_end":11742741,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742742,"byte_end":11742816,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742817,"byte_end":11742836,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742837,"byte_end":11742840,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742841,"byte_end":11742909,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742910,"byte_end":11742972,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11742973,"byte_end":11743048,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ reseting the entire internal state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743049,"byte_end":11743088,"line_start":31,"line_end":31,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743089,"byte_end":11743092,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743093,"byte_end":11743129,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743130,"byte_end":11743174,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":373},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743240,"byte_end":11743244,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743199,"byte_end":11743230,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":374},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744010,"byte_end":11744015,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743251,"byte_end":11743303,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743308,"byte_end":11743311,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743316,"byte_end":11743385,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743390,"byte_end":11743460,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743465,"byte_end":11743511,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743516,"byte_end":11743519,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743524,"byte_end":11743600,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743605,"byte_end":11743680,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743685,"byte_end":11743760,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743765,"byte_end":11743805,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743810,"byte_end":11743813,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743818,"byte_end":11743892,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743897,"byte_end":11743943,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743948,"byte_end":11743951,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11743956,"byte_end":11744000,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746951,"byte_end":11746957,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744039,"byte_end":11744104,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744109,"byte_end":11744112,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744117,"byte_end":11744191,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744196,"byte_end":11744268,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744273,"byte_end":11744346,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744351,"byte_end":11744394,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744399,"byte_end":11744402,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744407,"byte_end":11744480,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744485,"byte_end":11744548,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744553,"byte_end":11744628,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744633,"byte_end":11744708,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744713,"byte_end":11744736,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744741,"byte_end":11744744,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744749,"byte_end":11744821,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744826,"byte_end":11744900,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744905,"byte_end":11744975,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744980,"byte_end":11744983,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11744988,"byte_end":11745056,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745061,"byte_end":11745132,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745137,"byte_end":11745217,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745222,"byte_end":11745234,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745239,"byte_end":11745242,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745247,"byte_end":11745317,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745322,"byte_end":11745397,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745402,"byte_end":11745439,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745444,"byte_end":11745447,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745452,"byte_end":11745488,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745493,"byte_end":11745537,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745542,"byte_end":11745545,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745550,"byte_end":11745573,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745578,"byte_end":11745581,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745586,"byte_end":11745660,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745665,"byte_end":11745739,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745744,"byte_end":11745797,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745802,"byte_end":11745805,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745810,"byte_end":11745881,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745886,"byte_end":11745956,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745961,"byte_end":11745977,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745982,"byte_end":11745985,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11745990,"byte_end":11746003,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746008,"byte_end":11746026,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746031,"byte_end":11746036,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746041,"byte_end":11746067,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746072,"byte_end":11746109,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746114,"byte_end":11746119,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746124,"byte_end":11746145,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746150,"byte_end":11746155,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746160,"byte_end":11746190,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746195,"byte_end":11746209,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746214,"byte_end":11746245,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746250,"byte_end":11746283,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746288,"byte_end":11746291,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746296,"byte_end":11746389,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746394,"byte_end":11746412,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746417,"byte_end":11746420,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746425,"byte_end":11746497,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746502,"byte_end":11746562,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746567,"byte_end":11746619,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746624,"byte_end":11746686,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746691,"byte_end":11746758,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746763,"byte_end":11746766,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746771,"byte_end":11746799,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746804,"byte_end":11746813,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746818,"byte_end":11746823,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746828,"byte_end":11746835,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746840,"byte_end":11746843,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746848,"byte_end":11746917,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11746922,"byte_end":11746943,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748123,"byte_end":11748133,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747038,"byte_end":11747110,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747115,"byte_end":11747164,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747169,"byte_end":11747172,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747177,"byte_end":11747245,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747250,"byte_end":11747317,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747322,"byte_end":11747390,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747395,"byte_end":11747471,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747476,"byte_end":11747542,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747547,"byte_end":11747550,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747555,"byte_end":11747623,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747628,"byte_end":11747703,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747708,"byte_end":11747783,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747788,"byte_end":11747860,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747865,"byte_end":11747907,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747912,"byte_end":11747915,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11747920,"byte_end":11747995,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748000,"byte_end":11748078,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748083,"byte_end":11748115,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749741,"byte_end":11749747,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":372},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748551,"byte_end":11748631,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748636,"byte_end":11748712,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748717,"byte_end":11748720,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748725,"byte_end":11748800,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748805,"byte_end":11748875,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748880,"byte_end":11748951,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11748956,"byte_end":11749028,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749033,"byte_end":11749091,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749096,"byte_end":11749099,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749104,"byte_end":11749173,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749178,"byte_end":11749253,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749258,"byte_end":11749334,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749339,"byte_end":11749361,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749366,"byte_end":11749369,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749374,"byte_end":11749447,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749452,"byte_end":11749525,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749530,"byte_end":11749606,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749611,"byte_end":11749614,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749619,"byte_end":11749655,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749660,"byte_end":11749692,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/decoder.rs","byte_start":11749697,"byte_end":11749733,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":383},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750081,"byte_end":11750088,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11749926,"byte_end":11749998,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11749999,"byte_end":11750019,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750020,"byte_end":11750023,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750024,"byte_end":11750070,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":385},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750353,"byte_end":11750358,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750101,"byte_end":11750133,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750138,"byte_end":11750141,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750146,"byte_end":11750223,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750228,"byte_end":11750284,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750289,"byte_end":11750292,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750297,"byte_end":11750343,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750709,"byte_end":11750715,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":383},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750382,"byte_end":11750427,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750432,"byte_end":11750435,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750440,"byte_end":11750514,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750519,"byte_end":11750599,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750604,"byte_end":11750642,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750647,"byte_end":11750650,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/encoder.rs","byte_start":11750655,"byte_end":11750701,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1118},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761532,"byte_end":11761538,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1121}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763311,"byte_end":11763314,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761680,"byte_end":11761760,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761765,"byte_end":11761846,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761851,"byte_end":11761854,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761859,"byte_end":11761934,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761939,"byte_end":11762009,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762014,"byte_end":11762083,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762088,"byte_end":11762160,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762165,"byte_end":11762223,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762228,"byte_end":11762231,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762236,"byte_end":11762307,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762312,"byte_end":11762389,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762394,"byte_end":11762470,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762475,"byte_end":11762497,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762502,"byte_end":11762505,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762510,"byte_end":11762583,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762588,"byte_end":11762661,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762666,"byte_end":11762742,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762747,"byte_end":11762750,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762755,"byte_end":11762831,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762836,"byte_end":11762912,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762917,"byte_end":11762992,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11762997,"byte_end":11763032,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763037,"byte_end":11763040,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763045,"byte_end":11763081,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763086,"byte_end":11763118,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763123,"byte_end":11763160,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763165,"byte_end":11763203,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763208,"byte_end":11763299,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764922,"byte_end":11764935,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763527,"byte_end":11763607,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763612,"byte_end":11763693,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763698,"byte_end":11763747,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763752,"byte_end":11763755,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763760,"byte_end":11763835,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763840,"byte_end":11763910,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763915,"byte_end":11763984,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11763989,"byte_end":11764061,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764066,"byte_end":11764124,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764129,"byte_end":11764132,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764137,"byte_end":11764208,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764213,"byte_end":11764290,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764295,"byte_end":11764371,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764376,"byte_end":11764398,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764403,"byte_end":11764406,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764411,"byte_end":11764484,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764489,"byte_end":11764562,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764567,"byte_end":11764643,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764648,"byte_end":11764651,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764656,"byte_end":11764692,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764697,"byte_end":11764729,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764734,"byte_end":11764771,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764776,"byte_end":11764814,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11764819,"byte_end":11764910,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767038,"byte_end":11767048,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765461,"byte_end":11765541,"line_start":118,"line_end":118,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765546,"byte_end":11765627,"line_start":119,"line_end":119,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765632,"byte_end":11765635,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765640,"byte_end":11765715,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765720,"byte_end":11765790,"line_start":122,"line_end":122,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765795,"byte_end":11765866,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765871,"byte_end":11765943,"line_start":124,"line_end":124,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765948,"byte_end":11766006,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766011,"byte_end":11766014,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766019,"byte_end":11766090,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766095,"byte_end":11766172,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766177,"byte_end":11766253,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766258,"byte_end":11766280,"line_start":130,"line_end":130,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766285,"byte_end":11766288,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766293,"byte_end":11766372,"line_start":132,"line_end":132,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766377,"byte_end":11766454,"line_start":133,"line_end":133,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766459,"byte_end":11766462,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766467,"byte_end":11766540,"line_start":135,"line_end":135,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766545,"byte_end":11766618,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766623,"byte_end":11766699,"line_start":137,"line_end":137,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766704,"byte_end":11766707,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766712,"byte_end":11766748,"line_start":139,"line_end":139,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766753,"byte_end":11766785,"line_start":140,"line_end":140,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766790,"byte_end":11766828,"line_start":141,"line_end":141,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766833,"byte_end":11766871,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766876,"byte_end":11766930,"line_start":143,"line_end":143,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11766935,"byte_end":11767026,"line_start":144,"line_end":144,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767683,"byte_end":11767690,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767400,"byte_end":11767463,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767468,"byte_end":11767481,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767486,"byte_end":11767489,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767494,"byte_end":11767569,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767574,"byte_end":11767644,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767649,"byte_end":11767671,"line_start":163,"line_end":163,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768034,"byte_end":11768041,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767743,"byte_end":11767814,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767819,"byte_end":11767832,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767837,"byte_end":11767840,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767845,"byte_end":11767920,"line_start":171,"line_end":171,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11767925,"byte_end":11767995,"line_start":172,"line_end":172,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768000,"byte_end":11768022,"line_start":173,"line_end":173,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768404,"byte_end":11768415,"line_start":184,"line_end":184,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768106,"byte_end":11768184,"line_start":178,"line_end":178,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768189,"byte_end":11768202,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768207,"byte_end":11768210,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768215,"byte_end":11768290,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768295,"byte_end":11768365,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768370,"byte_end":11768392,"line_start":183,"line_end":183,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768762,"byte_end":11768767,"line_start":193,"line_end":193,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768511,"byte_end":11768569,"line_start":188,"line_end":188,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768574,"byte_end":11768587,"line_start":189,"line_end":189,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768592,"byte_end":11768595,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768600,"byte_end":11768674,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768679,"byte_end":11768750,"line_start":192,"line_end":192,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769079,"byte_end":11769088,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768820,"byte_end":11768886,"line_start":197,"line_end":197,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768891,"byte_end":11768904,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768909,"byte_end":11768912,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768917,"byte_end":11768991,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11768996,"byte_end":11769067,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769208,"byte_end":11769219,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769153,"byte_end":11769196,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769354,"byte_end":11769369,"line_start":212,"line_end":212,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769291,"byte_end":11769342,"line_start":211,"line_end":211,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769509,"byte_end":11769521,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769453,"byte_end":11769497,"line_start":216,"line_end":216,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769658,"byte_end":11769674,"line_start":222,"line_end":222,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769594,"byte_end":11769646,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770024,"byte_end":11770034,"line_start":231,"line_end":231,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769759,"byte_end":11769822,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769827,"byte_end":11769830,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769835,"byte_end":11769910,"line_start":228,"line_end":228,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769915,"byte_end":11769985,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11769990,"byte_end":11770012,"line_start":230,"line_end":230,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770406,"byte_end":11770416,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770084,"byte_end":11770158,"line_start":235,"line_end":235,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770163,"byte_end":11770204,"line_start":236,"line_end":236,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770209,"byte_end":11770212,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770217,"byte_end":11770292,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770297,"byte_end":11770367,"line_start":239,"line_end":239,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770372,"byte_end":11770394,"line_start":240,"line_end":240,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772390,"byte_end":11772401,"line_start":311,"line_end":311,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772075,"byte_end":11772146,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772147,"byte_end":11772219,"line_start":305,"line_end":305,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772220,"byte_end":11772280,"line_start":306,"line_end":306,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772281,"byte_end":11772284,"line_start":307,"line_end":307,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772285,"byte_end":11772321,"line_start":308,"line_end":308,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772339,"byte_end":11772378,"line_start":310,"line_end":310,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":809},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772487,"byte_end":11772489,"line_start":313,"line_end":313,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772414,"byte_end":11772478,"line_start":312,"line_end":312,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":810},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772521,"byte_end":11772526,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772499,"byte_end":11772512,"line_start":315,"line_end":315,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772591,"byte_end":11772599,"line_start":319,"line_end":319,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772536,"byte_end":11772582,"line_start":318,"line_end":318,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772686,"byte_end":11772695,"line_start":322,"line_end":322,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":806},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772616,"byte_end":11772677,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772928,"byte_end":11772931,"line_start":331,"line_end":331,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772876,"byte_end":11772916,"line_start":330,"line_end":330,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1077},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11773660,"byte_end":11773670,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1080}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11773921,"byte_end":11773924,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11773853,"byte_end":11773909,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774272,"byte_end":11774285,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774156,"byte_end":11774238,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774243,"byte_end":11774260,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774999,"byte_end":11775006,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774712,"byte_end":11774775,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774780,"byte_end":11774797,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774802,"byte_end":11774805,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774810,"byte_end":11774885,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774890,"byte_end":11774960,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774965,"byte_end":11774987,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775354,"byte_end":11775361,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775059,"byte_end":11775130,"line_start":71,"line_end":71,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775135,"byte_end":11775152,"line_start":72,"line_end":72,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775157,"byte_end":11775160,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775165,"byte_end":11775240,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775245,"byte_end":11775315,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775320,"byte_end":11775342,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775728,"byte_end":11775739,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775426,"byte_end":11775504,"line_start":81,"line_end":81,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775509,"byte_end":11775526,"line_start":82,"line_end":82,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775531,"byte_end":11775534,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775539,"byte_end":11775614,"line_start":84,"line_end":84,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775619,"byte_end":11775689,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775694,"byte_end":11775716,"line_start":86,"line_end":86,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776104,"byte_end":11776114,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775835,"byte_end":11775902,"line_start":91,"line_end":91,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775907,"byte_end":11775910,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775915,"byte_end":11775990,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11775995,"byte_end":11776065,"line_start":94,"line_end":94,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776070,"byte_end":11776092,"line_start":95,"line_end":95,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776226,"byte_end":11776233,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776164,"byte_end":11776214,"line_start":100,"line_end":100,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776356,"byte_end":11776367,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776286,"byte_end":11776344,"line_start":105,"line_end":105,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776487,"byte_end":11776498,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776432,"byte_end":11776475,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776628,"byte_end":11776643,"line_start":116,"line_end":116,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776565,"byte_end":11776616,"line_start":115,"line_end":115,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1036},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11778744,"byte_end":11778755,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1039}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11778962,"byte_end":11778965,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11778893,"byte_end":11778950,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779523,"byte_end":11779530,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779235,"byte_end":11779298,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779303,"byte_end":11779321,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779326,"byte_end":11779329,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779334,"byte_end":11779409,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779414,"byte_end":11779484,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779489,"byte_end":11779511,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779879,"byte_end":11779886,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779583,"byte_end":11779654,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779659,"byte_end":11779677,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779682,"byte_end":11779685,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779690,"byte_end":11779765,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779770,"byte_end":11779840,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779845,"byte_end":11779867,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780254,"byte_end":11780265,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779951,"byte_end":11780029,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780034,"byte_end":11780052,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780057,"byte_end":11780060,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780065,"byte_end":11780140,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780145,"byte_end":11780215,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780220,"byte_end":11780242,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780631,"byte_end":11780641,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780361,"byte_end":11780429,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780434,"byte_end":11780437,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780442,"byte_end":11780517,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780522,"byte_end":11780592,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780597,"byte_end":11780619,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780753,"byte_end":11780760,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780691,"byte_end":11780741,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780883,"byte_end":11780894,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780813,"byte_end":11780871,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11781015,"byte_end":11781027,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11780959,"byte_end":11781003,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11781158,"byte_end":11781174,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11781094,"byte_end":11781146,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":622},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":818},{"krate":0,"index":828},{"krate":0,"index":826},{"krate":0,"index":825},{"krate":0,"index":644},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":835},{"krate":0,"index":844},{"krate":0,"index":842},{"krate":0,"index":841},{"krate":0,"index":646},{"krate":0,"index":653},{"krate":0,"index":657},{"krate":0,"index":661},{"krate":0,"index":663},{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":686},{"krate":0,"index":688}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11782701,"byte_end":11782753,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11782754,"byte_end":11782757,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11782758,"byte_end":11782828,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11782829,"byte_end":11782887,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11782888,"byte_end":11782960,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11782961,"byte_end":11783031,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783032,"byte_end":11783099,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783100,"byte_end":11783103,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783104,"byte_end":11783125,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783126,"byte_end":11783129,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783130,"byte_end":11783205,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783206,"byte_end":11783277,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783278,"byte_end":11783349,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783350,"byte_end":11783420,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783421,"byte_end":11783461,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783462,"byte_end":11783465,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783466,"byte_end":11783473,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783474,"byte_end":11783517,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783518,"byte_end":11783576,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783577,"byte_end":11783580,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783581,"byte_end":11783636,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783637,"byte_end":11783679,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783680,"byte_end":11783685,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783686,"byte_end":11783738,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783739,"byte_end":11783744,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783745,"byte_end":11783767,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783768,"byte_end":11783775,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783776,"byte_end":11783779,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783780,"byte_end":11783852,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783853,"byte_end":11783924,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783925,"byte_end":11783944,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783945,"byte_end":11783948,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783949,"byte_end":11783960,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11783961,"byte_end":11784010,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784011,"byte_end":11784060,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784061,"byte_end":11784110,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784111,"byte_end":11784118,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784119,"byte_end":11784122,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784123,"byte_end":11784161,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784162,"byte_end":11784165,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784166,"byte_end":11784173,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784174,"byte_end":11784217,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784218,"byte_end":11784276,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784277,"byte_end":11784280,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784281,"byte_end":11784306,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784307,"byte_end":11784328,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784329,"byte_end":11784332,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784333,"byte_end":11784409,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784410,"byte_end":11784419,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784420,"byte_end":11784462,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784463,"byte_end":11784468,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784469,"byte_end":11784542,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784543,"byte_end":11784590,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784591,"byte_end":11784594,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784595,"byte_end":11784632,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784633,"byte_end":11784647,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784648,"byte_end":11784653,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784654,"byte_end":11784661,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784662,"byte_end":11784665,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784666,"byte_end":11784708,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784709,"byte_end":11784712,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784713,"byte_end":11784724,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784725,"byte_end":11784764,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784765,"byte_end":11784804,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784805,"byte_end":11784844,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784845,"byte_end":11784852,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784853,"byte_end":11784856,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784857,"byte_end":11784871,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784872,"byte_end":11784875,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784876,"byte_end":11784951,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11784952,"byte_end":11785025,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785026,"byte_end":11785092,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785093,"byte_end":11785162,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785163,"byte_end":11785228,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785229,"byte_end":11785232,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785233,"byte_end":11785249,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785250,"byte_end":11785253,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785254,"byte_end":11785330,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785331,"byte_end":11785372,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785373,"byte_end":11785376,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785377,"byte_end":11785384,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785385,"byte_end":11785416,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785417,"byte_end":11785467,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785468,"byte_end":11785509,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785510,"byte_end":11785545,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785546,"byte_end":11785594,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785595,"byte_end":11785626,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785627,"byte_end":11785675,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785676,"byte_end":11785725,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785726,"byte_end":11785748,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785749,"byte_end":11785756,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785757,"byte_end":11785779,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785780,"byte_end":11785787,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785788,"byte_end":11785791,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785792,"byte_end":11785840,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785841,"byte_end":11785844,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785845,"byte_end":11785856,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785857,"byte_end":11785909,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785910,"byte_end":11785975,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11785976,"byte_end":11786041,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786042,"byte_end":11786107,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786108,"byte_end":11786115,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786116,"byte_end":11786119,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786120,"byte_end":11786196,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786197,"byte_end":11786271,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786272,"byte_end":11786344,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786345,"byte_end":11786421,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786422,"byte_end":11786464,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786465,"byte_end":11786468,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786469,"byte_end":11786485,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786486,"byte_end":11786489,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786490,"byte_end":11786565,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786566,"byte_end":11786607,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786608,"byte_end":11786611,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786612,"byte_end":11786619,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786620,"byte_end":11786651,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786652,"byte_end":11786702,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786703,"byte_end":11786744,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786745,"byte_end":11786780,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786781,"byte_end":11786829,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786830,"byte_end":11786861,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786862,"byte_end":11786910,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786911,"byte_end":11786970,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786971,"byte_end":11786993,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11786994,"byte_end":11787001,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787002,"byte_end":11787024,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787025,"byte_end":11787032,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787033,"byte_end":11787036,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787037,"byte_end":11787085,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787086,"byte_end":11787089,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787090,"byte_end":11787101,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787102,"byte_end":11787151,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787152,"byte_end":11787206,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787207,"byte_end":11787261,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787262,"byte_end":11787316,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787317,"byte_end":11787324,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787325,"byte_end":11787328,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787329,"byte_end":11787402,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787403,"byte_end":11787470,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787471,"byte_end":11787474,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787475,"byte_end":11787491,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787492,"byte_end":11787495,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787496,"byte_end":11787572,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787573,"byte_end":11787645,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787646,"byte_end":11787685,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787686,"byte_end":11787689,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787690,"byte_end":11787697,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787698,"byte_end":11787729,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787730,"byte_end":11787780,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787781,"byte_end":11787822,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787823,"byte_end":11787858,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787859,"byte_end":11787907,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787908,"byte_end":11787939,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787940,"byte_end":11787987,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11787988,"byte_end":11788008,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788009,"byte_end":11788031,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788032,"byte_end":11788039,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788040,"byte_end":11788062,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788063,"byte_end":11788070,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788071,"byte_end":11788074,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788075,"byte_end":11788123,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788124,"byte_end":11788127,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788128,"byte_end":11788139,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788140,"byte_end":11788192,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788193,"byte_end":11788258,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788259,"byte_end":11788324,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788325,"byte_end":11788390,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788391,"byte_end":11788398,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788399,"byte_end":11788402,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788403,"byte_end":11788475,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788476,"byte_end":11788551,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788552,"byte_end":11788624,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788625,"byte_end":11788701,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788702,"byte_end":11788775,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788776,"byte_end":11788779,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788780,"byte_end":11788796,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788797,"byte_end":11788800,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788801,"byte_end":11788875,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788876,"byte_end":11788943,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788944,"byte_end":11788947,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788948,"byte_end":11788955,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788956,"byte_end":11788987,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11788988,"byte_end":11789038,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789039,"byte_end":11789080,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789081,"byte_end":11789116,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789117,"byte_end":11789165,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789166,"byte_end":11789197,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789198,"byte_end":11789246,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789247,"byte_end":11789267,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789268,"byte_end":11789290,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789291,"byte_end":11789298,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789299,"byte_end":11789321,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789322,"byte_end":11789329,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789330,"byte_end":11789333,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789334,"byte_end":11789382,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789383,"byte_end":11789386,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789387,"byte_end":11789398,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789399,"byte_end":11789425,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789426,"byte_end":11789471,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789472,"byte_end":11789517,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789518,"byte_end":11789563,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789564,"byte_end":11789567,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789568,"byte_end":11789596,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789597,"byte_end":11789642,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789643,"byte_end":11789688,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789689,"byte_end":11789734,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789735,"byte_end":11789742,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789743,"byte_end":11789746,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789747,"byte_end":11789819,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789820,"byte_end":11789896,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789897,"byte_end":11789967,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11789968,"byte_end":11790037,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790038,"byte_end":11790075,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790076,"byte_end":11790079,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790080,"byte_end":11790154,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790155,"byte_end":11790209,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790210,"byte_end":11790213,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790214,"byte_end":11790230,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790231,"byte_end":11790234,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790235,"byte_end":11790308,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790309,"byte_end":11790385,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790386,"byte_end":11790460,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790461,"byte_end":11790474,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790475,"byte_end":11790478,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790479,"byte_end":11790486,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790487,"byte_end":11790518,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790519,"byte_end":11790569,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790570,"byte_end":11790611,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790612,"byte_end":11790647,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790648,"byte_end":11790697,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790698,"byte_end":11790729,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790730,"byte_end":11790778,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790779,"byte_end":11790823,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790824,"byte_end":11790846,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790847,"byte_end":11790854,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790855,"byte_end":11790877,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790878,"byte_end":11790885,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790886,"byte_end":11790889,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790890,"byte_end":11790938,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790939,"byte_end":11790942,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790943,"byte_end":11790954,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790955,"byte_end":11790981,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11790982,"byte_end":11791032,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791033,"byte_end":11791083,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791084,"byte_end":11791134,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791135,"byte_end":11791138,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791139,"byte_end":11791159,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791160,"byte_end":11791190,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791191,"byte_end":11791221,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791222,"byte_end":11791252,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791253,"byte_end":11791260,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791261,"byte_end":11791264,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791265,"byte_end":11791338,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791339,"byte_end":11791414,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791415,"byte_end":11791487,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791488,"byte_end":11791526,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791527,"byte_end":11791530,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791531,"byte_end":11791605,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791606,"byte_end":11791682,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791683,"byte_end":11791756,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791757,"byte_end":11791785,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791786,"byte_end":11791789,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791790,"byte_end":11791806,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791807,"byte_end":11791810,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791811,"byte_end":11791884,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791885,"byte_end":11791961,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11791962,"byte_end":11792036,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792037,"byte_end":11792109,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792110,"byte_end":11792121,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792122,"byte_end":11792125,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792126,"byte_end":11792133,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792134,"byte_end":11792165,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792166,"byte_end":11792216,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792217,"byte_end":11792258,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792259,"byte_end":11792294,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792295,"byte_end":11792344,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792345,"byte_end":11792376,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792377,"byte_end":11792442,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792443,"byte_end":11792463,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792464,"byte_end":11792486,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792487,"byte_end":11792494,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792495,"byte_end":11792502,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792503,"byte_end":11792506,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792507,"byte_end":11792555,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792556,"byte_end":11792559,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792560,"byte_end":11792571,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792572,"byte_end":11792598,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792599,"byte_end":11792649,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792650,"byte_end":11792700,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792701,"byte_end":11792751,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792752,"byte_end":11792755,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792756,"byte_end":11792776,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792777,"byte_end":11792807,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792808,"byte_end":11792838,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792839,"byte_end":11792869,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792870,"byte_end":11792877,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792878,"byte_end":11792881,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792882,"byte_end":11792955,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11792956,"byte_end":11793030,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793031,"byte_end":11793105,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793106,"byte_end":11793179,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793180,"byte_end":11793256,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793257,"byte_end":11793290,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793291,"byte_end":11793294,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793295,"byte_end":11793311,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793312,"byte_end":11793315,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793316,"byte_end":11793390,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793391,"byte_end":11793458,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793459,"byte_end":11793462,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793463,"byte_end":11793470,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793471,"byte_end":11793502,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793503,"byte_end":11793553,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793554,"byte_end":11793595,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793596,"byte_end":11793631,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793632,"byte_end":11793680,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793681,"byte_end":11793712,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793713,"byte_end":11793760,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793761,"byte_end":11793807,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793808,"byte_end":11793830,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793831,"byte_end":11793838,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793839,"byte_end":11793861,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793862,"byte_end":11793869,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793870,"byte_end":11793873,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793874,"byte_end":11793922,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793923,"byte_end":11793926,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793927,"byte_end":11793938,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793939,"byte_end":11793995,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11793996,"byte_end":11794057,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794058,"byte_end":11794119,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794120,"byte_end":11794181,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794182,"byte_end":11794189,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794190,"byte_end":11794193,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794194,"byte_end":11794268,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794269,"byte_end":11794289,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794290,"byte_end":11794293,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794294,"byte_end":11794308,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794309,"byte_end":11794312,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794313,"byte_end":11794388,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794389,"byte_end":11794461,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794462,"byte_end":11794530,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794531,"byte_end":11794607,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794608,"byte_end":11794649,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794650,"byte_end":11794653,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794654,"byte_end":11794724,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794725,"byte_end":11794743,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794744,"byte_end":11794747,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794748,"byte_end":11794755,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794756,"byte_end":11794788,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794789,"byte_end":11794839,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794840,"byte_end":11794884,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794885,"byte_end":11794898,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794899,"byte_end":11794934,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794935,"byte_end":11794966,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794967,"byte_end":11794990,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794991,"byte_end":11794998,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11794999,"byte_end":11795021,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795022,"byte_end":11795029,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795030,"byte_end":11795033,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795034,"byte_end":11795084,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795085,"byte_end":11795088,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795089,"byte_end":11795100,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795101,"byte_end":11795134,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795135,"byte_end":11795168,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795169,"byte_end":11795202,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795203,"byte_end":11795210,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795211,"byte_end":11795214,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795215,"byte_end":11795284,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795285,"byte_end":11795322,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795323,"byte_end":11795362,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795363,"byte_end":11795408,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795409,"byte_end":11795456,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795457,"byte_end":11795487,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795488,"byte_end":11795521,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":818},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796083,"byte_end":11796090,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795765,"byte_end":11795820,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795821,"byte_end":11795824,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795825,"byte_end":11795900,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795901,"byte_end":11795981,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11795982,"byte_end":11796041,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":644},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796761,"byte_end":11796786,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":645}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796676,"byte_end":11796749,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":830},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797131,"byte_end":11797151,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796807,"byte_end":11796881,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796882,"byte_end":11796885,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796886,"byte_end":11796965,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11796966,"byte_end":11797009,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797010,"byte_end":11797013,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797014,"byte_end":11797067,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797068,"byte_end":11797071,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797072,"byte_end":11797102,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797495,"byte_end":11797498,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797404,"byte_end":11797483,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797725,"byte_end":11797732,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797622,"byte_end":11797697,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797702,"byte_end":11797713,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797954,"byte_end":11797970,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797782,"byte_end":11797823,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797828,"byte_end":11797831,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797836,"byte_end":11797909,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797914,"byte_end":11797942,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798391,"byte_end":11798411,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798035,"byte_end":11798069,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798074,"byte_end":11798077,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798082,"byte_end":11798152,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798157,"byte_end":11798232,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798237,"byte_end":11798309,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11798314,"byte_end":11798379,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803666,"byte_end":11803669,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803124,"byte_end":11803199,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803204,"byte_end":11803215,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803220,"byte_end":11803223,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803228,"byte_end":11803242,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803247,"byte_end":11803250,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803255,"byte_end":11803262,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803267,"byte_end":11803298,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803303,"byte_end":11803351,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803356,"byte_end":11803359,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803364,"byte_end":11803405,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803410,"byte_end":11803445,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803450,"byte_end":11803481,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803486,"byte_end":11803517,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803522,"byte_end":11803551,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803556,"byte_end":11803576,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803581,"byte_end":11803603,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803608,"byte_end":11803615,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803620,"byte_end":11803642,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803647,"byte_end":11803654,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804854,"byte_end":11804864,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804333,"byte_end":11804382,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804387,"byte_end":11804390,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804395,"byte_end":11804427,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804432,"byte_end":11804435,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804440,"byte_end":11804508,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804513,"byte_end":11804516,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804521,"byte_end":11804535,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804540,"byte_end":11804543,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804548,"byte_end":11804555,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804560,"byte_end":11804591,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804596,"byte_end":11804644,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804649,"byte_end":11804652,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804657,"byte_end":11804698,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804703,"byte_end":11804738,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804743,"byte_end":11804764,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804769,"byte_end":11804791,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804796,"byte_end":11804803,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804808,"byte_end":11804830,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804835,"byte_end":11804842,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805496,"byte_end":11805509,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11804963,"byte_end":11805015,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805020,"byte_end":11805023,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805028,"byte_end":11805066,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805071,"byte_end":11805074,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805079,"byte_end":11805147,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805152,"byte_end":11805155,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805160,"byte_end":11805174,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805179,"byte_end":11805182,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805187,"byte_end":11805194,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805199,"byte_end":11805230,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805235,"byte_end":11805283,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805288,"byte_end":11805291,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805296,"byte_end":11805337,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805342,"byte_end":11805377,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805382,"byte_end":11805406,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805411,"byte_end":11805433,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805438,"byte_end":11805445,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805450,"byte_end":11805472,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805477,"byte_end":11805484,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806142,"byte_end":11806155,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805609,"byte_end":11805661,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805666,"byte_end":11805669,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805674,"byte_end":11805712,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805717,"byte_end":11805720,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805725,"byte_end":11805793,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805798,"byte_end":11805801,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805806,"byte_end":11805820,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805825,"byte_end":11805828,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805833,"byte_end":11805840,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805845,"byte_end":11805876,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805881,"byte_end":11805929,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805934,"byte_end":11805937,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805942,"byte_end":11805983,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11805988,"byte_end":11806023,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806028,"byte_end":11806052,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806057,"byte_end":11806079,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806084,"byte_end":11806091,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806096,"byte_end":11806118,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806123,"byte_end":11806130,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807236,"byte_end":11807252,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806324,"byte_end":11806353,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806358,"byte_end":11806361,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806366,"byte_end":11806438,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806443,"byte_end":11806468,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806473,"byte_end":11806476,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806481,"byte_end":11806553,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806558,"byte_end":11806627,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806632,"byte_end":11806705,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806710,"byte_end":11806722,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806727,"byte_end":11806730,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806735,"byte_end":11806810,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806815,"byte_end":11806876,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806881,"byte_end":11806884,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806889,"byte_end":11806903,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806908,"byte_end":11806911,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806916,"byte_end":11806923,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806928,"byte_end":11806959,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11806964,"byte_end":11807012,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807017,"byte_end":11807020,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807025,"byte_end":11807066,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807071,"byte_end":11807106,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807111,"byte_end":11807146,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807151,"byte_end":11807173,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807178,"byte_end":11807185,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807190,"byte_end":11807212,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807217,"byte_end":11807224,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807913,"byte_end":11807932,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807349,"byte_end":11807412,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807417,"byte_end":11807420,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807425,"byte_end":11807476,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807481,"byte_end":11807484,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807489,"byte_end":11807557,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807562,"byte_end":11807565,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807570,"byte_end":11807584,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807589,"byte_end":11807592,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807597,"byte_end":11807604,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807609,"byte_end":11807640,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807645,"byte_end":11807693,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807698,"byte_end":11807701,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807706,"byte_end":11807747,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807752,"byte_end":11807787,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807792,"byte_end":11807823,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807828,"byte_end":11807850,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807855,"byte_end":11807862,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807867,"byte_end":11807889,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11807894,"byte_end":11807901,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808591,"byte_end":11808610,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808101,"byte_end":11808167,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808172,"byte_end":11808175,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808180,"byte_end":11808235,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808240,"byte_end":11808243,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808248,"byte_end":11808262,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808267,"byte_end":11808270,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808275,"byte_end":11808282,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808287,"byte_end":11808318,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808323,"byte_end":11808371,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808376,"byte_end":11808379,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808384,"byte_end":11808425,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808430,"byte_end":11808465,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808470,"byte_end":11808501,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808506,"byte_end":11808528,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808533,"byte_end":11808540,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808545,"byte_end":11808567,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808572,"byte_end":11808579,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809164,"byte_end":11809181,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808713,"byte_end":11808786,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808791,"byte_end":11808809,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808814,"byte_end":11808817,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808822,"byte_end":11808836,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808841,"byte_end":11808844,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808849,"byte_end":11808856,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808861,"byte_end":11808892,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808897,"byte_end":11808945,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808950,"byte_end":11808953,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11808958,"byte_end":11808999,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809004,"byte_end":11809039,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809044,"byte_end":11809074,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809079,"byte_end":11809101,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809106,"byte_end":11809113,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809118,"byte_end":11809140,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809145,"byte_end":11809152,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809831,"byte_end":11809839,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809282,"byte_end":11809345,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809350,"byte_end":11809353,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809358,"byte_end":11809419,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809424,"byte_end":11809427,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809432,"byte_end":11809486,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809491,"byte_end":11809494,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809499,"byte_end":11809513,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809518,"byte_end":11809521,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809526,"byte_end":11809533,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809538,"byte_end":11809569,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809574,"byte_end":11809622,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809627,"byte_end":11809630,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809635,"byte_end":11809676,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809681,"byte_end":11809716,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809721,"byte_end":11809741,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809746,"byte_end":11809768,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809773,"byte_end":11809780,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809785,"byte_end":11809807,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809812,"byte_end":11809819,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810359,"byte_end":11810368,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11809937,"byte_end":11810000,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810005,"byte_end":11810008,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810013,"byte_end":11810027,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810032,"byte_end":11810035,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810040,"byte_end":11810047,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810052,"byte_end":11810100,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810105,"byte_end":11810126,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810131,"byte_end":11810166,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810171,"byte_end":11810202,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810207,"byte_end":11810238,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810243,"byte_end":11810272,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810277,"byte_end":11810297,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810302,"byte_end":11810323,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810328,"byte_end":11810335,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810340,"byte_end":11810347,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811024,"byte_end":11811032,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810520,"byte_end":11810573,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810578,"byte_end":11810581,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810586,"byte_end":11810600,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810605,"byte_end":11810608,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810613,"byte_end":11810620,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810625,"byte_end":11810656,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810661,"byte_end":11810709,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810714,"byte_end":11810717,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810722,"byte_end":11810763,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810768,"byte_end":11810803,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810808,"byte_end":11810839,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810844,"byte_end":11810875,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810880,"byte_end":11810909,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810914,"byte_end":11810934,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810939,"byte_end":11810961,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810966,"byte_end":11810973,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11810978,"byte_end":11811000,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811005,"byte_end":11811012,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811605,"byte_end":11811614,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811196,"byte_end":11811250,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811255,"byte_end":11811258,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811263,"byte_end":11811277,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811282,"byte_end":11811285,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811290,"byte_end":11811297,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811302,"byte_end":11811334,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811339,"byte_end":11811389,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811394,"byte_end":11811438,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811443,"byte_end":11811478,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811483,"byte_end":11811514,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811519,"byte_end":11811542,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811547,"byte_end":11811554,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811559,"byte_end":11811581,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811586,"byte_end":11811593,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812223,"byte_end":11812233,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811775,"byte_end":11811824,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811829,"byte_end":11811832,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811837,"byte_end":11811851,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811856,"byte_end":11811859,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811864,"byte_end":11811871,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811876,"byte_end":11811921,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811926,"byte_end":11811976,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11811981,"byte_end":11812037,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812042,"byte_end":11812055,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812060,"byte_end":11812095,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812100,"byte_end":11812131,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812136,"byte_end":11812160,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812165,"byte_end":11812172,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812177,"byte_end":11812199,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812204,"byte_end":11812211,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11813612,"byte_end":11813622,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11813369,"byte_end":11813456,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11813457,"byte_end":11813460,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11813461,"byte_end":11813499,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11813500,"byte_end":11813538,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814722,"byte_end":11814725,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814303,"byte_end":11814363,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814368,"byte_end":11814371,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814376,"byte_end":11814386,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814391,"byte_end":11814394,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814399,"byte_end":11814471,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814476,"byte_end":11814549,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814554,"byte_end":11814621,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814626,"byte_end":11814629,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814634,"byte_end":11814710,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815856,"byte_end":11815875,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814883,"byte_end":11814943,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814948,"byte_end":11814951,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814956,"byte_end":11815019,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815024,"byte_end":11815102,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815107,"byte_end":11815174,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815179,"byte_end":11815251,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815256,"byte_end":11815326,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815331,"byte_end":11815354,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815359,"byte_end":11815362,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815367,"byte_end":11815377,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815382,"byte_end":11815385,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815390,"byte_end":11815465,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815470,"byte_end":11815543,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815548,"byte_end":11815624,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815629,"byte_end":11815702,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815707,"byte_end":11815777,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815782,"byte_end":11815785,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11815790,"byte_end":11815844,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816441,"byte_end":11816451,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816003,"byte_end":11816053,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816058,"byte_end":11816061,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816066,"byte_end":11816073,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816078,"byte_end":11816097,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816102,"byte_end":11816140,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816145,"byte_end":11816148,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816153,"byte_end":11816187,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816192,"byte_end":11816239,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816244,"byte_end":11816251,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816256,"byte_end":11816263,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816268,"byte_end":11816306,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816311,"byte_end":11816314,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816319,"byte_end":11816372,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816377,"byte_end":11816417,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816422,"byte_end":11816429,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":881},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820776,"byte_end":11820797,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820730,"byte_end":11820771,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820832,"byte_end":11820834,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":880},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820803,"byte_end":11820827,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":880},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820708,"byte_end":11820723,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":883}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820626,"byte_end":11820681,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":888},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822756,"byte_end":11822773,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821570,"byte_end":11821711,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821712,"byte_end":11821715,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821716,"byte_end":11821754,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821755,"byte_end":11821793,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821794,"byte_end":11821797,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821798,"byte_end":11821811,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821812,"byte_end":11821879,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821880,"byte_end":11821883,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821884,"byte_end":11821917,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821918,"byte_end":11821947,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821948,"byte_end":11821951,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821952,"byte_end":11821959,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11821960,"byte_end":11822016,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822017,"byte_end":11822051,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822052,"byte_end":11822055,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822056,"byte_end":11822061,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822062,"byte_end":11822109,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822110,"byte_end":11822163,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822164,"byte_end":11822241,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822242,"byte_end":11822277,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822278,"byte_end":11822299,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822300,"byte_end":11822350,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822351,"byte_end":11822414,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822415,"byte_end":11822478,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822479,"byte_end":11822542,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822543,"byte_end":11822599,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822600,"byte_end":11822649,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822650,"byte_end":11822662,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822663,"byte_end":11822670,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822671,"byte_end":11822678,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11822679,"byte_end":11822682,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824108,"byte_end":11824111,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823666,"byte_end":11823734,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823739,"byte_end":11823742,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823747,"byte_end":11823757,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823762,"byte_end":11823765,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823770,"byte_end":11823849,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823854,"byte_end":11823928,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823933,"byte_end":11824000,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824005,"byte_end":11824008,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824013,"byte_end":11824096,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825422,"byte_end":11825441,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824391,"byte_end":11824459,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824464,"byte_end":11824467,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824472,"byte_end":11824542,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824547,"byte_end":11824633,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824638,"byte_end":11824708,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824713,"byte_end":11824790,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824795,"byte_end":11824865,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824870,"byte_end":11824893,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824898,"byte_end":11824901,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824906,"byte_end":11824916,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824921,"byte_end":11824924,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11824929,"byte_end":11825011,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825016,"byte_end":11825089,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825094,"byte_end":11825171,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825176,"byte_end":11825249,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825254,"byte_end":11825329,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825334,"byte_end":11825337,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825342,"byte_end":11825410,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826229,"byte_end":11826239,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825698,"byte_end":11825749,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825754,"byte_end":11825757,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825762,"byte_end":11825769,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825774,"byte_end":11825793,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825798,"byte_end":11825843,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825848,"byte_end":11825851,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825856,"byte_end":11825928,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825933,"byte_end":11825980,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825985,"byte_end":11825992,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11825997,"byte_end":11826004,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826009,"byte_end":11826054,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826059,"byte_end":11826062,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826067,"byte_end":11826160,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826165,"byte_end":11826205,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826210,"byte_end":11826217,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":933},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830334,"byte_end":11830356,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830287,"byte_end":11830329,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":935},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830392,"byte_end":11830394,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830362,"byte_end":11830387,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":932},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830258,"byte_end":11830280,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError {\n\n    /// The maximum chunk length was exceeded.\n    MaxChunkLengthExceeded,\n\n    /// An IO error occurred.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":935}],"decl_id":null,"docs":" An error occured while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a chunk.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830175,"byte_end":11830231,"line_start":237,"line_end":237,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":150},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":273}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mod.rs","byte_start":6616,"byte_end":6646,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":27},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8580,"byte_end":8597,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7362,"byte_end":7439,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7440,"byte_end":7450,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7451,"byte_end":7454,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7455,"byte_end":7520,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7521,"byte_end":7595,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7596,"byte_end":7599,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7683,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7684,"byte_end":7687,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7688,"byte_end":7702,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7703,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7707,"byte_end":7720,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7721,"byte_end":7743,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7744,"byte_end":7784,"line_start":26,"line_end":26,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7785,"byte_end":7788,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7789,"byte_end":7807,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7808,"byte_end":7829,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7830,"byte_end":7875,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7876,"byte_end":7917,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7918,"byte_end":7921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7922,"byte_end":7973,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":7974,"byte_end":8037,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8038,"byte_end":8059,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8060,"byte_end":8109,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8156,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8157,"byte_end":8178,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8179,"byte_end":8196,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8197,"byte_end":8278,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8279,"byte_end":8301,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8302,"byte_end":8319,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8320,"byte_end":8333,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8334,"byte_end":8345,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8346,"byte_end":8349,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8383,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8384,"byte_end":8459,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8460,"byte_end":8487,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8488,"byte_end":8499,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8500,"byte_end":8503,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8554,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8555,"byte_end":8560,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8561,"byte_end":8568,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9017,"byte_end":9042,"line_start":66,"line_end":66,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8864,"byte_end":8938,"line_start":63,"line_end":63,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8939,"byte_end":8956,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8957,"byte_end":9005,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11550,"byte_end":11553,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11475,"byte_end":11538,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13606,"byte_end":13617,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12343,"byte_end":12414,"line_start":164,"line_end":164,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12419,"byte_end":12452,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12457,"byte_end":12460,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12465,"byte_end":12536,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12541,"byte_end":12573,"line_start":168,"line_end":168,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12578,"byte_end":12581,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12586,"byte_end":12600,"line_start":170,"line_end":170,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12605,"byte_end":12608,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12613,"byte_end":12626,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12653,"line_start":173,"line_end":173,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12658,"byte_end":12698,"line_start":174,"line_end":174,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12703,"byte_end":12706,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12711,"byte_end":12729,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12734,"byte_end":12755,"line_start":177,"line_end":177,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12760,"byte_end":12805,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12810,"byte_end":12856,"line_start":179,"line_end":179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12861,"byte_end":12864,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12869,"byte_end":12920,"line_start":181,"line_end":181,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12925,"byte_end":12988,"line_start":182,"line_end":182,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":12993,"byte_end":13014,"line_start":183,"line_end":183,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13019,"byte_end":13067,"line_start":184,"line_end":184,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13072,"byte_end":13118,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13123,"byte_end":13144,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13149,"byte_end":13166,"line_start":187,"line_end":187,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13171,"byte_end":13252,"line_start":188,"line_end":188,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13257,"byte_end":13279,"line_start":189,"line_end":189,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13284,"byte_end":13301,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13306,"byte_end":13319,"line_start":191,"line_end":191,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13324,"byte_end":13335,"line_start":192,"line_end":192,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13340,"byte_end":13343,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13348,"byte_end":13381,"line_start":194,"line_end":194,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13386,"byte_end":13461,"line_start":195,"line_end":195,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13466,"byte_end":13493,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13498,"byte_end":13509,"line_start":197,"line_end":197,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13514,"byte_end":13517,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13522,"byte_end":13572,"line_start":199,"line_end":199,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13577,"byte_end":13582,"line_start":200,"line_end":200,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":13587,"byte_end":13594,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16192,"byte_end":16198,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16003,"byte_end":16075,"line_start":256,"line_end":256,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16080,"byte_end":16100,"line_start":257,"line_end":257,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16105,"byte_end":16108,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16113,"byte_end":16180,"line_start":259,"line_end":259,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16326,"byte_end":16338,"line_start":265,"line_end":265,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16250,"byte_end":16314,"line_start":264,"line_end":264,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16489,"byte_end":16498,"line_start":270,"line_end":270,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":16403,"byte_end":16477,"line_start":269,"line_end":269,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1011},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70044,"byte_end":70054,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69906,"byte_end":69963,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69964,"byte_end":69967,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":69968,"byte_end":70015,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70777,"byte_end":70780,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70735,"byte_end":70765,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71495,"byte_end":71505,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70983,"byte_end":71012,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71017,"byte_end":71020,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71025,"byte_end":71101,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71106,"byte_end":71175,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71180,"byte_end":71198,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71203,"byte_end":71206,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71211,"byte_end":71282,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71287,"byte_end":71360,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71365,"byte_end":71439,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71444,"byte_end":71483,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73026,"byte_end":73040,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":71929,"byte_end":72010,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72015,"byte_end":72061,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72066,"byte_end":72069,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72074,"byte_end":72122,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72127,"byte_end":72130,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72135,"byte_end":72219,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72224,"byte_end":72283,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72288,"byte_end":72373,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72378,"byte_end":72397,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72402,"byte_end":72481,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72486,"byte_end":72489,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72494,"byte_end":72569,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72574,"byte_end":72650,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72655,"byte_end":72710,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72715,"byte_end":72789,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72794,"byte_end":72867,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72872,"byte_end":72906,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72911,"byte_end":72914,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":72919,"byte_end":72995,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73000,"byte_end":73014,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73674,"byte_end":73682,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73426,"byte_end":73491,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73496,"byte_end":73499,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73504,"byte_end":73577,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73582,"byte_end":73592,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73597,"byte_end":73600,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73605,"byte_end":73662,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73794,"byte_end":73803,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73736,"byte_end":73782,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74144,"byte_end":74155,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73945,"byte_end":73979,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73984,"byte_end":73987,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":73992,"byte_end":74065,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74070,"byte_end":74132,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74460,"byte_end":74469,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74260,"byte_end":74295,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74300,"byte_end":74303,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74308,"byte_end":74381,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74386,"byte_end":74448,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75169,"byte_end":75186,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74620,"byte_end":74689,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74694,"byte_end":74697,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74702,"byte_end":74772,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74777,"byte_end":74850,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74855,"byte_end":74901,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74906,"byte_end":74909,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74914,"byte_end":74989,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":74994,"byte_end":75068,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75073,"byte_end":75099,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75104,"byte_end":75107,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75112,"byte_end":75157,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75352,"byte_end":75362,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75239,"byte_end":75286,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75291,"byte_end":75294,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75299,"byte_end":75340,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77874,"byte_end":77887,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77743,"byte_end":77816,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77817,"byte_end":77820,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":77821,"byte_end":77862,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78081,"byte_end":78084,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78036,"byte_end":78069,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78248,"byte_end":78253,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78211,"byte_end":78236,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78359,"byte_end":78370,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78305,"byte_end":78347,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78485,"byte_end":78495,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78440,"byte_end":78473,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79229,"byte_end":79241,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78556,"byte_end":78604,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78609,"byte_end":78612,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78617,"byte_end":78658,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78663,"byte_end":78666,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78671,"byte_end":78733,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78738,"byte_end":78798,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78803,"byte_end":78863,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78868,"byte_end":78871,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78876,"byte_end":78951,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78956,"byte_end":79024,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79029,"byte_end":79105,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79110,"byte_end":79178,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":79183,"byte_end":79217,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80669,"byte_end":80686,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80385,"byte_end":80437,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80442,"byte_end":80445,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80450,"byte_end":80526,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80531,"byte_end":80565,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80570,"byte_end":80573,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80578,"byte_end":80657,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81146,"byte_end":81157,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80759,"byte_end":80801,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80806,"byte_end":80809,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80814,"byte_end":80887,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80892,"byte_end":80932,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80937,"byte_end":80940,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":80945,"byte_end":81015,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81020,"byte_end":81054,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81059,"byte_end":81062,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81067,"byte_end":81134,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":241},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82300,"byte_end":82317,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":243}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82100,"byte_end":82157,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82158,"byte_end":82161,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82162,"byte_end":82229,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82230,"byte_end":82288,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82495,"byte_end":82498,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82412,"byte_end":82483,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83079,"byte_end":83082,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82864,"byte_end":82916,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82921,"byte_end":82924,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82929,"byte_end":83001,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83006,"byte_end":83067,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83525,"byte_end":83532,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83284,"byte_end":83336,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83341,"byte_end":83344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83349,"byte_end":83422,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83427,"byte_end":83497,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":83502,"byte_end":83513,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85372,"byte_end":85379,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85308,"byte_end":85360,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85665,"byte_end":85669,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85610,"byte_end":85653,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":274},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":1019},{"krate":0,"index":1032},{"krate":0,"index":1028},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":316}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":86782,"byte_end":86817,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1022},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88764,"byte_end":88768,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88777,"byte_end":88782,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1019},"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88745,"byte_end":88751,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1025}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":86994,"byte_end":87100,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87101,"byte_end":87104,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87105,"byte_end":87195,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87196,"byte_end":87199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87200,"byte_end":87235,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87236,"byte_end":87239,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87240,"byte_end":87253,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87254,"byte_end":87257,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87258,"byte_end":87295,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87296,"byte_end":87299,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87300,"byte_end":87319,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87320,"byte_end":87362,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87363,"byte_end":87413,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87414,"byte_end":87465,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87466,"byte_end":87484,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87485,"byte_end":87506,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87507,"byte_end":87549,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87550,"byte_end":87583,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87584,"byte_end":87600,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87601,"byte_end":87695,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87696,"byte_end":87706,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87707,"byte_end":87710,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87711,"byte_end":87758,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87759,"byte_end":87764,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87765,"byte_end":87772,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87773,"byte_end":87776,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87977,"byte_end":87980,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":87981,"byte_end":88067,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88068,"byte_end":88078,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88079,"byte_end":88082,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88083,"byte_end":88090,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88091,"byte_end":88126,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88127,"byte_end":88169,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88170,"byte_end":88220,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88221,"byte_end":88272,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88273,"byte_end":88276,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88277,"byte_end":88295,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88296,"byte_end":88317,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88318,"byte_end":88360,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88361,"byte_end":88408,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88409,"byte_end":88425,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88426,"byte_end":88475,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88476,"byte_end":88486,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88487,"byte_end":88490,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88491,"byte_end":88524,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88525,"byte_end":88565,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88566,"byte_end":88598,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88599,"byte_end":88604,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88605,"byte_end":88612,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":88613,"byte_end":88635,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741092,"byte_end":11741102,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741253,"byte_end":11741263,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741590,"byte_end":11741600,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11751778,"byte_end":11751787,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11751987,"byte_end":11751997,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752148,"byte_end":11752157,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752480,"byte_end":11752490,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752736,"byte_end":11752744,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752841,"byte_end":11752849,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752960,"byte_end":11752968,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11753068,"byte_end":11753076,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11753186,"byte_end":11753196,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11758778,"byte_end":11758788,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761624,"byte_end":11761630,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765442,"byte_end":11765448,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770763,"byte_end":11770769,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11771085,"byte_end":11771091,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11771806,"byte_end":11771812,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772852,"byte_end":11772863,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11773790,"byte_end":11773800,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774689,"byte_end":11774699,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776796,"byte_end":11776806,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11777119,"byte_end":11777129,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11777855,"byte_end":11777865,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11778844,"byte_end":11778855,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779211,"byte_end":11779222,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11781331,"byte_end":11781342,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11782106,"byte_end":11782117,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11782358,"byte_end":11782369,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797377,"byte_end":11797397,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11800730,"byte_end":11800750,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11801636,"byte_end":11801656,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11802997,"byte_end":11803017,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803110,"byte_end":11803117,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812716,"byte_end":11812723,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812849,"byte_end":11812874,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11813032,"byte_end":11813057,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11813192,"byte_end":11813217,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814286,"byte_end":11814296,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816838,"byte_end":11816848,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820224,"byte_end":11820234,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":720},{"krate":0,"index":721}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820557,"byte_end":11820567,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820872,"byte_end":11820887,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11821169,"byte_end":11821184,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11821301,"byte_end":11821316,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823642,"byte_end":11823659,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826308,"byte_end":11826325,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11829617,"byte_end":11829634,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11829998,"byte_end":11830015,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":764}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830432,"byte_end":11830454,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830783,"byte_end":11830805,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830936,"byte_end":11830958,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":698,"byte_end":703,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":346}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/mod.rs","byte_start":11739504,"byte_end":11739520,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":622}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":880,"byte_end":884,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/lib.rs","byte_start":895,"byte_end":901,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":274}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741092,"byte_end":11741102,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":773},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741253,"byte_end":11741263,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/bytes_codec.rs","byte_start":11741590,"byte_end":11741600,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":773},"to":{"krate":0,"index":383}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11751778,"byte_end":11751787,"line_start":46,"line_end":46,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11751987,"byte_end":11751997,"line_start":56,"line_end":56,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752148,"byte_end":11752157,"line_start":64,"line_end":64,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":410},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752480,"byte_end":11752490,"line_start":79,"line_end":79,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":414},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752736,"byte_end":11752744,"line_start":90,"line_end":90,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1748}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752841,"byte_end":11752849,"line_start":95,"line_end":95,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1751}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11752960,"byte_end":11752968,"line_start":100,"line_end":100,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1748}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11753068,"byte_end":11753076,"line_start":105,"line_end":105,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":801},"to":{"krate":2,"index":1751}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11753186,"byte_end":11753196,"line_start":110,"line_end":110,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1168},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_impl.rs","byte_start":11758778,"byte_end":11758788,"line_start":219,"line_end":219,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1168},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11761624,"byte_end":11761630,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11765442,"byte_end":11765448,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11770763,"byte_end":11770769,"line_start":253,"line_end":253,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1118},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11771085,"byte_end":11771091,"line_start":266,"line_end":266,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1118},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11771806,"byte_end":11771812,"line_start":291,"line_end":291,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1118},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed.rs","byte_start":11772852,"byte_end":11772863,"line_start":329,"line_end":329,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11773790,"byte_end":11773800,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11774689,"byte_end":11774699,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11776796,"byte_end":11776806,"line_start":122,"line_end":122,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1077},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11777119,"byte_end":11777129,"line_start":135,"line_end":135,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1077},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_read.rs","byte_start":11777855,"byte_end":11777865,"line_start":158,"line_end":158,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1077},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11778844,"byte_end":11778855,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11779211,"byte_end":11779222,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11781331,"byte_end":11781342,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1036},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11782106,"byte_end":11782117,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1036},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/framed_write.rs","byte_start":11782358,"byte_end":11782369,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1036},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11797377,"byte_end":11797397,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11800730,"byte_end":11800750,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11801636,"byte_end":11801656,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":830},"to":{"krate":0,"index":383}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11802997,"byte_end":11803017,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":830},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11803110,"byte_end":11803117,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812716,"byte_end":11812723,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":818},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11812849,"byte_end":11812874,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11813032,"byte_end":11813057,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":644},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/length_delimited.rs","byte_start":11813192,"byte_end":11813217,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":644},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11814286,"byte_end":11814296,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11816838,"byte_end":11816848,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820224,"byte_end":11820234,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":846},"to":{"krate":0,"index":383}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820557,"byte_end":11820567,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11820872,"byte_end":11820887,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11821169,"byte_end":11821184,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":880},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/lines_codec.rs","byte_start":11821301,"byte_end":11821316,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":880},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11823642,"byte_end":11823659,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11826308,"byte_end":11826325,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":372}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11829617,"byte_end":11829634,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":888},"to":{"krate":0,"index":383}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11829998,"byte_end":11830015,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":888},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830432,"byte_end":11830454,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":6958}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830783,"byte_end":11830805,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":932},"to":{"krate":2,"index":1997}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/codec/any_delimiter_codec.rs","byte_start":11830936,"byte_end":11830958,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":932},"to":{"krate":1,"index":1750}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8800,"byte_end":8817,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":8842,"byte_end":8859,"line_start":61,"line_end":61,"column_start":22,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9593,"byte_end":9618,"line_start":78,"line_end":78,"column_start":26,"column_end":51},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9692,"byte_end":9709,"line_start":82,"line_end":82,"column_start":27,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":9934,"byte_end":9951,"line_start":90,"line_end":90,"column_start":16,"column_end":33},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":10357,"byte_end":10374,"line_start":104,"line_end":104,"column_start":15,"column_end":32},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11344,"byte_end":11361,"line_start":132,"line_end":132,"column_start":18,"column_end":35},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":27},"to":{"krate":2,"index":2069}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":11451,"byte_end":11468,"line_start":138,"line_end":138,"column_start":6,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17334,"byte_end":17359,"line_start":301,"line_end":301,"column_start":31,"column_end":56},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":17531,"byte_end":17556,"line_start":307,"line_end":307,"column_start":21,"column_end":46},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":18991,"byte_end":19016,"line_start":343,"line_end":343,"column_start":19,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20204,"byte_end":20218,"line_start":377,"line_end":377,"column_start":6,"column_end":20},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":20552,"byte_end":20569,"line_start":393,"line_end":393,"column_start":6,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":71},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":21169,"byte_end":21186,"line_start":418,"line_end":418,"column_start":6,"column_end":23},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":22044,"byte_end":22057,"line_start":446,"line_end":446,"column_start":6,"column_end":19},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/cancellation_token.rs","byte_start":23242,"byte_end":23264,"line_start":484,"line_end":484,"column_start":6,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":88},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":40783,"byte_end":40791,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41041,"byte_end":41049,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2281}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41154,"byte_end":41162,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":995},"to":{"krate":2,"index":2294}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/intrusive_double_linked_list.rs","byte_start":41471,"byte_end":41481,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1004},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":70715,"byte_end":70725,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":75586,"byte_end":75596,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1011},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/mpsc.rs","byte_start":76000,"byte_end":76010,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1011},"to":{"krate":19,"index":9}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":78016,"byte_end":78029,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81241,"byte_end":81254,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":206},"to":{"krate":18,"index":68}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81468,"byte_end":81481,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":1770}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81599,"byte_end":81612,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/poll_semaphore.rs","byte_start":81824,"byte_end":81837,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":206},"to":{"krate":2,"index":1988}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":82385,"byte_end":82402,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":85776,"byte_end":85793,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86083,"byte_end":86100,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2081}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86318,"byte_end":86335,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2093}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86431,"byte_end":86448,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2122}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86473,"byte_end":86490,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":2305}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/sync/reusable_box.rs","byte_start":86634,"byte_end":86651,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":241},"to":{"krate":2,"index":6953}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89388,"byte_end":89394,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1019},"to":{"krate":2,"index":9578}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89637,"byte_end":89643,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1019},"to":{"krate":20,"index":142}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":89916,"byte_end":89922,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1019},"to":{"krate":20,"index":114}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90250,"byte_end":90256,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1019},"to":{"krate":20,"index":167}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":90610,"byte_end":90616,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1019},"to":{"krate":20,"index":193}},{"span":{"file_name":"/home/kami/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.7/src/either.rs","byte_start":91168,"byte_end":91174,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1019},"to":{"krate":18,"index":68}}]}